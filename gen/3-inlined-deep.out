
0000:

    #0001
    #0002
    #0003
    #18D4
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 18;
        let:16 a2 = (-1 + a1) in
        M[a2] := D4;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := D4;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      #18D7
      #18D9
      M[23FF] := 18;
      M[23FE] := DC;
      #return-to: 18DC
      #01E6
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          M[23FD] := 01;
          M[23FC] := E6;
          B := 00;
          SPH := 23;
          SPL := FC;
          jump (0008);
        } else {
          M[23FD] := 01;
          M[23FC] := E6;
          B := 00;
          SPH := 23;
          SPL := FC;
          jump (0010);
        }
      } else {
        #01E9
        #01EC
        #1A32
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            M[23FD] := 1A;
            M[23FC] := 32;
            B := 00;
            D := 1B;
            E := 00;
            H := 20;
            L := 00;
            SPH := 23;
            SPL := FC;
            jump (0008);
          } else {
            M[23FD] := 1A;
            M[23FC] := 32;
            B := 00;
            D := 1B;
            E := 00;
            H := 20;
            L := 00;
            SPH := 23;
            SPL := FC;
            jump (0010);
          }
        } else {
          #1A33
          M[2000] := 01;
          #1A34
          #1A35
          #1A36
          let:16 a5 = addWithCarry(!true,00,~00) in
          let:8 a6 = (00 & 0F) in
          let:8 a7 = (~00 & 0F) in
          let:16 a8 = addWithCarry(!true,a6,a7) in
          #1A37
          if (!is_zero(a5[7:0])) {
            A := 01;
            B := a5[7:0];
            D := 1B;
            E := 01;
            H := 20;
            L := 01;
            SPH := 23;
            SPL := FE;
            FlagS := a5[7:0][7];
            FlagZ := is_zero(a5[7:0]);
            FlagA := a8[7:0][4];
            FlagP := parity(a5[7:0]);
            jump (1A32);
          } else {
            #1A3A
            A := 01;
            B := a5[7:0];
            D := 1B;
            E := 01;
            H := 20;
            L := 01;
            SPH := 24;
            SPL := 00;
            FlagS := a5[7:0][7];
            FlagZ := is_zero(a5[7:0]);
            FlagA := a8[7:0][4];
            FlagP := parity(a5[7:0]);
            jump ((M[23FF],M[23FE]));
          }
        }
      }
    }

0008:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := A;
    let:16 a2 = (-1 + a1) in
    M[a2] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,FlagS),6,FlagZ),4,FlagA),2,FlagP),0,FlagCY);
    #0009
    let:16 a3 = (-1 + a2) in
    M[a3] := B;
    let:16 a4 = (-1 + a3) in
    M[a4] := C;
    #000A
    let:16 a5 = (-1 + a4) in
    M[a5] := D;
    let:16 a6 = (-1 + a5) in
    M[a6] := E;
    #000B
    let:16 a7 = (-1 + a6) in
    M[a7] := H;
    let:16 a8 = (-1 + a7) in
    M[a8] := L;
    #000C
    #008C
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a9 = (-1 + a8) in
        M[a9] := 00;
        let:16 a10 = (-1 + a9) in
        M[a10] := 8C;
        SPH := a10[15:8];
        SPL := a10[7:0];
        jump (0008);
      } else {
        let:16 a11 = (-1 + a8) in
        M[a11] := 00;
        let:16 a12 = (-1 + a11) in
        M[a12] := 8C;
        SPH := a12[15:8];
        SPL := a12[7:0];
        jump (0010);
      }
    } else {
      let:8 a13 = (A ^ A) in
      #008D
      M[2072] := a13;
      #0090
      #0093
      let:8 a14 = (M[20E9] & M[20E9]) in
      let:8 a15 = (M[20E9] | M[20E9]) in
      #0094
      if (is_zero(a14)) {
        #0082
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a16 = (-1 + a8) in
            M[a16] := 00;
            let:16 a17 = (-1 + a16) in
            M[a17] := 82;
            A := a14;
            SPH := a17[15:8];
            SPL := a17[7:0];
            FlagS := a14[7];
            FlagZ := is_zero(a14);
            FlagA := a15[3];
            FlagP := parity(a14);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a18 = (-1 + a8) in
            M[a18] := 00;
            let:16 a19 = (-1 + a18) in
            M[a19] := 82;
            A := a14;
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a14[7];
            FlagZ := is_zero(a14);
            FlagA := a15[3];
            FlagP := parity(a14);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a20 = (1 + a8) in
          let:16 a21 = (1 + a20) in
          #0083
          let:16 a22 = (1 + a21) in
          let:16 a23 = (1 + a22) in
          #0084
          let:16 a24 = (1 + a23) in
          let:16 a25 = (1 + a24) in
          #0085
          let:16 a26 = (1 + a25) in
          let:16 a27 = (1 + a26) in
          #0086
          enable_interrupts()
          #0087
          let:16 a28 = (1 + a27) in
          let:16 a29 = (1 + a28) in
          A := M[a26];
          B := M[a24];
          C := M[a23];
          D := M[a22];
          E := M[a21];
          H := M[a20];
          L := M[a8];
          SPH := a29[15:8];
          SPL := a29[7:0];
          FlagS := M[a25][7];
          FlagZ := M[a25][6];
          FlagA := M[a25][4];
          FlagP := M[a25][2];
          FlagCY := M[a25][0];
          jump ((M[a28],M[a27]));
        }
      } else {
        #0097
        #009A
        let:8 a30 = (M[20EF] & M[20EF]) in
        let:8 a31 = (M[20EF] | M[20EF]) in
        #009B
        if (!is_zero(a30)) {
          #00A5
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a32 = (-1 + a8) in
              M[a32] := 00;
              let:16 a33 = (-1 + a32) in
              M[a33] := A5;
              A := a30;
              SPH := a33[15:8];
              SPL := a33[7:0];
              FlagS := a30[7];
              FlagZ := is_zero(a30);
              FlagA := a31[3];
              FlagP := parity(a30);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a34 = (-1 + a8) in
              M[a34] := 00;
              let:16 a35 = (-1 + a34) in
              M[a35] := A5;
              A := a30;
              SPH := a35[15:8];
              SPL := a35[7:0];
              FlagS := a30[7];
              FlagZ := is_zero(a30);
              FlagA := a31[3];
              FlagP := parity(a30);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #00A8
            let:16 a36 = (-1 + a8) in
            M[a36] := 00;
            let:16 a37 = (-1 + a36) in
            M[a37] := AB;
            #return-to: 00AB
            #024B
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a38 = (-1 + a37) in
                M[a38] := 02;
                let:16 a39 = (-1 + a38) in
                M[a39] := 4B;
                A := a30;
                H := 20;
                L := 20;
                SPH := a39[15:8];
                SPL := a39[7:0];
                FlagS := a30[7];
                FlagZ := is_zero(a30);
                FlagA := a31[3];
                FlagP := parity(a30);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a40 = (-1 + a37) in
                M[a40] := 02;
                let:16 a41 = (-1 + a40) in
                M[a41] := 4B;
                A := a30;
                H := 20;
                L := 20;
                SPH := a41[15:8];
                SPL := a41[7:0];
                FlagS := a30[7];
                FlagZ := is_zero(a30);
                FlagA := a31[3];
                FlagP := parity(a30);
                FlagCY := false;
                jump (0010);
              }
            } else {
              #024C
              let:16 a42 = addWithCarry(!false,M[2020],~FF) in
              let:8 a43 = (M[2020] & 0F) in
              let:8 a44 = (~FF & 0F) in
              let:16 a45 = addWithCarry(!false,a43,a44) in
              #024E
              if (is_zero(a42[7:0])) {
                let:16 a46 = (1 + a37) in
                let:16 a47 = (1 + a46) in
                A := M[2020];
                H := 20;
                L := 20;
                SPH := a47[15:8];
                SPL := a47[7:0];
                FlagS := a42[7:0][7];
                FlagZ := is_zero(a42[7:0]);
                FlagA := a45[7:0][4];
                FlagP := parity(a42[7:0]);
                FlagCY := !a42[15:8][0];
                jump ((M[a46],M[a37]));
              } else {
                #024F
                let:16 a48 = addWithCarry(!false,M[2020],~FE) in
                let:8 a49 = (M[2020] & 0F) in
                let:8 a50 = (~FE & 0F) in
                let:16 a51 = addWithCarry(!false,a49,a50) in
                #0251
                if (is_zero(a48[7:0])) {
                  #0281
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a52 = (-1 + a37) in
                      M[a52] := 02;
                      let:16 a53 = (-1 + a52) in
                      M[a53] := 81;
                      A := M[2020];
                      H := 20;
                      L := 20;
                      SPH := a53[15:8];
                      SPL := a53[7:0];
                      FlagS := a48[7:0][7];
                      FlagZ := is_zero(a48[7:0]);
                      FlagA := a51[7:0][4];
                      FlagP := parity(a48[7:0]);
                      FlagCY := !a48[15:8][0];
                      jump (0008);
                    } else {
                      let:16 a54 = (-1 + a37) in
                      M[a54] := 02;
                      let:16 a55 = (-1 + a54) in
                      M[a55] := 81;
                      A := M[2020];
                      H := 20;
                      L := 20;
                      SPH := a55[15:8];
                      SPL := a55[7:0];
                      FlagS := a48[7:0][7];
                      FlagZ := is_zero(a48[7:0]);
                      FlagA := a51[7:0][4];
                      FlagP := parity(a48[7:0]);
                      FlagCY := !a48[15:8][0];
                      jump (0010);
                    }
                  } else {
                    #0284
                    let:17 a56 = add17(0010,2020) in
                    #0285
                    A := M[2020];
                    D := 00;
                    E := 10;
                    H := a56[15:0][15:8];
                    L := a56[15:0][7:0];
                    SPH := a37[15:8];
                    SPL := a37[7:0];
                    FlagS := a48[7:0][7];
                    FlagZ := is_zero(a48[7:0]);
                    FlagA := a51[7:0][4];
                    FlagP := parity(a48[7:0]);
                    FlagCY := a56[16];
                    jump (024B);
                  }
                } else {
                  #0254
                  #0255
                  #0256
                  #0257
                  let:8 a57 = (M[2021] | M[2020]) in
                  #0258
                  #0259
                  if (!is_zero(a57)) {
                    #0277
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a58 = (-1 + a37) in
                        M[a58] := 02;
                        let:16 a59 = (-1 + a58) in
                        M[a59] := 77;
                        A := M[2020];
                        B := M[2021];
                        C := M[2020];
                        H := 20;
                        L := 21;
                        SPH := a59[15:8];
                        SPL := a59[7:0];
                        FlagS := a57[7];
                        FlagZ := is_zero(a57);
                        FlagA := false;
                        FlagP := parity(a57);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a60 = (-1 + a37) in
                        M[a60] := 02;
                        let:16 a61 = (-1 + a60) in
                        M[a61] := 77;
                        A := M[2020];
                        B := M[2021];
                        C := M[2020];
                        H := 20;
                        L := 21;
                        SPH := a61[15:8];
                        SPL := a61[7:0];
                        FlagS := a57[7];
                        FlagZ := is_zero(a57);
                        FlagA := false;
                        FlagP := parity(a57);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      let:16 a62 = addWithCarry(!true,M[2021],~00) in
                      let:8 a63 = (M[2021] & 0F) in
                      let:8 a64 = (~00 & 0F) in
                      let:16 a65 = addWithCarry(!true,a63,a64) in
                      #0278
                      let:16 a66 = addWithCarry(true,a62[7:0],00) in
                      let:8 a67 = (a62[7:0] & 0F) in
                      let:8 a68 = (00 & 0F) in
                      let:16 a69 = addWithCarry(true,a67,a68) in
                      #0279
                      if (!is_zero(a66[7:0])) {
                        #027D
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a70 = (-1 + a37) in
                            M[a70] := 02;
                            let:16 a71 = (-1 + a70) in
                            M[a71] := 7D;
                            A := M[2020];
                            B := a66[7:0];
                            C := M[2020];
                            H := 20;
                            L := 21;
                            SPH := a71[15:8];
                            SPL := a71[7:0];
                            FlagS := a66[7:0][7];
                            FlagZ := is_zero(a66[7:0]);
                            FlagA := a69[7:0][4];
                            FlagP := parity(a66[7:0]);
                            FlagCY := false;
                            jump (0008);
                          } else {
                            let:16 a72 = (-1 + a37) in
                            M[a72] := 02;
                            let:16 a73 = (-1 + a72) in
                            M[a73] := 7D;
                            A := M[2020];
                            B := a66[7:0];
                            C := M[2020];
                            H := 20;
                            L := 21;
                            SPH := a73[15:8];
                            SPL := a73[7:0];
                            FlagS := a66[7:0][7];
                            FlagZ := is_zero(a66[7:0]);
                            FlagA := a69[7:0][4];
                            FlagP := parity(a66[7:0]);
                            FlagCY := false;
                            jump (0010);
                          }
                        } else {
                          let:16 a74 = addWithCarry(!true,a66[7:0],~00) in
                          let:8 a75 = (a66[7:0] & 0F) in
                          let:8 a76 = (~00 & 0F) in
                          let:16 a77 = addWithCarry(!true,a75,a76) in
                          #027E
                          M[2021] := a74[7:0];
                          #027F
                          #0280
                          M[2020] := M[2020];
                          #0281
                          #0284
                          let:17 a78 = add17(0010,2020) in
                          #0285
                          A := M[2020];
                          B := a74[7:0];
                          C := M[2020];
                          D := 00;
                          E := 10;
                          H := a78[15:0][15:8];
                          L := a78[15:0][7:0];
                          SPH := a37[15:8];
                          SPL := a37[7:0];
                          FlagS := a74[7:0][7];
                          FlagZ := is_zero(a74[7:0]);
                          FlagA := a77[7:0][4];
                          FlagP := parity(a74[7:0]);
                          FlagCY := a78[16];
                          jump (024B);
                        }
                      } else {
                        #027C
                        let:16 a79 = addWithCarry(!true,M[2020],~00) in
                        let:8 a80 = (M[2020] & 0F) in
                        let:8 a81 = (~00 & 0F) in
                        let:16 a82 = addWithCarry(!true,a80,a81) in
                        #027D
                        let:16 a83 = addWithCarry(!true,a66[7:0],~00) in
                        let:8 a84 = (a66[7:0] & 0F) in
                        let:8 a85 = (~00 & 0F) in
                        let:16 a86 = addWithCarry(!true,a84,a85) in
                        #027E
                        M[2021] := a83[7:0];
                        #027F
                        #0280
                        M[2020] := a79[7:0];
                        #0281
                        #0284
                        let:17 a87 = add17(0010,2020) in
                        #0285
                        A := a79[7:0];
                        B := a83[7:0];
                        C := M[2020];
                        D := 00;
                        E := 10;
                        H := a87[15:0][15:8];
                        L := a87[15:0][7:0];
                        SPH := a37[15:8];
                        SPL := a37[7:0];
                        FlagS := a83[7:0][7];
                        FlagZ := is_zero(a83[7:0]);
                        FlagA := a86[7:0][4];
                        FlagP := parity(a83[7:0]);
                        FlagCY := a87[16];
                        jump (024B);
                      }
                    }
                  } else {
                    #025C
                    #025D
                    #025E
                    let:8 a88 = (M[2022] & M[2022]) in
                    let:8 a89 = (M[2022] | M[2022]) in
                    #025F
                    if (!is_zero(a88)) {
                      #0288
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a90 = (-1 + a37) in
                          M[a90] := 02;
                          let:16 a91 = (-1 + a90) in
                          M[a91] := 88;
                          A := a88;
                          B := M[2021];
                          C := M[2020];
                          H := 20;
                          L := 22;
                          SPH := a91[15:8];
                          SPL := a91[7:0];
                          FlagS := a88[7];
                          FlagZ := is_zero(a88);
                          FlagA := a89[3];
                          FlagP := parity(a88);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a92 = (-1 + a37) in
                          M[a92] := 02;
                          let:16 a93 = (-1 + a92) in
                          M[a93] := 88;
                          A := a88;
                          B := M[2021];
                          C := M[2020];
                          H := 20;
                          L := 22;
                          SPH := a93[15:8];
                          SPL := a93[7:0];
                          FlagS := a88[7];
                          FlagZ := is_zero(a88);
                          FlagA := a89[3];
                          FlagP := parity(a88);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a94 = addWithCarry(!true,M[2022],~00) in
                        let:8 a95 = (M[2022] & 0F) in
                        let:8 a96 = (~00 & 0F) in
                        let:16 a97 = addWithCarry(!true,a95,a96) in
                        M[2022] := a94[7:0];
                        #0289
                        #028A
                        #028B
                        #0281
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a98 = (-1 + a37) in
                            M[a98] := 02;
                            let:16 a99 = (-1 + a98) in
                            M[a99] := 81;
                            A := a88;
                            B := M[2021];
                            C := M[2020];
                            H := 20;
                            L := 20;
                            SPH := a99[15:8];
                            SPL := a99[7:0];
                            FlagS := a94[7:0][7];
                            FlagZ := is_zero(a94[7:0]);
                            FlagA := a97[7:0][4];
                            FlagP := parity(a94[7:0]);
                            FlagCY := false;
                            jump (0008);
                          } else {
                            let:16 a100 = (-1 + a37) in
                            M[a100] := 02;
                            let:16 a101 = (-1 + a100) in
                            M[a101] := 81;
                            A := a88;
                            B := M[2021];
                            C := M[2020];
                            H := 20;
                            L := 20;
                            SPH := a101[15:8];
                            SPL := a101[7:0];
                            FlagS := a94[7:0][7];
                            FlagZ := is_zero(a94[7:0]);
                            FlagA := a97[7:0][4];
                            FlagP := parity(a94[7:0]);
                            FlagCY := false;
                            jump (0010);
                          }
                        } else {
                          #0284
                          let:17 a102 = add17(0010,2020) in
                          #0285
                          A := a88;
                          B := M[2021];
                          C := M[2020];
                          D := 00;
                          E := 10;
                          H := a102[15:0][15:8];
                          L := a102[15:0][7:0];
                          SPH := a37[15:8];
                          SPL := a37[7:0];
                          FlagS := a94[7:0][7];
                          FlagZ := is_zero(a94[7:0]);
                          FlagA := a97[7:0][4];
                          FlagP := parity(a94[7:0]);
                          FlagCY := a102[16];
                          jump (024B);
                        }
                      }
                    } else {
                      #0262
                      #0263
                      #0264
                      #0265
                      #0266
                      let:16 a103 = (-1 + a37) in
                      M[a103] := 20;
                      let:16 a104 = (-1 + a103) in
                      M[a104] := 24;
                      #0267
                      #0268
                      let:16 a105 = (-1 + a104) in
                      M[a105] := M[2024];
                      let:16 a106 = (-1 + a105) in
                      M[a106] := M[2023];
                      #0269
                      #026C
                      let:16 a107 = (1 + a106) in
                      M[a106] := 6F;
                      M[a107] := 02;
                      #026D
                      let:16 a108 = (-1 + a106) in
                      M[a108] := 20;
                      let:16 a109 = (-1 + a108) in
                      M[a109] := 24;
                      #026E
                      A := a88;
                      B := M[2021];
                      C := M[2020];
                      D := 20;
                      E := 24;
                      H := M[a107];
                      L := M[a106];
                      SPH := a109[15:8];
                      SPL := a109[7:0];
                      FlagS := a88[7];
                      FlagZ := is_zero(a88);
                      FlagA := a89[3];
                      FlagP := parity(a88);
                      FlagCY := false;
                      jump ((M[a107],M[a106]));
                    }
                  }
                }
              }
            }
          }
        } else {
          #009E
          #00A1
          #00A2
          if (!M[20C1][0]) {
            #0082
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a110 = (-1 + a8) in
                M[a110] := 00;
                let:16 a111 = (-1 + a110) in
                M[a111] := 82;
                A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                SPH := a111[15:8];
                SPL := a111[7:0];
                FlagS := a30[7];
                FlagZ := is_zero(a30);
                FlagA := a31[3];
                FlagP := parity(a30);
                FlagCY := M[20C1][0];
                jump (0008);
              } else {
                let:16 a112 = (-1 + a8) in
                M[a112] := 00;
                let:16 a113 = (-1 + a112) in
                M[a113] := 82;
                A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                SPH := a113[15:8];
                SPL := a113[7:0];
                FlagS := a30[7];
                FlagZ := is_zero(a30);
                FlagA := a31[3];
                FlagP := parity(a30);
                FlagCY := M[20C1][0];
                jump (0010);
              }
            } else {
              let:16 a114 = (1 + a8) in
              let:16 a115 = (1 + a114) in
              #0083
              let:16 a116 = (1 + a115) in
              let:16 a117 = (1 + a116) in
              #0084
              let:16 a118 = (1 + a117) in
              let:16 a119 = (1 + a118) in
              #0085
              let:16 a120 = (1 + a119) in
              let:16 a121 = (1 + a120) in
              #0086
              enable_interrupts()
              #0087
              let:16 a122 = (1 + a121) in
              let:16 a123 = (1 + a122) in
              A := M[a120];
              B := M[a118];
              C := M[a117];
              D := M[a116];
              E := M[a115];
              H := M[a114];
              L := M[a8];
              SPH := a123[15:8];
              SPL := a123[7:0];
              FlagS := M[a119][7];
              FlagZ := M[a119][6];
              FlagA := M[a119][4];
              FlagP := M[a119][2];
              FlagCY := M[a119][0];
              jump ((M[a122],M[a121]));
            }
          } else {
            #00A5
            #00A8
            let:16 a124 = (-1 + a8) in
            M[a124] := 00;
            let:16 a125 = (-1 + a124) in
            M[a125] := AB;
            #return-to: 00AB
            #024B
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a126 = (-1 + a125) in
                M[a126] := 02;
                let:16 a127 = (-1 + a126) in
                M[a127] := 4B;
                A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                H := 20;
                L := 20;
                SPH := a127[15:8];
                SPL := a127[7:0];
                FlagS := a30[7];
                FlagZ := is_zero(a30);
                FlagA := a31[3];
                FlagP := parity(a30);
                FlagCY := M[20C1][0];
                jump (0008);
              } else {
                let:16 a128 = (-1 + a125) in
                M[a128] := 02;
                let:16 a129 = (-1 + a128) in
                M[a129] := 4B;
                A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                H := 20;
                L := 20;
                SPH := a129[15:8];
                SPL := a129[7:0];
                FlagS := a30[7];
                FlagZ := is_zero(a30);
                FlagA := a31[3];
                FlagP := parity(a30);
                FlagCY := M[20C1][0];
                jump (0010);
              }
            } else {
              #024C
              let:16 a130 = addWithCarry(!false,M[2020],~FF) in
              let:8 a131 = (M[2020] & 0F) in
              let:8 a132 = (~FF & 0F) in
              let:16 a133 = addWithCarry(!false,a131,a132) in
              #024E
              if (is_zero(a130[7:0])) {
                let:16 a134 = (1 + a125) in
                let:16 a135 = (1 + a134) in
                A := M[2020];
                H := 20;
                L := 20;
                SPH := a135[15:8];
                SPL := a135[7:0];
                FlagS := a130[7:0][7];
                FlagZ := is_zero(a130[7:0]);
                FlagA := a133[7:0][4];
                FlagP := parity(a130[7:0]);
                FlagCY := !a130[15:8][0];
                jump ((M[a134],M[a125]));
              } else {
                #024F
                let:16 a136 = addWithCarry(!false,M[2020],~FE) in
                let:8 a137 = (M[2020] & 0F) in
                let:8 a138 = (~FE & 0F) in
                let:16 a139 = addWithCarry(!false,a137,a138) in
                #0251
                if (is_zero(a136[7:0])) {
                  #0281
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a140 = (-1 + a125) in
                      M[a140] := 02;
                      let:16 a141 = (-1 + a140) in
                      M[a141] := 81;
                      A := M[2020];
                      H := 20;
                      L := 20;
                      SPH := a141[15:8];
                      SPL := a141[7:0];
                      FlagS := a136[7:0][7];
                      FlagZ := is_zero(a136[7:0]);
                      FlagA := a139[7:0][4];
                      FlagP := parity(a136[7:0]);
                      FlagCY := !a136[15:8][0];
                      jump (0008);
                    } else {
                      let:16 a142 = (-1 + a125) in
                      M[a142] := 02;
                      let:16 a143 = (-1 + a142) in
                      M[a143] := 81;
                      A := M[2020];
                      H := 20;
                      L := 20;
                      SPH := a143[15:8];
                      SPL := a143[7:0];
                      FlagS := a136[7:0][7];
                      FlagZ := is_zero(a136[7:0]);
                      FlagA := a139[7:0][4];
                      FlagP := parity(a136[7:0]);
                      FlagCY := !a136[15:8][0];
                      jump (0010);
                    }
                  } else {
                    #0284
                    let:17 a144 = add17(0010,2020) in
                    #0285
                    A := M[2020];
                    D := 00;
                    E := 10;
                    H := a144[15:0][15:8];
                    L := a144[15:0][7:0];
                    SPH := a125[15:8];
                    SPL := a125[7:0];
                    FlagS := a136[7:0][7];
                    FlagZ := is_zero(a136[7:0]);
                    FlagA := a139[7:0][4];
                    FlagP := parity(a136[7:0]);
                    FlagCY := a144[16];
                    jump (024B);
                  }
                } else {
                  #0254
                  #0255
                  #0256
                  #0257
                  let:8 a145 = (M[2021] | M[2020]) in
                  #0258
                  #0259
                  if (!is_zero(a145)) {
                    #0277
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a146 = (-1 + a125) in
                        M[a146] := 02;
                        let:16 a147 = (-1 + a146) in
                        M[a147] := 77;
                        A := M[2020];
                        B := M[2021];
                        C := M[2020];
                        H := 20;
                        L := 21;
                        SPH := a147[15:8];
                        SPL := a147[7:0];
                        FlagS := a145[7];
                        FlagZ := is_zero(a145);
                        FlagA := false;
                        FlagP := parity(a145);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a148 = (-1 + a125) in
                        M[a148] := 02;
                        let:16 a149 = (-1 + a148) in
                        M[a149] := 77;
                        A := M[2020];
                        B := M[2021];
                        C := M[2020];
                        H := 20;
                        L := 21;
                        SPH := a149[15:8];
                        SPL := a149[7:0];
                        FlagS := a145[7];
                        FlagZ := is_zero(a145);
                        FlagA := false;
                        FlagP := parity(a145);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      let:16 a150 = addWithCarry(!true,M[2021],~00) in
                      let:8 a151 = (M[2021] & 0F) in
                      let:8 a152 = (~00 & 0F) in
                      let:16 a153 = addWithCarry(!true,a151,a152) in
                      #0278
                      let:16 a154 = addWithCarry(true,a150[7:0],00) in
                      let:8 a155 = (a150[7:0] & 0F) in
                      let:8 a156 = (00 & 0F) in
                      let:16 a157 = addWithCarry(true,a155,a156) in
                      #0279
                      if (!is_zero(a154[7:0])) {
                        #027D
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a158 = (-1 + a125) in
                            M[a158] := 02;
                            let:16 a159 = (-1 + a158) in
                            M[a159] := 7D;
                            A := M[2020];
                            B := a154[7:0];
                            C := M[2020];
                            H := 20;
                            L := 21;
                            SPH := a159[15:8];
                            SPL := a159[7:0];
                            FlagS := a154[7:0][7];
                            FlagZ := is_zero(a154[7:0]);
                            FlagA := a157[7:0][4];
                            FlagP := parity(a154[7:0]);
                            FlagCY := false;
                            jump (0008);
                          } else {
                            let:16 a160 = (-1 + a125) in
                            M[a160] := 02;
                            let:16 a161 = (-1 + a160) in
                            M[a161] := 7D;
                            A := M[2020];
                            B := a154[7:0];
                            C := M[2020];
                            H := 20;
                            L := 21;
                            SPH := a161[15:8];
                            SPL := a161[7:0];
                            FlagS := a154[7:0][7];
                            FlagZ := is_zero(a154[7:0]);
                            FlagA := a157[7:0][4];
                            FlagP := parity(a154[7:0]);
                            FlagCY := false;
                            jump (0010);
                          }
                        } else {
                          let:16 a162 = addWithCarry(!true,a154[7:0],~00) in
                          let:8 a163 = (a154[7:0] & 0F) in
                          let:8 a164 = (~00 & 0F) in
                          let:16 a165 = addWithCarry(!true,a163,a164) in
                          #027E
                          M[2021] := a162[7:0];
                          #027F
                          #0280
                          M[2020] := M[2020];
                          #0281
                          #0284
                          let:17 a166 = add17(0010,2020) in
                          #0285
                          A := M[2020];
                          B := a162[7:0];
                          C := M[2020];
                          D := 00;
                          E := 10;
                          H := a166[15:0][15:8];
                          L := a166[15:0][7:0];
                          SPH := a125[15:8];
                          SPL := a125[7:0];
                          FlagS := a162[7:0][7];
                          FlagZ := is_zero(a162[7:0]);
                          FlagA := a165[7:0][4];
                          FlagP := parity(a162[7:0]);
                          FlagCY := a166[16];
                          jump (024B);
                        }
                      } else {
                        #027C
                        let:16 a167 = addWithCarry(!true,M[2020],~00) in
                        let:8 a168 = (M[2020] & 0F) in
                        let:8 a169 = (~00 & 0F) in
                        let:16 a170 = addWithCarry(!true,a168,a169) in
                        #027D
                        let:16 a171 = addWithCarry(!true,a154[7:0],~00) in
                        let:8 a172 = (a154[7:0] & 0F) in
                        let:8 a173 = (~00 & 0F) in
                        let:16 a174 = addWithCarry(!true,a172,a173) in
                        #027E
                        M[2021] := a171[7:0];
                        #027F
                        #0280
                        M[2020] := a167[7:0];
                        #0281
                        #0284
                        let:17 a175 = add17(0010,2020) in
                        #0285
                        A := a167[7:0];
                        B := a171[7:0];
                        C := M[2020];
                        D := 00;
                        E := 10;
                        H := a175[15:0][15:8];
                        L := a175[15:0][7:0];
                        SPH := a125[15:8];
                        SPL := a125[7:0];
                        FlagS := a171[7:0][7];
                        FlagZ := is_zero(a171[7:0]);
                        FlagA := a174[7:0][4];
                        FlagP := parity(a171[7:0]);
                        FlagCY := a175[16];
                        jump (024B);
                      }
                    }
                  } else {
                    #025C
                    #025D
                    #025E
                    let:8 a176 = (M[2022] & M[2022]) in
                    let:8 a177 = (M[2022] | M[2022]) in
                    #025F
                    if (!is_zero(a176)) {
                      #0288
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a178 = (-1 + a125) in
                          M[a178] := 02;
                          let:16 a179 = (-1 + a178) in
                          M[a179] := 88;
                          A := a176;
                          B := M[2021];
                          C := M[2020];
                          H := 20;
                          L := 22;
                          SPH := a179[15:8];
                          SPL := a179[7:0];
                          FlagS := a176[7];
                          FlagZ := is_zero(a176);
                          FlagA := a177[3];
                          FlagP := parity(a176);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a180 = (-1 + a125) in
                          M[a180] := 02;
                          let:16 a181 = (-1 + a180) in
                          M[a181] := 88;
                          A := a176;
                          B := M[2021];
                          C := M[2020];
                          H := 20;
                          L := 22;
                          SPH := a181[15:8];
                          SPL := a181[7:0];
                          FlagS := a176[7];
                          FlagZ := is_zero(a176);
                          FlagA := a177[3];
                          FlagP := parity(a176);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a182 = addWithCarry(!true,M[2022],~00) in
                        let:8 a183 = (M[2022] & 0F) in
                        let:8 a184 = (~00 & 0F) in
                        let:16 a185 = addWithCarry(!true,a183,a184) in
                        M[2022] := a182[7:0];
                        #0289
                        #028A
                        #028B
                        #0281
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a186 = (-1 + a125) in
                            M[a186] := 02;
                            let:16 a187 = (-1 + a186) in
                            M[a187] := 81;
                            A := a176;
                            B := M[2021];
                            C := M[2020];
                            H := 20;
                            L := 20;
                            SPH := a187[15:8];
                            SPL := a187[7:0];
                            FlagS := a182[7:0][7];
                            FlagZ := is_zero(a182[7:0]);
                            FlagA := a185[7:0][4];
                            FlagP := parity(a182[7:0]);
                            FlagCY := false;
                            jump (0008);
                          } else {
                            let:16 a188 = (-1 + a125) in
                            M[a188] := 02;
                            let:16 a189 = (-1 + a188) in
                            M[a189] := 81;
                            A := a176;
                            B := M[2021];
                            C := M[2020];
                            H := 20;
                            L := 20;
                            SPH := a189[15:8];
                            SPL := a189[7:0];
                            FlagS := a182[7:0][7];
                            FlagZ := is_zero(a182[7:0]);
                            FlagA := a185[7:0][4];
                            FlagP := parity(a182[7:0]);
                            FlagCY := false;
                            jump (0010);
                          }
                        } else {
                          #0284
                          let:17 a190 = add17(0010,2020) in
                          #0285
                          A := a176;
                          B := M[2021];
                          C := M[2020];
                          D := 00;
                          E := 10;
                          H := a190[15:0][15:8];
                          L := a190[15:0][7:0];
                          SPH := a125[15:8];
                          SPL := a125[7:0];
                          FlagS := a182[7:0][7];
                          FlagZ := is_zero(a182[7:0]);
                          FlagA := a185[7:0][4];
                          FlagP := parity(a182[7:0]);
                          FlagCY := a190[16];
                          jump (024B);
                        }
                      }
                    } else {
                      #0262
                      #0263
                      #0264
                      #0265
                      #0266
                      let:16 a191 = (-1 + a125) in
                      M[a191] := 20;
                      let:16 a192 = (-1 + a191) in
                      M[a192] := 24;
                      #0267
                      #0268
                      let:16 a193 = (-1 + a192) in
                      M[a193] := M[2024];
                      let:16 a194 = (-1 + a193) in
                      M[a194] := M[2023];
                      #0269
                      #026C
                      let:16 a195 = (1 + a194) in
                      M[a194] := 6F;
                      M[a195] := 02;
                      #026D
                      let:16 a196 = (-1 + a194) in
                      M[a196] := 20;
                      let:16 a197 = (-1 + a196) in
                      M[a197] := 24;
                      #026E
                      A := a176;
                      B := M[2021];
                      C := M[2020];
                      D := 20;
                      E := 24;
                      H := M[a195];
                      L := M[a194];
                      SPH := a197[15:8];
                      SPL := a197[7:0];
                      FlagS := a176[7];
                      FlagZ := is_zero(a176);
                      FlagA := a177[3];
                      FlagP := parity(a176);
                      FlagCY := false;
                      jump ((M[a195],M[a194]));
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

0010:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := A;
    let:16 a2 = (-1 + a1) in
    M[a2] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,FlagS),6,FlagZ),4,FlagA),2,FlagP),0,FlagCY);
    #0011
    let:16 a3 = (-1 + a2) in
    M[a3] := B;
    let:16 a4 = (-1 + a3) in
    M[a4] := C;
    #0012
    let:16 a5 = (-1 + a4) in
    M[a5] := D;
    let:16 a6 = (-1 + a5) in
    M[a6] := E;
    #0013
    let:16 a7 = (-1 + a6) in
    M[a7] := H;
    let:16 a8 = (-1 + a7) in
    M[a8] := L;
    #0014
    #0016
    M[2072] := 80;
    #0019
    #001C
    let:16 a9 = addWithCarry(!true,M[20C0],~00) in
    let:8 a10 = (M[20C0] & 0F) in
    let:8 a11 = (~00 & 0F) in
    let:16 a12 = addWithCarry(!true,a10,a11) in
    M[20C0] := a9[7:0];
    #001D
    let:16 a13 = (-1 + a8) in
    M[a13] := 00;
    let:16 a14 = (-1 + a13) in
    M[a14] := 20;
    #return-to: 0020
    #17CD
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a15 = (-1 + a14) in
        M[a15] := 17;
        let:16 a16 = (-1 + a15) in
        M[a16] := CD;
        A := 80;
        H := 20;
        L := C0;
        SPH := a16[15:8];
        SPL := a16[7:0];
        FlagS := a9[7:0][7];
        FlagZ := is_zero(a9[7:0]);
        FlagA := a12[7:0][4];
        FlagP := parity(a9[7:0]);
        jump (0008);
      } else {
        let:16 a17 = (-1 + a14) in
        M[a17] := 17;
        let:16 a18 = (-1 + a17) in
        M[a18] := CD;
        A := 80;
        H := 20;
        L := C0;
        SPH := a18[15:8];
        SPL := a18[7:0];
        FlagS := a9[7:0][7];
        FlagZ := is_zero(a9[7:0]);
        FlagA := a12[7:0][4];
        FlagP := parity(a9[7:0]);
        jump (0010);
      }
    } else {
      #17CF
      let:8 a19 = (04 & updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))) in
      let:8 a20 = (04 | updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))) in
      #17D1
      if (is_zero(a19)) {
        let:16 a21 = (1 + a14) in
        let:16 a22 = (1 + a21) in
        A := a19;
        H := 20;
        L := C0;
        SPH := a22[15:8];
        SPL := a22[7:0];
        FlagS := a19[7];
        FlagZ := is_zero(a19);
        FlagA := a20[3];
        FlagP := parity(a19);
        FlagCY := false;
        jump ((M[a21],M[a14]));
      } else {
        #17D2
        #17D5
        let:8 a23 = (M[209A] & M[209A]) in
        let:8 a24 = (M[209A] | M[209A]) in
        #17D6
        if (!is_zero(a23)) {
          let:16 a25 = (1 + a14) in
          let:16 a26 = (1 + a25) in
          A := a23;
          H := 20;
          L := C0;
          SPH := a26[15:8];
          SPL := a26[7:0];
          FlagS := a23[7];
          FlagZ := is_zero(a23);
          FlagA := a24[3];
          FlagP := parity(a23);
          FlagCY := false;
          jump ((M[a25],M[a14]));
        } else {
          #17D7
          #17DA
          #17DC
          M[23FF] := 17;
          M[23FE] := DF;
          #return-to: 17DF
          #09D6
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              M[23FD] := 09;
              M[23FC] := D6;
              A := a23;
              B := 04;
              H := 20;
              L := C0;
              SPH := 23;
              SPL := FC;
              FlagS := a23[7];
              FlagZ := is_zero(a23);
              FlagA := a24[3];
              FlagP := parity(a23);
              FlagCY := false;
              jump (0008);
            } else {
              M[23FD] := 09;
              M[23FC] := D6;
              A := a23;
              B := 04;
              H := 20;
              L := C0;
              SPH := 23;
              SPL := FC;
              FlagS := a23[7];
              FlagZ := is_zero(a23);
              FlagA := a24[3];
              FlagP := parity(a23);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #09D9
            M[2402] := 00;
            #09DB
            #09DC
            #09DD
            let:8 a27 = (1F & 03) in
            let:8 a28 = (1F | 03) in
            #09DF
            let:16 a29 = addWithCarry(!false,a27,~1C) in
            let:8 a30 = (a27 & 0F) in
            let:8 a31 = (~1C & 0F) in
            let:16 a32 = addWithCarry(!false,a30,a31) in
            #09E1
            if (!a29[15:8][0]) {
              #09E8
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  M[23FD] := 09;
                  M[23FC] := E8;
                  A := a27;
                  B := 04;
                  H := 24;
                  L := 03;
                  SPH := 23;
                  SPL := FC;
                  FlagS := a29[7:0][7];
                  FlagZ := is_zero(a29[7:0]);
                  FlagA := a32[7:0][4];
                  FlagP := parity(a29[7:0]);
                  FlagCY := !a29[15:8][0];
                  jump (0008);
                } else {
                  M[23FD] := 09;
                  M[23FC] := E8;
                  A := a27;
                  B := 04;
                  H := 24;
                  L := 03;
                  SPH := 23;
                  SPL := FC;
                  FlagS := a29[7:0][7];
                  FlagZ := is_zero(a29[7:0]);
                  FlagA := a32[7:0][4];
                  FlagP := parity(a29[7:0]);
                  FlagCY := !a29[15:8][0];
                  jump (0010);
                }
              } else {
                #09E9
                let:16 a33 = addWithCarry(!false,24,~40) in
                let:8 a34 = (24 & 0F) in
                let:8 a35 = (~40 & 0F) in
                let:16 a36 = addWithCarry(!false,a34,a35) in
                #09EB
                if (!a33[15:8][0]) {
                  A := 24;
                  B := 04;
                  H := 24;
                  L := 03;
                  SPH := 23;
                  SPL := FE;
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := !a33[15:8][0];
                  jump (09D9);
                } else {
                  #09EE
                  A := 24;
                  B := 04;
                  H := 24;
                  L := 03;
                  SPH := 24;
                  SPL := 00;
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := !a33[15:8][0];
                  jump ((M[23FF],M[23FE]));
                }
              }
            } else {
              #09E4
              #09E7
              let:17 a37 = add17(0006,2403) in
              #09E8
              #09E9
              let:16 a38 = addWithCarry(!false,a37[15:0][15:8],~40) in
              let:8 a39 = (a37[15:0][15:8] & 0F) in
              let:8 a40 = (~40 & 0F) in
              let:16 a41 = addWithCarry(!false,a39,a40) in
              #09EB
              if (!a38[15:8][0]) {
                A := a37[15:0][15:8];
                B := 04;
                D := 00;
                E := 06;
                H := a37[15:0][15:8];
                L := a37[15:0][7:0];
                SPH := 23;
                SPL := FE;
                FlagS := a38[7:0][7];
                FlagZ := is_zero(a38[7:0]);
                FlagA := a41[7:0][4];
                FlagP := parity(a38[7:0]);
                FlagCY := !a38[15:8][0];
                jump (09D9);
              } else {
                #09EE
                A := a37[15:0][15:8];
                B := 04;
                D := 00;
                E := 06;
                H := a37[15:0][15:8];
                L := a37[15:0][7:0];
                SPH := 24;
                SPL := 00;
                FlagS := a38[7:0][7];
                FlagZ := is_zero(a38[7:0]);
                FlagA := a41[7:0][4];
                FlagP := parity(a38[7:0]);
                FlagCY := !a38[15:8][0];
                jump ((M[23FF],M[23FE]));
              }
            }
          }
        }
      }
    }

0020:

    #0022
    #0023
    if (updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) {
      #0067
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a1 = (-1 + (SPH,SPL)) in
          M[a1] := 00;
          let:16 a2 = (-1 + a1) in
          M[a2] := 67;
          A := updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]);
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagCY := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0];
          jump (0008);
        } else {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 00;
          let:16 a4 = (-1 + a3) in
          M[a4] := 67;
          A := updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]);
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagCY := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0];
          jump (0010);
        }
      } else {
        #0069
        M[20EA] := 01;
        #006C
        #003F
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a5 = (-1 + (SPH,SPL)) in
            M[a5] := 00;
            let:16 a6 = (-1 + a5) in
            M[a6] := 3F;
            A := 01;
            SPH := a6[15:8];
            SPL := a6[7:0];
            FlagCY := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0];
            jump (0008);
          } else {
            let:16 a7 = (-1 + (SPH,SPL)) in
            M[a7] := 00;
            let:16 a8 = (-1 + a7) in
            M[a8] := 3F;
            A := 01;
            SPH := a8[15:8];
            SPL := a8[7:0];
            FlagCY := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0];
            jump (0010);
          }
        } else {
          M[20EA] := 01;
          #0042
          #0045
          let:8 a9 = (M[20E9] & M[20E9]) in
          let:8 a10 = (M[20E9] | M[20E9]) in
          #0046
          if (is_zero(a9)) {
            #0082
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a11 = (-1 + (SPH,SPL)) in
                M[a11] := 00;
                let:16 a12 = (-1 + a11) in
                M[a12] := 82;
                A := a9;
                SPH := a12[15:8];
                SPL := a12[7:0];
                FlagS := a9[7];
                FlagZ := is_zero(a9);
                FlagA := a10[3];
                FlagP := parity(a9);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a13 = (-1 + (SPH,SPL)) in
                M[a13] := 00;
                let:16 a14 = (-1 + a13) in
                M[a14] := 82;
                A := a9;
                SPH := a14[15:8];
                SPL := a14[7:0];
                FlagS := a9[7];
                FlagZ := is_zero(a9);
                FlagA := a10[3];
                FlagP := parity(a9);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a15 = (1 + (SPH,SPL)) in
              let:16 a16 = (1 + a15) in
              #0083
              let:16 a17 = (1 + a16) in
              let:16 a18 = (1 + a17) in
              #0084
              let:16 a19 = (1 + a18) in
              let:16 a20 = (1 + a19) in
              #0085
              let:16 a21 = (1 + a20) in
              let:16 a22 = (1 + a21) in
              #0086
              enable_interrupts()
              #0087
              let:16 a23 = (1 + a22) in
              let:16 a24 = (1 + a23) in
              A := M[a21];
              B := M[a19];
              C := M[a18];
              D := M[a17];
              E := M[a16];
              H := M[a15];
              L := M[(SPH,SPL)];
              SPH := a24[15:8];
              SPL := a24[7:0];
              FlagS := M[a20][7];
              FlagZ := M[a20][6];
              FlagA := M[a20][4];
              FlagP := M[a20][2];
              FlagCY := M[a20][0];
              jump ((M[a23],M[a22]));
            }
          } else {
            #0049
            #004C
            let:8 a25 = (M[20EF] & M[20EF]) in
            let:8 a26 = (M[20EF] | M[20EF]) in
            #004D
            if (!is_zero(a25)) {
              #006F
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a27 = (-1 + (SPH,SPL)) in
                  M[a27] := 00;
                  let:16 a28 = (-1 + a27) in
                  M[a28] := 6F;
                  A := a25;
                  SPH := a28[15:8];
                  SPL := a28[7:0];
                  FlagS := a25[7];
                  FlagZ := is_zero(a25);
                  FlagA := a26[3];
                  FlagP := parity(a25);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a29 = (-1 + (SPH,SPL)) in
                  M[a29] := 00;
                  let:16 a30 = (-1 + a29) in
                  M[a30] := 6F;
                  A := a25;
                  SPH := a30[15:8];
                  SPL := a30[7:0];
                  FlagS := a25[7];
                  FlagZ := is_zero(a25);
                  FlagA := a26[3];
                  FlagP := parity(a25);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                let:16 a31 = (-1 + (SPH,SPL)) in
                M[a31] := 00;
                let:16 a32 = (-1 + a31) in
                M[a32] := 72;
                #return-to: 0072
                #1740
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a33 = (-1 + a32) in
                    M[a33] := 17;
                    let:16 a34 = (-1 + a33) in
                    M[a34] := 40;
                    A := a25;
                    SPH := a34[15:8];
                    SPL := a34[7:0];
                    FlagS := a25[7];
                    FlagZ := is_zero(a25);
                    FlagA := a26[3];
                    FlagP := parity(a25);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a35 = (-1 + a32) in
                    M[a35] := 17;
                    let:16 a36 = (-1 + a35) in
                    M[a36] := 40;
                    A := a25;
                    SPH := a36[15:8];
                    SPL := a36[7:0];
                    FlagS := a25[7];
                    FlagZ := is_zero(a25);
                    FlagA := a26[3];
                    FlagP := parity(a25);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  #1743
                  let:16 a37 = addWithCarry(!true,M[209B],~00) in
                  let:8 a38 = (M[209B] & 0F) in
                  let:8 a39 = (~00 & 0F) in
                  let:16 a40 = addWithCarry(!true,a38,a39) in
                  M[209B] := a37[7:0];
                  #1744
                  if (is_zero(a37[7:0])) {
                    let:16 a41 = (-1 + a32) in
                    M[a41] := 17;
                    let:16 a42 = (-1 + a41) in
                    M[a42] := 47;
                    #return-to: 1747
                    #176D
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a43 = (-1 + a42) in
                        M[a43] := 17;
                        let:16 a44 = (-1 + a43) in
                        M[a44] := 6D;
                        A := a25;
                        H := 20;
                        L := 9B;
                        SPH := a44[15:8];
                        SPL := a44[7:0];
                        FlagS := a37[7:0][7];
                        FlagZ := is_zero(a37[7:0]);
                        FlagA := a40[7:0][4];
                        FlagP := parity(a37[7:0]);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a45 = (-1 + a42) in
                        M[a45] := 17;
                        let:16 a46 = (-1 + a45) in
                        M[a46] := 6D;
                        A := a25;
                        H := 20;
                        L := 9B;
                        SPH := a46[15:8];
                        SPL := a46[7:0];
                        FlagS := a37[7:0][7];
                        FlagZ := is_zero(a37[7:0]);
                        FlagA := a40[7:0][4];
                        FlagP := parity(a37[7:0]);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      #1770
                      let:8 a47 = (30 & M[2098]) in
                      let:8 a48 = (30 | M[2098]) in
                      #1772
                      sound_control(FleetMovement1,a47[0]);
                      sound_control(FleetMovement2,a47[1]);
                      sound_control(FleetMovement3,a47[2]);
                      sound_control(FleetMovement4,a47[3]);
                      sound_control(UfoHit,a47[4]);
                      #1774
                      let:16 a49 = (1 + a42) in
                      let:16 a50 = (1 + a49) in
                      A := a47;
                      H := 20;
                      L := 9B;
                      SPH := a50[15:8];
                      SPL := a50[7:0];
                      FlagS := a47[7];
                      FlagZ := is_zero(a47);
                      FlagA := a48[3];
                      FlagP := parity(a47);
                      FlagCY := false;
                      jump ((M[a49],M[a42]));
                    }
                  } else {
                    A := a25;
                    H := 20;
                    L := 9B;
                    SPH := a32[15:8];
                    SPL := a32[7:0];
                    FlagS := a37[7:0][7];
                    FlagZ := is_zero(a37[7:0]);
                    FlagA := a40[7:0][4];
                    FlagP := parity(a37[7:0]);
                    FlagCY := false;
                    jump (1747);
                  }
                }
              }
            } else {
              #0050
              #0053
              let:8 a51 = (M[20EB] & M[20EB]) in
              let:8 a52 = (M[20EB] | M[20EB]) in
              #0054
              if (!is_zero(a51)) {
                #005D
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a53 = (-1 + (SPH,SPL)) in
                    M[a53] := 00;
                    let:16 a54 = (-1 + a53) in
                    M[a54] := 5D;
                    A := a51;
                    SPH := a54[15:8];
                    SPL := a54[7:0];
                    FlagS := a51[7];
                    FlagZ := is_zero(a51);
                    FlagA := a52[3];
                    FlagP := parity(a51);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a55 = (-1 + (SPH,SPL)) in
                    M[a55] := 00;
                    let:16 a56 = (-1 + a55) in
                    M[a56] := 5D;
                    A := a51;
                    SPH := a56[15:8];
                    SPL := a56[7:0];
                    FlagS := a51[7];
                    FlagZ := is_zero(a51);
                    FlagA := a52[3];
                    FlagP := parity(a51);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  #0060
                  let:8 a57 = (M[2093] & M[2093]) in
                  let:8 a58 = (M[2093] | M[2093]) in
                  #0061
                  if (!is_zero(a57)) {
                    #0082
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a59 = (-1 + (SPH,SPL)) in
                        M[a59] := 00;
                        let:16 a60 = (-1 + a59) in
                        M[a60] := 82;
                        A := a57;
                        SPH := a60[15:8];
                        SPL := a60[7:0];
                        FlagS := a57[7];
                        FlagZ := is_zero(a57);
                        FlagA := a58[3];
                        FlagP := parity(a57);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a61 = (-1 + (SPH,SPL)) in
                        M[a61] := 00;
                        let:16 a62 = (-1 + a61) in
                        M[a62] := 82;
                        A := a57;
                        SPH := a62[15:8];
                        SPL := a62[7:0];
                        FlagS := a57[7];
                        FlagZ := is_zero(a57);
                        FlagA := a58[3];
                        FlagP := parity(a57);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      let:16 a63 = (1 + (SPH,SPL)) in
                      let:16 a64 = (1 + a63) in
                      #0083
                      let:16 a65 = (1 + a64) in
                      let:16 a66 = (1 + a65) in
                      #0084
                      let:16 a67 = (1 + a66) in
                      let:16 a68 = (1 + a67) in
                      #0085
                      let:16 a69 = (1 + a68) in
                      let:16 a70 = (1 + a69) in
                      #0086
                      enable_interrupts()
                      #0087
                      let:16 a71 = (1 + a70) in
                      let:16 a72 = (1 + a71) in
                      A := M[a69];
                      B := M[a67];
                      C := M[a66];
                      D := M[a65];
                      E := M[a64];
                      H := M[a63];
                      L := M[(SPH,SPL)];
                      SPH := a72[15:8];
                      SPL := a72[7:0];
                      FlagS := M[a68][7];
                      FlagZ := M[a68][6];
                      FlagA := M[a68][4];
                      FlagP := M[a68][2];
                      FlagCY := M[a68][0];
                      jump ((M[a71],M[a70]));
                    }
                  } else {
                    #0064
                    #0765
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a73 = (-1 + (SPH,SPL)) in
                        M[a73] := 07;
                        let:16 a74 = (-1 + a73) in
                        M[a74] := 65;
                        A := a57;
                        SPH := a74[15:8];
                        SPL := a74[7:0];
                        FlagS := a57[7];
                        FlagZ := is_zero(a57);
                        FlagA := a58[3];
                        FlagP := parity(a57);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a75 = (-1 + (SPH,SPL)) in
                        M[a75] := 07;
                        let:16 a76 = (-1 + a75) in
                        M[a76] := 65;
                        A := a57;
                        SPH := a76[15:8];
                        SPL := a76[7:0];
                        FlagS := a57[7];
                        FlagZ := is_zero(a57);
                        FlagA := a58[3];
                        FlagP := parity(a57);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      #0767
                      M[2093] := 01;
                      #076A
                      #076D
                      enable_interrupts()
                      #076E
                      M[23FF] := 07;
                      M[23FE] := 71;
                      #return-to: 0771
                      #1979
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          M[23FD] := 19;
                          M[23FC] := 79;
                          A := 01;
                          SPH := 23;
                          SPL := FC;
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          M[23FD] := 19;
                          M[23FC] := 79;
                          A := 01;
                          SPH := 23;
                          SPL := FC;
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        M[23FD] := 19;
                        M[23FC] := 7C;
                        #return-to: 197C
                        #19D7
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            M[23FB] := 19;
                            M[23FA] := D7;
                            A := 01;
                            SPH := 23;
                            SPL := FA;
                            FlagS := a57[7];
                            FlagZ := is_zero(a57);
                            FlagA := a58[3];
                            FlagP := parity(a57);
                            FlagCY := false;
                            jump (0008);
                          } else {
                            M[23FB] := 19;
                            M[23FA] := D7;
                            A := 01;
                            SPH := 23;
                            SPL := FA;
                            FlagS := a57[7];
                            FlagZ := is_zero(a57);
                            FlagA := a58[3];
                            FlagP := parity(a57);
                            FlagCY := false;
                            jump (0010);
                          }
                        } else {
                          let:8 a77 = (01 ^ 01) in
                          #19D8
                          #19D3
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              M[23FB] := 19;
                              M[23FA] := D3;
                              A := a77;
                              SPH := 23;
                              SPL := FA;
                              FlagS := a77[7];
                              FlagZ := is_zero(a77);
                              FlagA := false;
                              FlagP := parity(a77);
                              FlagCY := false;
                              jump (0008);
                            } else {
                              M[23FB] := 19;
                              M[23FA] := D3;
                              A := a77;
                              SPH := 23;
                              SPL := FA;
                              FlagS := a77[7];
                              FlagZ := is_zero(a77);
                              FlagA := false;
                              FlagP := parity(a77);
                              FlagCY := false;
                              jump (0010);
                            }
                          } else {
                            M[20E9] := a77;
                            #19D6
                            A := a77;
                            SPH := 23;
                            SPL := FE;
                            FlagS := a77[7];
                            FlagZ := is_zero(a77);
                            FlagA := false;
                            FlagP := parity(a77);
                            FlagCY := false;
                            jump ((M[23FD],M[23FC]));
                          }
                        }
                      }
                    }
                  }
                }
              } else {
                #0057
                let:16 a78 = (-1 + (SPH,SPL)) in
                M[a78] := 00;
                let:16 a79 = (-1 + a78) in
                M[a79] := 5A;
                #return-to: 005A
                #0ABF
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a80 = (-1 + a79) in
                    M[a80] := 0A;
                    let:16 a81 = (-1 + a80) in
                    M[a81] := BF;
                    A := a51;
                    SPH := a81[15:8];
                    SPL := a81[7:0];
                    FlagS := a51[7];
                    FlagZ := is_zero(a51);
                    FlagA := a52[3];
                    FlagP := parity(a51);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a82 = (-1 + a79) in
                    M[a82] := 0A;
                    let:16 a83 = (-1 + a82) in
                    M[a83] := BF;
                    A := a51;
                    SPH := a83[15:8];
                    SPL := a83[7:0];
                    FlagS := a51[7];
                    FlagZ := is_zero(a51);
                    FlagA := a52[3];
                    FlagP := parity(a51);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  #0AC2
                  #0AC3
                  if (M[20C1][0]) {
                    #0ABB
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a84 = (-1 + a79) in
                        M[a84] := 0A;
                        let:16 a85 = (-1 + a84) in
                        M[a85] := BB;
                        A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                        SPH := a85[15:8];
                        SPL := a85[7:0];
                        FlagS := a51[7];
                        FlagZ := is_zero(a51);
                        FlagA := a52[3];
                        FlagP := parity(a51);
                        FlagCY := M[20C1][0];
                        jump (0008);
                      } else {
                        let:16 a86 = (-1 + a79) in
                        M[a86] := 0A;
                        let:16 a87 = (-1 + a86) in
                        M[a87] := BB;
                        A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                        SPH := a87[15:8];
                        SPL := a87[7:0];
                        FlagS := a51[7];
                        FlagZ := is_zero(a51);
                        FlagA := a52[3];
                        FlagP := parity(a51);
                        FlagCY := M[20C1][0];
                        jump (0010);
                      }
                    } else {
                      let:16 a88 = (1 + a79) in
                      let:16 a89 = (1 + a88) in
                      #0ABC
                      A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                      H := M[a88];
                      L := M[a79];
                      SPH := a89[15:8];
                      SPL := a89[7:0];
                      FlagS := a51[7];
                      FlagZ := is_zero(a51);
                      FlagA := a52[3];
                      FlagP := parity(a51);
                      FlagCY := M[20C1][0];
                      jump (0072);
                    }
                  } else {
                    #0AC6
                    #0AC7
                    if (updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) {
                      #1868
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a90 = (-1 + a79) in
                          M[a90] := 18;
                          let:16 a91 = (-1 + a90) in
                          M[a91] := 68;
                          A := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]);
                          SPH := a91[15:8];
                          SPL := a91[7:0];
                          FlagS := a51[7];
                          FlagZ := is_zero(a51);
                          FlagA := a52[3];
                          FlagP := parity(a51);
                          FlagCY := updateBit((M[20C1] >> 01),7,M[20C1][0])[0];
                          jump (0008);
                        } else {
                          let:16 a92 = (-1 + a79) in
                          M[a92] := 18;
                          let:16 a93 = (-1 + a92) in
                          M[a93] := 68;
                          A := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]);
                          SPH := a93[15:8];
                          SPL := a93[7:0];
                          FlagS := a51[7];
                          FlagZ := is_zero(a51);
                          FlagA := a52[3];
                          FlagP := parity(a51);
                          FlagCY := updateBit((M[20C1] >> 01),7,M[20C1][0])[0];
                          jump (0010);
                        }
                      } else {
                        #186B
                        let:16 a94 = addWithCarry(true,M[20C2],00) in
                        let:8 a95 = (M[20C2] & 0F) in
                        let:8 a96 = (00 & 0F) in
                        let:16 a97 = addWithCarry(true,a95,a96) in
                        M[20C2] := a94[7:0];
                        #186C
                        #186D
                        #186E
                        let:16 a98 = (-1 + a79) in
                        M[a98] := 18;
                        let:16 a99 = (-1 + a98) in
                        M[a99] := 71;
                        #return-to: 1871
                        #01D9
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a100 = (-1 + a99) in
                            M[a100] := 01;
                            let:16 a101 = (-1 + a100) in
                            M[a101] := D9;
                            A := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]);
                            C := M[20C3];
                            H := 20;
                            L := C3;
                            SPH := a101[15:8];
                            SPL := a101[7:0];
                            FlagS := a94[7:0][7];
                            FlagZ := is_zero(a94[7:0]);
                            FlagA := a97[7:0][4];
                            FlagP := parity(a94[7:0]);
                            FlagCY := updateBit((M[20C1] >> 01),7,M[20C1][0])[0];
                            jump (0008);
                          } else {
                            let:16 a102 = (-1 + a99) in
                            M[a102] := 01;
                            let:16 a103 = (-1 + a102) in
                            M[a103] := D9;
                            A := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]);
                            C := M[20C3];
                            H := 20;
                            L := C3;
                            SPH := a103[15:8];
                            SPL := a103[7:0];
                            FlagS := a94[7:0][7];
                            FlagZ := is_zero(a94[7:0]);
                            FlagA := a97[7:0][4];
                            FlagP := parity(a94[7:0]);
                            FlagCY := updateBit((M[20C1] >> 01),7,M[20C1][0])[0];
                            jump (0010);
                          }
                        } else {
                          #01DA
                          #01DB
                          #01DC
                          #01DD
                          let:16 a104 = addWithCarry(false,M[20C5],M[20C3]) in
                          let:8 a105 = (M[20C5] & 0F) in
                          let:8 a106 = (M[20C3] & 0F) in
                          let:16 a107 = addWithCarry(false,a105,a106) in
                          #01DE
                          M[20C5] := a104[7:0];
                          #01DF
                          #01E0
                          #01E1
                          let:16 a108 = addWithCarry(false,M[20C6],M[20C4]) in
                          let:8 a109 = (M[20C6] & 0F) in
                          let:8 a110 = (M[20C4] & 0F) in
                          let:16 a111 = addWithCarry(false,a109,a110) in
                          #01E2
                          M[20C6] := a108[7:0];
                          #01E3
                          let:16 a112 = (1 + a99) in
                          let:16 a113 = (1 + a112) in
                          A := a108[7:0];
                          B := M[20C4];
                          C := M[20C3];
                          H := 20;
                          L := C6;
                          SPH := a113[15:8];
                          SPL := a113[7:0];
                          FlagS := a108[7:0][7];
                          FlagZ := is_zero(a108[7:0]);
                          FlagA := a111[7:0][4];
                          FlagP := parity(a108[7:0]);
                          FlagCY := a108[15:8][0];
                          jump ((M[a112],M[a99]));
                        }
                      }
                    } else {
                      #0ACA
                      #0ACB
                      if (updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]) {
                        #0AAB
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a114 = (-1 + a79) in
                            M[a114] := 0A;
                            let:16 a115 = (-1 + a114) in
                            M[a115] := AB;
                            A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                            SPH := a115[15:8];
                            SPL := a115[7:0];
                            FlagS := a51[7];
                            FlagZ := is_zero(a51);
                            FlagA := a52[3];
                            FlagP := parity(a51);
                            FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                            jump (0008);
                          } else {
                            let:16 a116 = (-1 + a79) in
                            M[a116] := 0A;
                            let:16 a117 = (-1 + a116) in
                            M[a117] := AB;
                            A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                            SPH := a117[15:8];
                            SPL := a117[7:0];
                            FlagS := a51[7];
                            FlagZ := is_zero(a51);
                            FlagA := a52[3];
                            FlagP := parity(a51);
                            FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                            jump (0010);
                          }
                        } else {
                          #0AAE
                          #024B
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a118 = (-1 + a79) in
                              M[a118] := 02;
                              let:16 a119 = (-1 + a118) in
                              M[a119] := 4B;
                              A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                              H := 20;
                              L := 50;
                              SPH := a119[15:8];
                              SPL := a119[7:0];
                              FlagS := a51[7];
                              FlagZ := is_zero(a51);
                              FlagA := a52[3];
                              FlagP := parity(a51);
                              FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                              jump (0008);
                            } else {
                              let:16 a120 = (-1 + a79) in
                              M[a120] := 02;
                              let:16 a121 = (-1 + a120) in
                              M[a121] := 4B;
                              A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                              H := 20;
                              L := 50;
                              SPH := a121[15:8];
                              SPL := a121[7:0];
                              FlagS := a51[7];
                              FlagZ := is_zero(a51);
                              FlagA := a52[3];
                              FlagP := parity(a51);
                              FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                              jump (0010);
                            }
                          } else {
                            #024C
                            let:16 a122 = addWithCarry(!false,M[2050],~FF) in
                            let:8 a123 = (M[2050] & 0F) in
                            let:8 a124 = (~FF & 0F) in
                            let:16 a125 = addWithCarry(!false,a123,a124) in
                            #024E
                            if (is_zero(a122[7:0])) {
                              let:16 a126 = (1 + a79) in
                              let:16 a127 = (1 + a126) in
                              A := M[2050];
                              H := 20;
                              L := 50;
                              SPH := a127[15:8];
                              SPL := a127[7:0];
                              FlagS := a122[7:0][7];
                              FlagZ := is_zero(a122[7:0]);
                              FlagA := a125[7:0][4];
                              FlagP := parity(a122[7:0]);
                              FlagCY := !a122[15:8][0];
                              jump ((M[a126],M[a79]));
                            } else {
                              #024F
                              let:16 a128 = addWithCarry(!false,M[2050],~FE) in
                              let:8 a129 = (M[2050] & 0F) in
                              let:8 a130 = (~FE & 0F) in
                              let:16 a131 = addWithCarry(!false,a129,a130) in
                              #0251
                              if (is_zero(a128[7:0])) {
                                #0281
                                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                  disable_interrupts()
                                  if (g_half_frame) {
                                    let:16 a132 = (-1 + a79) in
                                    M[a132] := 02;
                                    let:16 a133 = (-1 + a132) in
                                    M[a133] := 81;
                                    A := M[2050];
                                    H := 20;
                                    L := 50;
                                    SPH := a133[15:8];
                                    SPL := a133[7:0];
                                    FlagS := a128[7:0][7];
                                    FlagZ := is_zero(a128[7:0]);
                                    FlagA := a131[7:0][4];
                                    FlagP := parity(a128[7:0]);
                                    FlagCY := !a128[15:8][0];
                                    jump (0008);
                                  } else {
                                    let:16 a134 = (-1 + a79) in
                                    M[a134] := 02;
                                    let:16 a135 = (-1 + a134) in
                                    M[a135] := 81;
                                    A := M[2050];
                                    H := 20;
                                    L := 50;
                                    SPH := a135[15:8];
                                    SPL := a135[7:0];
                                    FlagS := a128[7:0][7];
                                    FlagZ := is_zero(a128[7:0]);
                                    FlagA := a131[7:0][4];
                                    FlagP := parity(a128[7:0]);
                                    FlagCY := !a128[15:8][0];
                                    jump (0010);
                                  }
                                } else {
                                  #0284
                                  let:17 a136 = add17(0010,2050) in
                                  #0285
                                  A := M[2050];
                                  D := 00;
                                  E := 10;
                                  H := a136[15:0][15:8];
                                  L := a136[15:0][7:0];
                                  SPH := a79[15:8];
                                  SPL := a79[7:0];
                                  FlagS := a128[7:0][7];
                                  FlagZ := is_zero(a128[7:0]);
                                  FlagA := a131[7:0][4];
                                  FlagP := parity(a128[7:0]);
                                  FlagCY := a136[16];
                                  jump (024B);
                                }
                              } else {
                                #0254
                                #0255
                                #0256
                                #0257
                                let:8 a137 = (M[2051] | M[2050]) in
                                #0258
                                #0259
                                if (!is_zero(a137)) {
                                  #0277
                                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                    disable_interrupts()
                                    if (g_half_frame) {
                                      let:16 a138 = (-1 + a79) in
                                      M[a138] := 02;
                                      let:16 a139 = (-1 + a138) in
                                      M[a139] := 77;
                                      A := M[2050];
                                      B := M[2051];
                                      C := M[2050];
                                      H := 20;
                                      L := 51;
                                      SPH := a139[15:8];
                                      SPL := a139[7:0];
                                      FlagS := a137[7];
                                      FlagZ := is_zero(a137);
                                      FlagA := false;
                                      FlagP := parity(a137);
                                      FlagCY := false;
                                      jump (0008);
                                    } else {
                                      let:16 a140 = (-1 + a79) in
                                      M[a140] := 02;
                                      let:16 a141 = (-1 + a140) in
                                      M[a141] := 77;
                                      A := M[2050];
                                      B := M[2051];
                                      C := M[2050];
                                      H := 20;
                                      L := 51;
                                      SPH := a141[15:8];
                                      SPL := a141[7:0];
                                      FlagS := a137[7];
                                      FlagZ := is_zero(a137);
                                      FlagA := false;
                                      FlagP := parity(a137);
                                      FlagCY := false;
                                      jump (0010);
                                    }
                                  } else {
                                    let:16 a142 = addWithCarry(!true,M[2051],~00) in
                                    let:8 a143 = (M[2051] & 0F) in
                                    let:8 a144 = (~00 & 0F) in
                                    let:16 a145 = addWithCarry(!true,a143,a144) in
                                    #0278
                                    let:16 a146 = addWithCarry(true,a142[7:0],00) in
                                    let:8 a147 = (a142[7:0] & 0F) in
                                    let:8 a148 = (00 & 0F) in
                                    let:16 a149 = addWithCarry(true,a147,a148) in
                                    #0279
                                    if (!is_zero(a146[7:0])) {
                                      #027D
                                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                        disable_interrupts()
                                        if (g_half_frame) {
                                          let:16 a150 = (-1 + a79) in
                                          M[a150] := 02;
                                          let:16 a151 = (-1 + a150) in
                                          M[a151] := 7D;
                                          A := M[2050];
                                          B := a146[7:0];
                                          C := M[2050];
                                          H := 20;
                                          L := 51;
                                          SPH := a151[15:8];
                                          SPL := a151[7:0];
                                          FlagS := a146[7:0][7];
                                          FlagZ := is_zero(a146[7:0]);
                                          FlagA := a149[7:0][4];
                                          FlagP := parity(a146[7:0]);
                                          FlagCY := false;
                                          jump (0008);
                                        } else {
                                          let:16 a152 = (-1 + a79) in
                                          M[a152] := 02;
                                          let:16 a153 = (-1 + a152) in
                                          M[a153] := 7D;
                                          A := M[2050];
                                          B := a146[7:0];
                                          C := M[2050];
                                          H := 20;
                                          L := 51;
                                          SPH := a153[15:8];
                                          SPL := a153[7:0];
                                          FlagS := a146[7:0][7];
                                          FlagZ := is_zero(a146[7:0]);
                                          FlagA := a149[7:0][4];
                                          FlagP := parity(a146[7:0]);
                                          FlagCY := false;
                                          jump (0010);
                                        }
                                      } else {
                                        let:16 a154 = addWithCarry(!true,a146[7:0],~00) in
                                        let:8 a155 = (a146[7:0] & 0F) in
                                        let:8 a156 = (~00 & 0F) in
                                        let:16 a157 = addWithCarry(!true,a155,a156) in
                                        #027E
                                        M[2051] := a154[7:0];
                                        #027F
                                        #0280
                                        M[2050] := M[2050];
                                        #0281
                                        #0284
                                        let:17 a158 = add17(0010,2050) in
                                        #0285
                                        A := M[2050];
                                        B := a154[7:0];
                                        C := M[2050];
                                        D := 00;
                                        E := 10;
                                        H := a158[15:0][15:8];
                                        L := a158[15:0][7:0];
                                        SPH := a79[15:8];
                                        SPL := a79[7:0];
                                        FlagS := a154[7:0][7];
                                        FlagZ := is_zero(a154[7:0]);
                                        FlagA := a157[7:0][4];
                                        FlagP := parity(a154[7:0]);
                                        FlagCY := a158[16];
                                        jump (024B);
                                      }
                                    } else {
                                      #027C
                                      let:16 a159 = addWithCarry(!true,M[2050],~00) in
                                      let:8 a160 = (M[2050] & 0F) in
                                      let:8 a161 = (~00 & 0F) in
                                      let:16 a162 = addWithCarry(!true,a160,a161) in
                                      #027D
                                      let:16 a163 = addWithCarry(!true,a146[7:0],~00) in
                                      let:8 a164 = (a146[7:0] & 0F) in
                                      let:8 a165 = (~00 & 0F) in
                                      let:16 a166 = addWithCarry(!true,a164,a165) in
                                      #027E
                                      M[2051] := a163[7:0];
                                      #027F
                                      #0280
                                      M[2050] := a159[7:0];
                                      #0281
                                      #0284
                                      let:17 a167 = add17(0010,2050) in
                                      #0285
                                      A := a159[7:0];
                                      B := a163[7:0];
                                      C := M[2050];
                                      D := 00;
                                      E := 10;
                                      H := a167[15:0][15:8];
                                      L := a167[15:0][7:0];
                                      SPH := a79[15:8];
                                      SPL := a79[7:0];
                                      FlagS := a163[7:0][7];
                                      FlagZ := is_zero(a163[7:0]);
                                      FlagA := a166[7:0][4];
                                      FlagP := parity(a163[7:0]);
                                      FlagCY := a167[16];
                                      jump (024B);
                                    }
                                  }
                                } else {
                                  #025C
                                  #025D
                                  #025E
                                  let:8 a168 = (M[2052] & M[2052]) in
                                  let:8 a169 = (M[2052] | M[2052]) in
                                  #025F
                                  if (!is_zero(a168)) {
                                    #0288
                                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                      disable_interrupts()
                                      if (g_half_frame) {
                                        let:16 a170 = (-1 + a79) in
                                        M[a170] := 02;
                                        let:16 a171 = (-1 + a170) in
                                        M[a171] := 88;
                                        A := a168;
                                        B := M[2051];
                                        C := M[2050];
                                        H := 20;
                                        L := 52;
                                        SPH := a171[15:8];
                                        SPL := a171[7:0];
                                        FlagS := a168[7];
                                        FlagZ := is_zero(a168);
                                        FlagA := a169[3];
                                        FlagP := parity(a168);
                                        FlagCY := false;
                                        jump (0008);
                                      } else {
                                        let:16 a172 = (-1 + a79) in
                                        M[a172] := 02;
                                        let:16 a173 = (-1 + a172) in
                                        M[a173] := 88;
                                        A := a168;
                                        B := M[2051];
                                        C := M[2050];
                                        H := 20;
                                        L := 52;
                                        SPH := a173[15:8];
                                        SPL := a173[7:0];
                                        FlagS := a168[7];
                                        FlagZ := is_zero(a168);
                                        FlagA := a169[3];
                                        FlagP := parity(a168);
                                        FlagCY := false;
                                        jump (0010);
                                      }
                                    } else {
                                      let:16 a174 = addWithCarry(!true,M[2052],~00) in
                                      let:8 a175 = (M[2052] & 0F) in
                                      let:8 a176 = (~00 & 0F) in
                                      let:16 a177 = addWithCarry(!true,a175,a176) in
                                      M[2052] := a174[7:0];
                                      #0289
                                      #028A
                                      #028B
                                      #0281
                                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                        disable_interrupts()
                                        if (g_half_frame) {
                                          let:16 a178 = (-1 + a79) in
                                          M[a178] := 02;
                                          let:16 a179 = (-1 + a178) in
                                          M[a179] := 81;
                                          A := a168;
                                          B := M[2051];
                                          C := M[2050];
                                          H := 20;
                                          L := 50;
                                          SPH := a179[15:8];
                                          SPL := a179[7:0];
                                          FlagS := a174[7:0][7];
                                          FlagZ := is_zero(a174[7:0]);
                                          FlagA := a177[7:0][4];
                                          FlagP := parity(a174[7:0]);
                                          FlagCY := false;
                                          jump (0008);
                                        } else {
                                          let:16 a180 = (-1 + a79) in
                                          M[a180] := 02;
                                          let:16 a181 = (-1 + a180) in
                                          M[a181] := 81;
                                          A := a168;
                                          B := M[2051];
                                          C := M[2050];
                                          H := 20;
                                          L := 50;
                                          SPH := a181[15:8];
                                          SPL := a181[7:0];
                                          FlagS := a174[7:0][7];
                                          FlagZ := is_zero(a174[7:0]);
                                          FlagA := a177[7:0][4];
                                          FlagP := parity(a174[7:0]);
                                          FlagCY := false;
                                          jump (0010);
                                        }
                                      } else {
                                        #0284
                                        let:17 a182 = add17(0010,2050) in
                                        #0285
                                        A := a168;
                                        B := M[2051];
                                        C := M[2050];
                                        D := 00;
                                        E := 10;
                                        H := a182[15:0][15:8];
                                        L := a182[15:0][7:0];
                                        SPH := a79[15:8];
                                        SPL := a79[7:0];
                                        FlagS := a174[7:0][7];
                                        FlagZ := is_zero(a174[7:0]);
                                        FlagA := a177[7:0][4];
                                        FlagP := parity(a174[7:0]);
                                        FlagCY := a182[16];
                                        jump (024B);
                                      }
                                    }
                                  } else {
                                    #0262
                                    #0263
                                    #0264
                                    #0265
                                    #0266
                                    let:16 a183 = (-1 + a79) in
                                    M[a183] := 20;
                                    let:16 a184 = (-1 + a183) in
                                    M[a184] := 54;
                                    #0267
                                    #0268
                                    let:16 a185 = (-1 + a184) in
                                    M[a185] := M[2054];
                                    let:16 a186 = (-1 + a185) in
                                    M[a186] := M[2053];
                                    #0269
                                    #026C
                                    let:16 a187 = (1 + a186) in
                                    M[a186] := 6F;
                                    M[a187] := 02;
                                    #026D
                                    let:16 a188 = (-1 + a186) in
                                    M[a188] := 20;
                                    let:16 a189 = (-1 + a188) in
                                    M[a189] := 54;
                                    #026E
                                    A := a168;
                                    B := M[2051];
                                    C := M[2050];
                                    D := 20;
                                    E := 54;
                                    H := M[a187];
                                    L := M[a186];
                                    SPH := a189[15:8];
                                    SPL := a189[7:0];
                                    FlagS := a168[7];
                                    FlagZ := is_zero(a168);
                                    FlagA := a169[3];
                                    FlagP := parity(a168);
                                    FlagCY := false;
                                    jump ((M[a187],M[a186]));
                                  }
                                }
                              }
                            }
                          }
                        }
                      } else {
                        #0ACE
                        let:16 a190 = (1 + a79) in
                        let:16 a191 = (1 + a190) in
                        A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                        SPH := a191[15:8];
                        SPL := a191[7:0];
                        FlagS := a51[7];
                        FlagZ := is_zero(a51);
                        FlagA := a52[3];
                        FlagP := parity(a51);
                        FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                        jump ((M[a190],M[a79]));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    } else {
      #0026
      #0029
      let:8 a192 = (M[20EA] & M[20EA]) in
      let:8 a193 = (M[20EA] | M[20EA]) in
      #002A
      if (is_zero(a192)) {
        #0042
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a194 = (-1 + (SPH,SPL)) in
            M[a194] := 00;
            let:16 a195 = (-1 + a194) in
            M[a195] := 42;
            A := a192;
            SPH := a195[15:8];
            SPL := a195[7:0];
            FlagS := a192[7];
            FlagZ := is_zero(a192);
            FlagA := a193[3];
            FlagP := parity(a192);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a196 = (-1 + (SPH,SPL)) in
            M[a196] := 00;
            let:16 a197 = (-1 + a196) in
            M[a197] := 42;
            A := a192;
            SPH := a197[15:8];
            SPL := a197[7:0];
            FlagS := a192[7];
            FlagZ := is_zero(a192);
            FlagA := a193[3];
            FlagP := parity(a192);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #0045
          let:8 a198 = (M[20E9] & M[20E9]) in
          let:8 a199 = (M[20E9] | M[20E9]) in
          #0046
          if (is_zero(a198)) {
            #0082
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a200 = (-1 + (SPH,SPL)) in
                M[a200] := 00;
                let:16 a201 = (-1 + a200) in
                M[a201] := 82;
                A := a198;
                SPH := a201[15:8];
                SPL := a201[7:0];
                FlagS := a198[7];
                FlagZ := is_zero(a198);
                FlagA := a199[3];
                FlagP := parity(a198);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a202 = (-1 + (SPH,SPL)) in
                M[a202] := 00;
                let:16 a203 = (-1 + a202) in
                M[a203] := 82;
                A := a198;
                SPH := a203[15:8];
                SPL := a203[7:0];
                FlagS := a198[7];
                FlagZ := is_zero(a198);
                FlagA := a199[3];
                FlagP := parity(a198);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a204 = (1 + (SPH,SPL)) in
              let:16 a205 = (1 + a204) in
              #0083
              let:16 a206 = (1 + a205) in
              let:16 a207 = (1 + a206) in
              #0084
              let:16 a208 = (1 + a207) in
              let:16 a209 = (1 + a208) in
              #0085
              let:16 a210 = (1 + a209) in
              let:16 a211 = (1 + a210) in
              #0086
              enable_interrupts()
              #0087
              let:16 a212 = (1 + a211) in
              let:16 a213 = (1 + a212) in
              A := M[a210];
              B := M[a208];
              C := M[a207];
              D := M[a206];
              E := M[a205];
              H := M[a204];
              L := M[(SPH,SPL)];
              SPH := a213[15:8];
              SPL := a213[7:0];
              FlagS := M[a209][7];
              FlagZ := M[a209][6];
              FlagA := M[a209][4];
              FlagP := M[a209][2];
              FlagCY := M[a209][0];
              jump ((M[a212],M[a211]));
            }
          } else {
            #0049
            #004C
            let:8 a214 = (M[20EF] & M[20EF]) in
            let:8 a215 = (M[20EF] | M[20EF]) in
            #004D
            if (!is_zero(a214)) {
              #006F
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a216 = (-1 + (SPH,SPL)) in
                  M[a216] := 00;
                  let:16 a217 = (-1 + a216) in
                  M[a217] := 6F;
                  A := a214;
                  SPH := a217[15:8];
                  SPL := a217[7:0];
                  FlagS := a214[7];
                  FlagZ := is_zero(a214);
                  FlagA := a215[3];
                  FlagP := parity(a214);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a218 = (-1 + (SPH,SPL)) in
                  M[a218] := 00;
                  let:16 a219 = (-1 + a218) in
                  M[a219] := 6F;
                  A := a214;
                  SPH := a219[15:8];
                  SPL := a219[7:0];
                  FlagS := a214[7];
                  FlagZ := is_zero(a214);
                  FlagA := a215[3];
                  FlagP := parity(a214);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                let:16 a220 = (-1 + (SPH,SPL)) in
                M[a220] := 00;
                let:16 a221 = (-1 + a220) in
                M[a221] := 72;
                #return-to: 0072
                #1740
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a222 = (-1 + a221) in
                    M[a222] := 17;
                    let:16 a223 = (-1 + a222) in
                    M[a223] := 40;
                    A := a214;
                    SPH := a223[15:8];
                    SPL := a223[7:0];
                    FlagS := a214[7];
                    FlagZ := is_zero(a214);
                    FlagA := a215[3];
                    FlagP := parity(a214);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a224 = (-1 + a221) in
                    M[a224] := 17;
                    let:16 a225 = (-1 + a224) in
                    M[a225] := 40;
                    A := a214;
                    SPH := a225[15:8];
                    SPL := a225[7:0];
                    FlagS := a214[7];
                    FlagZ := is_zero(a214);
                    FlagA := a215[3];
                    FlagP := parity(a214);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  #1743
                  let:16 a226 = addWithCarry(!true,M[209B],~00) in
                  let:8 a227 = (M[209B] & 0F) in
                  let:8 a228 = (~00 & 0F) in
                  let:16 a229 = addWithCarry(!true,a227,a228) in
                  M[209B] := a226[7:0];
                  #1744
                  if (is_zero(a226[7:0])) {
                    let:16 a230 = (-1 + a221) in
                    M[a230] := 17;
                    let:16 a231 = (-1 + a230) in
                    M[a231] := 47;
                    #return-to: 1747
                    #176D
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a232 = (-1 + a231) in
                        M[a232] := 17;
                        let:16 a233 = (-1 + a232) in
                        M[a233] := 6D;
                        A := a214;
                        H := 20;
                        L := 9B;
                        SPH := a233[15:8];
                        SPL := a233[7:0];
                        FlagS := a226[7:0][7];
                        FlagZ := is_zero(a226[7:0]);
                        FlagA := a229[7:0][4];
                        FlagP := parity(a226[7:0]);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a234 = (-1 + a231) in
                        M[a234] := 17;
                        let:16 a235 = (-1 + a234) in
                        M[a235] := 6D;
                        A := a214;
                        H := 20;
                        L := 9B;
                        SPH := a235[15:8];
                        SPL := a235[7:0];
                        FlagS := a226[7:0][7];
                        FlagZ := is_zero(a226[7:0]);
                        FlagA := a229[7:0][4];
                        FlagP := parity(a226[7:0]);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      #1770
                      let:8 a236 = (30 & M[2098]) in
                      let:8 a237 = (30 | M[2098]) in
                      #1772
                      sound_control(FleetMovement1,a236[0]);
                      sound_control(FleetMovement2,a236[1]);
                      sound_control(FleetMovement3,a236[2]);
                      sound_control(FleetMovement4,a236[3]);
                      sound_control(UfoHit,a236[4]);
                      #1774
                      let:16 a238 = (1 + a231) in
                      let:16 a239 = (1 + a238) in
                      A := a236;
                      H := 20;
                      L := 9B;
                      SPH := a239[15:8];
                      SPL := a239[7:0];
                      FlagS := a236[7];
                      FlagZ := is_zero(a236);
                      FlagA := a237[3];
                      FlagP := parity(a236);
                      FlagCY := false;
                      jump ((M[a238],M[a231]));
                    }
                  } else {
                    A := a214;
                    H := 20;
                    L := 9B;
                    SPH := a221[15:8];
                    SPL := a221[7:0];
                    FlagS := a226[7:0][7];
                    FlagZ := is_zero(a226[7:0]);
                    FlagA := a229[7:0][4];
                    FlagP := parity(a226[7:0]);
                    FlagCY := false;
                    jump (1747);
                  }
                }
              }
            } else {
              #0050
              #0053
              let:8 a240 = (M[20EB] & M[20EB]) in
              let:8 a241 = (M[20EB] | M[20EB]) in
              #0054
              if (!is_zero(a240)) {
                #005D
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a242 = (-1 + (SPH,SPL)) in
                    M[a242] := 00;
                    let:16 a243 = (-1 + a242) in
                    M[a243] := 5D;
                    A := a240;
                    SPH := a243[15:8];
                    SPL := a243[7:0];
                    FlagS := a240[7];
                    FlagZ := is_zero(a240);
                    FlagA := a241[3];
                    FlagP := parity(a240);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a244 = (-1 + (SPH,SPL)) in
                    M[a244] := 00;
                    let:16 a245 = (-1 + a244) in
                    M[a245] := 5D;
                    A := a240;
                    SPH := a245[15:8];
                    SPL := a245[7:0];
                    FlagS := a240[7];
                    FlagZ := is_zero(a240);
                    FlagA := a241[3];
                    FlagP := parity(a240);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  #0060
                  let:8 a246 = (M[2093] & M[2093]) in
                  let:8 a247 = (M[2093] | M[2093]) in
                  #0061
                  if (!is_zero(a246)) {
                    #0082
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a248 = (-1 + (SPH,SPL)) in
                        M[a248] := 00;
                        let:16 a249 = (-1 + a248) in
                        M[a249] := 82;
                        A := a246;
                        SPH := a249[15:8];
                        SPL := a249[7:0];
                        FlagS := a246[7];
                        FlagZ := is_zero(a246);
                        FlagA := a247[3];
                        FlagP := parity(a246);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a250 = (-1 + (SPH,SPL)) in
                        M[a250] := 00;
                        let:16 a251 = (-1 + a250) in
                        M[a251] := 82;
                        A := a246;
                        SPH := a251[15:8];
                        SPL := a251[7:0];
                        FlagS := a246[7];
                        FlagZ := is_zero(a246);
                        FlagA := a247[3];
                        FlagP := parity(a246);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      let:16 a252 = (1 + (SPH,SPL)) in
                      let:16 a253 = (1 + a252) in
                      #0083
                      let:16 a254 = (1 + a253) in
                      let:16 a255 = (1 + a254) in
                      #0084
                      let:16 a256 = (1 + a255) in
                      let:16 a257 = (1 + a256) in
                      #0085
                      let:16 a258 = (1 + a257) in
                      let:16 a259 = (1 + a258) in
                      #0086
                      enable_interrupts()
                      #0087
                      let:16 a260 = (1 + a259) in
                      let:16 a261 = (1 + a260) in
                      A := M[a258];
                      B := M[a256];
                      C := M[a255];
                      D := M[a254];
                      E := M[a253];
                      H := M[a252];
                      L := M[(SPH,SPL)];
                      SPH := a261[15:8];
                      SPL := a261[7:0];
                      FlagS := M[a257][7];
                      FlagZ := M[a257][6];
                      FlagA := M[a257][4];
                      FlagP := M[a257][2];
                      FlagCY := M[a257][0];
                      jump ((M[a260],M[a259]));
                    }
                  } else {
                    #0064
                    #0765
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a262 = (-1 + (SPH,SPL)) in
                        M[a262] := 07;
                        let:16 a263 = (-1 + a262) in
                        M[a263] := 65;
                        A := a246;
                        SPH := a263[15:8];
                        SPL := a263[7:0];
                        FlagS := a246[7];
                        FlagZ := is_zero(a246);
                        FlagA := a247[3];
                        FlagP := parity(a246);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a264 = (-1 + (SPH,SPL)) in
                        M[a264] := 07;
                        let:16 a265 = (-1 + a264) in
                        M[a265] := 65;
                        A := a246;
                        SPH := a265[15:8];
                        SPL := a265[7:0];
                        FlagS := a246[7];
                        FlagZ := is_zero(a246);
                        FlagA := a247[3];
                        FlagP := parity(a246);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      #0767
                      M[2093] := 01;
                      #076A
                      #076D
                      enable_interrupts()
                      #076E
                      M[23FF] := 07;
                      M[23FE] := 71;
                      #return-to: 0771
                      #1979
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          M[23FD] := 19;
                          M[23FC] := 79;
                          A := 01;
                          SPH := 23;
                          SPL := FC;
                          FlagS := a246[7];
                          FlagZ := is_zero(a246);
                          FlagA := a247[3];
                          FlagP := parity(a246);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          M[23FD] := 19;
                          M[23FC] := 79;
                          A := 01;
                          SPH := 23;
                          SPL := FC;
                          FlagS := a246[7];
                          FlagZ := is_zero(a246);
                          FlagA := a247[3];
                          FlagP := parity(a246);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        M[23FD] := 19;
                        M[23FC] := 7C;
                        #return-to: 197C
                        #19D7
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            M[23FB] := 19;
                            M[23FA] := D7;
                            A := 01;
                            SPH := 23;
                            SPL := FA;
                            FlagS := a246[7];
                            FlagZ := is_zero(a246);
                            FlagA := a247[3];
                            FlagP := parity(a246);
                            FlagCY := false;
                            jump (0008);
                          } else {
                            M[23FB] := 19;
                            M[23FA] := D7;
                            A := 01;
                            SPH := 23;
                            SPL := FA;
                            FlagS := a246[7];
                            FlagZ := is_zero(a246);
                            FlagA := a247[3];
                            FlagP := parity(a246);
                            FlagCY := false;
                            jump (0010);
                          }
                        } else {
                          let:8 a266 = (01 ^ 01) in
                          #19D8
                          #19D3
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              M[23FB] := 19;
                              M[23FA] := D3;
                              A := a266;
                              SPH := 23;
                              SPL := FA;
                              FlagS := a266[7];
                              FlagZ := is_zero(a266);
                              FlagA := false;
                              FlagP := parity(a266);
                              FlagCY := false;
                              jump (0008);
                            } else {
                              M[23FB] := 19;
                              M[23FA] := D3;
                              A := a266;
                              SPH := 23;
                              SPL := FA;
                              FlagS := a266[7];
                              FlagZ := is_zero(a266);
                              FlagA := false;
                              FlagP := parity(a266);
                              FlagCY := false;
                              jump (0010);
                            }
                          } else {
                            M[20E9] := a266;
                            #19D6
                            A := a266;
                            SPH := 23;
                            SPL := FE;
                            FlagS := a266[7];
                            FlagZ := is_zero(a266);
                            FlagA := false;
                            FlagP := parity(a266);
                            FlagCY := false;
                            jump ((M[23FD],M[23FC]));
                          }
                        }
                      }
                    }
                  }
                }
              } else {
                #0057
                let:16 a267 = (-1 + (SPH,SPL)) in
                M[a267] := 00;
                let:16 a268 = (-1 + a267) in
                M[a268] := 5A;
                #return-to: 005A
                #0ABF
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a269 = (-1 + a268) in
                    M[a269] := 0A;
                    let:16 a270 = (-1 + a269) in
                    M[a270] := BF;
                    A := a240;
                    SPH := a270[15:8];
                    SPL := a270[7:0];
                    FlagS := a240[7];
                    FlagZ := is_zero(a240);
                    FlagA := a241[3];
                    FlagP := parity(a240);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a271 = (-1 + a268) in
                    M[a271] := 0A;
                    let:16 a272 = (-1 + a271) in
                    M[a272] := BF;
                    A := a240;
                    SPH := a272[15:8];
                    SPL := a272[7:0];
                    FlagS := a240[7];
                    FlagZ := is_zero(a240);
                    FlagA := a241[3];
                    FlagP := parity(a240);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  #0AC2
                  #0AC3
                  if (M[20C1][0]) {
                    #0ABB
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a273 = (-1 + a268) in
                        M[a273] := 0A;
                        let:16 a274 = (-1 + a273) in
                        M[a274] := BB;
                        A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                        SPH := a274[15:8];
                        SPL := a274[7:0];
                        FlagS := a240[7];
                        FlagZ := is_zero(a240);
                        FlagA := a241[3];
                        FlagP := parity(a240);
                        FlagCY := M[20C1][0];
                        jump (0008);
                      } else {
                        let:16 a275 = (-1 + a268) in
                        M[a275] := 0A;
                        let:16 a276 = (-1 + a275) in
                        M[a276] := BB;
                        A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                        SPH := a276[15:8];
                        SPL := a276[7:0];
                        FlagS := a240[7];
                        FlagZ := is_zero(a240);
                        FlagA := a241[3];
                        FlagP := parity(a240);
                        FlagCY := M[20C1][0];
                        jump (0010);
                      }
                    } else {
                      let:16 a277 = (1 + a268) in
                      let:16 a278 = (1 + a277) in
                      #0ABC
                      A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                      H := M[a277];
                      L := M[a268];
                      SPH := a278[15:8];
                      SPL := a278[7:0];
                      FlagS := a240[7];
                      FlagZ := is_zero(a240);
                      FlagA := a241[3];
                      FlagP := parity(a240);
                      FlagCY := M[20C1][0];
                      jump (0072);
                    }
                  } else {
                    #0AC6
                    #0AC7
                    if (updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) {
                      #1868
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a279 = (-1 + a268) in
                          M[a279] := 18;
                          let:16 a280 = (-1 + a279) in
                          M[a280] := 68;
                          A := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]);
                          SPH := a280[15:8];
                          SPL := a280[7:0];
                          FlagS := a240[7];
                          FlagZ := is_zero(a240);
                          FlagA := a241[3];
                          FlagP := parity(a240);
                          FlagCY := updateBit((M[20C1] >> 01),7,M[20C1][0])[0];
                          jump (0008);
                        } else {
                          let:16 a281 = (-1 + a268) in
                          M[a281] := 18;
                          let:16 a282 = (-1 + a281) in
                          M[a282] := 68;
                          A := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]);
                          SPH := a282[15:8];
                          SPL := a282[7:0];
                          FlagS := a240[7];
                          FlagZ := is_zero(a240);
                          FlagA := a241[3];
                          FlagP := parity(a240);
                          FlagCY := updateBit((M[20C1] >> 01),7,M[20C1][0])[0];
                          jump (0010);
                        }
                      } else {
                        #186B
                        let:16 a283 = addWithCarry(true,M[20C2],00) in
                        let:8 a284 = (M[20C2] & 0F) in
                        let:8 a285 = (00 & 0F) in
                        let:16 a286 = addWithCarry(true,a284,a285) in
                        M[20C2] := a283[7:0];
                        #186C
                        #186D
                        #186E
                        let:16 a287 = (-1 + a268) in
                        M[a287] := 18;
                        let:16 a288 = (-1 + a287) in
                        M[a288] := 71;
                        #return-to: 1871
                        #01D9
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a289 = (-1 + a288) in
                            M[a289] := 01;
                            let:16 a290 = (-1 + a289) in
                            M[a290] := D9;
                            A := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]);
                            C := M[20C3];
                            H := 20;
                            L := C3;
                            SPH := a290[15:8];
                            SPL := a290[7:0];
                            FlagS := a283[7:0][7];
                            FlagZ := is_zero(a283[7:0]);
                            FlagA := a286[7:0][4];
                            FlagP := parity(a283[7:0]);
                            FlagCY := updateBit((M[20C1] >> 01),7,M[20C1][0])[0];
                            jump (0008);
                          } else {
                            let:16 a291 = (-1 + a288) in
                            M[a291] := 01;
                            let:16 a292 = (-1 + a291) in
                            M[a292] := D9;
                            A := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]);
                            C := M[20C3];
                            H := 20;
                            L := C3;
                            SPH := a292[15:8];
                            SPL := a292[7:0];
                            FlagS := a283[7:0][7];
                            FlagZ := is_zero(a283[7:0]);
                            FlagA := a286[7:0][4];
                            FlagP := parity(a283[7:0]);
                            FlagCY := updateBit((M[20C1] >> 01),7,M[20C1][0])[0];
                            jump (0010);
                          }
                        } else {
                          #01DA
                          #01DB
                          #01DC
                          #01DD
                          let:16 a293 = addWithCarry(false,M[20C5],M[20C3]) in
                          let:8 a294 = (M[20C5] & 0F) in
                          let:8 a295 = (M[20C3] & 0F) in
                          let:16 a296 = addWithCarry(false,a294,a295) in
                          #01DE
                          M[20C5] := a293[7:0];
                          #01DF
                          #01E0
                          #01E1
                          let:16 a297 = addWithCarry(false,M[20C6],M[20C4]) in
                          let:8 a298 = (M[20C6] & 0F) in
                          let:8 a299 = (M[20C4] & 0F) in
                          let:16 a300 = addWithCarry(false,a298,a299) in
                          #01E2
                          M[20C6] := a297[7:0];
                          #01E3
                          let:16 a301 = (1 + a288) in
                          let:16 a302 = (1 + a301) in
                          A := a297[7:0];
                          B := M[20C4];
                          C := M[20C3];
                          H := 20;
                          L := C6;
                          SPH := a302[15:8];
                          SPL := a302[7:0];
                          FlagS := a297[7:0][7];
                          FlagZ := is_zero(a297[7:0]);
                          FlagA := a300[7:0][4];
                          FlagP := parity(a297[7:0]);
                          FlagCY := a297[15:8][0];
                          jump ((M[a301],M[a288]));
                        }
                      }
                    } else {
                      #0ACA
                      #0ACB
                      if (updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]) {
                        #0AAB
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a303 = (-1 + a268) in
                            M[a303] := 0A;
                            let:16 a304 = (-1 + a303) in
                            M[a304] := AB;
                            A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                            SPH := a304[15:8];
                            SPL := a304[7:0];
                            FlagS := a240[7];
                            FlagZ := is_zero(a240);
                            FlagA := a241[3];
                            FlagP := parity(a240);
                            FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                            jump (0008);
                          } else {
                            let:16 a305 = (-1 + a268) in
                            M[a305] := 0A;
                            let:16 a306 = (-1 + a305) in
                            M[a306] := AB;
                            A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                            SPH := a306[15:8];
                            SPL := a306[7:0];
                            FlagS := a240[7];
                            FlagZ := is_zero(a240);
                            FlagA := a241[3];
                            FlagP := parity(a240);
                            FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                            jump (0010);
                          }
                        } else {
                          #0AAE
                          #024B
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a307 = (-1 + a268) in
                              M[a307] := 02;
                              let:16 a308 = (-1 + a307) in
                              M[a308] := 4B;
                              A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                              H := 20;
                              L := 50;
                              SPH := a308[15:8];
                              SPL := a308[7:0];
                              FlagS := a240[7];
                              FlagZ := is_zero(a240);
                              FlagA := a241[3];
                              FlagP := parity(a240);
                              FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                              jump (0008);
                            } else {
                              let:16 a309 = (-1 + a268) in
                              M[a309] := 02;
                              let:16 a310 = (-1 + a309) in
                              M[a310] := 4B;
                              A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                              H := 20;
                              L := 50;
                              SPH := a310[15:8];
                              SPL := a310[7:0];
                              FlagS := a240[7];
                              FlagZ := is_zero(a240);
                              FlagA := a241[3];
                              FlagP := parity(a240);
                              FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                              jump (0010);
                            }
                          } else {
                            #024C
                            let:16 a311 = addWithCarry(!false,M[2050],~FF) in
                            let:8 a312 = (M[2050] & 0F) in
                            let:8 a313 = (~FF & 0F) in
                            let:16 a314 = addWithCarry(!false,a312,a313) in
                            #024E
                            if (is_zero(a311[7:0])) {
                              let:16 a315 = (1 + a268) in
                              let:16 a316 = (1 + a315) in
                              A := M[2050];
                              H := 20;
                              L := 50;
                              SPH := a316[15:8];
                              SPL := a316[7:0];
                              FlagS := a311[7:0][7];
                              FlagZ := is_zero(a311[7:0]);
                              FlagA := a314[7:0][4];
                              FlagP := parity(a311[7:0]);
                              FlagCY := !a311[15:8][0];
                              jump ((M[a315],M[a268]));
                            } else {
                              #024F
                              let:16 a317 = addWithCarry(!false,M[2050],~FE) in
                              let:8 a318 = (M[2050] & 0F) in
                              let:8 a319 = (~FE & 0F) in
                              let:16 a320 = addWithCarry(!false,a318,a319) in
                              #0251
                              if (is_zero(a317[7:0])) {
                                #0281
                                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                  disable_interrupts()
                                  if (g_half_frame) {
                                    let:16 a321 = (-1 + a268) in
                                    M[a321] := 02;
                                    let:16 a322 = (-1 + a321) in
                                    M[a322] := 81;
                                    A := M[2050];
                                    H := 20;
                                    L := 50;
                                    SPH := a322[15:8];
                                    SPL := a322[7:0];
                                    FlagS := a317[7:0][7];
                                    FlagZ := is_zero(a317[7:0]);
                                    FlagA := a320[7:0][4];
                                    FlagP := parity(a317[7:0]);
                                    FlagCY := !a317[15:8][0];
                                    jump (0008);
                                  } else {
                                    let:16 a323 = (-1 + a268) in
                                    M[a323] := 02;
                                    let:16 a324 = (-1 + a323) in
                                    M[a324] := 81;
                                    A := M[2050];
                                    H := 20;
                                    L := 50;
                                    SPH := a324[15:8];
                                    SPL := a324[7:0];
                                    FlagS := a317[7:0][7];
                                    FlagZ := is_zero(a317[7:0]);
                                    FlagA := a320[7:0][4];
                                    FlagP := parity(a317[7:0]);
                                    FlagCY := !a317[15:8][0];
                                    jump (0010);
                                  }
                                } else {
                                  #0284
                                  let:17 a325 = add17(0010,2050) in
                                  #0285
                                  A := M[2050];
                                  D := 00;
                                  E := 10;
                                  H := a325[15:0][15:8];
                                  L := a325[15:0][7:0];
                                  SPH := a268[15:8];
                                  SPL := a268[7:0];
                                  FlagS := a317[7:0][7];
                                  FlagZ := is_zero(a317[7:0]);
                                  FlagA := a320[7:0][4];
                                  FlagP := parity(a317[7:0]);
                                  FlagCY := a325[16];
                                  jump (024B);
                                }
                              } else {
                                #0254
                                #0255
                                #0256
                                #0257
                                let:8 a326 = (M[2051] | M[2050]) in
                                #0258
                                #0259
                                if (!is_zero(a326)) {
                                  #0277
                                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                    disable_interrupts()
                                    if (g_half_frame) {
                                      let:16 a327 = (-1 + a268) in
                                      M[a327] := 02;
                                      let:16 a328 = (-1 + a327) in
                                      M[a328] := 77;
                                      A := M[2050];
                                      B := M[2051];
                                      C := M[2050];
                                      H := 20;
                                      L := 51;
                                      SPH := a328[15:8];
                                      SPL := a328[7:0];
                                      FlagS := a326[7];
                                      FlagZ := is_zero(a326);
                                      FlagA := false;
                                      FlagP := parity(a326);
                                      FlagCY := false;
                                      jump (0008);
                                    } else {
                                      let:16 a329 = (-1 + a268) in
                                      M[a329] := 02;
                                      let:16 a330 = (-1 + a329) in
                                      M[a330] := 77;
                                      A := M[2050];
                                      B := M[2051];
                                      C := M[2050];
                                      H := 20;
                                      L := 51;
                                      SPH := a330[15:8];
                                      SPL := a330[7:0];
                                      FlagS := a326[7];
                                      FlagZ := is_zero(a326);
                                      FlagA := false;
                                      FlagP := parity(a326);
                                      FlagCY := false;
                                      jump (0010);
                                    }
                                  } else {
                                    let:16 a331 = addWithCarry(!true,M[2051],~00) in
                                    let:8 a332 = (M[2051] & 0F) in
                                    let:8 a333 = (~00 & 0F) in
                                    let:16 a334 = addWithCarry(!true,a332,a333) in
                                    #0278
                                    let:16 a335 = addWithCarry(true,a331[7:0],00) in
                                    let:8 a336 = (a331[7:0] & 0F) in
                                    let:8 a337 = (00 & 0F) in
                                    let:16 a338 = addWithCarry(true,a336,a337) in
                                    #0279
                                    if (!is_zero(a335[7:0])) {
                                      #027D
                                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                        disable_interrupts()
                                        if (g_half_frame) {
                                          let:16 a339 = (-1 + a268) in
                                          M[a339] := 02;
                                          let:16 a340 = (-1 + a339) in
                                          M[a340] := 7D;
                                          A := M[2050];
                                          B := a335[7:0];
                                          C := M[2050];
                                          H := 20;
                                          L := 51;
                                          SPH := a340[15:8];
                                          SPL := a340[7:0];
                                          FlagS := a335[7:0][7];
                                          FlagZ := is_zero(a335[7:0]);
                                          FlagA := a338[7:0][4];
                                          FlagP := parity(a335[7:0]);
                                          FlagCY := false;
                                          jump (0008);
                                        } else {
                                          let:16 a341 = (-1 + a268) in
                                          M[a341] := 02;
                                          let:16 a342 = (-1 + a341) in
                                          M[a342] := 7D;
                                          A := M[2050];
                                          B := a335[7:0];
                                          C := M[2050];
                                          H := 20;
                                          L := 51;
                                          SPH := a342[15:8];
                                          SPL := a342[7:0];
                                          FlagS := a335[7:0][7];
                                          FlagZ := is_zero(a335[7:0]);
                                          FlagA := a338[7:0][4];
                                          FlagP := parity(a335[7:0]);
                                          FlagCY := false;
                                          jump (0010);
                                        }
                                      } else {
                                        let:16 a343 = addWithCarry(!true,a335[7:0],~00) in
                                        let:8 a344 = (a335[7:0] & 0F) in
                                        let:8 a345 = (~00 & 0F) in
                                        let:16 a346 = addWithCarry(!true,a344,a345) in
                                        #027E
                                        M[2051] := a343[7:0];
                                        #027F
                                        #0280
                                        M[2050] := M[2050];
                                        #0281
                                        #0284
                                        let:17 a347 = add17(0010,2050) in
                                        #0285
                                        A := M[2050];
                                        B := a343[7:0];
                                        C := M[2050];
                                        D := 00;
                                        E := 10;
                                        H := a347[15:0][15:8];
                                        L := a347[15:0][7:0];
                                        SPH := a268[15:8];
                                        SPL := a268[7:0];
                                        FlagS := a343[7:0][7];
                                        FlagZ := is_zero(a343[7:0]);
                                        FlagA := a346[7:0][4];
                                        FlagP := parity(a343[7:0]);
                                        FlagCY := a347[16];
                                        jump (024B);
                                      }
                                    } else {
                                      #027C
                                      let:16 a348 = addWithCarry(!true,M[2050],~00) in
                                      let:8 a349 = (M[2050] & 0F) in
                                      let:8 a350 = (~00 & 0F) in
                                      let:16 a351 = addWithCarry(!true,a349,a350) in
                                      #027D
                                      let:16 a352 = addWithCarry(!true,a335[7:0],~00) in
                                      let:8 a353 = (a335[7:0] & 0F) in
                                      let:8 a354 = (~00 & 0F) in
                                      let:16 a355 = addWithCarry(!true,a353,a354) in
                                      #027E
                                      M[2051] := a352[7:0];
                                      #027F
                                      #0280
                                      M[2050] := a348[7:0];
                                      #0281
                                      #0284
                                      let:17 a356 = add17(0010,2050) in
                                      #0285
                                      A := a348[7:0];
                                      B := a352[7:0];
                                      C := M[2050];
                                      D := 00;
                                      E := 10;
                                      H := a356[15:0][15:8];
                                      L := a356[15:0][7:0];
                                      SPH := a268[15:8];
                                      SPL := a268[7:0];
                                      FlagS := a352[7:0][7];
                                      FlagZ := is_zero(a352[7:0]);
                                      FlagA := a355[7:0][4];
                                      FlagP := parity(a352[7:0]);
                                      FlagCY := a356[16];
                                      jump (024B);
                                    }
                                  }
                                } else {
                                  #025C
                                  #025D
                                  #025E
                                  let:8 a357 = (M[2052] & M[2052]) in
                                  let:8 a358 = (M[2052] | M[2052]) in
                                  #025F
                                  if (!is_zero(a357)) {
                                    #0288
                                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                      disable_interrupts()
                                      if (g_half_frame) {
                                        let:16 a359 = (-1 + a268) in
                                        M[a359] := 02;
                                        let:16 a360 = (-1 + a359) in
                                        M[a360] := 88;
                                        A := a357;
                                        B := M[2051];
                                        C := M[2050];
                                        H := 20;
                                        L := 52;
                                        SPH := a360[15:8];
                                        SPL := a360[7:0];
                                        FlagS := a357[7];
                                        FlagZ := is_zero(a357);
                                        FlagA := a358[3];
                                        FlagP := parity(a357);
                                        FlagCY := false;
                                        jump (0008);
                                      } else {
                                        let:16 a361 = (-1 + a268) in
                                        M[a361] := 02;
                                        let:16 a362 = (-1 + a361) in
                                        M[a362] := 88;
                                        A := a357;
                                        B := M[2051];
                                        C := M[2050];
                                        H := 20;
                                        L := 52;
                                        SPH := a362[15:8];
                                        SPL := a362[7:0];
                                        FlagS := a357[7];
                                        FlagZ := is_zero(a357);
                                        FlagA := a358[3];
                                        FlagP := parity(a357);
                                        FlagCY := false;
                                        jump (0010);
                                      }
                                    } else {
                                      let:16 a363 = addWithCarry(!true,M[2052],~00) in
                                      let:8 a364 = (M[2052] & 0F) in
                                      let:8 a365 = (~00 & 0F) in
                                      let:16 a366 = addWithCarry(!true,a364,a365) in
                                      M[2052] := a363[7:0];
                                      #0289
                                      #028A
                                      #028B
                                      #0281
                                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                        disable_interrupts()
                                        if (g_half_frame) {
                                          let:16 a367 = (-1 + a268) in
                                          M[a367] := 02;
                                          let:16 a368 = (-1 + a367) in
                                          M[a368] := 81;
                                          A := a357;
                                          B := M[2051];
                                          C := M[2050];
                                          H := 20;
                                          L := 50;
                                          SPH := a368[15:8];
                                          SPL := a368[7:0];
                                          FlagS := a363[7:0][7];
                                          FlagZ := is_zero(a363[7:0]);
                                          FlagA := a366[7:0][4];
                                          FlagP := parity(a363[7:0]);
                                          FlagCY := false;
                                          jump (0008);
                                        } else {
                                          let:16 a369 = (-1 + a268) in
                                          M[a369] := 02;
                                          let:16 a370 = (-1 + a369) in
                                          M[a370] := 81;
                                          A := a357;
                                          B := M[2051];
                                          C := M[2050];
                                          H := 20;
                                          L := 50;
                                          SPH := a370[15:8];
                                          SPL := a370[7:0];
                                          FlagS := a363[7:0][7];
                                          FlagZ := is_zero(a363[7:0]);
                                          FlagA := a366[7:0][4];
                                          FlagP := parity(a363[7:0]);
                                          FlagCY := false;
                                          jump (0010);
                                        }
                                      } else {
                                        #0284
                                        let:17 a371 = add17(0010,2050) in
                                        #0285
                                        A := a357;
                                        B := M[2051];
                                        C := M[2050];
                                        D := 00;
                                        E := 10;
                                        H := a371[15:0][15:8];
                                        L := a371[15:0][7:0];
                                        SPH := a268[15:8];
                                        SPL := a268[7:0];
                                        FlagS := a363[7:0][7];
                                        FlagZ := is_zero(a363[7:0]);
                                        FlagA := a366[7:0][4];
                                        FlagP := parity(a363[7:0]);
                                        FlagCY := a371[16];
                                        jump (024B);
                                      }
                                    }
                                  } else {
                                    #0262
                                    #0263
                                    #0264
                                    #0265
                                    #0266
                                    let:16 a372 = (-1 + a268) in
                                    M[a372] := 20;
                                    let:16 a373 = (-1 + a372) in
                                    M[a373] := 54;
                                    #0267
                                    #0268
                                    let:16 a374 = (-1 + a373) in
                                    M[a374] := M[2054];
                                    let:16 a375 = (-1 + a374) in
                                    M[a375] := M[2053];
                                    #0269
                                    #026C
                                    let:16 a376 = (1 + a375) in
                                    M[a375] := 6F;
                                    M[a376] := 02;
                                    #026D
                                    let:16 a377 = (-1 + a375) in
                                    M[a377] := 20;
                                    let:16 a378 = (-1 + a377) in
                                    M[a378] := 54;
                                    #026E
                                    A := a357;
                                    B := M[2051];
                                    C := M[2050];
                                    D := 20;
                                    E := 54;
                                    H := M[a376];
                                    L := M[a375];
                                    SPH := a378[15:8];
                                    SPL := a378[7:0];
                                    FlagS := a357[7];
                                    FlagZ := is_zero(a357);
                                    FlagA := a358[3];
                                    FlagP := parity(a357);
                                    FlagCY := false;
                                    jump ((M[a376],M[a375]));
                                  }
                                }
                              }
                            }
                          }
                        }
                      } else {
                        #0ACE
                        let:16 a379 = (1 + a268) in
                        let:16 a380 = (1 + a379) in
                        A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                        SPH := a380[15:8];
                        SPL := a380[7:0];
                        FlagS := a240[7];
                        FlagZ := is_zero(a240);
                        FlagA := a241[3];
                        FlagP := parity(a240);
                        FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                        jump ((M[a379],M[a268]));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        #002D
        #0030
        let:16 a381 = addWithCarry(!false,M[20EB],~99) in
        let:8 a382 = (M[20EB] & 0F) in
        let:8 a383 = (~99 & 0F) in
        let:16 a384 = addWithCarry(!false,a382,a383) in
        #0032
        if (is_zero(a381[7:0])) {
          A := M[20EB];
          FlagS := a381[7:0][7];
          FlagZ := is_zero(a381[7:0]);
          FlagA := a384[7:0][4];
          FlagP := parity(a381[7:0]);
          FlagCY := !a381[15:8][0];
          jump (003E);
        } else {
          #0035
          let:16 a385 = addWithCarry(false,01,M[20EB]) in
          let:8 a386 = (01 & 0F) in
          let:8 a387 = (M[20EB] & 0F) in
          let:16 a388 = addWithCarry(false,a386,a387) in
          #0037
          let:8 a389 = (a385[7:0] & 0F) in
          let:16 a390 = addWithCarry(false,a389,06) in
          let:16 a391 = addWithCarry(((((a389[1] || a389[2]) && a389[3]) || a388[7:0][4]) ? a390[7:0] : a389)[4],(a385[7:0] >> 04),00) in
          let:16 a392 = addWithCarry(false,a391[7:0],06) in
          let:8 a393 = (((((a389[1] || a389[2]) && a389[3]) || a388[7:0][4]) ? a390[7:0] : a389) & 0F) in
          let:8 a394 = ((((((a391[7:0][1] || a391[7:0][2]) && a391[7:0][3]) || a385[15:8][0]) ? a392[7:0] : a391[7:0]) << 04) | a393) in
          #0038
          M[20EB] := a394;
          #003B
          let:16 a395 = (-1 + (SPH,SPL)) in
          M[a395] := 00;
          let:16 a396 = (-1 + a395) in
          M[a396] := 3E;
          #return-to: 003E
          #1947
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a397 = (-1 + a396) in
              M[a397] := 19;
              let:16 a398 = (-1 + a397) in
              M[a398] := 47;
              A := a394;
              SPH := a398[15:8];
              SPL := a398[7:0];
              FlagS := a394[7];
              FlagZ := is_zero(a394);
              FlagA := ((((a389[1] || a389[2]) && a389[3]) || a388[7:0][4]) ? a390[7:0] : a389)[4];
              FlagP := parity(a394);
              FlagCY := (((((a391[7:0][1] || a391[7:0][2]) && a391[7:0][3]) || a385[15:8][0]) ? a392[7:0] : a391[7:0])[4] || a385[15:8][0]);
              jump (0008);
            } else {
              let:16 a399 = (-1 + a396) in
              M[a399] := 19;
              let:16 a400 = (-1 + a399) in
              M[a400] := 47;
              A := a394;
              SPH := a400[15:8];
              SPL := a400[7:0];
              FlagS := a394[7];
              FlagZ := is_zero(a394);
              FlagA := ((((a389[1] || a389[2]) && a389[3]) || a388[7:0][4]) ? a390[7:0] : a389)[4];
              FlagP := parity(a394);
              FlagCY := (((((a391[7:0][1] || a391[7:0][2]) && a391[7:0][3]) || a385[15:8][0]) ? a392[7:0] : a391[7:0])[4] || a385[15:8][0]);
              jump (0010);
            }
          } else {
            #194A
            #194D
            #09B2
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a401 = (-1 + a396) in
                M[a401] := 09;
                let:16 a402 = (-1 + a401) in
                M[a402] := B2;
                A := M[20EB];
                H := 3C;
                L := 01;
                SPH := a402[15:8];
                SPL := a402[7:0];
                FlagS := a394[7];
                FlagZ := is_zero(a394);
                FlagA := ((((a389[1] || a389[2]) && a389[3]) || a388[7:0][4]) ? a390[7:0] : a389)[4];
                FlagP := parity(a394);
                FlagCY := (((((a391[7:0][1] || a391[7:0][2]) && a391[7:0][3]) || a385[15:8][0]) ? a392[7:0] : a391[7:0])[4] || a385[15:8][0]);
                jump (0008);
              } else {
                let:16 a403 = (-1 + a396) in
                M[a403] := 09;
                let:16 a404 = (-1 + a403) in
                M[a404] := B2;
                A := M[20EB];
                H := 3C;
                L := 01;
                SPH := a404[15:8];
                SPL := a404[7:0];
                FlagS := a394[7];
                FlagZ := is_zero(a394);
                FlagA := ((((a389[1] || a389[2]) && a389[3]) || a388[7:0][4]) ? a390[7:0] : a389)[4];
                FlagP := parity(a394);
                FlagCY := (((((a391[7:0][1] || a391[7:0][2]) && a391[7:0][3]) || a385[15:8][0]) ? a392[7:0] : a391[7:0])[4] || a385[15:8][0]);
                jump (0010);
              }
            } else {
              let:16 a405 = (-1 + a396) in
              M[a405] := D;
              let:16 a406 = (-1 + a405) in
              M[a406] := E;
              #09B3
              let:16 a407 = (-1 + a406) in
              M[a407] := M[20EB];
              let:16 a408 = (-1 + a407) in
              M[a408] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a394[7]),6,is_zero(a394)),4,((((a389[1] || a389[2]) && a389[3]) || a388[7:0][4]) ? a390[7:0] : a389)[4]),2,parity(a394)),0,(((((a391[7:0][1] || a391[7:0][2]) && a391[7:0][3]) || a385[15:8][0]) ? a392[7:0] : a391[7:0])[4] || a385[15:8][0]));
              #09B4
              #09B5
              #09B6
              #09B7
              #09B8
              let:8 a409 = (0F & updateBit((updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0])[0])) in
              let:8 a410 = (0F | updateBit((updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0])[0])) in
              #09BA
              let:16 a411 = (-1 + a408) in
              M[a411] := 09;
              let:16 a412 = (-1 + a411) in
              M[a412] := BD;
              #return-to: 09BD
              #09C5
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a413 = (-1 + a412) in
                  M[a413] := 09;
                  let:16 a414 = (-1 + a413) in
                  M[a414] := C5;
                  A := a409;
                  H := 3C;
                  L := 01;
                  SPH := a414[15:8];
                  SPL := a414[7:0];
                  FlagS := a409[7];
                  FlagZ := is_zero(a409);
                  FlagA := a410[3];
                  FlagP := parity(a409);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a415 = (-1 + a412) in
                  M[a415] := 09;
                  let:16 a416 = (-1 + a415) in
                  M[a416] := C5;
                  A := a409;
                  H := 3C;
                  L := 01;
                  SPH := a416[15:8];
                  SPL := a416[7:0];
                  FlagS := a409[7];
                  FlagZ := is_zero(a409);
                  FlagA := a410[3];
                  FlagP := parity(a409);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                let:16 a417 = addWithCarry(false,1A,a409) in
                let:8 a418 = (1A & 0F) in
                let:8 a419 = (a409 & 0F) in
                let:16 a420 = addWithCarry(false,a418,a419) in
                #09C7
                #08FF
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a421 = (-1 + a412) in
                    M[a421] := 08;
                    let:16 a422 = (-1 + a421) in
                    M[a422] := FF;
                    A := a417[7:0];
                    H := 3C;
                    L := 01;
                    SPH := a422[15:8];
                    SPL := a422[7:0];
                    FlagS := a417[7:0][7];
                    FlagZ := is_zero(a417[7:0]);
                    FlagA := a420[7:0][4];
                    FlagP := parity(a417[7:0]);
                    FlagCY := a417[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a423 = (-1 + a412) in
                    M[a423] := 08;
                    let:16 a424 = (-1 + a423) in
                    M[a424] := FF;
                    A := a417[7:0];
                    H := 3C;
                    L := 01;
                    SPH := a424[15:8];
                    SPL := a424[7:0];
                    FlagS := a417[7:0][7];
                    FlagZ := is_zero(a417[7:0]);
                    FlagA := a420[7:0][4];
                    FlagP := parity(a417[7:0]);
                    FlagCY := a417[15:8][0];
                    jump (0010);
                  }
                } else {
                  #0902
                  let:16 a425 = (-1 + a412) in
                  M[a425] := 3C;
                  let:16 a426 = (-1 + a425) in
                  M[a426] := 01;
                  #0903
                  #0905
                  #0906
                  let:17 a427 = add17((00,a417[7:0]),(00,a417[7:0])) in
                  #0907
                  let:17 a428 = add17(a427[15:0],a427[15:0]) in
                  #0908
                  let:17 a429 = add17(a428[15:0],a428[15:0]) in
                  #0909
                  let:17 a430 = add17(1E00,a429[15:0]) in
                  #090A
                  #090B
                  let:16 a431 = (1 + a426) in
                  let:16 a432 = (1 + a431) in
                  #090C
                  #090E
                  #0910
                  #1439
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a433 = (-1 + a432) in
                      M[a433] := 14;
                      let:16 a434 = (-1 + a433) in
                      M[a434] := 39;
                      A := a417[7:0];
                      B := 08;
                      D := a430[15:0][15:8];
                      E := a430[15:0][7:0];
                      H := M[a431];
                      L := M[a426];
                      SPH := a434[15:8];
                      SPL := a434[7:0];
                      FlagS := a417[7:0][7];
                      FlagZ := is_zero(a417[7:0]);
                      FlagA := a420[7:0][4];
                      FlagP := parity(a417[7:0]);
                      FlagCY := a430[16];
                      jump (0008);
                    } else {
                      let:16 a435 = (-1 + a432) in
                      M[a435] := 14;
                      let:16 a436 = (-1 + a435) in
                      M[a436] := 39;
                      A := a417[7:0];
                      B := 08;
                      D := a430[15:0][15:8];
                      E := a430[15:0][7:0];
                      H := M[a431];
                      L := M[a426];
                      SPH := a436[15:8];
                      SPL := a436[7:0];
                      FlagS := a417[7:0][7];
                      FlagZ := is_zero(a417[7:0]);
                      FlagA := a420[7:0][4];
                      FlagP := parity(a417[7:0]);
                      FlagCY := a430[16];
                      jump (0010);
                    }
                  } else {
                    let:16 a437 = (-1 + a432) in
                    M[a437] := 08;
                    let:16 a438 = (-1 + a437) in
                    M[a438] := C;
                    #143A
                    #143B
                    M[(M[a431],M[a426])] := M[a430[15:0]];
                    #143C
                    let:16 a439 = (1 + a430[15:0]) in
                    #143D
                    #1440
                    let:17 a440 = add17(0020,(M[a431],M[a426])) in
                    #1441
                    let:16 a441 = (1 + a438) in
                    let:16 a442 = (1 + a441) in
                    #1442
                    let:16 a443 = addWithCarry(!true,M[a441],~00) in
                    let:8 a444 = (M[a441] & 0F) in
                    let:8 a445 = (~00 & 0F) in
                    let:16 a446 = addWithCarry(!true,a444,a445) in
                    #1443
                    if (!is_zero(a443[7:0])) {
                      A := M[a430[15:0]];
                      B := a443[7:0];
                      C := M[a438];
                      D := a439[15:8];
                      E := a439[7:0];
                      H := a440[15:0][15:8];
                      L := a440[15:0][7:0];
                      SPH := a442[15:8];
                      SPL := a442[7:0];
                      FlagS := a443[7:0][7];
                      FlagZ := is_zero(a443[7:0]);
                      FlagA := a446[7:0][4];
                      FlagP := parity(a443[7:0]);
                      FlagCY := a440[16];
                      jump (1439);
                    } else {
                      #1446
                      let:16 a447 = (1 + a442) in
                      let:16 a448 = (1 + a447) in
                      A := M[a430[15:0]];
                      B := a443[7:0];
                      C := M[a438];
                      D := a439[15:8];
                      E := a439[7:0];
                      H := a440[15:0][15:8];
                      L := a440[15:0][7:0];
                      SPH := a448[15:8];
                      SPL := a448[7:0];
                      FlagS := a443[7:0][7];
                      FlagZ := is_zero(a443[7:0]);
                      FlagA := a446[7:0][4];
                      FlagP := parity(a443[7:0]);
                      FlagCY := a440[16];
                      jump ((M[a447],M[a442]));
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

003E:

    let:8 a1 = (A ^ A) in
    #003F
    M[20EA] := a1;
    #0042
    #0045
    let:8 a2 = (M[20E9] & M[20E9]) in
    let:8 a3 = (M[20E9] | M[20E9]) in
    #0046
    if (is_zero(a2)) {
      #0082
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a4 = (-1 + (SPH,SPL)) in
          M[a4] := 00;
          let:16 a5 = (-1 + a4) in
          M[a5] := 82;
          A := a2;
          SPH := a5[15:8];
          SPL := a5[7:0];
          FlagS := a2[7];
          FlagZ := is_zero(a2);
          FlagA := a3[3];
          FlagP := parity(a2);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a6 = (-1 + (SPH,SPL)) in
          M[a6] := 00;
          let:16 a7 = (-1 + a6) in
          M[a7] := 82;
          A := a2;
          SPH := a7[15:8];
          SPL := a7[7:0];
          FlagS := a2[7];
          FlagZ := is_zero(a2);
          FlagA := a3[3];
          FlagP := parity(a2);
          FlagCY := false;
          jump (0010);
        }
      } else {
        let:16 a8 = (1 + (SPH,SPL)) in
        let:16 a9 = (1 + a8) in
        #0083
        let:16 a10 = (1 + a9) in
        let:16 a11 = (1 + a10) in
        #0084
        let:16 a12 = (1 + a11) in
        let:16 a13 = (1 + a12) in
        #0085
        let:16 a14 = (1 + a13) in
        let:16 a15 = (1 + a14) in
        #0086
        enable_interrupts()
        #0087
        let:16 a16 = (1 + a15) in
        let:16 a17 = (1 + a16) in
        A := M[a14];
        B := M[a12];
        C := M[a11];
        D := M[a10];
        E := M[a9];
        H := M[a8];
        L := M[(SPH,SPL)];
        SPH := a17[15:8];
        SPL := a17[7:0];
        FlagS := M[a13][7];
        FlagZ := M[a13][6];
        FlagA := M[a13][4];
        FlagP := M[a13][2];
        FlagCY := M[a13][0];
        jump ((M[a16],M[a15]));
      }
    } else {
      #0049
      #004C
      let:8 a18 = (M[20EF] & M[20EF]) in
      let:8 a19 = (M[20EF] | M[20EF]) in
      #004D
      if (!is_zero(a18)) {
        #006F
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a20 = (-1 + (SPH,SPL)) in
            M[a20] := 00;
            let:16 a21 = (-1 + a20) in
            M[a21] := 6F;
            A := a18;
            SPH := a21[15:8];
            SPL := a21[7:0];
            FlagS := a18[7];
            FlagZ := is_zero(a18);
            FlagA := a19[3];
            FlagP := parity(a18);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a22 = (-1 + (SPH,SPL)) in
            M[a22] := 00;
            let:16 a23 = (-1 + a22) in
            M[a23] := 6F;
            A := a18;
            SPH := a23[15:8];
            SPL := a23[7:0];
            FlagS := a18[7];
            FlagZ := is_zero(a18);
            FlagA := a19[3];
            FlagP := parity(a18);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a24 = (-1 + (SPH,SPL)) in
          M[a24] := 00;
          let:16 a25 = (-1 + a24) in
          M[a25] := 72;
          #return-to: 0072
          #1740
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a26 = (-1 + a25) in
              M[a26] := 17;
              let:16 a27 = (-1 + a26) in
              M[a27] := 40;
              A := a18;
              SPH := a27[15:8];
              SPL := a27[7:0];
              FlagS := a18[7];
              FlagZ := is_zero(a18);
              FlagA := a19[3];
              FlagP := parity(a18);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a28 = (-1 + a25) in
              M[a28] := 17;
              let:16 a29 = (-1 + a28) in
              M[a29] := 40;
              A := a18;
              SPH := a29[15:8];
              SPL := a29[7:0];
              FlagS := a18[7];
              FlagZ := is_zero(a18);
              FlagA := a19[3];
              FlagP := parity(a18);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #1743
            let:16 a30 = addWithCarry(!true,M[209B],~00) in
            let:8 a31 = (M[209B] & 0F) in
            let:8 a32 = (~00 & 0F) in
            let:16 a33 = addWithCarry(!true,a31,a32) in
            M[209B] := a30[7:0];
            #1744
            if (is_zero(a30[7:0])) {
              let:16 a34 = (-1 + a25) in
              M[a34] := 17;
              let:16 a35 = (-1 + a34) in
              M[a35] := 47;
              #return-to: 1747
              #176D
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a36 = (-1 + a35) in
                  M[a36] := 17;
                  let:16 a37 = (-1 + a36) in
                  M[a37] := 6D;
                  A := a18;
                  H := 20;
                  L := 9B;
                  SPH := a37[15:8];
                  SPL := a37[7:0];
                  FlagS := a30[7:0][7];
                  FlagZ := is_zero(a30[7:0]);
                  FlagA := a33[7:0][4];
                  FlagP := parity(a30[7:0]);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a38 = (-1 + a35) in
                  M[a38] := 17;
                  let:16 a39 = (-1 + a38) in
                  M[a39] := 6D;
                  A := a18;
                  H := 20;
                  L := 9B;
                  SPH := a39[15:8];
                  SPL := a39[7:0];
                  FlagS := a30[7:0][7];
                  FlagZ := is_zero(a30[7:0]);
                  FlagA := a33[7:0][4];
                  FlagP := parity(a30[7:0]);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #1770
                let:8 a40 = (30 & M[2098]) in
                let:8 a41 = (30 | M[2098]) in
                #1772
                sound_control(FleetMovement1,a40[0]);
                sound_control(FleetMovement2,a40[1]);
                sound_control(FleetMovement3,a40[2]);
                sound_control(FleetMovement4,a40[3]);
                sound_control(UfoHit,a40[4]);
                #1774
                let:16 a42 = (1 + a35) in
                let:16 a43 = (1 + a42) in
                A := a40;
                H := 20;
                L := 9B;
                SPH := a43[15:8];
                SPL := a43[7:0];
                FlagS := a40[7];
                FlagZ := is_zero(a40);
                FlagA := a41[3];
                FlagP := parity(a40);
                FlagCY := false;
                jump ((M[a42],M[a35]));
              }
            } else {
              A := a18;
              H := 20;
              L := 9B;
              SPH := a25[15:8];
              SPL := a25[7:0];
              FlagS := a30[7:0][7];
              FlagZ := is_zero(a30[7:0]);
              FlagA := a33[7:0][4];
              FlagP := parity(a30[7:0]);
              FlagCY := false;
              jump (1747);
            }
          }
        }
      } else {
        #0050
        #0053
        let:8 a44 = (M[20EB] & M[20EB]) in
        let:8 a45 = (M[20EB] | M[20EB]) in
        #0054
        if (!is_zero(a44)) {
          #005D
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a46 = (-1 + (SPH,SPL)) in
              M[a46] := 00;
              let:16 a47 = (-1 + a46) in
              M[a47] := 5D;
              A := a44;
              SPH := a47[15:8];
              SPL := a47[7:0];
              FlagS := a44[7];
              FlagZ := is_zero(a44);
              FlagA := a45[3];
              FlagP := parity(a44);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a48 = (-1 + (SPH,SPL)) in
              M[a48] := 00;
              let:16 a49 = (-1 + a48) in
              M[a49] := 5D;
              A := a44;
              SPH := a49[15:8];
              SPL := a49[7:0];
              FlagS := a44[7];
              FlagZ := is_zero(a44);
              FlagA := a45[3];
              FlagP := parity(a44);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #0060
            let:8 a50 = (M[2093] & M[2093]) in
            let:8 a51 = (M[2093] | M[2093]) in
            #0061
            if (!is_zero(a50)) {
              #0082
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a52 = (-1 + (SPH,SPL)) in
                  M[a52] := 00;
                  let:16 a53 = (-1 + a52) in
                  M[a53] := 82;
                  A := a50;
                  SPH := a53[15:8];
                  SPL := a53[7:0];
                  FlagS := a50[7];
                  FlagZ := is_zero(a50);
                  FlagA := a51[3];
                  FlagP := parity(a50);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a54 = (-1 + (SPH,SPL)) in
                  M[a54] := 00;
                  let:16 a55 = (-1 + a54) in
                  M[a55] := 82;
                  A := a50;
                  SPH := a55[15:8];
                  SPL := a55[7:0];
                  FlagS := a50[7];
                  FlagZ := is_zero(a50);
                  FlagA := a51[3];
                  FlagP := parity(a50);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                let:16 a56 = (1 + (SPH,SPL)) in
                let:16 a57 = (1 + a56) in
                #0083
                let:16 a58 = (1 + a57) in
                let:16 a59 = (1 + a58) in
                #0084
                let:16 a60 = (1 + a59) in
                let:16 a61 = (1 + a60) in
                #0085
                let:16 a62 = (1 + a61) in
                let:16 a63 = (1 + a62) in
                #0086
                enable_interrupts()
                #0087
                let:16 a64 = (1 + a63) in
                let:16 a65 = (1 + a64) in
                A := M[a62];
                B := M[a60];
                C := M[a59];
                D := M[a58];
                E := M[a57];
                H := M[a56];
                L := M[(SPH,SPL)];
                SPH := a65[15:8];
                SPL := a65[7:0];
                FlagS := M[a61][7];
                FlagZ := M[a61][6];
                FlagA := M[a61][4];
                FlagP := M[a61][2];
                FlagCY := M[a61][0];
                jump ((M[a64],M[a63]));
              }
            } else {
              #0064
              #0765
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a66 = (-1 + (SPH,SPL)) in
                  M[a66] := 07;
                  let:16 a67 = (-1 + a66) in
                  M[a67] := 65;
                  A := a50;
                  SPH := a67[15:8];
                  SPL := a67[7:0];
                  FlagS := a50[7];
                  FlagZ := is_zero(a50);
                  FlagA := a51[3];
                  FlagP := parity(a50);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a68 = (-1 + (SPH,SPL)) in
                  M[a68] := 07;
                  let:16 a69 = (-1 + a68) in
                  M[a69] := 65;
                  A := a50;
                  SPH := a69[15:8];
                  SPL := a69[7:0];
                  FlagS := a50[7];
                  FlagZ := is_zero(a50);
                  FlagA := a51[3];
                  FlagP := parity(a50);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #0767
                M[2093] := 01;
                #076A
                #076D
                enable_interrupts()
                #076E
                M[23FF] := 07;
                M[23FE] := 71;
                #return-to: 0771
                #1979
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    M[23FD] := 19;
                    M[23FC] := 79;
                    A := 01;
                    SPH := 23;
                    SPL := FC;
                    FlagS := a50[7];
                    FlagZ := is_zero(a50);
                    FlagA := a51[3];
                    FlagP := parity(a50);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    M[23FD] := 19;
                    M[23FC] := 79;
                    A := 01;
                    SPH := 23;
                    SPL := FC;
                    FlagS := a50[7];
                    FlagZ := is_zero(a50);
                    FlagA := a51[3];
                    FlagP := parity(a50);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  M[23FD] := 19;
                  M[23FC] := 7C;
                  #return-to: 197C
                  #19D7
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      M[23FB] := 19;
                      M[23FA] := D7;
                      A := 01;
                      SPH := 23;
                      SPL := FA;
                      FlagS := a50[7];
                      FlagZ := is_zero(a50);
                      FlagA := a51[3];
                      FlagP := parity(a50);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      M[23FB] := 19;
                      M[23FA] := D7;
                      A := 01;
                      SPH := 23;
                      SPL := FA;
                      FlagS := a50[7];
                      FlagZ := is_zero(a50);
                      FlagA := a51[3];
                      FlagP := parity(a50);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:8 a70 = (01 ^ 01) in
                    #19D8
                    #19D3
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        M[23FB] := 19;
                        M[23FA] := D3;
                        A := a70;
                        SPH := 23;
                        SPL := FA;
                        FlagS := a70[7];
                        FlagZ := is_zero(a70);
                        FlagA := false;
                        FlagP := parity(a70);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        M[23FB] := 19;
                        M[23FA] := D3;
                        A := a70;
                        SPH := 23;
                        SPL := FA;
                        FlagS := a70[7];
                        FlagZ := is_zero(a70);
                        FlagA := false;
                        FlagP := parity(a70);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      M[20E9] := a70;
                      #19D6
                      A := a70;
                      SPH := 23;
                      SPL := FE;
                      FlagS := a70[7];
                      FlagZ := is_zero(a70);
                      FlagA := false;
                      FlagP := parity(a70);
                      FlagCY := false;
                      jump ((M[23FD],M[23FC]));
                    }
                  }
                }
              }
            }
          }
        } else {
          #0057
          let:16 a71 = (-1 + (SPH,SPL)) in
          M[a71] := 00;
          let:16 a72 = (-1 + a71) in
          M[a72] := 5A;
          #return-to: 005A
          #0ABF
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a73 = (-1 + a72) in
              M[a73] := 0A;
              let:16 a74 = (-1 + a73) in
              M[a74] := BF;
              A := a44;
              SPH := a74[15:8];
              SPL := a74[7:0];
              FlagS := a44[7];
              FlagZ := is_zero(a44);
              FlagA := a45[3];
              FlagP := parity(a44);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a75 = (-1 + a72) in
              M[a75] := 0A;
              let:16 a76 = (-1 + a75) in
              M[a76] := BF;
              A := a44;
              SPH := a76[15:8];
              SPL := a76[7:0];
              FlagS := a44[7];
              FlagZ := is_zero(a44);
              FlagA := a45[3];
              FlagP := parity(a44);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #0AC2
            #0AC3
            if (M[20C1][0]) {
              #0ABB
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a77 = (-1 + a72) in
                  M[a77] := 0A;
                  let:16 a78 = (-1 + a77) in
                  M[a78] := BB;
                  A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                  SPH := a78[15:8];
                  SPL := a78[7:0];
                  FlagS := a44[7];
                  FlagZ := is_zero(a44);
                  FlagA := a45[3];
                  FlagP := parity(a44);
                  FlagCY := M[20C1][0];
                  jump (0008);
                } else {
                  let:16 a79 = (-1 + a72) in
                  M[a79] := 0A;
                  let:16 a80 = (-1 + a79) in
                  M[a80] := BB;
                  A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                  SPH := a80[15:8];
                  SPL := a80[7:0];
                  FlagS := a44[7];
                  FlagZ := is_zero(a44);
                  FlagA := a45[3];
                  FlagP := parity(a44);
                  FlagCY := M[20C1][0];
                  jump (0010);
                }
              } else {
                let:16 a81 = (1 + a72) in
                let:16 a82 = (1 + a81) in
                #0ABC
                A := updateBit((M[20C1] >> 01),7,M[20C1][0]);
                H := M[a81];
                L := M[a72];
                SPH := a82[15:8];
                SPL := a82[7:0];
                FlagS := a44[7];
                FlagZ := is_zero(a44);
                FlagA := a45[3];
                FlagP := parity(a44);
                FlagCY := M[20C1][0];
                jump (0072);
              }
            } else {
              #0AC6
              #0AC7
              if (updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) {
                #1868
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a83 = (-1 + a72) in
                    M[a83] := 18;
                    let:16 a84 = (-1 + a83) in
                    M[a84] := 68;
                    A := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]);
                    SPH := a84[15:8];
                    SPL := a84[7:0];
                    FlagS := a44[7];
                    FlagZ := is_zero(a44);
                    FlagA := a45[3];
                    FlagP := parity(a44);
                    FlagCY := updateBit((M[20C1] >> 01),7,M[20C1][0])[0];
                    jump (0008);
                  } else {
                    let:16 a85 = (-1 + a72) in
                    M[a85] := 18;
                    let:16 a86 = (-1 + a85) in
                    M[a86] := 68;
                    A := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]);
                    SPH := a86[15:8];
                    SPL := a86[7:0];
                    FlagS := a44[7];
                    FlagZ := is_zero(a44);
                    FlagA := a45[3];
                    FlagP := parity(a44);
                    FlagCY := updateBit((M[20C1] >> 01),7,M[20C1][0])[0];
                    jump (0010);
                  }
                } else {
                  #186B
                  let:16 a87 = addWithCarry(true,M[20C2],00) in
                  let:8 a88 = (M[20C2] & 0F) in
                  let:8 a89 = (00 & 0F) in
                  let:16 a90 = addWithCarry(true,a88,a89) in
                  M[20C2] := a87[7:0];
                  #186C
                  #186D
                  #186E
                  let:16 a91 = (-1 + a72) in
                  M[a91] := 18;
                  let:16 a92 = (-1 + a91) in
                  M[a92] := 71;
                  #return-to: 1871
                  #01D9
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a93 = (-1 + a92) in
                      M[a93] := 01;
                      let:16 a94 = (-1 + a93) in
                      M[a94] := D9;
                      A := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]);
                      C := M[20C3];
                      H := 20;
                      L := C3;
                      SPH := a94[15:8];
                      SPL := a94[7:0];
                      FlagS := a87[7:0][7];
                      FlagZ := is_zero(a87[7:0]);
                      FlagA := a90[7:0][4];
                      FlagP := parity(a87[7:0]);
                      FlagCY := updateBit((M[20C1] >> 01),7,M[20C1][0])[0];
                      jump (0008);
                    } else {
                      let:16 a95 = (-1 + a92) in
                      M[a95] := 01;
                      let:16 a96 = (-1 + a95) in
                      M[a96] := D9;
                      A := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]);
                      C := M[20C3];
                      H := 20;
                      L := C3;
                      SPH := a96[15:8];
                      SPL := a96[7:0];
                      FlagS := a87[7:0][7];
                      FlagZ := is_zero(a87[7:0]);
                      FlagA := a90[7:0][4];
                      FlagP := parity(a87[7:0]);
                      FlagCY := updateBit((M[20C1] >> 01),7,M[20C1][0])[0];
                      jump (0010);
                    }
                  } else {
                    #01DA
                    #01DB
                    #01DC
                    #01DD
                    let:16 a97 = addWithCarry(false,M[20C5],M[20C3]) in
                    let:8 a98 = (M[20C5] & 0F) in
                    let:8 a99 = (M[20C3] & 0F) in
                    let:16 a100 = addWithCarry(false,a98,a99) in
                    #01DE
                    M[20C5] := a97[7:0];
                    #01DF
                    #01E0
                    #01E1
                    let:16 a101 = addWithCarry(false,M[20C6],M[20C4]) in
                    let:8 a102 = (M[20C6] & 0F) in
                    let:8 a103 = (M[20C4] & 0F) in
                    let:16 a104 = addWithCarry(false,a102,a103) in
                    #01E2
                    M[20C6] := a101[7:0];
                    #01E3
                    let:16 a105 = (1 + a92) in
                    let:16 a106 = (1 + a105) in
                    A := a101[7:0];
                    B := M[20C4];
                    C := M[20C3];
                    H := 20;
                    L := C6;
                    SPH := a106[15:8];
                    SPL := a106[7:0];
                    FlagS := a101[7:0][7];
                    FlagZ := is_zero(a101[7:0]);
                    FlagA := a104[7:0][4];
                    FlagP := parity(a101[7:0]);
                    FlagCY := a101[15:8][0];
                    jump ((M[a105],M[a92]));
                  }
                }
              } else {
                #0ACA
                #0ACB
                if (updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]) {
                  #0AAB
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a107 = (-1 + a72) in
                      M[a107] := 0A;
                      let:16 a108 = (-1 + a107) in
                      M[a108] := AB;
                      A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                      SPH := a108[15:8];
                      SPL := a108[7:0];
                      FlagS := a44[7];
                      FlagZ := is_zero(a44);
                      FlagA := a45[3];
                      FlagP := parity(a44);
                      FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                      jump (0008);
                    } else {
                      let:16 a109 = (-1 + a72) in
                      M[a109] := 0A;
                      let:16 a110 = (-1 + a109) in
                      M[a110] := AB;
                      A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                      SPH := a110[15:8];
                      SPL := a110[7:0];
                      FlagS := a44[7];
                      FlagZ := is_zero(a44);
                      FlagA := a45[3];
                      FlagP := parity(a44);
                      FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                      jump (0010);
                    }
                  } else {
                    #0AAE
                    #024B
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a111 = (-1 + a72) in
                        M[a111] := 02;
                        let:16 a112 = (-1 + a111) in
                        M[a112] := 4B;
                        A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                        H := 20;
                        L := 50;
                        SPH := a112[15:8];
                        SPL := a112[7:0];
                        FlagS := a44[7];
                        FlagZ := is_zero(a44);
                        FlagA := a45[3];
                        FlagP := parity(a44);
                        FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                        jump (0008);
                      } else {
                        let:16 a113 = (-1 + a72) in
                        M[a113] := 02;
                        let:16 a114 = (-1 + a113) in
                        M[a114] := 4B;
                        A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                        H := 20;
                        L := 50;
                        SPH := a114[15:8];
                        SPL := a114[7:0];
                        FlagS := a44[7];
                        FlagZ := is_zero(a44);
                        FlagA := a45[3];
                        FlagP := parity(a44);
                        FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                        jump (0010);
                      }
                    } else {
                      #024C
                      let:16 a115 = addWithCarry(!false,M[2050],~FF) in
                      let:8 a116 = (M[2050] & 0F) in
                      let:8 a117 = (~FF & 0F) in
                      let:16 a118 = addWithCarry(!false,a116,a117) in
                      #024E
                      if (is_zero(a115[7:0])) {
                        let:16 a119 = (1 + a72) in
                        let:16 a120 = (1 + a119) in
                        A := M[2050];
                        H := 20;
                        L := 50;
                        SPH := a120[15:8];
                        SPL := a120[7:0];
                        FlagS := a115[7:0][7];
                        FlagZ := is_zero(a115[7:0]);
                        FlagA := a118[7:0][4];
                        FlagP := parity(a115[7:0]);
                        FlagCY := !a115[15:8][0];
                        jump ((M[a119],M[a72]));
                      } else {
                        #024F
                        let:16 a121 = addWithCarry(!false,M[2050],~FE) in
                        let:8 a122 = (M[2050] & 0F) in
                        let:8 a123 = (~FE & 0F) in
                        let:16 a124 = addWithCarry(!false,a122,a123) in
                        #0251
                        if (is_zero(a121[7:0])) {
                          #0281
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a125 = (-1 + a72) in
                              M[a125] := 02;
                              let:16 a126 = (-1 + a125) in
                              M[a126] := 81;
                              A := M[2050];
                              H := 20;
                              L := 50;
                              SPH := a126[15:8];
                              SPL := a126[7:0];
                              FlagS := a121[7:0][7];
                              FlagZ := is_zero(a121[7:0]);
                              FlagA := a124[7:0][4];
                              FlagP := parity(a121[7:0]);
                              FlagCY := !a121[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a127 = (-1 + a72) in
                              M[a127] := 02;
                              let:16 a128 = (-1 + a127) in
                              M[a128] := 81;
                              A := M[2050];
                              H := 20;
                              L := 50;
                              SPH := a128[15:8];
                              SPL := a128[7:0];
                              FlagS := a121[7:0][7];
                              FlagZ := is_zero(a121[7:0]);
                              FlagA := a124[7:0][4];
                              FlagP := parity(a121[7:0]);
                              FlagCY := !a121[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #0284
                            let:17 a129 = add17(0010,2050) in
                            #0285
                            A := M[2050];
                            D := 00;
                            E := 10;
                            H := a129[15:0][15:8];
                            L := a129[15:0][7:0];
                            SPH := a72[15:8];
                            SPL := a72[7:0];
                            FlagS := a121[7:0][7];
                            FlagZ := is_zero(a121[7:0]);
                            FlagA := a124[7:0][4];
                            FlagP := parity(a121[7:0]);
                            FlagCY := a129[16];
                            jump (024B);
                          }
                        } else {
                          #0254
                          #0255
                          #0256
                          #0257
                          let:8 a130 = (M[2051] | M[2050]) in
                          #0258
                          #0259
                          if (!is_zero(a130)) {
                            #0277
                            if ((g_time_to_wakeup && g_interrupts_enabled)) {
                              disable_interrupts()
                              if (g_half_frame) {
                                let:16 a131 = (-1 + a72) in
                                M[a131] := 02;
                                let:16 a132 = (-1 + a131) in
                                M[a132] := 77;
                                A := M[2050];
                                B := M[2051];
                                C := M[2050];
                                H := 20;
                                L := 51;
                                SPH := a132[15:8];
                                SPL := a132[7:0];
                                FlagS := a130[7];
                                FlagZ := is_zero(a130);
                                FlagA := false;
                                FlagP := parity(a130);
                                FlagCY := false;
                                jump (0008);
                              } else {
                                let:16 a133 = (-1 + a72) in
                                M[a133] := 02;
                                let:16 a134 = (-1 + a133) in
                                M[a134] := 77;
                                A := M[2050];
                                B := M[2051];
                                C := M[2050];
                                H := 20;
                                L := 51;
                                SPH := a134[15:8];
                                SPL := a134[7:0];
                                FlagS := a130[7];
                                FlagZ := is_zero(a130);
                                FlagA := false;
                                FlagP := parity(a130);
                                FlagCY := false;
                                jump (0010);
                              }
                            } else {
                              let:16 a135 = addWithCarry(!true,M[2051],~00) in
                              let:8 a136 = (M[2051] & 0F) in
                              let:8 a137 = (~00 & 0F) in
                              let:16 a138 = addWithCarry(!true,a136,a137) in
                              #0278
                              let:16 a139 = addWithCarry(true,a135[7:0],00) in
                              let:8 a140 = (a135[7:0] & 0F) in
                              let:8 a141 = (00 & 0F) in
                              let:16 a142 = addWithCarry(true,a140,a141) in
                              #0279
                              if (!is_zero(a139[7:0])) {
                                #027D
                                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                  disable_interrupts()
                                  if (g_half_frame) {
                                    let:16 a143 = (-1 + a72) in
                                    M[a143] := 02;
                                    let:16 a144 = (-1 + a143) in
                                    M[a144] := 7D;
                                    A := M[2050];
                                    B := a139[7:0];
                                    C := M[2050];
                                    H := 20;
                                    L := 51;
                                    SPH := a144[15:8];
                                    SPL := a144[7:0];
                                    FlagS := a139[7:0][7];
                                    FlagZ := is_zero(a139[7:0]);
                                    FlagA := a142[7:0][4];
                                    FlagP := parity(a139[7:0]);
                                    FlagCY := false;
                                    jump (0008);
                                  } else {
                                    let:16 a145 = (-1 + a72) in
                                    M[a145] := 02;
                                    let:16 a146 = (-1 + a145) in
                                    M[a146] := 7D;
                                    A := M[2050];
                                    B := a139[7:0];
                                    C := M[2050];
                                    H := 20;
                                    L := 51;
                                    SPH := a146[15:8];
                                    SPL := a146[7:0];
                                    FlagS := a139[7:0][7];
                                    FlagZ := is_zero(a139[7:0]);
                                    FlagA := a142[7:0][4];
                                    FlagP := parity(a139[7:0]);
                                    FlagCY := false;
                                    jump (0010);
                                  }
                                } else {
                                  let:16 a147 = addWithCarry(!true,a139[7:0],~00) in
                                  let:8 a148 = (a139[7:0] & 0F) in
                                  let:8 a149 = (~00 & 0F) in
                                  let:16 a150 = addWithCarry(!true,a148,a149) in
                                  #027E
                                  M[2051] := a147[7:0];
                                  #027F
                                  #0280
                                  M[2050] := M[2050];
                                  #0281
                                  #0284
                                  let:17 a151 = add17(0010,2050) in
                                  #0285
                                  A := M[2050];
                                  B := a147[7:0];
                                  C := M[2050];
                                  D := 00;
                                  E := 10;
                                  H := a151[15:0][15:8];
                                  L := a151[15:0][7:0];
                                  SPH := a72[15:8];
                                  SPL := a72[7:0];
                                  FlagS := a147[7:0][7];
                                  FlagZ := is_zero(a147[7:0]);
                                  FlagA := a150[7:0][4];
                                  FlagP := parity(a147[7:0]);
                                  FlagCY := a151[16];
                                  jump (024B);
                                }
                              } else {
                                #027C
                                let:16 a152 = addWithCarry(!true,M[2050],~00) in
                                let:8 a153 = (M[2050] & 0F) in
                                let:8 a154 = (~00 & 0F) in
                                let:16 a155 = addWithCarry(!true,a153,a154) in
                                #027D
                                let:16 a156 = addWithCarry(!true,a139[7:0],~00) in
                                let:8 a157 = (a139[7:0] & 0F) in
                                let:8 a158 = (~00 & 0F) in
                                let:16 a159 = addWithCarry(!true,a157,a158) in
                                #027E
                                M[2051] := a156[7:0];
                                #027F
                                #0280
                                M[2050] := a152[7:0];
                                #0281
                                #0284
                                let:17 a160 = add17(0010,2050) in
                                #0285
                                A := a152[7:0];
                                B := a156[7:0];
                                C := M[2050];
                                D := 00;
                                E := 10;
                                H := a160[15:0][15:8];
                                L := a160[15:0][7:0];
                                SPH := a72[15:8];
                                SPL := a72[7:0];
                                FlagS := a156[7:0][7];
                                FlagZ := is_zero(a156[7:0]);
                                FlagA := a159[7:0][4];
                                FlagP := parity(a156[7:0]);
                                FlagCY := a160[16];
                                jump (024B);
                              }
                            }
                          } else {
                            #025C
                            #025D
                            #025E
                            let:8 a161 = (M[2052] & M[2052]) in
                            let:8 a162 = (M[2052] | M[2052]) in
                            #025F
                            if (!is_zero(a161)) {
                              #0288
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a163 = (-1 + a72) in
                                  M[a163] := 02;
                                  let:16 a164 = (-1 + a163) in
                                  M[a164] := 88;
                                  A := a161;
                                  B := M[2051];
                                  C := M[2050];
                                  H := 20;
                                  L := 52;
                                  SPH := a164[15:8];
                                  SPL := a164[7:0];
                                  FlagS := a161[7];
                                  FlagZ := is_zero(a161);
                                  FlagA := a162[3];
                                  FlagP := parity(a161);
                                  FlagCY := false;
                                  jump (0008);
                                } else {
                                  let:16 a165 = (-1 + a72) in
                                  M[a165] := 02;
                                  let:16 a166 = (-1 + a165) in
                                  M[a166] := 88;
                                  A := a161;
                                  B := M[2051];
                                  C := M[2050];
                                  H := 20;
                                  L := 52;
                                  SPH := a166[15:8];
                                  SPL := a166[7:0];
                                  FlagS := a161[7];
                                  FlagZ := is_zero(a161);
                                  FlagA := a162[3];
                                  FlagP := parity(a161);
                                  FlagCY := false;
                                  jump (0010);
                                }
                              } else {
                                let:16 a167 = addWithCarry(!true,M[2052],~00) in
                                let:8 a168 = (M[2052] & 0F) in
                                let:8 a169 = (~00 & 0F) in
                                let:16 a170 = addWithCarry(!true,a168,a169) in
                                M[2052] := a167[7:0];
                                #0289
                                #028A
                                #028B
                                #0281
                                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                  disable_interrupts()
                                  if (g_half_frame) {
                                    let:16 a171 = (-1 + a72) in
                                    M[a171] := 02;
                                    let:16 a172 = (-1 + a171) in
                                    M[a172] := 81;
                                    A := a161;
                                    B := M[2051];
                                    C := M[2050];
                                    H := 20;
                                    L := 50;
                                    SPH := a172[15:8];
                                    SPL := a172[7:0];
                                    FlagS := a167[7:0][7];
                                    FlagZ := is_zero(a167[7:0]);
                                    FlagA := a170[7:0][4];
                                    FlagP := parity(a167[7:0]);
                                    FlagCY := false;
                                    jump (0008);
                                  } else {
                                    let:16 a173 = (-1 + a72) in
                                    M[a173] := 02;
                                    let:16 a174 = (-1 + a173) in
                                    M[a174] := 81;
                                    A := a161;
                                    B := M[2051];
                                    C := M[2050];
                                    H := 20;
                                    L := 50;
                                    SPH := a174[15:8];
                                    SPL := a174[7:0];
                                    FlagS := a167[7:0][7];
                                    FlagZ := is_zero(a167[7:0]);
                                    FlagA := a170[7:0][4];
                                    FlagP := parity(a167[7:0]);
                                    FlagCY := false;
                                    jump (0010);
                                  }
                                } else {
                                  #0284
                                  let:17 a175 = add17(0010,2050) in
                                  #0285
                                  A := a161;
                                  B := M[2051];
                                  C := M[2050];
                                  D := 00;
                                  E := 10;
                                  H := a175[15:0][15:8];
                                  L := a175[15:0][7:0];
                                  SPH := a72[15:8];
                                  SPL := a72[7:0];
                                  FlagS := a167[7:0][7];
                                  FlagZ := is_zero(a167[7:0]);
                                  FlagA := a170[7:0][4];
                                  FlagP := parity(a167[7:0]);
                                  FlagCY := a175[16];
                                  jump (024B);
                                }
                              }
                            } else {
                              #0262
                              #0263
                              #0264
                              #0265
                              #0266
                              let:16 a176 = (-1 + a72) in
                              M[a176] := 20;
                              let:16 a177 = (-1 + a176) in
                              M[a177] := 54;
                              #0267
                              #0268
                              let:16 a178 = (-1 + a177) in
                              M[a178] := M[2054];
                              let:16 a179 = (-1 + a178) in
                              M[a179] := M[2053];
                              #0269
                              #026C
                              let:16 a180 = (1 + a179) in
                              M[a179] := 6F;
                              M[a180] := 02;
                              #026D
                              let:16 a181 = (-1 + a179) in
                              M[a181] := 20;
                              let:16 a182 = (-1 + a181) in
                              M[a182] := 54;
                              #026E
                              A := a161;
                              B := M[2051];
                              C := M[2050];
                              D := 20;
                              E := 54;
                              H := M[a180];
                              L := M[a179];
                              SPH := a182[15:8];
                              SPL := a182[7:0];
                              FlagS := a161[7];
                              FlagZ := is_zero(a161);
                              FlagA := a162[3];
                              FlagP := parity(a161);
                              FlagCY := false;
                              jump ((M[a180],M[a179]));
                            }
                          }
                        }
                      }
                    }
                  }
                } else {
                  #0ACE
                  let:16 a183 = (1 + a72) in
                  let:16 a184 = (1 + a183) in
                  A := updateBit((updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0]) >> 01),7,updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0]);
                  SPH := a184[15:8];
                  SPL := a184[7:0];
                  FlagS := a44[7];
                  FlagZ := is_zero(a44);
                  FlagA := a45[3];
                  FlagP := parity(a44);
                  FlagCY := updateBit((updateBit((M[20C1] >> 01),7,M[20C1][0]) >> 01),7,updateBit((M[20C1] >> 01),7,M[20C1][0])[0])[0];
                  jump ((M[a183],M[a72]));
                }
              }
            }
          }
        }
      }
    }

005A:

    #0082
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 00;
        let:16 a2 = (-1 + a1) in
        M[a2] := 82;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 00;
        let:16 a4 = (-1 + a3) in
        M[a4] := 82;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (1 + (SPH,SPL)) in
      let:16 a6 = (1 + a5) in
      #0083
      let:16 a7 = (1 + a6) in
      let:16 a8 = (1 + a7) in
      #0084
      let:16 a9 = (1 + a8) in
      let:16 a10 = (1 + a9) in
      #0085
      let:16 a11 = (1 + a10) in
      let:16 a12 = (1 + a11) in
      #0086
      enable_interrupts()
      #0087
      let:16 a13 = (1 + a12) in
      let:16 a14 = (1 + a13) in
      A := M[a11];
      B := M[a9];
      C := M[a8];
      D := M[a7];
      E := M[a6];
      H := M[a5];
      L := M[(SPH,SPL)];
      SPH := a14[15:8];
      SPL := a14[7:0];
      FlagS := M[a10][7];
      FlagZ := M[a10][6];
      FlagA := M[a10][4];
      FlagP := M[a10][2];
      FlagCY := M[a10][0];
      jump ((M[a13],M[a12]));
    }

0072:

    #0075
    M[2080] := M[2032];
    #0078
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 00;
    let:16 a2 = (-1 + a1) in
    M[a2] := 7B;
    #return-to: 007B
    #0100
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 01;
        let:16 a4 = (-1 + a3) in
        M[a4] := 00;
        A := M[2032];
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 01;
        let:16 a6 = (-1 + a5) in
        M[a6] := 00;
        A := M[2032];
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0103
      #0104
      let:8 a7 = (M[2002] & M[2002]) in
      let:8 a8 = (M[2002] | M[2002]) in
      #0105
      if (!is_zero(a7)) {
        #1538
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a2) in
            M[a9] := 15;
            let:16 a10 = (-1 + a9) in
            M[a10] := 38;
            A := a7;
            H := 20;
            L := 02;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a11 = (-1 + a2) in
            M[a11] := 15;
            let:16 a12 = (-1 + a11) in
            M[a12] := 38;
            A := a7;
            H := 20;
            L := 02;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #153B
          let:16 a13 = addWithCarry(!true,M[2003],~00) in
          let:8 a14 = (M[2003] & 0F) in
          let:8 a15 = (~00 & 0F) in
          let:16 a16 = addWithCarry(!true,a14,a15) in
          M[2003] := a13[7:0];
          #153C
          if (!is_zero(a13[7:0])) {
            let:16 a17 = (1 + a2) in
            let:16 a18 = (1 + a17) in
            A := a7;
            H := 20;
            L := 03;
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a13[7:0][7];
            FlagZ := is_zero(a13[7:0]);
            FlagA := a16[7:0][4];
            FlagP := parity(a13[7:0]);
            FlagCY := false;
            jump ((M[a17],M[a2]));
          } else {
            #153D
            #1540
            #1542
            let:16 a19 = (-1 + a2) in
            M[a19] := 15;
            let:16 a20 = (-1 + a19) in
            M[a20] := 45;
            #return-to: 1545
            #1424
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a21 = (-1 + a20) in
                M[a21] := 14;
                let:16 a22 = (-1 + a21) in
                M[a22] := 24;
                A := a7;
                B := 10;
                H := M[2065];
                L := M[2064];
                SPH := a22[15:8];
                SPL := a22[7:0];
                FlagS := a13[7:0][7];
                FlagZ := is_zero(a13[7:0]);
                FlagA := a16[7:0][4];
                FlagP := parity(a13[7:0]);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a23 = (-1 + a20) in
                M[a23] := 14;
                let:16 a24 = (-1 + a23) in
                M[a24] := 24;
                A := a7;
                B := 10;
                H := M[2065];
                L := M[2064];
                SPH := a24[15:8];
                SPL := a24[7:0];
                FlagS := a13[7:0][7];
                FlagZ := is_zero(a13[7:0]);
                FlagA := a16[7:0][4];
                FlagP := parity(a13[7:0]);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a25 = (-1 + a20) in
              M[a25] := 14;
              let:16 a26 = (-1 + a25) in
              M[a26] := 27;
              #return-to: 1427
              #1474
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a27 = (-1 + a26) in
                  M[a27] := 14;
                  let:16 a28 = (-1 + a27) in
                  M[a28] := 74;
                  A := a7;
                  B := 10;
                  H := M[2065];
                  L := M[2064];
                  SPH := a28[15:8];
                  SPL := a28[7:0];
                  FlagS := a13[7:0][7];
                  FlagZ := is_zero(a13[7:0]);
                  FlagA := a16[7:0][4];
                  FlagP := parity(a13[7:0]);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a29 = (-1 + a26) in
                  M[a29] := 14;
                  let:16 a30 = (-1 + a29) in
                  M[a30] := 74;
                  A := a7;
                  B := 10;
                  H := M[2065];
                  L := M[2064];
                  SPH := a30[15:8];
                  SPL := a30[7:0];
                  FlagS := a13[7:0][7];
                  FlagZ := is_zero(a13[7:0]);
                  FlagA := a16[7:0][4];
                  FlagP := parity(a13[7:0]);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #1475
                let:8 a31 = (07 & M[2064]) in
                let:8 a32 = (07 | M[2064]) in
                #1477
                #1479
                #1A47
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a33 = (-1 + a26) in
                    M[a33] := 1A;
                    let:16 a34 = (-1 + a33) in
                    M[a34] := 47;
                    A := a31;
                    B := 10;
                    H := M[2065];
                    L := M[2064];
                    SPH := a34[15:8];
                    SPL := a34[7:0];
                    FlagS := a31[7];
                    FlagZ := is_zero(a31);
                    FlagA := a32[3];
                    FlagP := parity(a31);
                    FlagCY := false;
                    Shifter_OFF := a31;
                    jump (0008);
                  } else {
                    let:16 a35 = (-1 + a26) in
                    M[a35] := 1A;
                    let:16 a36 = (-1 + a35) in
                    M[a36] := 47;
                    A := a31;
                    B := 10;
                    H := M[2065];
                    L := M[2064];
                    SPH := a36[15:8];
                    SPL := a36[7:0];
                    FlagS := a31[7];
                    FlagZ := is_zero(a31);
                    FlagA := a32[3];
                    FlagP := parity(a31);
                    FlagCY := false;
                    Shifter_OFF := a31;
                    jump (0010);
                  }
                } else {
                  let:16 a37 = (-1 + a26) in
                  M[a37] := 10;
                  let:16 a38 = (-1 + a37) in
                  M[a38] := C;
                  #1A48
                  #1A4A
                  #1A4B
                  #1A4C
                  #1A4D
                  #1A4E
                  #1A4F
                  #1A50
                  let:16 a39 = addWithCarry(!true,03,~00) in
                  let:8 a40 = (03 & 0F) in
                  let:8 a41 = (~00 & 0F) in
                  let:16 a42 = addWithCarry(!true,a40,a41) in
                  #1A51
                  if (!is_zero(a39[7:0])) {
                    A := updateBit((M[2064] >> 01),7,M[2065][0]);
                    B := a39[7:0];
                    H := updateBit((M[2065] >> 01),7,false);
                    L := updateBit((M[2064] >> 01),7,M[2065][0]);
                    SPH := a38[15:8];
                    SPL := a38[7:0];
                    FlagS := a39[7:0][7];
                    FlagZ := is_zero(a39[7:0]);
                    FlagA := a42[7:0][4];
                    FlagP := parity(a39[7:0]);
                    FlagCY := M[2064][0];
                    Shifter_OFF := a31;
                    jump (1A4A);
                  } else {
                    #1A54
                    #1A55
                    let:8 a43 = (3F & updateBit((M[2065] >> 01),7,false)) in
                    let:8 a44 = (3F | updateBit((M[2065] >> 01),7,false)) in
                    #1A57
                    let:8 a45 = (20 | a43) in
                    #1A59
                    #1A5A
                    let:16 a46 = (1 + a38) in
                    let:16 a47 = (1 + a46) in
                    #1A5B
                    let:16 a48 = (1 + a47) in
                    let:16 a49 = (1 + a48) in
                    A := a45;
                    B := M[a46];
                    C := M[a38];
                    H := a45;
                    L := updateBit((M[2064] >> 01),7,M[2065][0]);
                    SPH := a49[15:8];
                    SPL := a49[7:0];
                    FlagS := a45[7];
                    FlagZ := is_zero(a45);
                    FlagA := false;
                    FlagP := parity(a45);
                    FlagCY := false;
                    Shifter_OFF := a31;
                    jump ((M[a48],M[a47]));
                  }
                }
              }
            }
          }
        }
      } else {
        #0108
        let:16 a50 = (-1 + a2) in
        M[a50] := 20;
        let:16 a51 = (-1 + a50) in
        M[a51] := 02;
        #0109
        #010C
        #010D
        #0110
        #0111
        #0112
        let:8 a52 = (M[(M[2067],M[2006])] & M[(M[2067],M[2006])]) in
        let:8 a53 = (M[(M[2067],M[2006])] | M[(M[2067],M[2006])]) in
        #0113
        let:16 a54 = (1 + a51) in
        let:16 a55 = (1 + a54) in
        #0114
        if (is_zero(a52)) {
          A := a52;
          H := M[a54];
          L := M[a51];
          SPH := a55[15:8];
          SPL := a55[7:0];
          FlagS := a52[7];
          FlagZ := is_zero(a52);
          FlagA := a53[3];
          FlagP := parity(a52);
          FlagCY := false;
          jump (0136);
        } else {
          #0117
          let:16 a56 = (1 + (M[a54],M[a51])) in
          #0118
          let:16 a57 = (1 + a56) in
          #0119
          #011A
          let:16 a58 = (1 + a57) in
          #011B
          #011C
          let:8 a59 = (FE & M[a57]) in
          let:8 a60 = (FE | M[a57]) in
          #011E
          #011F
          #0120
          #0121
          #0122
          #0124
          #0127
          let:17 a61 = add17((00,updateBit((updateBit((updateBit((a59 << 01),0,a59[7]) << 01),0,updateBit((a59 << 01),0,a59[7])[7]) << 01),0,updateBit((updateBit((a59 << 01),0,a59[7]) << 01),0,updateBit((a59 << 01),0,a59[7])[7])[7])),1C00) in
          #0128
          #0129
          #012A
          let:8 a62 = (M[a58] & M[a58]) in
          let:8 a63 = (M[a58] | M[a58]) in
          #012B
          if (!is_zero(a62)) {
            let:16 a64 = (-1 + a55) in
            M[a64] := 01;
            let:16 a65 = (-1 + a64) in
            M[a65] := 2E;
            #return-to: 012E
            #013B
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a66 = (-1 + a65) in
                M[a66] := 01;
                let:16 a67 = (-1 + a66) in
                M[a67] := 3B;
                A := a62;
                B := M[a58];
                D := a61[15:0][15:8];
                E := a61[15:0][7:0];
                H := 00;
                L := updateBit((updateBit((updateBit((a59 << 01),0,a59[7]) << 01),0,updateBit((a59 << 01),0,a59[7])[7]) << 01),0,updateBit((updateBit((a59 << 01),0,a59[7]) << 01),0,updateBit((a59 << 01),0,a59[7])[7])[7]);
                SPH := a67[15:8];
                SPL := a67[7:0];
                FlagS := a62[7];
                FlagZ := is_zero(a62);
                FlagA := a63[3];
                FlagP := parity(a62);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a68 = (-1 + a65) in
                M[a68] := 01;
                let:16 a69 = (-1 + a68) in
                M[a69] := 3B;
                A := a62;
                B := M[a58];
                D := a61[15:0][15:8];
                E := a61[15:0][7:0];
                H := 00;
                L := updateBit((updateBit((updateBit((a59 << 01),0,a59[7]) << 01),0,updateBit((a59 << 01),0,a59[7])[7]) << 01),0,updateBit((updateBit((a59 << 01),0,a59[7]) << 01),0,updateBit((a59 << 01),0,a59[7])[7])[7]);
                SPH := a69[15:8];
                SPL := a69[7:0];
                FlagS := a62[7];
                FlagZ := is_zero(a62);
                FlagA := a63[3];
                FlagP := parity(a62);
                FlagCY := false;
                jump (0010);
              }
            } else {
              #013E
              let:17 a70 = add17(a61[15:0],0030) in
              #013F
              #0140
              let:16 a71 = (1 + a65) in
              let:16 a72 = (1 + a71) in
              A := a62;
              B := M[a58];
              D := a70[15:0][15:8];
              E := a70[15:0][7:0];
              H := a61[15:0][15:8];
              L := a61[15:0][7:0];
              SPH := a72[15:8];
              SPL := a72[7:0];
              FlagS := a62[7];
              FlagZ := is_zero(a62);
              FlagA := a63[3];
              FlagP := parity(a62);
              FlagCY := a70[16];
              jump ((M[a71],M[a65]));
            }
          } else {
            A := a62;
            B := M[a58];
            D := a61[15:0][15:8];
            E := a61[15:0][7:0];
            H := 00;
            L := updateBit((updateBit((updateBit((a59 << 01),0,a59[7]) << 01),0,updateBit((a59 << 01),0,a59[7])[7]) << 01),0,updateBit((updateBit((a59 << 01),0,a59[7]) << 01),0,updateBit((a59 << 01),0,a59[7])[7])[7]);
            SPH := a55[15:8];
            SPL := a55[7:0];
            FlagS := a62[7];
            FlagZ := is_zero(a62);
            FlagA := a63[3];
            FlagP := parity(a62);
            FlagCY := false;
            jump (012E);
          }
        }
      }
    }

007B:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 00;
    let:16 a2 = (-1 + a1) in
    M[a2] := 7E;
    #return-to: 007E
    #0248
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 02;
        let:16 a4 = (-1 + a3) in
        M[a4] := 48;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 02;
        let:16 a6 = (-1 + a5) in
        M[a6] := 48;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #024B
      #024C
      let:16 a7 = addWithCarry(!false,M[2010],~FF) in
      let:8 a8 = (M[2010] & 0F) in
      let:8 a9 = (~FF & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #024E
      if (is_zero(a7[7:0])) {
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := M[2010];
        H := 20;
        L := 10;
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := !a7[15:8][0];
        jump ((M[a11],M[a2]));
      } else {
        #024F
        let:16 a13 = addWithCarry(!false,M[2010],~FE) in
        let:8 a14 = (M[2010] & 0F) in
        let:8 a15 = (~FE & 0F) in
        let:16 a16 = addWithCarry(!false,a14,a15) in
        #0251
        if (is_zero(a13[7:0])) {
          #0281
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a2) in
              M[a17] := 02;
              let:16 a18 = (-1 + a17) in
              M[a18] := 81;
              A := M[2010];
              H := 20;
              L := 10;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a13[7:0][7];
              FlagZ := is_zero(a13[7:0]);
              FlagA := a16[7:0][4];
              FlagP := parity(a13[7:0]);
              FlagCY := !a13[15:8][0];
              jump (0008);
            } else {
              let:16 a19 = (-1 + a2) in
              M[a19] := 02;
              let:16 a20 = (-1 + a19) in
              M[a20] := 81;
              A := M[2010];
              H := 20;
              L := 10;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a13[7:0][7];
              FlagZ := is_zero(a13[7:0]);
              FlagA := a16[7:0][4];
              FlagP := parity(a13[7:0]);
              FlagCY := !a13[15:8][0];
              jump (0010);
            }
          } else {
            #0284
            let:17 a21 = add17(0010,2010) in
            #0285
            A := M[2010];
            D := 00;
            E := 10;
            H := a21[15:0][15:8];
            L := a21[15:0][7:0];
            SPH := a2[15:8];
            SPL := a2[7:0];
            FlagS := a13[7:0][7];
            FlagZ := is_zero(a13[7:0]);
            FlagA := a16[7:0][4];
            FlagP := parity(a13[7:0]);
            FlagCY := a21[16];
            jump (024B);
          }
        } else {
          #0254
          #0255
          #0256
          #0257
          let:8 a22 = (M[2011] | M[2010]) in
          #0258
          #0259
          if (!is_zero(a22)) {
            #0277
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a23 = (-1 + a2) in
                M[a23] := 02;
                let:16 a24 = (-1 + a23) in
                M[a24] := 77;
                A := M[2010];
                B := M[2011];
                C := M[2010];
                H := 20;
                L := 11;
                SPH := a24[15:8];
                SPL := a24[7:0];
                FlagS := a22[7];
                FlagZ := is_zero(a22);
                FlagA := false;
                FlagP := parity(a22);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a25 = (-1 + a2) in
                M[a25] := 02;
                let:16 a26 = (-1 + a25) in
                M[a26] := 77;
                A := M[2010];
                B := M[2011];
                C := M[2010];
                H := 20;
                L := 11;
                SPH := a26[15:8];
                SPL := a26[7:0];
                FlagS := a22[7];
                FlagZ := is_zero(a22);
                FlagA := false;
                FlagP := parity(a22);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a27 = addWithCarry(!true,M[2011],~00) in
              let:8 a28 = (M[2011] & 0F) in
              let:8 a29 = (~00 & 0F) in
              let:16 a30 = addWithCarry(!true,a28,a29) in
              #0278
              let:16 a31 = addWithCarry(true,a27[7:0],00) in
              let:8 a32 = (a27[7:0] & 0F) in
              let:8 a33 = (00 & 0F) in
              let:16 a34 = addWithCarry(true,a32,a33) in
              #0279
              if (!is_zero(a31[7:0])) {
                #027D
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a35 = (-1 + a2) in
                    M[a35] := 02;
                    let:16 a36 = (-1 + a35) in
                    M[a36] := 7D;
                    A := M[2010];
                    B := a31[7:0];
                    C := M[2010];
                    H := 20;
                    L := 11;
                    SPH := a36[15:8];
                    SPL := a36[7:0];
                    FlagS := a31[7:0][7];
                    FlagZ := is_zero(a31[7:0]);
                    FlagA := a34[7:0][4];
                    FlagP := parity(a31[7:0]);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a37 = (-1 + a2) in
                    M[a37] := 02;
                    let:16 a38 = (-1 + a37) in
                    M[a38] := 7D;
                    A := M[2010];
                    B := a31[7:0];
                    C := M[2010];
                    H := 20;
                    L := 11;
                    SPH := a38[15:8];
                    SPL := a38[7:0];
                    FlagS := a31[7:0][7];
                    FlagZ := is_zero(a31[7:0]);
                    FlagA := a34[7:0][4];
                    FlagP := parity(a31[7:0]);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  let:16 a39 = addWithCarry(!true,a31[7:0],~00) in
                  let:8 a40 = (a31[7:0] & 0F) in
                  let:8 a41 = (~00 & 0F) in
                  let:16 a42 = addWithCarry(!true,a40,a41) in
                  #027E
                  M[2011] := a39[7:0];
                  #027F
                  #0280
                  M[2010] := M[2010];
                  #0281
                  #0284
                  let:17 a43 = add17(0010,2010) in
                  #0285
                  A := M[2010];
                  B := a39[7:0];
                  C := M[2010];
                  D := 00;
                  E := 10;
                  H := a43[15:0][15:8];
                  L := a43[15:0][7:0];
                  SPH := a2[15:8];
                  SPL := a2[7:0];
                  FlagS := a39[7:0][7];
                  FlagZ := is_zero(a39[7:0]);
                  FlagA := a42[7:0][4];
                  FlagP := parity(a39[7:0]);
                  FlagCY := a43[16];
                  jump (024B);
                }
              } else {
                #027C
                let:16 a44 = addWithCarry(!true,M[2010],~00) in
                let:8 a45 = (M[2010] & 0F) in
                let:8 a46 = (~00 & 0F) in
                let:16 a47 = addWithCarry(!true,a45,a46) in
                #027D
                let:16 a48 = addWithCarry(!true,a31[7:0],~00) in
                let:8 a49 = (a31[7:0] & 0F) in
                let:8 a50 = (~00 & 0F) in
                let:16 a51 = addWithCarry(!true,a49,a50) in
                #027E
                M[2011] := a48[7:0];
                #027F
                #0280
                M[2010] := a44[7:0];
                #0281
                #0284
                let:17 a52 = add17(0010,2010) in
                #0285
                A := a44[7:0];
                B := a48[7:0];
                C := M[2010];
                D := 00;
                E := 10;
                H := a52[15:0][15:8];
                L := a52[15:0][7:0];
                SPH := a2[15:8];
                SPL := a2[7:0];
                FlagS := a48[7:0][7];
                FlagZ := is_zero(a48[7:0]);
                FlagA := a51[7:0][4];
                FlagP := parity(a48[7:0]);
                FlagCY := a52[16];
                jump (024B);
              }
            }
          } else {
            #025C
            #025D
            #025E
            let:8 a53 = (M[2012] & M[2012]) in
            let:8 a54 = (M[2012] | M[2012]) in
            #025F
            if (!is_zero(a53)) {
              #0288
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a55 = (-1 + a2) in
                  M[a55] := 02;
                  let:16 a56 = (-1 + a55) in
                  M[a56] := 88;
                  A := a53;
                  B := M[2011];
                  C := M[2010];
                  H := 20;
                  L := 12;
                  SPH := a56[15:8];
                  SPL := a56[7:0];
                  FlagS := a53[7];
                  FlagZ := is_zero(a53);
                  FlagA := a54[3];
                  FlagP := parity(a53);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a57 = (-1 + a2) in
                  M[a57] := 02;
                  let:16 a58 = (-1 + a57) in
                  M[a58] := 88;
                  A := a53;
                  B := M[2011];
                  C := M[2010];
                  H := 20;
                  L := 12;
                  SPH := a58[15:8];
                  SPL := a58[7:0];
                  FlagS := a53[7];
                  FlagZ := is_zero(a53);
                  FlagA := a54[3];
                  FlagP := parity(a53);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                let:16 a59 = addWithCarry(!true,M[2012],~00) in
                let:8 a60 = (M[2012] & 0F) in
                let:8 a61 = (~00 & 0F) in
                let:16 a62 = addWithCarry(!true,a60,a61) in
                M[2012] := a59[7:0];
                #0289
                #028A
                #028B
                #0281
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a63 = (-1 + a2) in
                    M[a63] := 02;
                    let:16 a64 = (-1 + a63) in
                    M[a64] := 81;
                    A := a53;
                    B := M[2011];
                    C := M[2010];
                    H := 20;
                    L := 10;
                    SPH := a64[15:8];
                    SPL := a64[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a65 = (-1 + a2) in
                    M[a65] := 02;
                    let:16 a66 = (-1 + a65) in
                    M[a66] := 81;
                    A := a53;
                    B := M[2011];
                    C := M[2010];
                    H := 20;
                    L := 10;
                    SPH := a66[15:8];
                    SPL := a66[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  #0284
                  let:17 a67 = add17(0010,2010) in
                  #0285
                  A := a53;
                  B := M[2011];
                  C := M[2010];
                  D := 00;
                  E := 10;
                  H := a67[15:0][15:8];
                  L := a67[15:0][7:0];
                  SPH := a2[15:8];
                  SPL := a2[7:0];
                  FlagS := a59[7:0][7];
                  FlagZ := is_zero(a59[7:0]);
                  FlagA := a62[7:0][4];
                  FlagP := parity(a59[7:0]);
                  FlagCY := a67[16];
                  jump (024B);
                }
              }
            } else {
              #0262
              #0263
              #0264
              #0265
              #0266
              let:16 a68 = (-1 + a2) in
              M[a68] := 20;
              let:16 a69 = (-1 + a68) in
              M[a69] := 14;
              #0267
              #0268
              let:16 a70 = (-1 + a69) in
              M[a70] := M[2014];
              let:16 a71 = (-1 + a70) in
              M[a71] := M[2013];
              #0269
              #026C
              let:16 a72 = (1 + a71) in
              M[a71] := 6F;
              M[a72] := 02;
              #026D
              let:16 a73 = (-1 + a71) in
              M[a73] := 20;
              let:16 a74 = (-1 + a73) in
              M[a74] := 14;
              #026E
              A := a53;
              B := M[2011];
              C := M[2010];
              D := 20;
              E := 14;
              H := M[a72];
              L := M[a71];
              SPH := a74[15:8];
              SPL := a74[7:0];
              FlagS := a53[7];
              FlagZ := is_zero(a53);
              FlagA := a54[3];
              FlagP := parity(a53);
              FlagCY := false;
              jump ((M[a72],M[a71]));
            }
          }
        }
      }
    }

007E:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 00;
    let:16 a2 = (-1 + a1) in
    M[a2] := 81;
    #return-to: 0081
    #0913
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 09;
        let:16 a4 = (-1 + a3) in
        M[a4] := 13;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 09;
        let:16 a6 = (-1 + a5) in
        M[a6] := 13;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0916
      let:16 a7 = addWithCarry(!false,M[2009],~78) in
      let:8 a8 = (M[2009] & 0F) in
      let:8 a9 = (~78 & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #0918
      if (!!a7[15:8][0]) {
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := M[2009];
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := !a7[15:8][0];
        jump ((M[a11],M[a2]));
      } else {
        #0919
        #091C
        #091D
        let:8 a13 = (M[2092] | M[2091]) in
        #091E
        if (!is_zero(a13)) {
          #0929
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a14 = (-1 + a2) in
              M[a14] := 09;
              let:16 a15 = (-1 + a14) in
              M[a15] := 29;
              A := a13;
              H := M[2092];
              L := M[2091];
              SPH := a15[15:8];
              SPL := a15[7:0];
              FlagS := a13[7];
              FlagZ := is_zero(a13);
              FlagA := false;
              FlagP := parity(a13);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a16 = (-1 + a2) in
              M[a16] := 09;
              let:16 a17 = (-1 + a16) in
              M[a17] := 29;
              A := a13;
              H := M[2092];
              L := M[2091];
              SPH := a17[15:8];
              SPL := a17[7:0];
              FlagS := a13[7];
              FlagZ := is_zero(a13);
              FlagA := false;
              FlagP := parity(a13);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a18 = (-1 + (M[2092],M[2091])) in
            #092A
            M[2091] := a18[7:0];
            M[2092] := a18[15:8];
            #092D
            let:16 a19 = (1 + a2) in
            let:16 a20 = (1 + a19) in
            A := a13;
            H := a18[15:8];
            L := a18[7:0];
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := false;
            FlagP := parity(a13);
            FlagCY := false;
            jump ((M[a19],M[a2]));
          }
        } else {
          #0921
          #0924
          #0926
          M[2083] := 01;
          #0929
          #092A
          M[2091] := FF;
          M[2092] := 05;
          #092D
          let:16 a21 = (1 + a2) in
          let:16 a22 = (1 + a21) in
          A := 01;
          H := 05;
          L := FF;
          SPH := a22[15:8];
          SPL := a22[7:0];
          FlagS := a13[7];
          FlagZ := is_zero(a13);
          FlagA := false;
          FlagP := parity(a13);
          FlagCY := false;
          jump ((M[a21],M[a2]));
        }
      }
    }

0081:

    #0082
    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #0083
    let:16 a3 = (1 + a2) in
    let:16 a4 = (1 + a3) in
    #0084
    let:16 a5 = (1 + a4) in
    let:16 a6 = (1 + a5) in
    #0085
    let:16 a7 = (1 + a6) in
    let:16 a8 = (1 + a7) in
    #0086
    enable_interrupts()
    #0087
    let:16 a9 = (1 + a8) in
    let:16 a10 = (1 + a9) in
    A := M[a7];
    B := M[a5];
    C := M[a4];
    D := M[a3];
    E := M[a2];
    H := M[a1];
    L := M[(SPH,SPL)];
    SPH := a10[15:8];
    SPL := a10[7:0];
    FlagS := M[a6][7];
    FlagZ := M[a6][6];
    FlagA := M[a6][4];
    FlagP := M[a6][2];
    FlagCY := M[a6][0];
    jump ((M[a9],M[a8]));

00AB:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 00;
    let:16 a2 = (-1 + a1) in
    M[a2] := AE;
    #return-to: 00AE
    #0141
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 01;
        let:16 a4 = (-1 + a3) in
        M[a4] := 41;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 01;
        let:16 a6 = (-1 + a5) in
        M[a6] := 41;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0144
      let:8 a7 = (M[2068] & M[2068]) in
      let:8 a8 = (M[2068] | M[2068]) in
      #0145
      if (is_zero(a7)) {
        let:16 a9 = (1 + a2) in
        let:16 a10 = (1 + a9) in
        A := a7;
        SPH := a10[15:8];
        SPL := a10[7:0];
        FlagS := a7[7];
        FlagZ := is_zero(a7);
        FlagA := a8[3];
        FlagP := parity(a7);
        FlagCY := false;
        jump ((M[a9],M[a2]));
      } else {
        #0146
        #0149
        let:8 a11 = (M[2000] & M[2000]) in
        let:8 a12 = (M[2000] | M[2000]) in
        #014A
        if (!is_zero(a11)) {
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        } else {
          #014B
          #014E
          #014F
          #0152
          #0154
          let:16 a15 = addWithCarry(true,M[2006],00) in
          let:8 a16 = (M[2006] & 0F) in
          let:8 a17 = (00 & 0F) in
          let:16 a18 = addWithCarry(true,a16,a17) in
          #0155
          let:16 a19 = addWithCarry(!false,a15[7:0],~37) in
          let:8 a20 = (a15[7:0] & 0F) in
          let:8 a21 = (~37 & 0F) in
          let:16 a22 = addWithCarry(!false,a20,a21) in
          #0157
          if (is_zero(a19[7:0])) {
            let:16 a23 = (-1 + a2) in
            M[a23] := 01;
            let:16 a24 = (-1 + a23) in
            M[a24] := 5A;
            #return-to: 015A
            #01A1
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a25 = (-1 + a24) in
                M[a25] := 01;
                let:16 a26 = (-1 + a25) in
                M[a26] := A1;
                A := a15[7:0];
                D := 02;
                H := M[2067];
                SPH := a26[15:8];
                SPL := a26[7:0];
                FlagS := a19[7:0][7];
                FlagZ := is_zero(a19[7:0]);
                FlagA := a22[7:0][4];
                FlagP := parity(a19[7:0]);
                FlagCY := !a19[15:8][0];
                jump (0008);
              } else {
                let:16 a27 = (-1 + a24) in
                M[a27] := 01;
                let:16 a28 = (-1 + a27) in
                M[a28] := A1;
                A := a15[7:0];
                D := 02;
                H := M[2067];
                SPH := a28[15:8];
                SPL := a28[7:0];
                FlagS := a19[7:0][7];
                FlagZ := is_zero(a19[7:0]);
                FlagA := a22[7:0][4];
                FlagP := parity(a19[7:0]);
                FlagCY := !a19[15:8][0];
                jump (0010);
              }
            } else {
              let:16 a29 = addWithCarry(!true,02,~00) in
              let:8 a30 = (02 & 0F) in
              let:8 a31 = (~00 & 0F) in
              let:16 a32 = addWithCarry(!true,a30,a31) in
              #01A2
              if (is_zero(a29[7:0])) {
                #01CD
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a33 = (-1 + a24) in
                    M[a33] := 01;
                    let:16 a34 = (-1 + a33) in
                    M[a34] := CD;
                    A := a15[7:0];
                    D := a29[7:0];
                    H := M[2067];
                    SPH := a34[15:8];
                    SPL := a34[7:0];
                    FlagS := a29[7:0][7];
                    FlagZ := is_zero(a29[7:0]);
                    FlagA := a32[7:0][4];
                    FlagP := parity(a29[7:0]);
                    FlagCY := !a19[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a35 = (-1 + a24) in
                    M[a35] := 01;
                    let:16 a36 = (-1 + a35) in
                    M[a36] := CD;
                    A := a15[7:0];
                    D := a29[7:0];
                    H := M[2067];
                    SPH := a36[15:8];
                    SPL := a36[7:0];
                    FlagS := a29[7:0][7];
                    FlagZ := is_zero(a29[7:0]);
                    FlagA := a32[7:0][4];
                    FlagP := parity(a29[7:0]);
                    FlagCY := !a19[15:8][0];
                    jump (0010);
                  }
                } else {
                  let:16 a37 = (1 + a24) in
                  let:16 a38 = (1 + a37) in
                  #01CE
                  let:16 a39 = (1 + a38) in
                  let:16 a40 = (1 + a39) in
                  A := a15[7:0];
                  D := a29[7:0];
                  H := M[a37];
                  L := M[a24];
                  SPH := a40[15:8];
                  SPL := a40[7:0];
                  FlagS := a29[7:0][7];
                  FlagZ := is_zero(a29[7:0]);
                  FlagA := a32[7:0][4];
                  FlagP := parity(a29[7:0]);
                  FlagCY := !a19[15:8][0];
                  jump ((M[a39],M[a38]));
                }
              } else {
                #01A5
                #01A8
                M[2006] := 00;
                #01AA
                #01AB
                #01AC
                M[2007] := 00;
                #01AE
                let:16 a41 = (-1 + a24) in
                M[a41] := 01;
                let:16 a42 = (-1 + a41) in
                M[a42] := B1;
                #return-to: 01B1
                #01D9
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a43 = (-1 + a42) in
                    M[a43] := 01;
                    let:16 a44 = (-1 + a43) in
                    M[a44] := D9;
                    A := a15[7:0];
                    C := M[2007];
                    D := a29[7:0];
                    H := 20;
                    L := 07;
                    SPH := a44[15:8];
                    SPL := a44[7:0];
                    FlagS := a29[7:0][7];
                    FlagZ := is_zero(a29[7:0]);
                    FlagA := a32[7:0][4];
                    FlagP := parity(a29[7:0]);
                    FlagCY := !a19[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a45 = (-1 + a42) in
                    M[a45] := 01;
                    let:16 a46 = (-1 + a45) in
                    M[a46] := D9;
                    A := a15[7:0];
                    C := M[2007];
                    D := a29[7:0];
                    H := 20;
                    L := 07;
                    SPH := a46[15:8];
                    SPL := a46[7:0];
                    FlagS := a29[7:0][7];
                    FlagZ := is_zero(a29[7:0]);
                    FlagA := a32[7:0][4];
                    FlagP := parity(a29[7:0]);
                    FlagCY := !a19[15:8][0];
                    jump (0010);
                  }
                } else {
                  #01DA
                  #01DB
                  #01DC
                  #01DD
                  let:16 a47 = addWithCarry(false,M[2009],M[2007]) in
                  let:8 a48 = (M[2009] & 0F) in
                  let:8 a49 = (M[2007] & 0F) in
                  let:16 a50 = addWithCarry(false,a48,a49) in
                  #01DE
                  M[2009] := a47[7:0];
                  #01DF
                  #01E0
                  #01E1
                  let:16 a51 = addWithCarry(false,M[200A],M[2008]) in
                  let:8 a52 = (M[200A] & 0F) in
                  let:8 a53 = (M[2008] & 0F) in
                  let:16 a54 = addWithCarry(false,a52,a53) in
                  #01E2
                  M[200A] := a51[7:0];
                  #01E3
                  let:16 a55 = (1 + a42) in
                  let:16 a56 = (1 + a55) in
                  A := a51[7:0];
                  B := M[2008];
                  C := M[2007];
                  D := a29[7:0];
                  H := 20;
                  L := 0A;
                  SPH := a56[15:8];
                  SPL := a56[7:0];
                  FlagS := a51[7:0][7];
                  FlagZ := is_zero(a51[7:0]);
                  FlagA := a54[7:0][4];
                  FlagP := parity(a51[7:0]);
                  FlagCY := a51[15:8][0];
                  jump ((M[a55],M[a42]));
                }
              }
            }
          } else {
            A := a15[7:0];
            D := 02;
            H := M[2067];
            SPH := a2[15:8];
            SPL := a2[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := !a19[15:8][0];
            jump (015A);
          }
        }
      }
    }

00AE:

    #0082
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 00;
        let:16 a2 = (-1 + a1) in
        M[a2] := 82;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 00;
        let:16 a4 = (-1 + a3) in
        M[a4] := 82;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (1 + (SPH,SPL)) in
      let:16 a6 = (1 + a5) in
      #0083
      let:16 a7 = (1 + a6) in
      let:16 a8 = (1 + a7) in
      #0084
      let:16 a9 = (1 + a8) in
      let:16 a10 = (1 + a9) in
      #0085
      let:16 a11 = (1 + a10) in
      let:16 a12 = (1 + a11) in
      #0086
      enable_interrupts()
      #0087
      let:16 a13 = (1 + a12) in
      let:16 a14 = (1 + a13) in
      A := M[a11];
      B := M[a9];
      C := M[a8];
      D := M[a7];
      E := M[a6];
      H := M[a5];
      L := M[(SPH,SPL)];
      SPH := a14[15:8];
      SPL := a14[7:0];
      FlagS := M[a10][7];
      FlagZ := M[a10][6];
      FlagA := M[a10][4];
      FlagP := M[a10][2];
      FlagCY := M[a10][0];
      jump ((M[a13],M[a12]));
    }

00B4:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := H;
    let:16 a2 = (-1 + a1) in
    M[a2] := L;
    #00B5
    #00B6
    let:16 a3 = (1 + (H,L)) in
    #00B7
    #00B8
    #00B9
    M[2009] := M[(H,L)];
    M[200A] := M[a3];
    #00BC
    M[200B] := M[(H,L)];
    M[200C] := M[a3];
    #00BF
    let:16 a4 = (1 + a2) in
    let:16 a5 = (1 + a4) in
    #00C0
    let:16 a6 = (-1 + (M[a4],M[a2])) in
    #00C1
    #00C2
    let:16 a7 = addWithCarry(!false,M[a6],~03) in
    let:8 a8 = (M[a6] & 0F) in
    let:8 a9 = (~03 & 0F) in
    let:16 a10 = addWithCarry(!false,a8,a9) in
    #00C4
    if (!is_zero(a7[7:0])) {
      #00C8
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a11 = (-1 + a5) in
          M[a11] := 00;
          let:16 a12 = (-1 + a11) in
          M[a12] := C8;
          A := M[a6];
          H := a6[15:8];
          L := a6[7:0];
          SPH := a12[15:8];
          SPL := a12[7:0];
          FlagS := a7[7:0][7];
          FlagZ := is_zero(a7[7:0]);
          FlagA := a10[7:0][4];
          FlagP := parity(a7[7:0]);
          FlagCY := !a7[15:8][0];
          jump (0008);
        } else {
          let:16 a13 = (-1 + a5) in
          M[a13] := 00;
          let:16 a14 = (-1 + a13) in
          M[a14] := C8;
          A := M[a6];
          H := a6[15:8];
          L := a6[7:0];
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a7[7:0][7];
          FlagZ := is_zero(a7[7:0]);
          FlagA := a10[7:0][4];
          FlagP := parity(a7[7:0]);
          FlagCY := !a7[15:8][0];
          jump (0010);
        }
      } else {
        M[2008] := M[a6];
        #00CB
        let:16 a15 = addWithCarry(!false,M[a6],~FE) in
        let:8 a16 = (M[a6] & 0F) in
        let:8 a17 = (~FE & 0F) in
        let:16 a18 = addWithCarry(!false,a16,a17) in
        #00CD
        #00CF
        if (!is_zero(a15[7:0])) {
          #00D3
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a19 = (-1 + a5) in
              M[a19] := 00;
              let:16 a20 = (-1 + a19) in
              M[a20] := D3;
              A := 00;
              H := a6[15:8];
              L := a6[7:0];
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a15[7:0][7];
              FlagZ := is_zero(a15[7:0]);
              FlagA := a18[7:0][4];
              FlagP := parity(a15[7:0]);
              FlagCY := !a15[15:8][0];
              jump (0008);
            } else {
              let:16 a21 = (-1 + a5) in
              M[a21] := 00;
              let:16 a22 = (-1 + a21) in
              M[a22] := D3;
              A := 00;
              H := a6[15:8];
              L := a6[7:0];
              SPH := a22[15:8];
              SPL := a22[7:0];
              FlagS := a15[7:0][7];
              FlagZ := is_zero(a15[7:0]);
              FlagA := a18[7:0][4];
              FlagP := parity(a15[7:0]);
              FlagCY := !a15[15:8][0];
              jump (0010);
            }
          } else {
            M[200D] := 00;
            #00D6
            let:16 a23 = (1 + a5) in
            let:16 a24 = (1 + a23) in
            A := 00;
            H := a6[15:8];
            L := a6[7:0];
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagS := a15[7:0][7];
            FlagZ := is_zero(a15[7:0]);
            FlagA := a18[7:0][4];
            FlagP := parity(a15[7:0]);
            FlagCY := !a15[15:8][0];
            jump ((M[a23],M[a5]));
          }
        } else {
          #00D2
          let:16 a25 = addWithCarry(true,00,00) in
          let:8 a26 = (00 & 0F) in
          let:8 a27 = (00 & 0F) in
          let:16 a28 = addWithCarry(true,a26,a27) in
          #00D3
          M[200D] := a25[7:0];
          #00D6
          let:16 a29 = (1 + a5) in
          let:16 a30 = (1 + a29) in
          A := a25[7:0];
          H := a6[15:8];
          L := a6[7:0];
          SPH := a30[15:8];
          SPL := a30[7:0];
          FlagS := a25[7:0][7];
          FlagZ := is_zero(a25[7:0]);
          FlagA := a28[7:0][4];
          FlagP := parity(a25[7:0]);
          FlagCY := !a15[15:8][0];
          jump ((M[a29],M[a5]));
        }
      }
    } else {
      #00C7
      let:16 a31 = addWithCarry(!true,M[a6],~00) in
      let:8 a32 = (M[a6] & 0F) in
      let:8 a33 = (~00 & 0F) in
      let:16 a34 = addWithCarry(!true,a32,a33) in
      #00C8
      M[2008] := a31[7:0];
      #00CB
      let:16 a35 = addWithCarry(!false,a31[7:0],~FE) in
      let:8 a36 = (a31[7:0] & 0F) in
      let:8 a37 = (~FE & 0F) in
      let:16 a38 = addWithCarry(!false,a36,a37) in
      #00CD
      #00CF
      if (!is_zero(a35[7:0])) {
        #00D3
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a39 = (-1 + a5) in
            M[a39] := 00;
            let:16 a40 = (-1 + a39) in
            M[a40] := D3;
            A := 00;
            H := a6[15:8];
            L := a6[7:0];
            SPH := a40[15:8];
            SPL := a40[7:0];
            FlagS := a35[7:0][7];
            FlagZ := is_zero(a35[7:0]);
            FlagA := a38[7:0][4];
            FlagP := parity(a35[7:0]);
            FlagCY := !a35[15:8][0];
            jump (0008);
          } else {
            let:16 a41 = (-1 + a5) in
            M[a41] := 00;
            let:16 a42 = (-1 + a41) in
            M[a42] := D3;
            A := 00;
            H := a6[15:8];
            L := a6[7:0];
            SPH := a42[15:8];
            SPL := a42[7:0];
            FlagS := a35[7:0][7];
            FlagZ := is_zero(a35[7:0]);
            FlagA := a38[7:0][4];
            FlagP := parity(a35[7:0]);
            FlagCY := !a35[15:8][0];
            jump (0010);
          }
        } else {
          M[200D] := 00;
          #00D6
          let:16 a43 = (1 + a5) in
          let:16 a44 = (1 + a43) in
          A := 00;
          H := a6[15:8];
          L := a6[7:0];
          SPH := a44[15:8];
          SPL := a44[7:0];
          FlagS := a35[7:0][7];
          FlagZ := is_zero(a35[7:0]);
          FlagA := a38[7:0][4];
          FlagP := parity(a35[7:0]);
          FlagCY := !a35[15:8][0];
          jump ((M[a43],M[a5]));
        }
      } else {
        #00D2
        let:16 a45 = addWithCarry(true,00,00) in
        let:8 a46 = (00 & 0F) in
        let:8 a47 = (00 & 0F) in
        let:16 a48 = addWithCarry(true,a46,a47) in
        #00D3
        M[200D] := a45[7:0];
        #00D6
        let:16 a49 = (1 + a5) in
        let:16 a50 = (1 + a49) in
        A := a45[7:0];
        H := a6[15:8];
        L := a6[7:0];
        SPH := a50[15:8];
        SPL := a50[7:0];
        FlagS := a45[7:0][7];
        FlagZ := is_zero(a45[7:0]);
        FlagA := a48[7:0][4];
        FlagP := parity(a45[7:0]);
        FlagCY := !a35[15:8][0];
        jump ((M[a49],M[a5]));
      }
    }

012E:

    #0131
    #0133
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 01;
    let:16 a2 = (-1 + a1) in
    M[a2] := 36;
    #return-to: 0136
    #15D3
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 15;
        let:16 a4 = (-1 + a3) in
        M[a4] := D3;
        B := 10;
        H := M[200C];
        L := M[200B];
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 15;
        let:16 a6 = (-1 + a5) in
        M[a6] := D3;
        B := 10;
        H := M[200C];
        L := M[200B];
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 15;
      let:16 a8 = (-1 + a7) in
      M[a8] := D6;
      #return-to: 15D6
      #1474
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := 74;
          B := 10;
          H := M[200C];
          L := M[200B];
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 14;
          let:16 a12 = (-1 + a11) in
          M[a12] := 74;
          B := 10;
          H := M[200C];
          L := M[200B];
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1475
        let:8 a13 = (07 & M[200B]) in
        let:8 a14 = (07 | M[200B]) in
        #1477
        #1479
        #1A47
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a8) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 47;
            A := a13;
            B := 10;
            H := M[200C];
            L := M[200B];
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := a14[3];
            FlagP := parity(a13);
            FlagCY := false;
            Shifter_OFF := a13;
            jump (0008);
          } else {
            let:16 a17 = (-1 + a8) in
            M[a17] := 1A;
            let:16 a18 = (-1 + a17) in
            M[a18] := 47;
            A := a13;
            B := 10;
            H := M[200C];
            L := M[200B];
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := a14[3];
            FlagP := parity(a13);
            FlagCY := false;
            Shifter_OFF := a13;
            jump (0010);
          }
        } else {
          let:16 a19 = (-1 + a8) in
          M[a19] := 10;
          let:16 a20 = (-1 + a19) in
          M[a20] := C;
          #1A48
          #1A4A
          #1A4B
          #1A4C
          #1A4D
          #1A4E
          #1A4F
          #1A50
          let:16 a21 = addWithCarry(!true,03,~00) in
          let:8 a22 = (03 & 0F) in
          let:8 a23 = (~00 & 0F) in
          let:16 a24 = addWithCarry(!true,a22,a23) in
          #1A51
          if (!is_zero(a21[7:0])) {
            A := updateBit((M[200B] >> 01),7,M[200C][0]);
            B := a21[7:0];
            H := updateBit((M[200C] >> 01),7,false);
            L := updateBit((M[200B] >> 01),7,M[200C][0]);
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a21[7:0][7];
            FlagZ := is_zero(a21[7:0]);
            FlagA := a24[7:0][4];
            FlagP := parity(a21[7:0]);
            FlagCY := M[200B][0];
            Shifter_OFF := a13;
            jump (1A4A);
          } else {
            #1A54
            #1A55
            let:8 a25 = (3F & updateBit((M[200C] >> 01),7,false)) in
            let:8 a26 = (3F | updateBit((M[200C] >> 01),7,false)) in
            #1A57
            let:8 a27 = (20 | a25) in
            #1A59
            #1A5A
            let:16 a28 = (1 + a20) in
            let:16 a29 = (1 + a28) in
            #1A5B
            let:16 a30 = (1 + a29) in
            let:16 a31 = (1 + a30) in
            A := a27;
            B := M[a28];
            C := M[a20];
            H := a27;
            L := updateBit((M[200B] >> 01),7,M[200C][0]);
            SPH := a31[15:8];
            SPL := a31[7:0];
            FlagS := a27[7];
            FlagZ := is_zero(a27);
            FlagA := false;
            FlagP := parity(a27);
            FlagCY := false;
            Shifter_OFF := a13;
            jump ((M[a30],M[a29]));
          }
        }
      }
    }

0136:

    let:8 a1 = (A ^ A) in
    #0137
    M[2000] := a1;
    #013A
    let:16 a2 = (1 + (SPH,SPL)) in
    let:16 a3 = (1 + a2) in
    A := a1;
    SPH := a3[15:8];
    SPL := a3[7:0];
    FlagS := a1[7];
    FlagZ := is_zero(a1);
    FlagA := false;
    FlagP := parity(a1);
    FlagCY := false;
    jump ((M[a2],M[(SPH,SPL)]));

015A:

    #015B
    #015C
    let:16 a1 = addWithCarry(!true,M[(H,A)],~00) in
    let:8 a2 = (M[(H,A)] & 0F) in
    let:8 a3 = (~00 & 0F) in
    let:16 a4 = addWithCarry(!true,a2,a3) in
    #015D
    if (!is_zero(a1[7:0])) {
      #0154
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 01;
          let:16 a6 = (-1 + a5) in
          M[a6] := 54;
          B := a1[7:0];
          L := A;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 01;
          let:16 a8 = (-1 + a7) in
          M[a8] := 54;
          B := a1[7:0];
          L := A;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0010);
        }
      } else {
        let:16 a9 = addWithCarry(true,A,00) in
        let:8 a10 = (A & 0F) in
        let:8 a11 = (00 & 0F) in
        let:16 a12 = addWithCarry(true,a10,a11) in
        #0155
        let:16 a13 = addWithCarry(!false,a9[7:0],~37) in
        let:8 a14 = (a9[7:0] & 0F) in
        let:8 a15 = (~37 & 0F) in
        let:16 a16 = addWithCarry(!false,a14,a15) in
        #0157
        if (is_zero(a13[7:0])) {
          let:16 a17 = (-1 + (SPH,SPL)) in
          M[a17] := 01;
          let:16 a18 = (-1 + a17) in
          M[a18] := 5A;
          #return-to: 015A
          #01A1
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a19 = (-1 + a18) in
              M[a19] := 01;
              let:16 a20 = (-1 + a19) in
              M[a20] := A1;
              A := a9[7:0];
              B := a1[7:0];
              L := A;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a13[7:0][7];
              FlagZ := is_zero(a13[7:0]);
              FlagA := a16[7:0][4];
              FlagP := parity(a13[7:0]);
              FlagCY := !a13[15:8][0];
              jump (0008);
            } else {
              let:16 a21 = (-1 + a18) in
              M[a21] := 01;
              let:16 a22 = (-1 + a21) in
              M[a22] := A1;
              A := a9[7:0];
              B := a1[7:0];
              L := A;
              SPH := a22[15:8];
              SPL := a22[7:0];
              FlagS := a13[7:0][7];
              FlagZ := is_zero(a13[7:0]);
              FlagA := a16[7:0][4];
              FlagP := parity(a13[7:0]);
              FlagCY := !a13[15:8][0];
              jump (0010);
            }
          } else {
            let:16 a23 = addWithCarry(!true,D,~00) in
            let:8 a24 = (D & 0F) in
            let:8 a25 = (~00 & 0F) in
            let:16 a26 = addWithCarry(!true,a24,a25) in
            #01A2
            if (is_zero(a23[7:0])) {
              #01CD
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a27 = (-1 + a18) in
                  M[a27] := 01;
                  let:16 a28 = (-1 + a27) in
                  M[a28] := CD;
                  A := a9[7:0];
                  B := a1[7:0];
                  D := a23[7:0];
                  L := A;
                  SPH := a28[15:8];
                  SPL := a28[7:0];
                  FlagS := a23[7:0][7];
                  FlagZ := is_zero(a23[7:0]);
                  FlagA := a26[7:0][4];
                  FlagP := parity(a23[7:0]);
                  FlagCY := !a13[15:8][0];
                  jump (0008);
                } else {
                  let:16 a29 = (-1 + a18) in
                  M[a29] := 01;
                  let:16 a30 = (-1 + a29) in
                  M[a30] := CD;
                  A := a9[7:0];
                  B := a1[7:0];
                  D := a23[7:0];
                  L := A;
                  SPH := a30[15:8];
                  SPL := a30[7:0];
                  FlagS := a23[7:0][7];
                  FlagZ := is_zero(a23[7:0]);
                  FlagA := a26[7:0][4];
                  FlagP := parity(a23[7:0]);
                  FlagCY := !a13[15:8][0];
                  jump (0010);
                }
              } else {
                let:16 a31 = (1 + a18) in
                let:16 a32 = (1 + a31) in
                #01CE
                let:16 a33 = (1 + a32) in
                let:16 a34 = (1 + a33) in
                A := a9[7:0];
                B := a1[7:0];
                D := a23[7:0];
                H := M[a31];
                L := M[a18];
                SPH := a34[15:8];
                SPL := a34[7:0];
                FlagS := a23[7:0][7];
                FlagZ := is_zero(a23[7:0]);
                FlagA := a26[7:0][4];
                FlagP := parity(a23[7:0]);
                FlagCY := !a13[15:8][0];
                jump ((M[a33],M[a32]));
              }
            } else {
              #01A5
              #01A8
              M[2006] := 00;
              #01AA
              #01AB
              #01AC
              M[2007] := 00;
              #01AE
              let:16 a35 = (-1 + a18) in
              M[a35] := 01;
              let:16 a36 = (-1 + a35) in
              M[a36] := B1;
              #return-to: 01B1
              #01D9
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a37 = (-1 + a36) in
                  M[a37] := 01;
                  let:16 a38 = (-1 + a37) in
                  M[a38] := D9;
                  A := a9[7:0];
                  B := a1[7:0];
                  C := M[2007];
                  D := a23[7:0];
                  H := 20;
                  L := 07;
                  SPH := a38[15:8];
                  SPL := a38[7:0];
                  FlagS := a23[7:0][7];
                  FlagZ := is_zero(a23[7:0]);
                  FlagA := a26[7:0][4];
                  FlagP := parity(a23[7:0]);
                  FlagCY := !a13[15:8][0];
                  jump (0008);
                } else {
                  let:16 a39 = (-1 + a36) in
                  M[a39] := 01;
                  let:16 a40 = (-1 + a39) in
                  M[a40] := D9;
                  A := a9[7:0];
                  B := a1[7:0];
                  C := M[2007];
                  D := a23[7:0];
                  H := 20;
                  L := 07;
                  SPH := a40[15:8];
                  SPL := a40[7:0];
                  FlagS := a23[7:0][7];
                  FlagZ := is_zero(a23[7:0]);
                  FlagA := a26[7:0][4];
                  FlagP := parity(a23[7:0]);
                  FlagCY := !a13[15:8][0];
                  jump (0010);
                }
              } else {
                #01DA
                #01DB
                #01DC
                #01DD
                let:16 a41 = addWithCarry(false,M[2009],M[2007]) in
                let:8 a42 = (M[2009] & 0F) in
                let:8 a43 = (M[2007] & 0F) in
                let:16 a44 = addWithCarry(false,a42,a43) in
                #01DE
                M[2009] := a41[7:0];
                #01DF
                #01E0
                #01E1
                let:16 a45 = addWithCarry(false,M[200A],M[2008]) in
                let:8 a46 = (M[200A] & 0F) in
                let:8 a47 = (M[2008] & 0F) in
                let:16 a48 = addWithCarry(false,a46,a47) in
                #01E2
                M[200A] := a45[7:0];
                #01E3
                let:16 a49 = (1 + a36) in
                let:16 a50 = (1 + a49) in
                A := a45[7:0];
                B := M[2008];
                C := M[2007];
                D := a23[7:0];
                H := 20;
                L := 0A;
                SPH := a50[15:8];
                SPL := a50[7:0];
                FlagS := a45[7:0][7];
                FlagZ := is_zero(a45[7:0]);
                FlagA := a48[7:0][4];
                FlagP := parity(a45[7:0]);
                FlagCY := a45[15:8][0];
                jump ((M[a49],M[a36]));
              }
            }
          }
        } else {
          A := a9[7:0];
          B := a1[7:0];
          L := A;
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          FlagCY := !a13[15:8][0];
          jump (015A);
        }
      }
    } else {
      #0160
      M[2006] := A;
      #0163
      let:16 a51 = (-1 + (SPH,SPL)) in
      M[a51] := 01;
      let:16 a52 = (-1 + a51) in
      M[a52] := 66;
      #return-to: 0166
      #017A
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a53 = (-1 + a52) in
          M[a53] := 01;
          let:16 a54 = (-1 + a53) in
          M[a54] := 7A;
          B := a1[7:0];
          L := A;
          SPH := a54[15:8];
          SPL := a54[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0008);
        } else {
          let:16 a55 = (-1 + a52) in
          M[a55] := 01;
          let:16 a56 = (-1 + a55) in
          M[a56] := 7A;
          B := a1[7:0];
          L := A;
          SPH := a56[15:8];
          SPL := a56[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0010);
        }
      } else {
        #017C
        #017D
        #0180
        #0181
        #0182
        #0183
        let:16 a57 = addWithCarry(!false,A,~0B) in
        let:8 a58 = (A & 0F) in
        let:8 a59 = (~0B & 0F) in
        let:16 a60 = addWithCarry(!false,a58,a59) in
        #0185
        if (a57[7:0][7]) {
          #0194
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a61 = (-1 + a52) in
              M[a61] := 01;
              let:16 a62 = (-1 + a61) in
              M[a62] := 94;
              B := M[2009];
              C := M[200A];
              D := 00;
              H := 20;
              L := 0A;
              SPH := a62[15:8];
              SPL := a62[7:0];
              FlagS := a57[7:0][7];
              FlagZ := is_zero(a57[7:0]);
              FlagA := a60[7:0][4];
              FlagP := parity(a57[7:0]);
              FlagCY := !a57[15:8][0];
              jump (0008);
            } else {
              let:16 a63 = (-1 + a52) in
              M[a63] := 01;
              let:16 a64 = (-1 + a63) in
              M[a64] := 94;
              B := M[2009];
              C := M[200A];
              D := 00;
              H := 20;
              L := 0A;
              SPH := a64[15:8];
              SPL := a64[7:0];
              FlagS := a57[7:0][7];
              FlagZ := is_zero(a57[7:0]);
              FlagA := a60[7:0][4];
              FlagP := parity(a57[7:0]);
              FlagCY := !a57[15:8][0];
              jump (0010);
            }
          } else {
            #0195
            let:8 a65 = (A & A) in
            let:8 a66 = (A | A) in
            #0196
            if (is_zero(a65)) {
              let:16 a67 = (1 + a52) in
              let:16 a68 = (1 + a67) in
              A := a65;
              B := M[2009];
              C := M[200A];
              D := 00;
              H := 20;
              L := M[2009];
              SPH := a68[15:8];
              SPL := a68[7:0];
              FlagS := a65[7];
              FlagZ := is_zero(a65);
              FlagA := a66[3];
              FlagP := parity(a65);
              FlagCY := false;
              jump ((M[a67],M[a52]));
            } else {
              #0197
              #0198
              #0199
              let:16 a69 = addWithCarry(false,10,M[200A]) in
              let:8 a70 = (10 & 0F) in
              let:8 a71 = (M[200A] & 0F) in
              let:16 a72 = addWithCarry(false,a70,a71) in
              #019B
              #019C
              #019D
              let:16 a73 = addWithCarry(!true,a65,~00) in
              let:8 a74 = (a65 & 0F) in
              let:8 a75 = (~00 & 0F) in
              let:16 a76 = addWithCarry(!true,a74,a75) in
              #019E
              A := a73[7:0];
              B := M[2009];
              C := a69[7:0];
              D := 00;
              E := a65;
              H := 20;
              L := M[2009];
              SPH := a52[15:8];
              SPL := a52[7:0];
              FlagS := a73[7:0][7];
              FlagZ := is_zero(a73[7:0]);
              FlagA := a76[7:0][4];
              FlagP := parity(a73[7:0]);
              FlagCY := a69[15:8][0];
              jump (0195);
            }
          }
        } else {
          #0188
          let:16 a77 = addWithCarry(!!a57[15:8][0],A,~0B) in
          let:8 a78 = (A & 0F) in
          let:8 a79 = (~0B & 0F) in
          let:16 a80 = addWithCarry(!!a57[15:8][0],a78,a79) in
          #018A
          #018B
          #018C
          let:16 a81 = addWithCarry(false,10,M[2009]) in
          let:8 a82 = (10 & 0F) in
          let:8 a83 = (M[2009] & 0F) in
          let:16 a84 = addWithCarry(false,a82,a83) in
          #018E
          #018F
          #0190
          let:16 a85 = addWithCarry(true,00,00) in
          let:8 a86 = (00 & 0F) in
          let:8 a87 = (00 & 0F) in
          let:16 a88 = addWithCarry(true,a86,a87) in
          #0191
          A := a77[7:0];
          B := a81[7:0];
          C := M[200A];
          D := a85[7:0];
          E := a77[7:0];
          H := 20;
          L := 0A;
          SPH := a52[15:8];
          SPL := a52[7:0];
          FlagS := a85[7:0][7];
          FlagZ := is_zero(a85[7:0]);
          FlagA := a88[7:0][4];
          FlagP := parity(a85[7:0]);
          FlagCY := a81[15:8][0];
          jump (0183);
        }
      }
    }

0166:

    #0167
    M[200B] := L;
    M[200C] := C;
    #016A
    #016B
    let:16 a1 = addWithCarry(!false,L,~28) in
    let:8 a2 = (L & 0F) in
    let:8 a3 = (~28 & 0F) in
    let:16 a4 = addWithCarry(!false,a2,a3) in
    #016D
    if (!a1[15:8][0]) {
      #1971
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 19;
          let:16 a6 = (-1 + a5) in
          M[a6] := 71;
          A := L;
          H := C;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 19;
          let:16 a8 = (-1 + a7) in
          M[a8] := 71;
          A := L;
          H := C;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0010);
        }
      } else {
        #1973
        M[206D] := 01;
        #1976
        #16E6
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + (SPH,SPL)) in
            M[a9] := 16;
            let:16 a10 = (-1 + a9) in
            M[a10] := E6;
            A := 01;
            H := C;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump (0008);
          } else {
            let:16 a11 = (-1 + (SPH,SPL)) in
            M[a11] := 16;
            let:16 a12 = (-1 + a11) in
            M[a12] := E6;
            A := 01;
            H := C;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump (0010);
          }
        } else {
          #16E9
          enable_interrupts()
          #16EA
          let:8 a13 = (01 ^ 01) in
          #16EB
          M[2015] := a13;
          #16EE
          M[23FF] := 16;
          M[23FE] := F1;
          #return-to: 16F1
          #14D8
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              M[23FD] := 14;
              M[23FC] := D8;
              A := a13;
              H := C;
              SPH := 23;
              SPL := FC;
              FlagS := a13[7];
              FlagZ := is_zero(a13);
              FlagA := false;
              FlagP := parity(a13);
              FlagCY := false;
              jump (0008);
            } else {
              M[23FD] := 14;
              M[23FC] := D8;
              A := a13;
              H := C;
              SPH := 23;
              SPL := FC;
              FlagS := a13[7];
              FlagZ := is_zero(a13);
              FlagA := false;
              FlagP := parity(a13);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #14DB
            let:16 a14 = addWithCarry(!false,M[2025],~05) in
            let:8 a15 = (M[2025] & 0F) in
            let:8 a16 = (~05 & 0F) in
            let:16 a17 = addWithCarry(!false,a15,a16) in
            #14DD
            if (is_zero(a14[7:0])) {
              A := M[2025];
              H := C;
              SPH := 24;
              SPL := 00;
              FlagS := a14[7:0][7];
              FlagZ := is_zero(a14[7:0]);
              FlagA := a17[7:0][4];
              FlagP := parity(a14[7:0]);
              FlagCY := !a14[15:8][0];
              jump ((M[23FF],M[23FE]));
            } else {
              #14DE
              let:16 a18 = addWithCarry(!false,M[2025],~02) in
              let:8 a19 = (M[2025] & 0F) in
              let:8 a20 = (~02 & 0F) in
              let:16 a21 = addWithCarry(!false,a19,a20) in
              #14E0
              if (!is_zero(a18[7:0])) {
                A := M[2025];
                H := C;
                SPH := 24;
                SPL := 00;
                FlagS := a18[7:0][7];
                FlagZ := is_zero(a18[7:0]);
                FlagA := a21[7:0][4];
                FlagP := parity(a18[7:0]);
                FlagCY := !a18[15:8][0];
                jump ((M[23FF],M[23FE]));
              } else {
                #14E1
                #14E4
                let:16 a22 = addWithCarry(!false,M[2029],~D8) in
                let:8 a23 = (M[2029] & 0F) in
                let:8 a24 = (~D8 & 0F) in
                let:16 a25 = addWithCarry(!false,a23,a24) in
                #14E6
                #14E7
                if (!!a22[15:8][0]) {
                  #1530
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      M[23FD] := 15;
                      M[23FC] := 30;
                      A := M[2029];
                      B := M[2029];
                      H := C;
                      SPH := 23;
                      SPL := FC;
                      FlagS := a22[7:0][7];
                      FlagZ := is_zero(a22[7:0]);
                      FlagA := a25[7:0][4];
                      FlagP := parity(a22[7:0]);
                      FlagCY := !a22[15:8][0];
                      jump (0008);
                    } else {
                      M[23FD] := 15;
                      M[23FC] := 30;
                      A := M[2029];
                      B := M[2029];
                      H := C;
                      SPH := 23;
                      SPL := FC;
                      FlagS := a22[7:0][7];
                      FlagZ := is_zero(a22[7:0]);
                      FlagA := a25[7:0][4];
                      FlagP := parity(a22[7:0]);
                      FlagCY := !a22[15:8][0];
                      jump (0010);
                    }
                  } else {
                    #1532
                    M[2025] := 03;
                    #1535
                    #154A
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        M[23FD] := 15;
                        M[23FC] := 4A;
                        A := 03;
                        B := M[2029];
                        H := C;
                        SPH := 23;
                        SPL := FC;
                        FlagS := a22[7:0][7];
                        FlagZ := is_zero(a22[7:0]);
                        FlagA := a25[7:0][4];
                        FlagP := parity(a22[7:0]);
                        FlagCY := !a22[15:8][0];
                        jump (0008);
                      } else {
                        M[23FD] := 15;
                        M[23FC] := 4A;
                        A := 03;
                        B := M[2029];
                        H := C;
                        SPH := 23;
                        SPL := FC;
                        FlagS := a22[7:0][7];
                        FlagZ := is_zero(a22[7:0]);
                        FlagA := a25[7:0][4];
                        FlagP := parity(a22[7:0]);
                        FlagCY := !a22[15:8][0];
                        jump (0010);
                      }
                    } else {
                      let:8 a26 = (03 ^ 03) in
                      #154B
                      M[2002] := a26;
                      #154E
                      #1550
                      #19DC
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          M[23FD] := 19;
                          M[23FC] := DC;
                          A := a26;
                          B := F7;
                          H := C;
                          SPH := 23;
                          SPL := FC;
                          FlagS := a26[7];
                          FlagZ := is_zero(a26);
                          FlagA := false;
                          FlagP := parity(a26);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          M[23FD] := 19;
                          M[23FC] := DC;
                          A := a26;
                          B := F7;
                          H := C;
                          SPH := 23;
                          SPL := FC;
                          FlagS := a26[7];
                          FlagZ := is_zero(a26);
                          FlagA := false;
                          FlagP := parity(a26);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #19DF
                        let:8 a27 = (F7 & M[2094]) in
                        let:8 a28 = (F7 | M[2094]) in
                        #19E0
                        M[2094] := a27;
                        #19E3
                        sound_control(Ufo,a27[0]);
                        sound_control(Shot,a27[1]);
                        sound_control(PlayerDie,a27[2]);
                        sound_control(InvaderDie,a27[3]);
                        sound_control(ExtraLife,a27[4]);
                        #19E5
                        A := a27;
                        B := F7;
                        H := C;
                        SPH := 24;
                        SPL := 00;
                        FlagS := a27[7];
                        FlagZ := is_zero(a27);
                        FlagA := a28[3];
                        FlagP := parity(a27);
                        FlagCY := false;
                        jump ((M[23FF],M[23FE]));
                      }
                    }
                  }
                } else {
                  #14EA
                  #14ED
                  let:8 a29 = (M[2002] & M[2002]) in
                  let:8 a30 = (M[2002] | M[2002]) in
                  #14EE
                  if (is_zero(a29)) {
                    A := a29;
                    B := M[2029];
                    H := C;
                    SPH := 24;
                    SPL := 00;
                    FlagS := a29[7];
                    FlagZ := is_zero(a29);
                    FlagA := a30[3];
                    FlagP := parity(a29);
                    FlagCY := false;
                    jump ((M[23FF],M[23FE]));
                  } else {
                    #14EF
                    #14F0
                    let:16 a31 = addWithCarry(!false,M[2029],~CE) in
                    let:8 a32 = (M[2029] & 0F) in
                    let:8 a33 = (~CE & 0F) in
                    let:16 a34 = addWithCarry(!false,a32,a33) in
                    #14F2
                    if (!!a31[15:8][0]) {
                      #1579
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          M[23FD] := 15;
                          M[23FC] := 79;
                          A := M[2029];
                          B := M[2029];
                          H := C;
                          SPH := 23;
                          SPL := FC;
                          FlagS := a31[7:0][7];
                          FlagZ := is_zero(a31[7:0]);
                          FlagA := a34[7:0][4];
                          FlagP := parity(a31[7:0]);
                          FlagCY := !a31[15:8][0];
                          jump (0008);
                        } else {
                          M[23FD] := 15;
                          M[23FC] := 79;
                          A := M[2029];
                          B := M[2029];
                          H := C;
                          SPH := 23;
                          SPL := FC;
                          FlagS := a31[7:0][7];
                          FlagZ := is_zero(a31[7:0]);
                          FlagA := a34[7:0][4];
                          FlagP := parity(a31[7:0]);
                          FlagCY := !a31[15:8][0];
                          jump (0010);
                        }
                      } else {
                        #157B
                        M[2085] := 01;
                        #157E
                        A := 01;
                        B := M[2029];
                        H := C;
                        SPH := 23;
                        SPL := FE;
                        FlagS := a31[7:0][7];
                        FlagZ := is_zero(a31[7:0]);
                        FlagA := a34[7:0][4];
                        FlagP := parity(a31[7:0]);
                        FlagCY := !a31[15:8][0];
                        jump (1545);
                      }
                    } else {
                      #14F5
                      let:16 a35 = addWithCarry(false,06,M[2029]) in
                      let:8 a36 = (06 & 0F) in
                      let:8 a37 = (M[2029] & 0F) in
                      let:16 a38 = addWithCarry(false,a36,a37) in
                      #14F7
                      #14F8
                      #14FB
                      let:16 a39 = addWithCarry(!false,M[2009],~90) in
                      let:8 a40 = (M[2009] & 0F) in
                      let:8 a41 = (~90 & 0F) in
                      let:16 a42 = addWithCarry(!false,a40,a41) in
                      #14FD
                      if (!!a39[15:8][0]) {
                        #1504
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            M[23FD] := 15;
                            M[23FC] := 04;
                            A := M[2009];
                            B := a35[7:0];
                            H := C;
                            SPH := 23;
                            SPL := FC;
                            FlagS := a39[7:0][7];
                            FlagZ := is_zero(a39[7:0]);
                            FlagA := a42[7:0][4];
                            FlagP := parity(a39[7:0]);
                            FlagCY := !a39[15:8][0];
                            jump (0008);
                          } else {
                            M[23FD] := 15;
                            M[23FC] := 04;
                            A := M[2009];
                            B := a35[7:0];
                            H := C;
                            SPH := 23;
                            SPL := FC;
                            FlagS := a39[7:0][7];
                            FlagZ := is_zero(a39[7:0]);
                            FlagA := a42[7:0][4];
                            FlagP := parity(a39[7:0]);
                            FlagCY := !a39[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1505
                          M[23FD] := 15;
                          M[23FC] := 08;
                          #return-to: 1508
                          #1562
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              M[23FB] := 15;
                              M[23FA] := 62;
                              A := M[2009];
                              B := a35[7:0];
                              H := C;
                              L := a35[7:0];
                              SPH := 23;
                              SPL := FA;
                              FlagS := a39[7:0][7];
                              FlagZ := is_zero(a39[7:0]);
                              FlagA := a42[7:0][4];
                              FlagP := parity(a39[7:0]);
                              FlagCY := !a39[15:8][0];
                              jump (0008);
                            } else {
                              M[23FB] := 15;
                              M[23FA] := 62;
                              A := M[2009];
                              B := a35[7:0];
                              H := C;
                              L := a35[7:0];
                              SPH := 23;
                              SPL := FA;
                              FlagS := a39[7:0][7];
                              FlagZ := is_zero(a39[7:0]);
                              FlagA := a42[7:0][4];
                              FlagP := parity(a39[7:0]);
                              FlagCY := !a39[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1565
                            #1566
                            M[23FB] := 15;
                            M[23FA] := 69;
                            #return-to: 1569
                            #1554
                            if ((g_time_to_wakeup && g_interrupts_enabled)) {
                              disable_interrupts()
                              if (g_half_frame) {
                                M[23F9] := 15;
                                M[23F8] := 54;
                                A := M[2009];
                                B := a35[7:0];
                                H := a35[7:0];
                                L := a35[7:0];
                                SPH := 23;
                                SPL := F8;
                                FlagS := a39[7:0][7];
                                FlagZ := is_zero(a39[7:0]);
                                FlagA := a42[7:0][4];
                                FlagP := parity(a39[7:0]);
                                FlagCY := !a39[15:8][0];
                                jump (0008);
                              } else {
                                M[23F9] := 15;
                                M[23F8] := 54;
                                A := M[2009];
                                B := a35[7:0];
                                H := a35[7:0];
                                L := a35[7:0];
                                SPH := 23;
                                SPL := F8;
                                FlagS := a39[7:0][7];
                                FlagZ := is_zero(a39[7:0]);
                                FlagA := a42[7:0][4];
                                FlagP := parity(a39[7:0]);
                                FlagCY := !a39[15:8][0];
                                jump (0010);
                              }
                            } else {
                              #1556
                              let:16 a43 = addWithCarry(!false,M[2009],~a35[7:0]) in
                              let:8 a44 = (M[2009] & 0F) in
                              let:8 a45 = (~a35[7:0] & 0F) in
                              let:16 a46 = addWithCarry(!false,a44,a45) in
                              #1557
                              if (!!a43[15:8][0]) {
                                M[23F9] := 15;
                                M[23F8] := 5A;
                                #return-to: 155A
                                #1590
                                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                  disable_interrupts()
                                  if (g_half_frame) {
                                    M[23F7] := 15;
                                    M[23F6] := 90;
                                    A := M[2009];
                                    B := a35[7:0];
                                    C := 00;
                                    H := a35[7:0];
                                    L := a35[7:0];
                                    SPH := 23;
                                    SPL := F6;
                                    FlagS := a43[7:0][7];
                                    FlagZ := is_zero(a43[7:0]);
                                    FlagA := a46[7:0][4];
                                    FlagP := parity(a43[7:0]);
                                    FlagCY := !a43[15:8][0];
                                    jump (0008);
                                  } else {
                                    M[23F7] := 15;
                                    M[23F6] := 90;
                                    A := M[2009];
                                    B := a35[7:0];
                                    C := 00;
                                    H := a35[7:0];
                                    L := a35[7:0];
                                    SPH := 23;
                                    SPL := F6;
                                    FlagS := a43[7:0][7];
                                    FlagZ := is_zero(a43[7:0]);
                                    FlagA := a46[7:0][4];
                                    FlagP := parity(a43[7:0]);
                                    FlagCY := !a43[15:8][0];
                                    jump (0010);
                                  }
                                } else {
                                  let:16 a47 = addWithCarry(true,00,00) in
                                  let:8 a48 = (00 & 0F) in
                                  let:8 a49 = (00 & 0F) in
                                  let:16 a50 = addWithCarry(true,a48,a49) in
                                  #1591
                                  let:16 a51 = addWithCarry(false,10,M[2009]) in
                                  let:8 a52 = (10 & 0F) in
                                  let:8 a53 = (M[2009] & 0F) in
                                  let:16 a54 = addWithCarry(false,a52,a53) in
                                  #1593
                                  if (a51[7:0][7]) {
                                    A := a51[7:0];
                                    B := a35[7:0];
                                    C := a47[7:0];
                                    H := a35[7:0];
                                    L := a35[7:0];
                                    SPH := 23;
                                    SPL := F8;
                                    FlagS := a51[7:0][7];
                                    FlagZ := is_zero(a51[7:0]);
                                    FlagA := a54[7:0][4];
                                    FlagP := parity(a51[7:0]);
                                    FlagCY := a51[15:8][0];
                                    jump (1590);
                                  } else {
                                    #1596
                                    A := a51[7:0];
                                    B := a35[7:0];
                                    C := a47[7:0];
                                    H := a35[7:0];
                                    L := a35[7:0];
                                    SPH := 23;
                                    SPL := FA;
                                    FlagS := a51[7:0][7];
                                    FlagZ := is_zero(a51[7:0]);
                                    FlagA := a54[7:0][4];
                                    FlagP := parity(a51[7:0]);
                                    FlagCY := a51[15:8][0];
                                    jump ((M[23F9],M[23F8]));
                                  }
                                }
                              } else {
                                A := M[2009];
                                B := a35[7:0];
                                C := 00;
                                H := a35[7:0];
                                L := a35[7:0];
                                SPH := 23;
                                SPL := FA;
                                FlagS := a43[7:0][7];
                                FlagZ := is_zero(a43[7:0]);
                                FlagA := a46[7:0][4];
                                FlagP := parity(a43[7:0]);
                                FlagCY := !a43[15:8][0];
                                jump (155A);
                              }
                            }
                          }
                        }
                      } else {
                        #1500
                        let:16 a55 = addWithCarry(!false,M[2009],~a35[7:0]) in
                        let:8 a56 = (M[2009] & 0F) in
                        let:8 a57 = (~a35[7:0] & 0F) in
                        let:16 a58 = addWithCarry(!false,a56,a57) in
                        #1501
                        if (!!a55[15:8][0]) {
                          #1530
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              M[23FD] := 15;
                              M[23FC] := 30;
                              A := M[2009];
                              B := a35[7:0];
                              H := C;
                              SPH := 23;
                              SPL := FC;
                              FlagS := a55[7:0][7];
                              FlagZ := is_zero(a55[7:0]);
                              FlagA := a58[7:0][4];
                              FlagP := parity(a55[7:0]);
                              FlagCY := !a55[15:8][0];
                              jump (0008);
                            } else {
                              M[23FD] := 15;
                              M[23FC] := 30;
                              A := M[2009];
                              B := a35[7:0];
                              H := C;
                              SPH := 23;
                              SPL := FC;
                              FlagS := a55[7:0][7];
                              FlagZ := is_zero(a55[7:0]);
                              FlagA := a58[7:0][4];
                              FlagP := parity(a55[7:0]);
                              FlagCY := !a55[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1532
                            M[2025] := 03;
                            #1535
                            #154A
                            if ((g_time_to_wakeup && g_interrupts_enabled)) {
                              disable_interrupts()
                              if (g_half_frame) {
                                M[23FD] := 15;
                                M[23FC] := 4A;
                                A := 03;
                                B := a35[7:0];
                                H := C;
                                SPH := 23;
                                SPL := FC;
                                FlagS := a55[7:0][7];
                                FlagZ := is_zero(a55[7:0]);
                                FlagA := a58[7:0][4];
                                FlagP := parity(a55[7:0]);
                                FlagCY := !a55[15:8][0];
                                jump (0008);
                              } else {
                                M[23FD] := 15;
                                M[23FC] := 4A;
                                A := 03;
                                B := a35[7:0];
                                H := C;
                                SPH := 23;
                                SPL := FC;
                                FlagS := a55[7:0][7];
                                FlagZ := is_zero(a55[7:0]);
                                FlagA := a58[7:0][4];
                                FlagP := parity(a55[7:0]);
                                FlagCY := !a55[15:8][0];
                                jump (0010);
                              }
                            } else {
                              let:8 a59 = (03 ^ 03) in
                              #154B
                              M[2002] := a59;
                              #154E
                              #1550
                              #19DC
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  M[23FD] := 19;
                                  M[23FC] := DC;
                                  A := a59;
                                  B := F7;
                                  H := C;
                                  SPH := 23;
                                  SPL := FC;
                                  FlagS := a59[7];
                                  FlagZ := is_zero(a59);
                                  FlagA := false;
                                  FlagP := parity(a59);
                                  FlagCY := false;
                                  jump (0008);
                                } else {
                                  M[23FD] := 19;
                                  M[23FC] := DC;
                                  A := a59;
                                  B := F7;
                                  H := C;
                                  SPH := 23;
                                  SPL := FC;
                                  FlagS := a59[7];
                                  FlagZ := is_zero(a59);
                                  FlagA := false;
                                  FlagP := parity(a59);
                                  FlagCY := false;
                                  jump (0010);
                                }
                              } else {
                                #19DF
                                let:8 a60 = (F7 & M[2094]) in
                                let:8 a61 = (F7 | M[2094]) in
                                #19E0
                                M[2094] := a60;
                                #19E3
                                sound_control(Ufo,a60[0]);
                                sound_control(Shot,a60[1]);
                                sound_control(PlayerDie,a60[2]);
                                sound_control(InvaderDie,a60[3]);
                                sound_control(ExtraLife,a60[4]);
                                #19E5
                                A := a60;
                                B := F7;
                                H := C;
                                SPH := 24;
                                SPL := 00;
                                FlagS := a60[7];
                                FlagZ := is_zero(a60);
                                FlagA := a61[3];
                                FlagP := parity(a60);
                                FlagCY := false;
                                jump ((M[23FF],M[23FE]));
                              }
                            }
                          }
                        } else {
                          #1504
                          #1505
                          M[23FD] := 15;
                          M[23FC] := 08;
                          #return-to: 1508
                          #1562
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              M[23FB] := 15;
                              M[23FA] := 62;
                              A := M[2009];
                              B := a35[7:0];
                              H := C;
                              L := a35[7:0];
                              SPH := 23;
                              SPL := FA;
                              FlagS := a55[7:0][7];
                              FlagZ := is_zero(a55[7:0]);
                              FlagA := a58[7:0][4];
                              FlagP := parity(a55[7:0]);
                              FlagCY := !a55[15:8][0];
                              jump (0008);
                            } else {
                              M[23FB] := 15;
                              M[23FA] := 62;
                              A := M[2009];
                              B := a35[7:0];
                              H := C;
                              L := a35[7:0];
                              SPH := 23;
                              SPL := FA;
                              FlagS := a55[7:0][7];
                              FlagZ := is_zero(a55[7:0]);
                              FlagA := a58[7:0][4];
                              FlagP := parity(a55[7:0]);
                              FlagCY := !a55[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1565
                            #1566
                            M[23FB] := 15;
                            M[23FA] := 69;
                            #return-to: 1569
                            #1554
                            if ((g_time_to_wakeup && g_interrupts_enabled)) {
                              disable_interrupts()
                              if (g_half_frame) {
                                M[23F9] := 15;
                                M[23F8] := 54;
                                A := M[2009];
                                B := a35[7:0];
                                H := a35[7:0];
                                L := a35[7:0];
                                SPH := 23;
                                SPL := F8;
                                FlagS := a55[7:0][7];
                                FlagZ := is_zero(a55[7:0]);
                                FlagA := a58[7:0][4];
                                FlagP := parity(a55[7:0]);
                                FlagCY := !a55[15:8][0];
                                jump (0008);
                              } else {
                                M[23F9] := 15;
                                M[23F8] := 54;
                                A := M[2009];
                                B := a35[7:0];
                                H := a35[7:0];
                                L := a35[7:0];
                                SPH := 23;
                                SPL := F8;
                                FlagS := a55[7:0][7];
                                FlagZ := is_zero(a55[7:0]);
                                FlagA := a58[7:0][4];
                                FlagP := parity(a55[7:0]);
                                FlagCY := !a55[15:8][0];
                                jump (0010);
                              }
                            } else {
                              #1556
                              let:16 a62 = addWithCarry(!false,M[2009],~a35[7:0]) in
                              let:8 a63 = (M[2009] & 0F) in
                              let:8 a64 = (~a35[7:0] & 0F) in
                              let:16 a65 = addWithCarry(!false,a63,a64) in
                              #1557
                              if (!!a62[15:8][0]) {
                                M[23F9] := 15;
                                M[23F8] := 5A;
                                #return-to: 155A
                                #1590
                                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                  disable_interrupts()
                                  if (g_half_frame) {
                                    M[23F7] := 15;
                                    M[23F6] := 90;
                                    A := M[2009];
                                    B := a35[7:0];
                                    C := 00;
                                    H := a35[7:0];
                                    L := a35[7:0];
                                    SPH := 23;
                                    SPL := F6;
                                    FlagS := a62[7:0][7];
                                    FlagZ := is_zero(a62[7:0]);
                                    FlagA := a65[7:0][4];
                                    FlagP := parity(a62[7:0]);
                                    FlagCY := !a62[15:8][0];
                                    jump (0008);
                                  } else {
                                    M[23F7] := 15;
                                    M[23F6] := 90;
                                    A := M[2009];
                                    B := a35[7:0];
                                    C := 00;
                                    H := a35[7:0];
                                    L := a35[7:0];
                                    SPH := 23;
                                    SPL := F6;
                                    FlagS := a62[7:0][7];
                                    FlagZ := is_zero(a62[7:0]);
                                    FlagA := a65[7:0][4];
                                    FlagP := parity(a62[7:0]);
                                    FlagCY := !a62[15:8][0];
                                    jump (0010);
                                  }
                                } else {
                                  let:16 a66 = addWithCarry(true,00,00) in
                                  let:8 a67 = (00 & 0F) in
                                  let:8 a68 = (00 & 0F) in
                                  let:16 a69 = addWithCarry(true,a67,a68) in
                                  #1591
                                  let:16 a70 = addWithCarry(false,10,M[2009]) in
                                  let:8 a71 = (10 & 0F) in
                                  let:8 a72 = (M[2009] & 0F) in
                                  let:16 a73 = addWithCarry(false,a71,a72) in
                                  #1593
                                  if (a70[7:0][7]) {
                                    A := a70[7:0];
                                    B := a35[7:0];
                                    C := a66[7:0];
                                    H := a35[7:0];
                                    L := a35[7:0];
                                    SPH := 23;
                                    SPL := F8;
                                    FlagS := a70[7:0][7];
                                    FlagZ := is_zero(a70[7:0]);
                                    FlagA := a73[7:0][4];
                                    FlagP := parity(a70[7:0]);
                                    FlagCY := a70[15:8][0];
                                    jump (1590);
                                  } else {
                                    #1596
                                    A := a70[7:0];
                                    B := a35[7:0];
                                    C := a66[7:0];
                                    H := a35[7:0];
                                    L := a35[7:0];
                                    SPH := 23;
                                    SPL := FA;
                                    FlagS := a70[7:0][7];
                                    FlagZ := is_zero(a70[7:0]);
                                    FlagA := a73[7:0][4];
                                    FlagP := parity(a70[7:0]);
                                    FlagCY := a70[15:8][0];
                                    jump ((M[23F9],M[23F8]));
                                  }
                                }
                              } else {
                                A := M[2009];
                                B := a35[7:0];
                                C := 00;
                                H := a35[7:0];
                                L := a35[7:0];
                                SPH := 23;
                                SPL := FA;
                                FlagS := a62[7:0][7];
                                FlagZ := is_zero(a62[7:0]);
                                FlagA := a65[7:0][4];
                                FlagP := parity(a62[7:0]);
                                FlagCY := !a62[15:8][0];
                                jump (155A);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    } else {
      #0170
      #0171
      M[2004] := D;
      #0174
      #0176
      M[2000] := 01;
      #0179
      let:16 a74 = (1 + (SPH,SPL)) in
      let:16 a75 = (1 + a74) in
      A := 01;
      H := C;
      SPH := a75[15:8];
      SPL := a75[7:0];
      FlagS := a1[7:0][7];
      FlagZ := is_zero(a1[7:0]);
      FlagA := a4[7:0][4];
      FlagP := parity(a1[7:0]);
      FlagCY := !a1[15:8][0];
      jump ((M[a74],M[(SPH,SPL)]));
    }

01B1:

    #01B4
    #01B5
    let:16 a1 = addWithCarry(true,M[2005],00) in
    let:8 a2 = (M[2005] & 0F) in
    let:8 a3 = (00 & 0F) in
    let:16 a4 = addWithCarry(true,a2,a3) in
    #01B6
    let:8 a5 = (01 & a1[7:0]) in
    let:8 a6 = (01 | a1[7:0]) in
    #01B8
    M[2005] := a5;
    #01B9
    let:8 a7 = (a5 ^ a5) in
    #01BA
    #01BD
    #01BE
    let:16 a8 = (1 + (SPH,SPL)) in
    let:16 a9 = (1 + a8) in
    A := a7;
    H := M[2067];
    L := 67;
    SPH := a9[15:8];
    SPL := a9[7:0];
    FlagS := a7[7];
    FlagZ := is_zero(a7);
    FlagA := false;
    FlagP := parity(a7);
    FlagCY := false;
    jump ((M[a8],M[(SPH,SPL)]));

0203:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #0204
    let:16 a3 = addWithCarry(!true,C,~00) in
    let:8 a4 = (C & 0F) in
    let:8 a5 = (~00 & 0F) in
    let:16 a6 = addWithCarry(!true,a4,a5) in
    #0205
    if (!is_zero(a3[7:0])) {
      #01FD
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 01;
          let:16 a8 = (-1 + a7) in
          M[a8] := FD;
          C := a3[7:0];
          D := M[a1];
          E := M[(SPH,SPL)];
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a3[7:0][7];
          FlagZ := is_zero(a3[7:0]);
          FlagA := a6[7:0][4];
          FlagP := parity(a3[7:0]);
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 01;
          let:16 a10 = (-1 + a9) in
          M[a10] := FD;
          C := a3[7:0];
          D := M[a1];
          E := M[(SPH,SPL)];
          SPH := a10[15:8];
          SPL := a10[7:0];
          FlagS := a3[7:0][7];
          FlagZ := is_zero(a3[7:0]);
          FlagA := a6[7:0][4];
          FlagP := parity(a3[7:0]);
          jump (0010);
        }
      } else {
        let:16 a11 = (-1 + a2) in
        M[a11] := M[a1];
        let:16 a12 = (-1 + a11) in
        M[a12] := M[(SPH,SPL)];
        #01FE
        #0200
        let:16 a13 = (-1 + a12) in
        M[a13] := 02;
        let:16 a14 = (-1 + a13) in
        M[a14] := 03;
        #return-to: 0203
        #1A32
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 32;
            B := 2C;
            C := a3[7:0];
            D := M[a1];
            E := M[(SPH,SPL)];
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a3[7:0][7];
            FlagZ := is_zero(a3[7:0]);
            FlagA := a6[7:0][4];
            FlagP := parity(a3[7:0]);
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 1A;
            let:16 a18 = (-1 + a17) in
            M[a18] := 32;
            B := 2C;
            C := a3[7:0];
            D := M[a1];
            E := M[(SPH,SPL)];
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a3[7:0][7];
            FlagZ := is_zero(a3[7:0]);
            FlagA := a6[7:0][4];
            FlagP := parity(a3[7:0]);
            jump (0010);
          }
        } else {
          #1A33
          M[(H,L)] := M[(M[a1],M[(SPH,SPL)])];
          #1A34
          let:16 a19 = (1 + (H,L)) in
          #1A35
          let:16 a20 = (1 + (M[a1],M[(SPH,SPL)])) in
          #1A36
          let:16 a21 = addWithCarry(!true,2C,~00) in
          let:8 a22 = (2C & 0F) in
          let:8 a23 = (~00 & 0F) in
          let:16 a24 = addWithCarry(!true,a22,a23) in
          #1A37
          if (!is_zero(a21[7:0])) {
            A := M[(M[a1],M[(SPH,SPL)])];
            B := a21[7:0];
            C := a3[7:0];
            D := a20[15:8];
            E := a20[7:0];
            H := a19[15:8];
            L := a19[7:0];
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a21[7:0][7];
            FlagZ := is_zero(a21[7:0]);
            FlagA := a24[7:0][4];
            FlagP := parity(a21[7:0]);
            jump (1A32);
          } else {
            #1A3A
            let:16 a25 = (1 + a14) in
            let:16 a26 = (1 + a25) in
            A := M[(M[a1],M[(SPH,SPL)])];
            B := a21[7:0];
            C := a3[7:0];
            D := a20[15:8];
            E := a20[7:0];
            H := a19[15:8];
            L := a19[7:0];
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagS := a21[7:0][7];
            FlagZ := is_zero(a21[7:0]);
            FlagA := a24[7:0][4];
            FlagP := parity(a21[7:0]);
            jump ((M[a25],M[a14]));
          }
        }
      }
    } else {
      #0208
      let:16 a27 = (1 + a2) in
      let:16 a28 = (1 + a27) in
      C := a3[7:0];
      D := M[a1];
      E := M[(SPH,SPL)];
      SPH := a28[15:8];
      SPL := a28[7:0];
      FlagS := a3[7:0][7];
      FlagZ := is_zero(a3[7:0]);
      FlagA := a6[7:0][4];
      FlagP := parity(a3[7:0]);
      jump ((M[a27],M[a2]));
    }

0235:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #0236
    let:16 a3 = (1 + a2) in
    let:16 a4 = (1 + a3) in
    #0237
    let:16 a5 = addWithCarry(!true,M[a3],~00) in
    let:8 a6 = (M[a3] & 0F) in
    let:8 a7 = (~00 & 0F) in
    let:16 a8 = addWithCarry(!true,a6,a7) in
    #0238
    if (is_zero(a5[7:0])) {
      let:16 a9 = (1 + a4) in
      let:16 a10 = (1 + a9) in
      A := a5[7:0];
      B := M[a1];
      C := M[(SPH,SPL)];
      SPH := a10[15:8];
      SPL := a10[7:0];
      FlagS := a5[7:0][7];
      FlagZ := is_zero(a5[7:0]);
      FlagA := a8[7:0][4];
      FlagP := parity(a5[7:0]);
      FlagCY := M[a2][0];
      jump ((M[a9],M[a4]));
    } else {
      #0239
      let:16 a11 = (-1 + a4) in
      M[a11] := D;
      let:16 a12 = (-1 + a11) in
      M[a12] := E;
      #023A
      #023D
      let:17 a13 = add17(02E0,(H,L)) in
      #023E
      let:16 a14 = (1 + a12) in
      let:16 a15 = (1 + a14) in
      #023F
      #0229
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a16 = (-1 + a15) in
          M[a16] := 02;
          let:16 a17 = (-1 + a16) in
          M[a17] := 29;
          A := a5[7:0];
          B := M[a1];
          C := M[(SPH,SPL)];
          D := M[a14];
          E := M[a12];
          H := a13[15:0][15:8];
          L := a13[15:0][7:0];
          SPH := a17[15:8];
          SPL := a17[7:0];
          FlagS := a5[7:0][7];
          FlagZ := is_zero(a5[7:0]);
          FlagA := a8[7:0][4];
          FlagP := parity(a5[7:0]);
          FlagCY := a13[16];
          jump (0008);
        } else {
          let:16 a18 = (-1 + a15) in
          M[a18] := 02;
          let:16 a19 = (-1 + a18) in
          M[a19] := 29;
          A := a5[7:0];
          B := M[a1];
          C := M[(SPH,SPL)];
          D := M[a14];
          E := M[a12];
          H := a13[15:0][15:8];
          L := a13[15:0][7:0];
          SPH := a19[15:8];
          SPL := a19[7:0];
          FlagS := a5[7:0][7];
          FlagZ := is_zero(a5[7:0]);
          FlagA := a8[7:0][4];
          FlagP := parity(a5[7:0]);
          FlagCY := a13[16];
          jump (0010);
        }
      } else {
        let:16 a20 = (-1 + a15) in
        M[a20] := a5[7:0];
        let:16 a21 = (-1 + a20) in
        M[a21] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a5[7:0][7]),6,is_zero(a5[7:0])),4,a8[7:0][4]),2,parity(a5[7:0])),0,a13[16]);
        #022A
        let:16 a22 = (-1 + a21) in
        M[a22] := M[a1];
        let:16 a23 = (-1 + a22) in
        M[a23] := M[(SPH,SPL)];
        #022B
        #022E
        let:8 a24 = (M[2081] & M[2081]) in
        let:8 a25 = (M[2081] | M[2081]) in
        #022F
        if (!is_zero(a24)) {
          #0242
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a26 = (-1 + a23) in
              M[a26] := 02;
              let:16 a27 = (-1 + a26) in
              M[a27] := 42;
              A := a24;
              B := M[a1];
              C := M[(SPH,SPL)];
              D := M[a14];
              E := M[a12];
              H := a13[15:0][15:8];
              L := a13[15:0][7:0];
              SPH := a27[15:8];
              SPL := a27[7:0];
              FlagS := a24[7];
              FlagZ := is_zero(a24);
              FlagA := a25[3];
              FlagP := parity(a24);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a28 = (-1 + a23) in
              M[a28] := 02;
              let:16 a29 = (-1 + a28) in
              M[a29] := 42;
              A := a24;
              B := M[a1];
              C := M[(SPH,SPL)];
              D := M[a14];
              E := M[a12];
              H := a13[15:0][15:8];
              L := a13[15:0][7:0];
              SPH := a29[15:8];
              SPL := a29[7:0];
              FlagS := a24[7];
              FlagZ := is_zero(a24);
              FlagA := a25[3];
              FlagP := parity(a24);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a30 = (-1 + a23) in
            M[a30] := 02;
            let:16 a31 = (-1 + a30) in
            M[a31] := 45;
            #return-to: 0245
            #147C
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a32 = (-1 + a31) in
                M[a32] := 14;
                let:16 a33 = (-1 + a32) in
                M[a33] := 7C;
                A := a24;
                B := M[a1];
                C := M[(SPH,SPL)];
                D := M[a14];
                E := M[a12];
                H := a13[15:0][15:8];
                L := a13[15:0][7:0];
                SPH := a33[15:8];
                SPL := a33[7:0];
                FlagS := a24[7];
                FlagZ := is_zero(a24);
                FlagA := a25[3];
                FlagP := parity(a24);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a34 = (-1 + a31) in
                M[a34] := 14;
                let:16 a35 = (-1 + a34) in
                M[a35] := 7C;
                A := a24;
                B := M[a1];
                C := M[(SPH,SPL)];
                D := M[a14];
                E := M[a12];
                H := a13[15:0][15:8];
                L := a13[15:0][7:0];
                SPH := a35[15:8];
                SPL := a35[7:0];
                FlagS := a24[7];
                FlagZ := is_zero(a24);
                FlagA := a25[3];
                FlagP := parity(a24);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a36 = (-1 + a31) in
              M[a36] := M[a1];
              let:16 a37 = (-1 + a36) in
              M[a37] := M[(SPH,SPL)];
              #147D
              let:16 a38 = (-1 + a37) in
              M[a38] := a13[15:0][15:8];
              let:16 a39 = (-1 + a38) in
              M[a39] := a13[15:0][7:0];
              #147E
              #147F
              M[(M[a14],M[a12])] := M[a13[15:0]];
              #1480
              let:16 a40 = (1 + (M[a14],M[a12])) in
              #1481
              let:16 a41 = (1 + a13[15:0]) in
              #1482
              let:16 a42 = addWithCarry(!true,M[(SPH,SPL)],~00) in
              let:8 a43 = (M[(SPH,SPL)] & 0F) in
              let:8 a44 = (~00 & 0F) in
              let:16 a45 = addWithCarry(!true,a43,a44) in
              #1483
              if (!is_zero(a42[7:0])) {
                A := M[a13[15:0]];
                B := M[a1];
                C := a42[7:0];
                D := a40[15:8];
                E := a40[7:0];
                H := a41[15:8];
                L := a41[7:0];
                SPH := a39[15:8];
                SPL := a39[7:0];
                FlagS := a42[7:0][7];
                FlagZ := is_zero(a42[7:0]);
                FlagA := a45[7:0][4];
                FlagP := parity(a42[7:0]);
                FlagCY := false;
                jump (147E);
              } else {
                #1486
                let:16 a46 = (1 + a39) in
                let:16 a47 = (1 + a46) in
                #1487
                #148A
                let:17 a48 = add17(0020,(M[a46],M[a39])) in
                #148B
                let:16 a49 = (1 + a47) in
                let:16 a50 = (1 + a49) in
                #148C
                let:16 a51 = addWithCarry(!true,M[a49],~00) in
                let:8 a52 = (M[a49] & 0F) in
                let:8 a53 = (~00 & 0F) in
                let:16 a54 = addWithCarry(!true,a52,a53) in
                #148D
                if (!is_zero(a51[7:0])) {
                  A := M[a13[15:0]];
                  B := a51[7:0];
                  C := M[a47];
                  D := a40[15:8];
                  E := a40[7:0];
                  H := a48[15:0][15:8];
                  L := a48[15:0][7:0];
                  SPH := a50[15:8];
                  SPL := a50[7:0];
                  FlagS := a51[7:0][7];
                  FlagZ := is_zero(a51[7:0]);
                  FlagA := a54[7:0][4];
                  FlagP := parity(a51[7:0]);
                  FlagCY := a48[16];
                  jump (147C);
                } else {
                  #1490
                  let:16 a55 = (1 + a50) in
                  let:16 a56 = (1 + a55) in
                  A := M[a13[15:0]];
                  B := a51[7:0];
                  C := M[a47];
                  D := a40[15:8];
                  E := a40[7:0];
                  H := a48[15:0][15:8];
                  L := a48[15:0][7:0];
                  SPH := a56[15:8];
                  SPL := a56[7:0];
                  FlagS := a51[7:0][7];
                  FlagZ := is_zero(a51[7:0]);
                  FlagA := a54[7:0][4];
                  FlagP := parity(a51[7:0]);
                  FlagCY := a48[16];
                  jump ((M[a55],M[a50]));
                }
              }
            }
          }
        } else {
          #0232
          let:16 a57 = (-1 + a23) in
          M[a57] := 02;
          let:16 a58 = (-1 + a57) in
          M[a58] := 35;
          #return-to: 0235
          #1A69
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a59 = (-1 + a58) in
              M[a59] := 1A;
              let:16 a60 = (-1 + a59) in
              M[a60] := 69;
              A := a24;
              B := M[a1];
              C := M[(SPH,SPL)];
              D := M[a14];
              E := M[a12];
              H := a13[15:0][15:8];
              L := a13[15:0][7:0];
              SPH := a60[15:8];
              SPL := a60[7:0];
              FlagS := a24[7];
              FlagZ := is_zero(a24);
              FlagA := a25[3];
              FlagP := parity(a24);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a61 = (-1 + a58) in
              M[a61] := 1A;
              let:16 a62 = (-1 + a61) in
              M[a62] := 69;
              A := a24;
              B := M[a1];
              C := M[(SPH,SPL)];
              D := M[a14];
              E := M[a12];
              H := a13[15:0][15:8];
              L := a13[15:0][7:0];
              SPH := a62[15:8];
              SPL := a62[7:0];
              FlagS := a24[7];
              FlagZ := is_zero(a24);
              FlagA := a25[3];
              FlagP := parity(a24);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a63 = (-1 + a58) in
            M[a63] := M[a1];
            let:16 a64 = (-1 + a63) in
            M[a64] := M[(SPH,SPL)];
            #1A6A
            let:16 a65 = (-1 + a64) in
            M[a65] := a13[15:0][15:8];
            let:16 a66 = (-1 + a65) in
            M[a66] := a13[15:0][7:0];
            #1A6B
            #1A6C
            let:8 a67 = (M[a13[15:0]] | M[(M[a14],M[a12])]) in
            #1A6D
            M[a13[15:0]] := a67;
            #1A6E
            let:16 a68 = (1 + (M[a14],M[a12])) in
            #1A6F
            let:16 a69 = (1 + a13[15:0]) in
            #1A70
            let:16 a70 = addWithCarry(!true,M[(SPH,SPL)],~00) in
            let:8 a71 = (M[(SPH,SPL)] & 0F) in
            let:8 a72 = (~00 & 0F) in
            let:16 a73 = addWithCarry(!true,a71,a72) in
            #1A71
            if (!is_zero(a70[7:0])) {
              A := a67;
              B := M[a1];
              C := a70[7:0];
              D := a68[15:8];
              E := a68[7:0];
              H := a69[15:8];
              L := a69[7:0];
              SPH := a66[15:8];
              SPL := a66[7:0];
              FlagS := a70[7:0][7];
              FlagZ := is_zero(a70[7:0]);
              FlagA := a73[7:0][4];
              FlagP := parity(a70[7:0]);
              FlagCY := false;
              jump (1A6B);
            } else {
              #1A74
              let:16 a74 = (1 + a66) in
              let:16 a75 = (1 + a74) in
              #1A75
              #1A78
              let:17 a76 = add17(0020,(M[a74],M[a66])) in
              #1A79
              let:16 a77 = (1 + a75) in
              let:16 a78 = (1 + a77) in
              #1A7A
              let:16 a79 = addWithCarry(!true,M[a77],~00) in
              let:8 a80 = (M[a77] & 0F) in
              let:8 a81 = (~00 & 0F) in
              let:16 a82 = addWithCarry(!true,a80,a81) in
              #1A7B
              if (!is_zero(a79[7:0])) {
                A := a67;
                B := a79[7:0];
                C := M[a75];
                D := a68[15:8];
                E := a68[7:0];
                H := a76[15:0][15:8];
                L := a76[15:0][7:0];
                SPH := a78[15:8];
                SPL := a78[7:0];
                FlagS := a79[7:0][7];
                FlagZ := is_zero(a79[7:0]);
                FlagA := a82[7:0][4];
                FlagP := parity(a79[7:0]);
                FlagCY := a76[16];
                jump (1A69);
              } else {
                #1A7E
                let:16 a83 = (1 + a78) in
                let:16 a84 = (1 + a83) in
                A := a67;
                B := a79[7:0];
                C := M[a75];
                D := a68[15:8];
                E := a68[7:0];
                H := a76[15:0][15:8];
                L := a76[15:0][7:0];
                SPH := a84[15:8];
                SPL := a84[7:0];
                FlagS := a79[7:0][7];
                FlagZ := is_zero(a79[7:0]);
                FlagA := a82[7:0][4];
                FlagP := parity(a79[7:0]);
                FlagCY := a76[16];
                jump ((M[a83],M[a78]));
              }
            }
          }
        }
      }
    }

0245:

    jump (0235);

026F:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #0270
    #0273
    let:17 a3 = add17(000C,(M[a1],M[(SPH,SPL)])) in
    #0274
    #024B
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a4 = (-1 + a2) in
        M[a4] := 02;
        let:16 a5 = (-1 + a4) in
        M[a5] := 4B;
        D := 00;
        E := 0C;
        H := a3[15:0][15:8];
        L := a3[15:0][7:0];
        SPH := a5[15:8];
        SPL := a5[7:0];
        FlagCY := a3[16];
        jump (0008);
      } else {
        let:16 a6 = (-1 + a2) in
        M[a6] := 02;
        let:16 a7 = (-1 + a6) in
        M[a7] := 4B;
        D := 00;
        E := 0C;
        H := a3[15:0][15:8];
        L := a3[15:0][7:0];
        SPH := a7[15:8];
        SPL := a7[7:0];
        FlagCY := a3[16];
        jump (0010);
      }
    } else {
      #024C
      let:16 a8 = addWithCarry(!false,M[a3[15:0]],~FF) in
      let:8 a9 = (M[a3[15:0]] & 0F) in
      let:8 a10 = (~FF & 0F) in
      let:16 a11 = addWithCarry(!false,a9,a10) in
      #024E
      if (is_zero(a8[7:0])) {
        let:16 a12 = (1 + a2) in
        let:16 a13 = (1 + a12) in
        A := M[a3[15:0]];
        D := 00;
        E := 0C;
        H := a3[15:0][15:8];
        L := a3[15:0][7:0];
        SPH := a13[15:8];
        SPL := a13[7:0];
        FlagS := a8[7:0][7];
        FlagZ := is_zero(a8[7:0]);
        FlagA := a11[7:0][4];
        FlagP := parity(a8[7:0]);
        FlagCY := !a8[15:8][0];
        jump ((M[a12],M[a2]));
      } else {
        #024F
        let:16 a14 = addWithCarry(!false,M[a3[15:0]],~FE) in
        let:8 a15 = (M[a3[15:0]] & 0F) in
        let:8 a16 = (~FE & 0F) in
        let:16 a17 = addWithCarry(!false,a15,a16) in
        #0251
        if (is_zero(a14[7:0])) {
          #0281
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a18 = (-1 + a2) in
              M[a18] := 02;
              let:16 a19 = (-1 + a18) in
              M[a19] := 81;
              A := M[a3[15:0]];
              D := 00;
              E := 0C;
              H := a3[15:0][15:8];
              L := a3[15:0][7:0];
              SPH := a19[15:8];
              SPL := a19[7:0];
              FlagS := a14[7:0][7];
              FlagZ := is_zero(a14[7:0]);
              FlagA := a17[7:0][4];
              FlagP := parity(a14[7:0]);
              FlagCY := !a14[15:8][0];
              jump (0008);
            } else {
              let:16 a20 = (-1 + a2) in
              M[a20] := 02;
              let:16 a21 = (-1 + a20) in
              M[a21] := 81;
              A := M[a3[15:0]];
              D := 00;
              E := 0C;
              H := a3[15:0][15:8];
              L := a3[15:0][7:0];
              SPH := a21[15:8];
              SPL := a21[7:0];
              FlagS := a14[7:0][7];
              FlagZ := is_zero(a14[7:0]);
              FlagA := a17[7:0][4];
              FlagP := parity(a14[7:0]);
              FlagCY := !a14[15:8][0];
              jump (0010);
            }
          } else {
            #0284
            let:17 a22 = add17(0010,a3[15:0]) in
            #0285
            A := M[a3[15:0]];
            D := 00;
            E := 10;
            H := a22[15:0][15:8];
            L := a22[15:0][7:0];
            SPH := a2[15:8];
            SPL := a2[7:0];
            FlagS := a14[7:0][7];
            FlagZ := is_zero(a14[7:0]);
            FlagA := a17[7:0][4];
            FlagP := parity(a14[7:0]);
            FlagCY := a22[16];
            jump (024B);
          }
        } else {
          #0254
          let:16 a23 = (1 + a3[15:0]) in
          #0255
          #0256
          #0257
          let:8 a24 = (M[a23] | M[a3[15:0]]) in
          #0258
          #0259
          if (!is_zero(a24)) {
            #0277
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a25 = (-1 + a2) in
                M[a25] := 02;
                let:16 a26 = (-1 + a25) in
                M[a26] := 77;
                A := M[a3[15:0]];
                B := M[a23];
                C := M[a3[15:0]];
                D := 00;
                E := 0C;
                H := a23[15:8];
                L := a23[7:0];
                SPH := a26[15:8];
                SPL := a26[7:0];
                FlagS := a24[7];
                FlagZ := is_zero(a24);
                FlagA := false;
                FlagP := parity(a24);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a27 = (-1 + a2) in
                M[a27] := 02;
                let:16 a28 = (-1 + a27) in
                M[a28] := 77;
                A := M[a3[15:0]];
                B := M[a23];
                C := M[a3[15:0]];
                D := 00;
                E := 0C;
                H := a23[15:8];
                L := a23[7:0];
                SPH := a28[15:8];
                SPL := a28[7:0];
                FlagS := a24[7];
                FlagZ := is_zero(a24);
                FlagA := false;
                FlagP := parity(a24);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a29 = addWithCarry(!true,M[a23],~00) in
              let:8 a30 = (M[a23] & 0F) in
              let:8 a31 = (~00 & 0F) in
              let:16 a32 = addWithCarry(!true,a30,a31) in
              #0278
              let:16 a33 = addWithCarry(true,a29[7:0],00) in
              let:8 a34 = (a29[7:0] & 0F) in
              let:8 a35 = (00 & 0F) in
              let:16 a36 = addWithCarry(true,a34,a35) in
              #0279
              if (!is_zero(a33[7:0])) {
                #027D
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a37 = (-1 + a2) in
                    M[a37] := 02;
                    let:16 a38 = (-1 + a37) in
                    M[a38] := 7D;
                    A := M[a3[15:0]];
                    B := a33[7:0];
                    C := M[a3[15:0]];
                    D := 00;
                    E := 0C;
                    H := a23[15:8];
                    L := a23[7:0];
                    SPH := a38[15:8];
                    SPL := a38[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a39 = (-1 + a2) in
                    M[a39] := 02;
                    let:16 a40 = (-1 + a39) in
                    M[a40] := 7D;
                    A := M[a3[15:0]];
                    B := a33[7:0];
                    C := M[a3[15:0]];
                    D := 00;
                    E := 0C;
                    H := a23[15:8];
                    L := a23[7:0];
                    SPH := a40[15:8];
                    SPL := a40[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  let:16 a41 = addWithCarry(!true,a33[7:0],~00) in
                  let:8 a42 = (a33[7:0] & 0F) in
                  let:8 a43 = (~00 & 0F) in
                  let:16 a44 = addWithCarry(!true,a42,a43) in
                  #027E
                  M[a23] := a41[7:0];
                  #027F
                  let:16 a45 = (-1 + a23) in
                  #0280
                  M[a45] := M[a3[15:0]];
                  #0281
                  #0284
                  let:17 a46 = add17(0010,a45) in
                  #0285
                  A := M[a3[15:0]];
                  B := a41[7:0];
                  C := M[a3[15:0]];
                  D := 00;
                  E := 10;
                  H := a46[15:0][15:8];
                  L := a46[15:0][7:0];
                  SPH := a2[15:8];
                  SPL := a2[7:0];
                  FlagS := a41[7:0][7];
                  FlagZ := is_zero(a41[7:0]);
                  FlagA := a44[7:0][4];
                  FlagP := parity(a41[7:0]);
                  FlagCY := a46[16];
                  jump (024B);
                }
              } else {
                #027C
                let:16 a47 = addWithCarry(!true,M[a3[15:0]],~00) in
                let:8 a48 = (M[a3[15:0]] & 0F) in
                let:8 a49 = (~00 & 0F) in
                let:16 a50 = addWithCarry(!true,a48,a49) in
                #027D
                let:16 a51 = addWithCarry(!true,a33[7:0],~00) in
                let:8 a52 = (a33[7:0] & 0F) in
                let:8 a53 = (~00 & 0F) in
                let:16 a54 = addWithCarry(!true,a52,a53) in
                #027E
                M[a23] := a51[7:0];
                #027F
                let:16 a55 = (-1 + a23) in
                #0280
                M[a55] := a47[7:0];
                #0281
                #0284
                let:17 a56 = add17(0010,a55) in
                #0285
                A := a47[7:0];
                B := a51[7:0];
                C := M[a3[15:0]];
                D := 00;
                E := 10;
                H := a56[15:0][15:8];
                L := a56[15:0][7:0];
                SPH := a2[15:8];
                SPL := a2[7:0];
                FlagS := a51[7:0][7];
                FlagZ := is_zero(a51[7:0]);
                FlagA := a54[7:0][4];
                FlagP := parity(a51[7:0]);
                FlagCY := a56[16];
                jump (024B);
              }
            }
          } else {
            #025C
            let:16 a57 = (1 + a23) in
            #025D
            #025E
            let:8 a58 = (M[a57] & M[a57]) in
            let:8 a59 = (M[a57] | M[a57]) in
            #025F
            if (!is_zero(a58)) {
              #0288
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a60 = (-1 + a2) in
                  M[a60] := 02;
                  let:16 a61 = (-1 + a60) in
                  M[a61] := 88;
                  A := a58;
                  B := M[a23];
                  C := M[a3[15:0]];
                  D := 00;
                  E := 0C;
                  H := a57[15:8];
                  L := a57[7:0];
                  SPH := a61[15:8];
                  SPL := a61[7:0];
                  FlagS := a58[7];
                  FlagZ := is_zero(a58);
                  FlagA := a59[3];
                  FlagP := parity(a58);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a62 = (-1 + a2) in
                  M[a62] := 02;
                  let:16 a63 = (-1 + a62) in
                  M[a63] := 88;
                  A := a58;
                  B := M[a23];
                  C := M[a3[15:0]];
                  D := 00;
                  E := 0C;
                  H := a57[15:8];
                  L := a57[7:0];
                  SPH := a63[15:8];
                  SPL := a63[7:0];
                  FlagS := a58[7];
                  FlagZ := is_zero(a58);
                  FlagA := a59[3];
                  FlagP := parity(a58);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                let:16 a64 = addWithCarry(!true,M[a57],~00) in
                let:8 a65 = (M[a57] & 0F) in
                let:8 a66 = (~00 & 0F) in
                let:16 a67 = addWithCarry(!true,a65,a66) in
                M[a57] := a64[7:0];
                #0289
                let:16 a68 = (-1 + a57) in
                #028A
                let:16 a69 = (-1 + a68) in
                #028B
                #0281
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a70 = (-1 + a2) in
                    M[a70] := 02;
                    let:16 a71 = (-1 + a70) in
                    M[a71] := 81;
                    A := a58;
                    B := M[a23];
                    C := M[a3[15:0]];
                    D := 00;
                    E := 0C;
                    H := a69[15:8];
                    L := a69[7:0];
                    SPH := a71[15:8];
                    SPL := a71[7:0];
                    FlagS := a64[7:0][7];
                    FlagZ := is_zero(a64[7:0]);
                    FlagA := a67[7:0][4];
                    FlagP := parity(a64[7:0]);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a72 = (-1 + a2) in
                    M[a72] := 02;
                    let:16 a73 = (-1 + a72) in
                    M[a73] := 81;
                    A := a58;
                    B := M[a23];
                    C := M[a3[15:0]];
                    D := 00;
                    E := 0C;
                    H := a69[15:8];
                    L := a69[7:0];
                    SPH := a73[15:8];
                    SPL := a73[7:0];
                    FlagS := a64[7:0][7];
                    FlagZ := is_zero(a64[7:0]);
                    FlagA := a67[7:0][4];
                    FlagP := parity(a64[7:0]);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  #0284
                  let:17 a74 = add17(0010,a69) in
                  #0285
                  A := a58;
                  B := M[a23];
                  C := M[a3[15:0]];
                  D := 00;
                  E := 10;
                  H := a74[15:0][15:8];
                  L := a74[15:0][7:0];
                  SPH := a2[15:8];
                  SPL := a2[7:0];
                  FlagS := a64[7:0][7];
                  FlagZ := is_zero(a64[7:0]);
                  FlagA := a67[7:0][4];
                  FlagP := parity(a64[7:0]);
                  FlagCY := a74[16];
                  jump (024B);
                }
              }
            } else {
              #0262
              let:16 a75 = (1 + a57) in
              #0263
              #0264
              let:16 a76 = (1 + a75) in
              #0265
              #0266
              let:16 a77 = (-1 + a2) in
              M[a77] := a76[15:8];
              let:16 a78 = (-1 + a77) in
              M[a78] := a76[7:0];
              #0267
              #0268
              let:16 a79 = (-1 + a78) in
              M[a79] := M[a76];
              let:16 a80 = (-1 + a79) in
              M[a80] := M[a75];
              #0269
              #026C
              let:16 a81 = (1 + a80) in
              M[a80] := 6F;
              M[a81] := 02;
              #026D
              let:16 a82 = (-1 + a80) in
              M[a82] := a76[15:8];
              let:16 a83 = (-1 + a82) in
              M[a83] := a76[7:0];
              #026E
              A := a58;
              B := M[a23];
              C := M[a3[15:0]];
              D := a76[15:8];
              E := a76[7:0];
              H := M[a81];
              L := M[a80];
              SPH := a83[15:8];
              SPL := a83[7:0];
              FlagS := a58[7];
              FlagZ := is_zero(a58);
              FlagA := a59[3];
              FlagP := parity(a58);
              FlagCY := false;
              jump ((M[a81],M[a80]));
            }
          }
        }
      }
    }

028E:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #028F
    let:16 a3 = (1 + (M[a1],M[(SPH,SPL)])) in
    #0290
    #0291
    let:16 a4 = addWithCarry(!false,M[a3],~FF) in
    let:8 a5 = (M[a3] & 0F) in
    let:8 a6 = (~FF & 0F) in
    let:16 a7 = addWithCarry(!false,a5,a6) in
    #0293
    if (is_zero(a4[7:0])) {
      #033B
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a8 = (-1 + a2) in
          M[a8] := 03;
          let:16 a9 = (-1 + a8) in
          M[a9] := 3B;
          A := M[a3];
          H := a3[15:8];
          L := a3[7:0];
          SPH := a9[15:8];
          SPL := a9[7:0];
          FlagS := a4[7:0][7];
          FlagZ := is_zero(a4[7:0]);
          FlagA := a7[7:0][4];
          FlagP := parity(a4[7:0]);
          FlagCY := !a4[15:8][0];
          jump (0008);
        } else {
          let:16 a10 = (-1 + a2) in
          M[a10] := 03;
          let:16 a11 = (-1 + a10) in
          M[a11] := 3B;
          A := M[a3];
          H := a3[15:8];
          L := a3[7:0];
          SPH := a11[15:8];
          SPL := a11[7:0];
          FlagS := a4[7:0][7];
          FlagZ := is_zero(a4[7:0]);
          FlagA := a7[7:0][4];
          FlagP := parity(a4[7:0]);
          FlagCY := !a4[15:8][0];
          jump (0010);
        }
      } else {
        #033E
        M[2068] := 01;
        #0340
        #0341
        #0342
        let:8 a12 = (M[2069] & M[2069]) in
        let:8 a13 = (M[2069] | M[2069]) in
        #0343
        #03B0
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a14 = (-1 + a2) in
            M[a14] := 03;
            let:16 a15 = (-1 + a14) in
            M[a15] := B0;
            A := a12;
            H := 20;
            L := 69;
            SPH := a15[15:8];
            SPL := a15[7:0];
            FlagS := a12[7];
            FlagZ := is_zero(a12);
            FlagA := a13[3];
            FlagP := parity(a12);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a16 = (-1 + a2) in
            M[a16] := 03;
            let:16 a17 = (-1 + a16) in
            M[a17] := B0;
            A := a12;
            H := 20;
            L := 69;
            SPH := a17[15:8];
            SPL := a17[7:0];
            FlagS := a12[7];
            FlagZ := is_zero(a12);
            FlagA := a13[3];
            FlagP := parity(a12);
            FlagCY := false;
            jump (0010);
          }
        } else {
          if (!is_zero(a12)) {
            #034A
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a18 = (-1 + a2) in
                M[a18] := 03;
                let:16 a19 = (-1 + a18) in
                M[a19] := 4A;
                A := a12;
                H := 20;
                L := 69;
                SPH := a19[15:8];
                SPL := a19[7:0];
                FlagS := a12[7];
                FlagZ := is_zero(a12);
                FlagA := a13[3];
                FlagP := parity(a12);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a20 = (-1 + a2) in
                M[a20] := 03;
                let:16 a21 = (-1 + a20) in
                M[a21] := 4A;
                A := a12;
                H := 20;
                L := 69;
                SPH := a21[15:8];
                SPL := a21[7:0];
                FlagS := a12[7];
                FlagZ := is_zero(a12);
                FlagA := a13[3];
                FlagP := parity(a12);
                FlagCY := false;
                jump (0010);
              }
            } else {
              #034D
              #034E
              #0351
              let:8 a22 = (M[20EF] & M[20EF]) in
              let:8 a23 = (M[20EF] | M[20EF]) in
              #0352
              if (!is_zero(a22)) {
                #0363
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a24 = (-1 + a2) in
                    M[a24] := 03;
                    let:16 a25 = (-1 + a24) in
                    M[a25] := 63;
                    A := a22;
                    B := M[201B];
                    H := 20;
                    L := 69;
                    SPH := a25[15:8];
                    SPL := a25[7:0];
                    FlagS := a22[7];
                    FlagZ := is_zero(a22);
                    FlagA := a23[3];
                    FlagP := parity(a22);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a26 = (-1 + a2) in
                    M[a26] := 03;
                    let:16 a27 = (-1 + a26) in
                    M[a27] := 63;
                    A := a22;
                    B := M[201B];
                    H := 20;
                    L := 69;
                    SPH := a27[15:8];
                    SPL := a27[7:0];
                    FlagS := a22[7];
                    FlagZ := is_zero(a22);
                    FlagA := a23[3];
                    FlagP := parity(a22);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  let:16 a28 = (-1 + a2) in
                  M[a28] := 03;
                  let:16 a29 = (-1 + a28) in
                  M[a29] := 66;
                  #return-to: 0366
                  #17C0
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a30 = (-1 + a29) in
                      M[a30] := 17;
                      let:16 a31 = (-1 + a30) in
                      M[a31] := C0;
                      A := a22;
                      B := M[201B];
                      H := 20;
                      L := 69;
                      SPH := a31[15:8];
                      SPL := a31[7:0];
                      FlagS := a22[7];
                      FlagZ := is_zero(a22);
                      FlagA := a23[3];
                      FlagP := parity(a22);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a32 = (-1 + a29) in
                      M[a32] := 17;
                      let:16 a33 = (-1 + a32) in
                      M[a33] := C0;
                      A := a22;
                      B := M[201B];
                      H := 20;
                      L := 69;
                      SPH := a33[15:8];
                      SPL := a33[7:0];
                      FlagS := a22[7];
                      FlagZ := is_zero(a22);
                      FlagA := a23[3];
                      FlagP := parity(a22);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    #17C3
                    #17C4
                    if (!M[2067][0]) {
                      #17CA
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a34 = (-1 + a29) in
                          M[a34] := 17;
                          let:16 a35 = (-1 + a34) in
                          M[a35] := CA;
                          A := updateBit((M[2067] >> 01),7,M[2067][0]);
                          B := M[201B];
                          H := 20;
                          L := 69;
                          SPH := a35[15:8];
                          SPL := a35[7:0];
                          FlagS := a22[7];
                          FlagZ := is_zero(a22);
                          FlagA := a23[3];
                          FlagP := parity(a22);
                          FlagCY := M[2067][0];
                          jump (0008);
                        } else {
                          let:16 a36 = (-1 + a29) in
                          M[a36] := 17;
                          let:16 a37 = (-1 + a36) in
                          M[a37] := CA;
                          A := updateBit((M[2067] >> 01),7,M[2067][0]);
                          B := M[201B];
                          H := 20;
                          L := 69;
                          SPH := a37[15:8];
                          SPL := a37[7:0];
                          FlagS := a22[7];
                          FlagZ := is_zero(a22);
                          FlagA := a23[3];
                          FlagP := parity(a22);
                          FlagCY := M[2067][0];
                          jump (0010);
                        }
                      } else {
                        #17CC
                        let:16 a38 = (1 + a29) in
                        let:16 a39 = (1 + a38) in
                        A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off));
                        B := M[201B];
                        H := 20;
                        L := 69;
                        SPH := a39[15:8];
                        SPL := a39[7:0];
                        FlagS := a22[7];
                        FlagZ := is_zero(a22);
                        FlagA := a23[3];
                        FlagP := parity(a22);
                        FlagCY := M[2067][0];
                        jump ((M[a38],M[a29]));
                      }
                    } else {
                      #17C7
                      #17C9
                      let:16 a40 = (1 + a29) in
                      let:16 a41 = (1 + a40) in
                      A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right));
                      B := M[201B];
                      H := 20;
                      L := 69;
                      SPH := a41[15:8];
                      SPL := a41[7:0];
                      FlagS := a22[7];
                      FlagZ := is_zero(a22);
                      FlagA := a23[3];
                      FlagP := parity(a22);
                      FlagCY := M[2067][0];
                      jump ((M[a40],M[a29]));
                    }
                  }
                }
              } else {
                #0355
                #0358
                #0359
                if (M[201D][0]) {
                  #0381
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a42 = (-1 + a2) in
                      M[a42] := 03;
                      let:16 a43 = (-1 + a42) in
                      M[a43] := 81;
                      A := updateBit((M[201D] >> 01),7,M[201D][0]);
                      B := M[201B];
                      H := 20;
                      L := 69;
                      SPH := a43[15:8];
                      SPL := a43[7:0];
                      FlagS := a22[7];
                      FlagZ := is_zero(a22);
                      FlagA := a23[3];
                      FlagP := parity(a22);
                      FlagCY := M[201D][0];
                      jump (0008);
                    } else {
                      let:16 a44 = (-1 + a2) in
                      M[a44] := 03;
                      let:16 a45 = (-1 + a44) in
                      M[a45] := 81;
                      A := updateBit((M[201D] >> 01),7,M[201D][0]);
                      B := M[201B];
                      H := 20;
                      L := 69;
                      SPH := a45[15:8];
                      SPL := a45[7:0];
                      FlagS := a22[7];
                      FlagZ := is_zero(a22);
                      FlagA := a23[3];
                      FlagP := parity(a22);
                      FlagCY := M[201D][0];
                      jump (0010);
                    }
                  } else {
                    #0382
                    let:16 a46 = addWithCarry(!false,M[201B],~D9) in
                    let:8 a47 = (M[201B] & 0F) in
                    let:8 a48 = (~D9 & 0F) in
                    let:16 a49 = addWithCarry(!false,a47,a48) in
                    #0384
                    if (is_zero(a46[7:0])) {
                      #036F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a50 = (-1 + a2) in
                          M[a50] := 03;
                          let:16 a51 = (-1 + a50) in
                          M[a51] := 6F;
                          A := M[201B];
                          B := M[201B];
                          H := 20;
                          L := 69;
                          SPH := a51[15:8];
                          SPL := a51[7:0];
                          FlagS := a46[7:0][7];
                          FlagZ := is_zero(a46[7:0]);
                          FlagA := a49[7:0][4];
                          FlagP := parity(a46[7:0]);
                          FlagCY := !a46[15:8][0];
                          jump (0008);
                        } else {
                          let:16 a52 = (-1 + a2) in
                          M[a52] := 03;
                          let:16 a53 = (-1 + a52) in
                          M[a53] := 6F;
                          A := M[201B];
                          B := M[201B];
                          H := 20;
                          L := 69;
                          SPH := a53[15:8];
                          SPL := a53[7:0];
                          FlagS := a46[7:0][7];
                          FlagZ := is_zero(a46[7:0]);
                          FlagA := a49[7:0][4];
                          FlagP := parity(a46[7:0]);
                          FlagCY := !a46[15:8][0];
                          jump (0010);
                        }
                      } else {
                        #0372
                        let:16 a54 = (-1 + a2) in
                        M[a54] := 03;
                        let:16 a55 = (-1 + a54) in
                        M[a55] := 75;
                        #return-to: 0375
                        #1A3B
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a56 = (-1 + a55) in
                            M[a56] := 1A;
                            let:16 a57 = (-1 + a56) in
                            M[a57] := 3B;
                            A := M[201B];
                            B := M[201B];
                            H := 20;
                            L := 18;
                            SPH := a57[15:8];
                            SPL := a57[7:0];
                            FlagS := a46[7:0][7];
                            FlagZ := is_zero(a46[7:0]);
                            FlagA := a49[7:0][4];
                            FlagP := parity(a46[7:0]);
                            FlagCY := !a46[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a58 = (-1 + a55) in
                            M[a58] := 1A;
                            let:16 a59 = (-1 + a58) in
                            M[a59] := 3B;
                            A := M[201B];
                            B := M[201B];
                            H := 20;
                            L := 18;
                            SPH := a59[15:8];
                            SPL := a59[7:0];
                            FlagS := a46[7:0][7];
                            FlagZ := is_zero(a46[7:0]);
                            FlagA := a49[7:0][4];
                            FlagP := parity(a46[7:0]);
                            FlagCY := !a46[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1A3C
                          #1A3D
                          #1A3E
                          #1A3F
                          #1A40
                          #1A41
                          #1A42
                          #1A43
                          #1A44
                          #1A45
                          #1A46
                          let:16 a60 = (1 + a55) in
                          let:16 a61 = (1 + a60) in
                          A := M[201A];
                          B := M[201C];
                          C := M[201B];
                          D := M[2019];
                          E := M[2018];
                          H := M[201B];
                          L := M[201A];
                          SPH := a61[15:8];
                          SPL := a61[7:0];
                          FlagS := a46[7:0][7];
                          FlagZ := is_zero(a46[7:0]);
                          FlagA := a49[7:0][4];
                          FlagP := parity(a46[7:0]);
                          FlagCY := !a46[15:8][0];
                          jump ((M[a60],M[a55]));
                        }
                      }
                    } else {
                      #0387
                      let:16 a62 = addWithCarry(true,M[201B],00) in
                      let:8 a63 = (M[201B] & 0F) in
                      let:8 a64 = (00 & 0F) in
                      let:16 a65 = addWithCarry(true,a63,a64) in
                      #0388
                      M[201B] := a62[7:0];
                      #038B
                      #036F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a66 = (-1 + a2) in
                          M[a66] := 03;
                          let:16 a67 = (-1 + a66) in
                          M[a67] := 6F;
                          A := a62[7:0];
                          B := M[201B];
                          H := 20;
                          L := 69;
                          SPH := a67[15:8];
                          SPL := a67[7:0];
                          FlagS := a62[7:0][7];
                          FlagZ := is_zero(a62[7:0]);
                          FlagA := a65[7:0][4];
                          FlagP := parity(a62[7:0]);
                          FlagCY := !a46[15:8][0];
                          jump (0008);
                        } else {
                          let:16 a68 = (-1 + a2) in
                          M[a68] := 03;
                          let:16 a69 = (-1 + a68) in
                          M[a69] := 6F;
                          A := a62[7:0];
                          B := M[201B];
                          H := 20;
                          L := 69;
                          SPH := a69[15:8];
                          SPL := a69[7:0];
                          FlagS := a62[7:0][7];
                          FlagZ := is_zero(a62[7:0]);
                          FlagA := a65[7:0][4];
                          FlagP := parity(a62[7:0]);
                          FlagCY := !a46[15:8][0];
                          jump (0010);
                        }
                      } else {
                        #0372
                        let:16 a70 = (-1 + a2) in
                        M[a70] := 03;
                        let:16 a71 = (-1 + a70) in
                        M[a71] := 75;
                        #return-to: 0375
                        #1A3B
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a72 = (-1 + a71) in
                            M[a72] := 1A;
                            let:16 a73 = (-1 + a72) in
                            M[a73] := 3B;
                            A := a62[7:0];
                            B := M[201B];
                            H := 20;
                            L := 18;
                            SPH := a73[15:8];
                            SPL := a73[7:0];
                            FlagS := a62[7:0][7];
                            FlagZ := is_zero(a62[7:0]);
                            FlagA := a65[7:0][4];
                            FlagP := parity(a62[7:0]);
                            FlagCY := !a46[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a74 = (-1 + a71) in
                            M[a74] := 1A;
                            let:16 a75 = (-1 + a74) in
                            M[a75] := 3B;
                            A := a62[7:0];
                            B := M[201B];
                            H := 20;
                            L := 18;
                            SPH := a75[15:8];
                            SPL := a75[7:0];
                            FlagS := a62[7:0][7];
                            FlagZ := is_zero(a62[7:0]);
                            FlagA := a65[7:0][4];
                            FlagP := parity(a62[7:0]);
                            FlagCY := !a46[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1A3C
                          #1A3D
                          #1A3E
                          #1A3F
                          #1A40
                          #1A41
                          #1A42
                          #1A43
                          #1A44
                          #1A45
                          #1A46
                          let:16 a76 = (1 + a71) in
                          let:16 a77 = (1 + a76) in
                          A := M[201A];
                          B := M[201C];
                          C := M[201B];
                          D := M[2019];
                          E := M[2018];
                          H := M[201B];
                          L := M[201A];
                          SPH := a77[15:8];
                          SPL := a77[7:0];
                          FlagS := a62[7:0][7];
                          FlagZ := is_zero(a62[7:0]);
                          FlagA := a65[7:0][4];
                          FlagP := parity(a62[7:0]);
                          FlagCY := !a46[15:8][0];
                          jump ((M[a76],M[a71]));
                        }
                      }
                    }
                  }
                } else {
                  #035C
                  #035D
                  if (updateBit((M[201D] >> 01),7,M[201D][0])[0]) {
                    #038E
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a78 = (-1 + a2) in
                        M[a78] := 03;
                        let:16 a79 = (-1 + a78) in
                        M[a79] := 8E;
                        A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                        B := M[201B];
                        H := 20;
                        L := 69;
                        SPH := a79[15:8];
                        SPL := a79[7:0];
                        FlagS := a22[7];
                        FlagZ := is_zero(a22);
                        FlagA := a23[3];
                        FlagP := parity(a22);
                        FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                        jump (0008);
                      } else {
                        let:16 a80 = (-1 + a2) in
                        M[a80] := 03;
                        let:16 a81 = (-1 + a80) in
                        M[a81] := 8E;
                        A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                        B := M[201B];
                        H := 20;
                        L := 69;
                        SPH := a81[15:8];
                        SPL := a81[7:0];
                        FlagS := a22[7];
                        FlagZ := is_zero(a22);
                        FlagA := a23[3];
                        FlagP := parity(a22);
                        FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                        jump (0010);
                      }
                    } else {
                      #038F
                      let:16 a82 = addWithCarry(!false,M[201B],~30) in
                      let:8 a83 = (M[201B] & 0F) in
                      let:8 a84 = (~30 & 0F) in
                      let:16 a85 = addWithCarry(!false,a83,a84) in
                      #0391
                      if (is_zero(a82[7:0])) {
                        #036F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a86 = (-1 + a2) in
                            M[a86] := 03;
                            let:16 a87 = (-1 + a86) in
                            M[a87] := 6F;
                            A := M[201B];
                            B := M[201B];
                            H := 20;
                            L := 69;
                            SPH := a87[15:8];
                            SPL := a87[7:0];
                            FlagS := a82[7:0][7];
                            FlagZ := is_zero(a82[7:0]);
                            FlagA := a85[7:0][4];
                            FlagP := parity(a82[7:0]);
                            FlagCY := !a82[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a88 = (-1 + a2) in
                            M[a88] := 03;
                            let:16 a89 = (-1 + a88) in
                            M[a89] := 6F;
                            A := M[201B];
                            B := M[201B];
                            H := 20;
                            L := 69;
                            SPH := a89[15:8];
                            SPL := a89[7:0];
                            FlagS := a82[7:0][7];
                            FlagZ := is_zero(a82[7:0]);
                            FlagA := a85[7:0][4];
                            FlagP := parity(a82[7:0]);
                            FlagCY := !a82[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #0372
                          let:16 a90 = (-1 + a2) in
                          M[a90] := 03;
                          let:16 a91 = (-1 + a90) in
                          M[a91] := 75;
                          #return-to: 0375
                          #1A3B
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a92 = (-1 + a91) in
                              M[a92] := 1A;
                              let:16 a93 = (-1 + a92) in
                              M[a93] := 3B;
                              A := M[201B];
                              B := M[201B];
                              H := 20;
                              L := 18;
                              SPH := a93[15:8];
                              SPL := a93[7:0];
                              FlagS := a82[7:0][7];
                              FlagZ := is_zero(a82[7:0]);
                              FlagA := a85[7:0][4];
                              FlagP := parity(a82[7:0]);
                              FlagCY := !a82[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a94 = (-1 + a91) in
                              M[a94] := 1A;
                              let:16 a95 = (-1 + a94) in
                              M[a95] := 3B;
                              A := M[201B];
                              B := M[201B];
                              H := 20;
                              L := 18;
                              SPH := a95[15:8];
                              SPL := a95[7:0];
                              FlagS := a82[7:0][7];
                              FlagZ := is_zero(a82[7:0]);
                              FlagA := a85[7:0][4];
                              FlagP := parity(a82[7:0]);
                              FlagCY := !a82[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1A3C
                            #1A3D
                            #1A3E
                            #1A3F
                            #1A40
                            #1A41
                            #1A42
                            #1A43
                            #1A44
                            #1A45
                            #1A46
                            let:16 a96 = (1 + a91) in
                            let:16 a97 = (1 + a96) in
                            A := M[201A];
                            B := M[201C];
                            C := M[201B];
                            D := M[2019];
                            E := M[2018];
                            H := M[201B];
                            L := M[201A];
                            SPH := a97[15:8];
                            SPL := a97[7:0];
                            FlagS := a82[7:0][7];
                            FlagZ := is_zero(a82[7:0]);
                            FlagA := a85[7:0][4];
                            FlagP := parity(a82[7:0]);
                            FlagCY := !a82[15:8][0];
                            jump ((M[a96],M[a91]));
                          }
                        }
                      } else {
                        #0394
                        let:16 a98 = addWithCarry(!true,M[201B],~00) in
                        let:8 a99 = (M[201B] & 0F) in
                        let:8 a100 = (~00 & 0F) in
                        let:16 a101 = addWithCarry(!true,a99,a100) in
                        #0395
                        M[201B] := a98[7:0];
                        #0398
                        #036F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a102 = (-1 + a2) in
                            M[a102] := 03;
                            let:16 a103 = (-1 + a102) in
                            M[a103] := 6F;
                            A := a98[7:0];
                            B := M[201B];
                            H := 20;
                            L := 69;
                            SPH := a103[15:8];
                            SPL := a103[7:0];
                            FlagS := a98[7:0][7];
                            FlagZ := is_zero(a98[7:0]);
                            FlagA := a101[7:0][4];
                            FlagP := parity(a98[7:0]);
                            FlagCY := !a82[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a104 = (-1 + a2) in
                            M[a104] := 03;
                            let:16 a105 = (-1 + a104) in
                            M[a105] := 6F;
                            A := a98[7:0];
                            B := M[201B];
                            H := 20;
                            L := 69;
                            SPH := a105[15:8];
                            SPL := a105[7:0];
                            FlagS := a98[7:0][7];
                            FlagZ := is_zero(a98[7:0]);
                            FlagA := a101[7:0][4];
                            FlagP := parity(a98[7:0]);
                            FlagCY := !a82[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #0372
                          let:16 a106 = (-1 + a2) in
                          M[a106] := 03;
                          let:16 a107 = (-1 + a106) in
                          M[a107] := 75;
                          #return-to: 0375
                          #1A3B
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a108 = (-1 + a107) in
                              M[a108] := 1A;
                              let:16 a109 = (-1 + a108) in
                              M[a109] := 3B;
                              A := a98[7:0];
                              B := M[201B];
                              H := 20;
                              L := 18;
                              SPH := a109[15:8];
                              SPL := a109[7:0];
                              FlagS := a98[7:0][7];
                              FlagZ := is_zero(a98[7:0]);
                              FlagA := a101[7:0][4];
                              FlagP := parity(a98[7:0]);
                              FlagCY := !a82[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a110 = (-1 + a107) in
                              M[a110] := 1A;
                              let:16 a111 = (-1 + a110) in
                              M[a111] := 3B;
                              A := a98[7:0];
                              B := M[201B];
                              H := 20;
                              L := 18;
                              SPH := a111[15:8];
                              SPL := a111[7:0];
                              FlagS := a98[7:0][7];
                              FlagZ := is_zero(a98[7:0]);
                              FlagA := a101[7:0][4];
                              FlagP := parity(a98[7:0]);
                              FlagCY := !a82[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1A3C
                            #1A3D
                            #1A3E
                            #1A3F
                            #1A40
                            #1A41
                            #1A42
                            #1A43
                            #1A44
                            #1A45
                            #1A46
                            let:16 a112 = (1 + a107) in
                            let:16 a113 = (1 + a112) in
                            A := M[201A];
                            B := M[201C];
                            C := M[201B];
                            D := M[2019];
                            E := M[2018];
                            H := M[201B];
                            L := M[201A];
                            SPH := a113[15:8];
                            SPL := a113[7:0];
                            FlagS := a98[7:0][7];
                            FlagZ := is_zero(a98[7:0]);
                            FlagA := a101[7:0][4];
                            FlagP := parity(a98[7:0]);
                            FlagCY := !a82[15:8][0];
                            jump ((M[a112],M[a107]));
                          }
                        }
                      }
                    }
                  } else {
                    #0360
                    #036F
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a114 = (-1 + a2) in
                        M[a114] := 03;
                        let:16 a115 = (-1 + a114) in
                        M[a115] := 6F;
                        A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                        B := M[201B];
                        H := 20;
                        L := 69;
                        SPH := a115[15:8];
                        SPL := a115[7:0];
                        FlagS := a22[7];
                        FlagZ := is_zero(a22);
                        FlagA := a23[3];
                        FlagP := parity(a22);
                        FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                        jump (0008);
                      } else {
                        let:16 a116 = (-1 + a2) in
                        M[a116] := 03;
                        let:16 a117 = (-1 + a116) in
                        M[a117] := 6F;
                        A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                        B := M[201B];
                        H := 20;
                        L := 69;
                        SPH := a117[15:8];
                        SPL := a117[7:0];
                        FlagS := a22[7];
                        FlagZ := is_zero(a22);
                        FlagA := a23[3];
                        FlagP := parity(a22);
                        FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                        jump (0010);
                      }
                    } else {
                      #0372
                      let:16 a118 = (-1 + a2) in
                      M[a118] := 03;
                      let:16 a119 = (-1 + a118) in
                      M[a119] := 75;
                      #return-to: 0375
                      #1A3B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a120 = (-1 + a119) in
                          M[a120] := 1A;
                          let:16 a121 = (-1 + a120) in
                          M[a121] := 3B;
                          A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                          B := M[201B];
                          H := 20;
                          L := 18;
                          SPH := a121[15:8];
                          SPL := a121[7:0];
                          FlagS := a22[7];
                          FlagZ := is_zero(a22);
                          FlagA := a23[3];
                          FlagP := parity(a22);
                          FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                          jump (0008);
                        } else {
                          let:16 a122 = (-1 + a119) in
                          M[a122] := 1A;
                          let:16 a123 = (-1 + a122) in
                          M[a123] := 3B;
                          A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                          B := M[201B];
                          H := 20;
                          L := 18;
                          SPH := a123[15:8];
                          SPL := a123[7:0];
                          FlagS := a22[7];
                          FlagZ := is_zero(a22);
                          FlagA := a23[3];
                          FlagP := parity(a22);
                          FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                          jump (0010);
                        }
                      } else {
                        #1A3C
                        #1A3D
                        #1A3E
                        #1A3F
                        #1A40
                        #1A41
                        #1A42
                        #1A43
                        #1A44
                        #1A45
                        #1A46
                        let:16 a124 = (1 + a119) in
                        let:16 a125 = (1 + a124) in
                        A := M[201A];
                        B := M[201C];
                        C := M[201B];
                        D := M[2019];
                        E := M[2018];
                        H := M[201B];
                        L := M[201A];
                        SPH := a125[15:8];
                        SPL := a125[7:0];
                        FlagS := a22[7];
                        FlagZ := is_zero(a22);
                        FlagA := a23[3];
                        FlagP := parity(a22);
                        FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                        jump ((M[a124],M[a119]));
                      }
                    }
                  }
                }
              }
            }
          } else {
            #03B3
            #03B4
            let:16 a126 = addWithCarry(!true,M[206A],~00) in
            let:8 a127 = (M[206A] & 0F) in
            let:8 a128 = (~00 & 0F) in
            let:16 a129 = addWithCarry(!true,a127,a128) in
            M[206A] := a126[7:0];
            #03B5
            if (!is_zero(a126[7:0])) {
              #034A
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a130 = (-1 + a2) in
                  M[a130] := 03;
                  let:16 a131 = (-1 + a130) in
                  M[a131] := 4A;
                  A := a12;
                  H := 20;
                  L := 6A;
                  SPH := a131[15:8];
                  SPL := a131[7:0];
                  FlagS := a126[7:0][7];
                  FlagZ := is_zero(a126[7:0]);
                  FlagA := a129[7:0][4];
                  FlagP := parity(a126[7:0]);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a132 = (-1 + a2) in
                  M[a132] := 03;
                  let:16 a133 = (-1 + a132) in
                  M[a133] := 4A;
                  A := a12;
                  H := 20;
                  L := 6A;
                  SPH := a133[15:8];
                  SPL := a133[7:0];
                  FlagS := a126[7:0][7];
                  FlagZ := is_zero(a126[7:0]);
                  FlagA := a129[7:0][4];
                  FlagP := parity(a126[7:0]);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #034D
                #034E
                #0351
                let:8 a134 = (M[20EF] & M[20EF]) in
                let:8 a135 = (M[20EF] | M[20EF]) in
                #0352
                if (!is_zero(a134)) {
                  #0363
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a136 = (-1 + a2) in
                      M[a136] := 03;
                      let:16 a137 = (-1 + a136) in
                      M[a137] := 63;
                      A := a134;
                      B := M[201B];
                      H := 20;
                      L := 6A;
                      SPH := a137[15:8];
                      SPL := a137[7:0];
                      FlagS := a134[7];
                      FlagZ := is_zero(a134);
                      FlagA := a135[3];
                      FlagP := parity(a134);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a138 = (-1 + a2) in
                      M[a138] := 03;
                      let:16 a139 = (-1 + a138) in
                      M[a139] := 63;
                      A := a134;
                      B := M[201B];
                      H := 20;
                      L := 6A;
                      SPH := a139[15:8];
                      SPL := a139[7:0];
                      FlagS := a134[7];
                      FlagZ := is_zero(a134);
                      FlagA := a135[3];
                      FlagP := parity(a134);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:16 a140 = (-1 + a2) in
                    M[a140] := 03;
                    let:16 a141 = (-1 + a140) in
                    M[a141] := 66;
                    #return-to: 0366
                    #17C0
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a142 = (-1 + a141) in
                        M[a142] := 17;
                        let:16 a143 = (-1 + a142) in
                        M[a143] := C0;
                        A := a134;
                        B := M[201B];
                        H := 20;
                        L := 6A;
                        SPH := a143[15:8];
                        SPL := a143[7:0];
                        FlagS := a134[7];
                        FlagZ := is_zero(a134);
                        FlagA := a135[3];
                        FlagP := parity(a134);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a144 = (-1 + a141) in
                        M[a144] := 17;
                        let:16 a145 = (-1 + a144) in
                        M[a145] := C0;
                        A := a134;
                        B := M[201B];
                        H := 20;
                        L := 6A;
                        SPH := a145[15:8];
                        SPL := a145[7:0];
                        FlagS := a134[7];
                        FlagZ := is_zero(a134);
                        FlagA := a135[3];
                        FlagP := parity(a134);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      #17C3
                      #17C4
                      if (!M[2067][0]) {
                        #17CA
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a146 = (-1 + a141) in
                            M[a146] := 17;
                            let:16 a147 = (-1 + a146) in
                            M[a147] := CA;
                            A := updateBit((M[2067] >> 01),7,M[2067][0]);
                            B := M[201B];
                            H := 20;
                            L := 6A;
                            SPH := a147[15:8];
                            SPL := a147[7:0];
                            FlagS := a134[7];
                            FlagZ := is_zero(a134);
                            FlagA := a135[3];
                            FlagP := parity(a134);
                            FlagCY := M[2067][0];
                            jump (0008);
                          } else {
                            let:16 a148 = (-1 + a141) in
                            M[a148] := 17;
                            let:16 a149 = (-1 + a148) in
                            M[a149] := CA;
                            A := updateBit((M[2067] >> 01),7,M[2067][0]);
                            B := M[201B];
                            H := 20;
                            L := 6A;
                            SPH := a149[15:8];
                            SPL := a149[7:0];
                            FlagS := a134[7];
                            FlagZ := is_zero(a134);
                            FlagA := a135[3];
                            FlagP := parity(a134);
                            FlagCY := M[2067][0];
                            jump (0010);
                          }
                        } else {
                          #17CC
                          let:16 a150 = (1 + a141) in
                          let:16 a151 = (1 + a150) in
                          A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off));
                          B := M[201B];
                          H := 20;
                          L := 6A;
                          SPH := a151[15:8];
                          SPL := a151[7:0];
                          FlagS := a134[7];
                          FlagZ := is_zero(a134);
                          FlagA := a135[3];
                          FlagP := parity(a134);
                          FlagCY := M[2067][0];
                          jump ((M[a150],M[a141]));
                        }
                      } else {
                        #17C7
                        #17C9
                        let:16 a152 = (1 + a141) in
                        let:16 a153 = (1 + a152) in
                        A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right));
                        B := M[201B];
                        H := 20;
                        L := 6A;
                        SPH := a153[15:8];
                        SPL := a153[7:0];
                        FlagS := a134[7];
                        FlagZ := is_zero(a134);
                        FlagA := a135[3];
                        FlagP := parity(a134);
                        FlagCY := M[2067][0];
                        jump ((M[a152],M[a141]));
                      }
                    }
                  }
                } else {
                  #0355
                  #0358
                  #0359
                  if (M[201D][0]) {
                    #0381
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a154 = (-1 + a2) in
                        M[a154] := 03;
                        let:16 a155 = (-1 + a154) in
                        M[a155] := 81;
                        A := updateBit((M[201D] >> 01),7,M[201D][0]);
                        B := M[201B];
                        H := 20;
                        L := 6A;
                        SPH := a155[15:8];
                        SPL := a155[7:0];
                        FlagS := a134[7];
                        FlagZ := is_zero(a134);
                        FlagA := a135[3];
                        FlagP := parity(a134);
                        FlagCY := M[201D][0];
                        jump (0008);
                      } else {
                        let:16 a156 = (-1 + a2) in
                        M[a156] := 03;
                        let:16 a157 = (-1 + a156) in
                        M[a157] := 81;
                        A := updateBit((M[201D] >> 01),7,M[201D][0]);
                        B := M[201B];
                        H := 20;
                        L := 6A;
                        SPH := a157[15:8];
                        SPL := a157[7:0];
                        FlagS := a134[7];
                        FlagZ := is_zero(a134);
                        FlagA := a135[3];
                        FlagP := parity(a134);
                        FlagCY := M[201D][0];
                        jump (0010);
                      }
                    } else {
                      #0382
                      let:16 a158 = addWithCarry(!false,M[201B],~D9) in
                      let:8 a159 = (M[201B] & 0F) in
                      let:8 a160 = (~D9 & 0F) in
                      let:16 a161 = addWithCarry(!false,a159,a160) in
                      #0384
                      if (is_zero(a158[7:0])) {
                        #036F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a162 = (-1 + a2) in
                            M[a162] := 03;
                            let:16 a163 = (-1 + a162) in
                            M[a163] := 6F;
                            A := M[201B];
                            B := M[201B];
                            H := 20;
                            L := 6A;
                            SPH := a163[15:8];
                            SPL := a163[7:0];
                            FlagS := a158[7:0][7];
                            FlagZ := is_zero(a158[7:0]);
                            FlagA := a161[7:0][4];
                            FlagP := parity(a158[7:0]);
                            FlagCY := !a158[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a164 = (-1 + a2) in
                            M[a164] := 03;
                            let:16 a165 = (-1 + a164) in
                            M[a165] := 6F;
                            A := M[201B];
                            B := M[201B];
                            H := 20;
                            L := 6A;
                            SPH := a165[15:8];
                            SPL := a165[7:0];
                            FlagS := a158[7:0][7];
                            FlagZ := is_zero(a158[7:0]);
                            FlagA := a161[7:0][4];
                            FlagP := parity(a158[7:0]);
                            FlagCY := !a158[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #0372
                          let:16 a166 = (-1 + a2) in
                          M[a166] := 03;
                          let:16 a167 = (-1 + a166) in
                          M[a167] := 75;
                          #return-to: 0375
                          #1A3B
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a168 = (-1 + a167) in
                              M[a168] := 1A;
                              let:16 a169 = (-1 + a168) in
                              M[a169] := 3B;
                              A := M[201B];
                              B := M[201B];
                              H := 20;
                              L := 18;
                              SPH := a169[15:8];
                              SPL := a169[7:0];
                              FlagS := a158[7:0][7];
                              FlagZ := is_zero(a158[7:0]);
                              FlagA := a161[7:0][4];
                              FlagP := parity(a158[7:0]);
                              FlagCY := !a158[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a170 = (-1 + a167) in
                              M[a170] := 1A;
                              let:16 a171 = (-1 + a170) in
                              M[a171] := 3B;
                              A := M[201B];
                              B := M[201B];
                              H := 20;
                              L := 18;
                              SPH := a171[15:8];
                              SPL := a171[7:0];
                              FlagS := a158[7:0][7];
                              FlagZ := is_zero(a158[7:0]);
                              FlagA := a161[7:0][4];
                              FlagP := parity(a158[7:0]);
                              FlagCY := !a158[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1A3C
                            #1A3D
                            #1A3E
                            #1A3F
                            #1A40
                            #1A41
                            #1A42
                            #1A43
                            #1A44
                            #1A45
                            #1A46
                            let:16 a172 = (1 + a167) in
                            let:16 a173 = (1 + a172) in
                            A := M[201A];
                            B := M[201C];
                            C := M[201B];
                            D := M[2019];
                            E := M[2018];
                            H := M[201B];
                            L := M[201A];
                            SPH := a173[15:8];
                            SPL := a173[7:0];
                            FlagS := a158[7:0][7];
                            FlagZ := is_zero(a158[7:0]);
                            FlagA := a161[7:0][4];
                            FlagP := parity(a158[7:0]);
                            FlagCY := !a158[15:8][0];
                            jump ((M[a172],M[a167]));
                          }
                        }
                      } else {
                        #0387
                        let:16 a174 = addWithCarry(true,M[201B],00) in
                        let:8 a175 = (M[201B] & 0F) in
                        let:8 a176 = (00 & 0F) in
                        let:16 a177 = addWithCarry(true,a175,a176) in
                        #0388
                        M[201B] := a174[7:0];
                        #038B
                        #036F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a178 = (-1 + a2) in
                            M[a178] := 03;
                            let:16 a179 = (-1 + a178) in
                            M[a179] := 6F;
                            A := a174[7:0];
                            B := M[201B];
                            H := 20;
                            L := 6A;
                            SPH := a179[15:8];
                            SPL := a179[7:0];
                            FlagS := a174[7:0][7];
                            FlagZ := is_zero(a174[7:0]);
                            FlagA := a177[7:0][4];
                            FlagP := parity(a174[7:0]);
                            FlagCY := !a158[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a180 = (-1 + a2) in
                            M[a180] := 03;
                            let:16 a181 = (-1 + a180) in
                            M[a181] := 6F;
                            A := a174[7:0];
                            B := M[201B];
                            H := 20;
                            L := 6A;
                            SPH := a181[15:8];
                            SPL := a181[7:0];
                            FlagS := a174[7:0][7];
                            FlagZ := is_zero(a174[7:0]);
                            FlagA := a177[7:0][4];
                            FlagP := parity(a174[7:0]);
                            FlagCY := !a158[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #0372
                          let:16 a182 = (-1 + a2) in
                          M[a182] := 03;
                          let:16 a183 = (-1 + a182) in
                          M[a183] := 75;
                          #return-to: 0375
                          #1A3B
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a184 = (-1 + a183) in
                              M[a184] := 1A;
                              let:16 a185 = (-1 + a184) in
                              M[a185] := 3B;
                              A := a174[7:0];
                              B := M[201B];
                              H := 20;
                              L := 18;
                              SPH := a185[15:8];
                              SPL := a185[7:0];
                              FlagS := a174[7:0][7];
                              FlagZ := is_zero(a174[7:0]);
                              FlagA := a177[7:0][4];
                              FlagP := parity(a174[7:0]);
                              FlagCY := !a158[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a186 = (-1 + a183) in
                              M[a186] := 1A;
                              let:16 a187 = (-1 + a186) in
                              M[a187] := 3B;
                              A := a174[7:0];
                              B := M[201B];
                              H := 20;
                              L := 18;
                              SPH := a187[15:8];
                              SPL := a187[7:0];
                              FlagS := a174[7:0][7];
                              FlagZ := is_zero(a174[7:0]);
                              FlagA := a177[7:0][4];
                              FlagP := parity(a174[7:0]);
                              FlagCY := !a158[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1A3C
                            #1A3D
                            #1A3E
                            #1A3F
                            #1A40
                            #1A41
                            #1A42
                            #1A43
                            #1A44
                            #1A45
                            #1A46
                            let:16 a188 = (1 + a183) in
                            let:16 a189 = (1 + a188) in
                            A := M[201A];
                            B := M[201C];
                            C := M[201B];
                            D := M[2019];
                            E := M[2018];
                            H := M[201B];
                            L := M[201A];
                            SPH := a189[15:8];
                            SPL := a189[7:0];
                            FlagS := a174[7:0][7];
                            FlagZ := is_zero(a174[7:0]);
                            FlagA := a177[7:0][4];
                            FlagP := parity(a174[7:0]);
                            FlagCY := !a158[15:8][0];
                            jump ((M[a188],M[a183]));
                          }
                        }
                      }
                    }
                  } else {
                    #035C
                    #035D
                    if (updateBit((M[201D] >> 01),7,M[201D][0])[0]) {
                      #038E
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a190 = (-1 + a2) in
                          M[a190] := 03;
                          let:16 a191 = (-1 + a190) in
                          M[a191] := 8E;
                          A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                          B := M[201B];
                          H := 20;
                          L := 6A;
                          SPH := a191[15:8];
                          SPL := a191[7:0];
                          FlagS := a134[7];
                          FlagZ := is_zero(a134);
                          FlagA := a135[3];
                          FlagP := parity(a134);
                          FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                          jump (0008);
                        } else {
                          let:16 a192 = (-1 + a2) in
                          M[a192] := 03;
                          let:16 a193 = (-1 + a192) in
                          M[a193] := 8E;
                          A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                          B := M[201B];
                          H := 20;
                          L := 6A;
                          SPH := a193[15:8];
                          SPL := a193[7:0];
                          FlagS := a134[7];
                          FlagZ := is_zero(a134);
                          FlagA := a135[3];
                          FlagP := parity(a134);
                          FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                          jump (0010);
                        }
                      } else {
                        #038F
                        let:16 a194 = addWithCarry(!false,M[201B],~30) in
                        let:8 a195 = (M[201B] & 0F) in
                        let:8 a196 = (~30 & 0F) in
                        let:16 a197 = addWithCarry(!false,a195,a196) in
                        #0391
                        if (is_zero(a194[7:0])) {
                          #036F
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a198 = (-1 + a2) in
                              M[a198] := 03;
                              let:16 a199 = (-1 + a198) in
                              M[a199] := 6F;
                              A := M[201B];
                              B := M[201B];
                              H := 20;
                              L := 6A;
                              SPH := a199[15:8];
                              SPL := a199[7:0];
                              FlagS := a194[7:0][7];
                              FlagZ := is_zero(a194[7:0]);
                              FlagA := a197[7:0][4];
                              FlagP := parity(a194[7:0]);
                              FlagCY := !a194[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a200 = (-1 + a2) in
                              M[a200] := 03;
                              let:16 a201 = (-1 + a200) in
                              M[a201] := 6F;
                              A := M[201B];
                              B := M[201B];
                              H := 20;
                              L := 6A;
                              SPH := a201[15:8];
                              SPL := a201[7:0];
                              FlagS := a194[7:0][7];
                              FlagZ := is_zero(a194[7:0]);
                              FlagA := a197[7:0][4];
                              FlagP := parity(a194[7:0]);
                              FlagCY := !a194[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #0372
                            let:16 a202 = (-1 + a2) in
                            M[a202] := 03;
                            let:16 a203 = (-1 + a202) in
                            M[a203] := 75;
                            #return-to: 0375
                            #1A3B
                            if ((g_time_to_wakeup && g_interrupts_enabled)) {
                              disable_interrupts()
                              if (g_half_frame) {
                                let:16 a204 = (-1 + a203) in
                                M[a204] := 1A;
                                let:16 a205 = (-1 + a204) in
                                M[a205] := 3B;
                                A := M[201B];
                                B := M[201B];
                                H := 20;
                                L := 18;
                                SPH := a205[15:8];
                                SPL := a205[7:0];
                                FlagS := a194[7:0][7];
                                FlagZ := is_zero(a194[7:0]);
                                FlagA := a197[7:0][4];
                                FlagP := parity(a194[7:0]);
                                FlagCY := !a194[15:8][0];
                                jump (0008);
                              } else {
                                let:16 a206 = (-1 + a203) in
                                M[a206] := 1A;
                                let:16 a207 = (-1 + a206) in
                                M[a207] := 3B;
                                A := M[201B];
                                B := M[201B];
                                H := 20;
                                L := 18;
                                SPH := a207[15:8];
                                SPL := a207[7:0];
                                FlagS := a194[7:0][7];
                                FlagZ := is_zero(a194[7:0]);
                                FlagA := a197[7:0][4];
                                FlagP := parity(a194[7:0]);
                                FlagCY := !a194[15:8][0];
                                jump (0010);
                              }
                            } else {
                              #1A3C
                              #1A3D
                              #1A3E
                              #1A3F
                              #1A40
                              #1A41
                              #1A42
                              #1A43
                              #1A44
                              #1A45
                              #1A46
                              let:16 a208 = (1 + a203) in
                              let:16 a209 = (1 + a208) in
                              A := M[201A];
                              B := M[201C];
                              C := M[201B];
                              D := M[2019];
                              E := M[2018];
                              H := M[201B];
                              L := M[201A];
                              SPH := a209[15:8];
                              SPL := a209[7:0];
                              FlagS := a194[7:0][7];
                              FlagZ := is_zero(a194[7:0]);
                              FlagA := a197[7:0][4];
                              FlagP := parity(a194[7:0]);
                              FlagCY := !a194[15:8][0];
                              jump ((M[a208],M[a203]));
                            }
                          }
                        } else {
                          #0394
                          let:16 a210 = addWithCarry(!true,M[201B],~00) in
                          let:8 a211 = (M[201B] & 0F) in
                          let:8 a212 = (~00 & 0F) in
                          let:16 a213 = addWithCarry(!true,a211,a212) in
                          #0395
                          M[201B] := a210[7:0];
                          #0398
                          #036F
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a214 = (-1 + a2) in
                              M[a214] := 03;
                              let:16 a215 = (-1 + a214) in
                              M[a215] := 6F;
                              A := a210[7:0];
                              B := M[201B];
                              H := 20;
                              L := 6A;
                              SPH := a215[15:8];
                              SPL := a215[7:0];
                              FlagS := a210[7:0][7];
                              FlagZ := is_zero(a210[7:0]);
                              FlagA := a213[7:0][4];
                              FlagP := parity(a210[7:0]);
                              FlagCY := !a194[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a216 = (-1 + a2) in
                              M[a216] := 03;
                              let:16 a217 = (-1 + a216) in
                              M[a217] := 6F;
                              A := a210[7:0];
                              B := M[201B];
                              H := 20;
                              L := 6A;
                              SPH := a217[15:8];
                              SPL := a217[7:0];
                              FlagS := a210[7:0][7];
                              FlagZ := is_zero(a210[7:0]);
                              FlagA := a213[7:0][4];
                              FlagP := parity(a210[7:0]);
                              FlagCY := !a194[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #0372
                            let:16 a218 = (-1 + a2) in
                            M[a218] := 03;
                            let:16 a219 = (-1 + a218) in
                            M[a219] := 75;
                            #return-to: 0375
                            #1A3B
                            if ((g_time_to_wakeup && g_interrupts_enabled)) {
                              disable_interrupts()
                              if (g_half_frame) {
                                let:16 a220 = (-1 + a219) in
                                M[a220] := 1A;
                                let:16 a221 = (-1 + a220) in
                                M[a221] := 3B;
                                A := a210[7:0];
                                B := M[201B];
                                H := 20;
                                L := 18;
                                SPH := a221[15:8];
                                SPL := a221[7:0];
                                FlagS := a210[7:0][7];
                                FlagZ := is_zero(a210[7:0]);
                                FlagA := a213[7:0][4];
                                FlagP := parity(a210[7:0]);
                                FlagCY := !a194[15:8][0];
                                jump (0008);
                              } else {
                                let:16 a222 = (-1 + a219) in
                                M[a222] := 1A;
                                let:16 a223 = (-1 + a222) in
                                M[a223] := 3B;
                                A := a210[7:0];
                                B := M[201B];
                                H := 20;
                                L := 18;
                                SPH := a223[15:8];
                                SPL := a223[7:0];
                                FlagS := a210[7:0][7];
                                FlagZ := is_zero(a210[7:0]);
                                FlagA := a213[7:0][4];
                                FlagP := parity(a210[7:0]);
                                FlagCY := !a194[15:8][0];
                                jump (0010);
                              }
                            } else {
                              #1A3C
                              #1A3D
                              #1A3E
                              #1A3F
                              #1A40
                              #1A41
                              #1A42
                              #1A43
                              #1A44
                              #1A45
                              #1A46
                              let:16 a224 = (1 + a219) in
                              let:16 a225 = (1 + a224) in
                              A := M[201A];
                              B := M[201C];
                              C := M[201B];
                              D := M[2019];
                              E := M[2018];
                              H := M[201B];
                              L := M[201A];
                              SPH := a225[15:8];
                              SPL := a225[7:0];
                              FlagS := a210[7:0][7];
                              FlagZ := is_zero(a210[7:0]);
                              FlagA := a213[7:0][4];
                              FlagP := parity(a210[7:0]);
                              FlagCY := !a194[15:8][0];
                              jump ((M[a224],M[a219]));
                            }
                          }
                        }
                      }
                    } else {
                      #0360
                      #036F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a226 = (-1 + a2) in
                          M[a226] := 03;
                          let:16 a227 = (-1 + a226) in
                          M[a227] := 6F;
                          A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                          B := M[201B];
                          H := 20;
                          L := 6A;
                          SPH := a227[15:8];
                          SPL := a227[7:0];
                          FlagS := a134[7];
                          FlagZ := is_zero(a134);
                          FlagA := a135[3];
                          FlagP := parity(a134);
                          FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                          jump (0008);
                        } else {
                          let:16 a228 = (-1 + a2) in
                          M[a228] := 03;
                          let:16 a229 = (-1 + a228) in
                          M[a229] := 6F;
                          A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                          B := M[201B];
                          H := 20;
                          L := 6A;
                          SPH := a229[15:8];
                          SPL := a229[7:0];
                          FlagS := a134[7];
                          FlagZ := is_zero(a134);
                          FlagA := a135[3];
                          FlagP := parity(a134);
                          FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                          jump (0010);
                        }
                      } else {
                        #0372
                        let:16 a230 = (-1 + a2) in
                        M[a230] := 03;
                        let:16 a231 = (-1 + a230) in
                        M[a231] := 75;
                        #return-to: 0375
                        #1A3B
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a232 = (-1 + a231) in
                            M[a232] := 1A;
                            let:16 a233 = (-1 + a232) in
                            M[a233] := 3B;
                            A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                            B := M[201B];
                            H := 20;
                            L := 18;
                            SPH := a233[15:8];
                            SPL := a233[7:0];
                            FlagS := a134[7];
                            FlagZ := is_zero(a134);
                            FlagA := a135[3];
                            FlagP := parity(a134);
                            FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                            jump (0008);
                          } else {
                            let:16 a234 = (-1 + a231) in
                            M[a234] := 1A;
                            let:16 a235 = (-1 + a234) in
                            M[a235] := 3B;
                            A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                            B := M[201B];
                            H := 20;
                            L := 18;
                            SPH := a235[15:8];
                            SPL := a235[7:0];
                            FlagS := a134[7];
                            FlagZ := is_zero(a134);
                            FlagA := a135[3];
                            FlagP := parity(a134);
                            FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                            jump (0010);
                          }
                        } else {
                          #1A3C
                          #1A3D
                          #1A3E
                          #1A3F
                          #1A40
                          #1A41
                          #1A42
                          #1A43
                          #1A44
                          #1A45
                          #1A46
                          let:16 a236 = (1 + a231) in
                          let:16 a237 = (1 + a236) in
                          A := M[201A];
                          B := M[201C];
                          C := M[201B];
                          D := M[2019];
                          E := M[2018];
                          H := M[201B];
                          L := M[201A];
                          SPH := a237[15:8];
                          SPL := a237[7:0];
                          FlagS := a134[7];
                          FlagZ := is_zero(a134);
                          FlagA := a135[3];
                          FlagP := parity(a134);
                          FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                          jump ((M[a236],M[a231]));
                        }
                      }
                    }
                  }
                }
              }
            } else {
              #03B8
              #0346
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a238 = (-1 + a2) in
                  M[a238] := 03;
                  let:16 a239 = (-1 + a238) in
                  M[a239] := 46;
                  A := a12;
                  H := 20;
                  L := 6A;
                  SPH := a239[15:8];
                  SPL := a239[7:0];
                  FlagS := a126[7:0][7];
                  FlagZ := is_zero(a126[7:0]);
                  FlagA := a129[7:0][4];
                  FlagP := parity(a126[7:0]);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a240 = (-1 + a2) in
                  M[a240] := 03;
                  let:16 a241 = (-1 + a240) in
                  M[a241] := 46;
                  A := a12;
                  H := 20;
                  L := 6A;
                  SPH := a241[15:8];
                  SPL := a241[7:0];
                  FlagS := a126[7:0][7];
                  FlagZ := is_zero(a126[7:0]);
                  FlagA := a129[7:0][4];
                  FlagP := parity(a126[7:0]);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #0347
                #0348
                M[2069] := 01;
                #034A
                #034D
                #034E
                #0351
                let:8 a242 = (M[20EF] & M[20EF]) in
                let:8 a243 = (M[20EF] | M[20EF]) in
                #0352
                if (!is_zero(a242)) {
                  #0363
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a244 = (-1 + a2) in
                      M[a244] := 03;
                      let:16 a245 = (-1 + a244) in
                      M[a245] := 63;
                      A := a242;
                      B := M[201B];
                      H := 20;
                      L := 69;
                      SPH := a245[15:8];
                      SPL := a245[7:0];
                      FlagS := a242[7];
                      FlagZ := is_zero(a242);
                      FlagA := a243[3];
                      FlagP := parity(a242);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a246 = (-1 + a2) in
                      M[a246] := 03;
                      let:16 a247 = (-1 + a246) in
                      M[a247] := 63;
                      A := a242;
                      B := M[201B];
                      H := 20;
                      L := 69;
                      SPH := a247[15:8];
                      SPL := a247[7:0];
                      FlagS := a242[7];
                      FlagZ := is_zero(a242);
                      FlagA := a243[3];
                      FlagP := parity(a242);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:16 a248 = (-1 + a2) in
                    M[a248] := 03;
                    let:16 a249 = (-1 + a248) in
                    M[a249] := 66;
                    #return-to: 0366
                    #17C0
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a250 = (-1 + a249) in
                        M[a250] := 17;
                        let:16 a251 = (-1 + a250) in
                        M[a251] := C0;
                        A := a242;
                        B := M[201B];
                        H := 20;
                        L := 69;
                        SPH := a251[15:8];
                        SPL := a251[7:0];
                        FlagS := a242[7];
                        FlagZ := is_zero(a242);
                        FlagA := a243[3];
                        FlagP := parity(a242);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a252 = (-1 + a249) in
                        M[a252] := 17;
                        let:16 a253 = (-1 + a252) in
                        M[a253] := C0;
                        A := a242;
                        B := M[201B];
                        H := 20;
                        L := 69;
                        SPH := a253[15:8];
                        SPL := a253[7:0];
                        FlagS := a242[7];
                        FlagZ := is_zero(a242);
                        FlagA := a243[3];
                        FlagP := parity(a242);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      #17C3
                      #17C4
                      if (!M[2067][0]) {
                        #17CA
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a254 = (-1 + a249) in
                            M[a254] := 17;
                            let:16 a255 = (-1 + a254) in
                            M[a255] := CA;
                            A := updateBit((M[2067] >> 01),7,M[2067][0]);
                            B := M[201B];
                            H := 20;
                            L := 69;
                            SPH := a255[15:8];
                            SPL := a255[7:0];
                            FlagS := a242[7];
                            FlagZ := is_zero(a242);
                            FlagA := a243[3];
                            FlagP := parity(a242);
                            FlagCY := M[2067][0];
                            jump (0008);
                          } else {
                            let:16 a256 = (-1 + a249) in
                            M[a256] := 17;
                            let:16 a257 = (-1 + a256) in
                            M[a257] := CA;
                            A := updateBit((M[2067] >> 01),7,M[2067][0]);
                            B := M[201B];
                            H := 20;
                            L := 69;
                            SPH := a257[15:8];
                            SPL := a257[7:0];
                            FlagS := a242[7];
                            FlagZ := is_zero(a242);
                            FlagA := a243[3];
                            FlagP := parity(a242);
                            FlagCY := M[2067][0];
                            jump (0010);
                          }
                        } else {
                          #17CC
                          let:16 a258 = (1 + a249) in
                          let:16 a259 = (1 + a258) in
                          A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off));
                          B := M[201B];
                          H := 20;
                          L := 69;
                          SPH := a259[15:8];
                          SPL := a259[7:0];
                          FlagS := a242[7];
                          FlagZ := is_zero(a242);
                          FlagA := a243[3];
                          FlagP := parity(a242);
                          FlagCY := M[2067][0];
                          jump ((M[a258],M[a249]));
                        }
                      } else {
                        #17C7
                        #17C9
                        let:16 a260 = (1 + a249) in
                        let:16 a261 = (1 + a260) in
                        A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right));
                        B := M[201B];
                        H := 20;
                        L := 69;
                        SPH := a261[15:8];
                        SPL := a261[7:0];
                        FlagS := a242[7];
                        FlagZ := is_zero(a242);
                        FlagA := a243[3];
                        FlagP := parity(a242);
                        FlagCY := M[2067][0];
                        jump ((M[a260],M[a249]));
                      }
                    }
                  }
                } else {
                  #0355
                  #0358
                  #0359
                  if (M[201D][0]) {
                    #0381
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a262 = (-1 + a2) in
                        M[a262] := 03;
                        let:16 a263 = (-1 + a262) in
                        M[a263] := 81;
                        A := updateBit((M[201D] >> 01),7,M[201D][0]);
                        B := M[201B];
                        H := 20;
                        L := 69;
                        SPH := a263[15:8];
                        SPL := a263[7:0];
                        FlagS := a242[7];
                        FlagZ := is_zero(a242);
                        FlagA := a243[3];
                        FlagP := parity(a242);
                        FlagCY := M[201D][0];
                        jump (0008);
                      } else {
                        let:16 a264 = (-1 + a2) in
                        M[a264] := 03;
                        let:16 a265 = (-1 + a264) in
                        M[a265] := 81;
                        A := updateBit((M[201D] >> 01),7,M[201D][0]);
                        B := M[201B];
                        H := 20;
                        L := 69;
                        SPH := a265[15:8];
                        SPL := a265[7:0];
                        FlagS := a242[7];
                        FlagZ := is_zero(a242);
                        FlagA := a243[3];
                        FlagP := parity(a242);
                        FlagCY := M[201D][0];
                        jump (0010);
                      }
                    } else {
                      #0382
                      let:16 a266 = addWithCarry(!false,M[201B],~D9) in
                      let:8 a267 = (M[201B] & 0F) in
                      let:8 a268 = (~D9 & 0F) in
                      let:16 a269 = addWithCarry(!false,a267,a268) in
                      #0384
                      if (is_zero(a266[7:0])) {
                        #036F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a270 = (-1 + a2) in
                            M[a270] := 03;
                            let:16 a271 = (-1 + a270) in
                            M[a271] := 6F;
                            A := M[201B];
                            B := M[201B];
                            H := 20;
                            L := 69;
                            SPH := a271[15:8];
                            SPL := a271[7:0];
                            FlagS := a266[7:0][7];
                            FlagZ := is_zero(a266[7:0]);
                            FlagA := a269[7:0][4];
                            FlagP := parity(a266[7:0]);
                            FlagCY := !a266[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a272 = (-1 + a2) in
                            M[a272] := 03;
                            let:16 a273 = (-1 + a272) in
                            M[a273] := 6F;
                            A := M[201B];
                            B := M[201B];
                            H := 20;
                            L := 69;
                            SPH := a273[15:8];
                            SPL := a273[7:0];
                            FlagS := a266[7:0][7];
                            FlagZ := is_zero(a266[7:0]);
                            FlagA := a269[7:0][4];
                            FlagP := parity(a266[7:0]);
                            FlagCY := !a266[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #0372
                          let:16 a274 = (-1 + a2) in
                          M[a274] := 03;
                          let:16 a275 = (-1 + a274) in
                          M[a275] := 75;
                          #return-to: 0375
                          #1A3B
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a276 = (-1 + a275) in
                              M[a276] := 1A;
                              let:16 a277 = (-1 + a276) in
                              M[a277] := 3B;
                              A := M[201B];
                              B := M[201B];
                              H := 20;
                              L := 18;
                              SPH := a277[15:8];
                              SPL := a277[7:0];
                              FlagS := a266[7:0][7];
                              FlagZ := is_zero(a266[7:0]);
                              FlagA := a269[7:0][4];
                              FlagP := parity(a266[7:0]);
                              FlagCY := !a266[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a278 = (-1 + a275) in
                              M[a278] := 1A;
                              let:16 a279 = (-1 + a278) in
                              M[a279] := 3B;
                              A := M[201B];
                              B := M[201B];
                              H := 20;
                              L := 18;
                              SPH := a279[15:8];
                              SPL := a279[7:0];
                              FlagS := a266[7:0][7];
                              FlagZ := is_zero(a266[7:0]);
                              FlagA := a269[7:0][4];
                              FlagP := parity(a266[7:0]);
                              FlagCY := !a266[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1A3C
                            #1A3D
                            #1A3E
                            #1A3F
                            #1A40
                            #1A41
                            #1A42
                            #1A43
                            #1A44
                            #1A45
                            #1A46
                            let:16 a280 = (1 + a275) in
                            let:16 a281 = (1 + a280) in
                            A := M[201A];
                            B := M[201C];
                            C := M[201B];
                            D := M[2019];
                            E := M[2018];
                            H := M[201B];
                            L := M[201A];
                            SPH := a281[15:8];
                            SPL := a281[7:0];
                            FlagS := a266[7:0][7];
                            FlagZ := is_zero(a266[7:0]);
                            FlagA := a269[7:0][4];
                            FlagP := parity(a266[7:0]);
                            FlagCY := !a266[15:8][0];
                            jump ((M[a280],M[a275]));
                          }
                        }
                      } else {
                        #0387
                        let:16 a282 = addWithCarry(true,M[201B],00) in
                        let:8 a283 = (M[201B] & 0F) in
                        let:8 a284 = (00 & 0F) in
                        let:16 a285 = addWithCarry(true,a283,a284) in
                        #0388
                        M[201B] := a282[7:0];
                        #038B
                        #036F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a286 = (-1 + a2) in
                            M[a286] := 03;
                            let:16 a287 = (-1 + a286) in
                            M[a287] := 6F;
                            A := a282[7:0];
                            B := M[201B];
                            H := 20;
                            L := 69;
                            SPH := a287[15:8];
                            SPL := a287[7:0];
                            FlagS := a282[7:0][7];
                            FlagZ := is_zero(a282[7:0]);
                            FlagA := a285[7:0][4];
                            FlagP := parity(a282[7:0]);
                            FlagCY := !a266[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a288 = (-1 + a2) in
                            M[a288] := 03;
                            let:16 a289 = (-1 + a288) in
                            M[a289] := 6F;
                            A := a282[7:0];
                            B := M[201B];
                            H := 20;
                            L := 69;
                            SPH := a289[15:8];
                            SPL := a289[7:0];
                            FlagS := a282[7:0][7];
                            FlagZ := is_zero(a282[7:0]);
                            FlagA := a285[7:0][4];
                            FlagP := parity(a282[7:0]);
                            FlagCY := !a266[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #0372
                          let:16 a290 = (-1 + a2) in
                          M[a290] := 03;
                          let:16 a291 = (-1 + a290) in
                          M[a291] := 75;
                          #return-to: 0375
                          #1A3B
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a292 = (-1 + a291) in
                              M[a292] := 1A;
                              let:16 a293 = (-1 + a292) in
                              M[a293] := 3B;
                              A := a282[7:0];
                              B := M[201B];
                              H := 20;
                              L := 18;
                              SPH := a293[15:8];
                              SPL := a293[7:0];
                              FlagS := a282[7:0][7];
                              FlagZ := is_zero(a282[7:0]);
                              FlagA := a285[7:0][4];
                              FlagP := parity(a282[7:0]);
                              FlagCY := !a266[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a294 = (-1 + a291) in
                              M[a294] := 1A;
                              let:16 a295 = (-1 + a294) in
                              M[a295] := 3B;
                              A := a282[7:0];
                              B := M[201B];
                              H := 20;
                              L := 18;
                              SPH := a295[15:8];
                              SPL := a295[7:0];
                              FlagS := a282[7:0][7];
                              FlagZ := is_zero(a282[7:0]);
                              FlagA := a285[7:0][4];
                              FlagP := parity(a282[7:0]);
                              FlagCY := !a266[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1A3C
                            #1A3D
                            #1A3E
                            #1A3F
                            #1A40
                            #1A41
                            #1A42
                            #1A43
                            #1A44
                            #1A45
                            #1A46
                            let:16 a296 = (1 + a291) in
                            let:16 a297 = (1 + a296) in
                            A := M[201A];
                            B := M[201C];
                            C := M[201B];
                            D := M[2019];
                            E := M[2018];
                            H := M[201B];
                            L := M[201A];
                            SPH := a297[15:8];
                            SPL := a297[7:0];
                            FlagS := a282[7:0][7];
                            FlagZ := is_zero(a282[7:0]);
                            FlagA := a285[7:0][4];
                            FlagP := parity(a282[7:0]);
                            FlagCY := !a266[15:8][0];
                            jump ((M[a296],M[a291]));
                          }
                        }
                      }
                    }
                  } else {
                    #035C
                    #035D
                    if (updateBit((M[201D] >> 01),7,M[201D][0])[0]) {
                      #038E
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a298 = (-1 + a2) in
                          M[a298] := 03;
                          let:16 a299 = (-1 + a298) in
                          M[a299] := 8E;
                          A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                          B := M[201B];
                          H := 20;
                          L := 69;
                          SPH := a299[15:8];
                          SPL := a299[7:0];
                          FlagS := a242[7];
                          FlagZ := is_zero(a242);
                          FlagA := a243[3];
                          FlagP := parity(a242);
                          FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                          jump (0008);
                        } else {
                          let:16 a300 = (-1 + a2) in
                          M[a300] := 03;
                          let:16 a301 = (-1 + a300) in
                          M[a301] := 8E;
                          A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                          B := M[201B];
                          H := 20;
                          L := 69;
                          SPH := a301[15:8];
                          SPL := a301[7:0];
                          FlagS := a242[7];
                          FlagZ := is_zero(a242);
                          FlagA := a243[3];
                          FlagP := parity(a242);
                          FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                          jump (0010);
                        }
                      } else {
                        #038F
                        let:16 a302 = addWithCarry(!false,M[201B],~30) in
                        let:8 a303 = (M[201B] & 0F) in
                        let:8 a304 = (~30 & 0F) in
                        let:16 a305 = addWithCarry(!false,a303,a304) in
                        #0391
                        if (is_zero(a302[7:0])) {
                          #036F
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a306 = (-1 + a2) in
                              M[a306] := 03;
                              let:16 a307 = (-1 + a306) in
                              M[a307] := 6F;
                              A := M[201B];
                              B := M[201B];
                              H := 20;
                              L := 69;
                              SPH := a307[15:8];
                              SPL := a307[7:0];
                              FlagS := a302[7:0][7];
                              FlagZ := is_zero(a302[7:0]);
                              FlagA := a305[7:0][4];
                              FlagP := parity(a302[7:0]);
                              FlagCY := !a302[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a308 = (-1 + a2) in
                              M[a308] := 03;
                              let:16 a309 = (-1 + a308) in
                              M[a309] := 6F;
                              A := M[201B];
                              B := M[201B];
                              H := 20;
                              L := 69;
                              SPH := a309[15:8];
                              SPL := a309[7:0];
                              FlagS := a302[7:0][7];
                              FlagZ := is_zero(a302[7:0]);
                              FlagA := a305[7:0][4];
                              FlagP := parity(a302[7:0]);
                              FlagCY := !a302[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #0372
                            let:16 a310 = (-1 + a2) in
                            M[a310] := 03;
                            let:16 a311 = (-1 + a310) in
                            M[a311] := 75;
                            #return-to: 0375
                            #1A3B
                            if ((g_time_to_wakeup && g_interrupts_enabled)) {
                              disable_interrupts()
                              if (g_half_frame) {
                                let:16 a312 = (-1 + a311) in
                                M[a312] := 1A;
                                let:16 a313 = (-1 + a312) in
                                M[a313] := 3B;
                                A := M[201B];
                                B := M[201B];
                                H := 20;
                                L := 18;
                                SPH := a313[15:8];
                                SPL := a313[7:0];
                                FlagS := a302[7:0][7];
                                FlagZ := is_zero(a302[7:0]);
                                FlagA := a305[7:0][4];
                                FlagP := parity(a302[7:0]);
                                FlagCY := !a302[15:8][0];
                                jump (0008);
                              } else {
                                let:16 a314 = (-1 + a311) in
                                M[a314] := 1A;
                                let:16 a315 = (-1 + a314) in
                                M[a315] := 3B;
                                A := M[201B];
                                B := M[201B];
                                H := 20;
                                L := 18;
                                SPH := a315[15:8];
                                SPL := a315[7:0];
                                FlagS := a302[7:0][7];
                                FlagZ := is_zero(a302[7:0]);
                                FlagA := a305[7:0][4];
                                FlagP := parity(a302[7:0]);
                                FlagCY := !a302[15:8][0];
                                jump (0010);
                              }
                            } else {
                              #1A3C
                              #1A3D
                              #1A3E
                              #1A3F
                              #1A40
                              #1A41
                              #1A42
                              #1A43
                              #1A44
                              #1A45
                              #1A46
                              let:16 a316 = (1 + a311) in
                              let:16 a317 = (1 + a316) in
                              A := M[201A];
                              B := M[201C];
                              C := M[201B];
                              D := M[2019];
                              E := M[2018];
                              H := M[201B];
                              L := M[201A];
                              SPH := a317[15:8];
                              SPL := a317[7:0];
                              FlagS := a302[7:0][7];
                              FlagZ := is_zero(a302[7:0]);
                              FlagA := a305[7:0][4];
                              FlagP := parity(a302[7:0]);
                              FlagCY := !a302[15:8][0];
                              jump ((M[a316],M[a311]));
                            }
                          }
                        } else {
                          #0394
                          let:16 a318 = addWithCarry(!true,M[201B],~00) in
                          let:8 a319 = (M[201B] & 0F) in
                          let:8 a320 = (~00 & 0F) in
                          let:16 a321 = addWithCarry(!true,a319,a320) in
                          #0395
                          M[201B] := a318[7:0];
                          #0398
                          #036F
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a322 = (-1 + a2) in
                              M[a322] := 03;
                              let:16 a323 = (-1 + a322) in
                              M[a323] := 6F;
                              A := a318[7:0];
                              B := M[201B];
                              H := 20;
                              L := 69;
                              SPH := a323[15:8];
                              SPL := a323[7:0];
                              FlagS := a318[7:0][7];
                              FlagZ := is_zero(a318[7:0]);
                              FlagA := a321[7:0][4];
                              FlagP := parity(a318[7:0]);
                              FlagCY := !a302[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a324 = (-1 + a2) in
                              M[a324] := 03;
                              let:16 a325 = (-1 + a324) in
                              M[a325] := 6F;
                              A := a318[7:0];
                              B := M[201B];
                              H := 20;
                              L := 69;
                              SPH := a325[15:8];
                              SPL := a325[7:0];
                              FlagS := a318[7:0][7];
                              FlagZ := is_zero(a318[7:0]);
                              FlagA := a321[7:0][4];
                              FlagP := parity(a318[7:0]);
                              FlagCY := !a302[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #0372
                            let:16 a326 = (-1 + a2) in
                            M[a326] := 03;
                            let:16 a327 = (-1 + a326) in
                            M[a327] := 75;
                            #return-to: 0375
                            #1A3B
                            if ((g_time_to_wakeup && g_interrupts_enabled)) {
                              disable_interrupts()
                              if (g_half_frame) {
                                let:16 a328 = (-1 + a327) in
                                M[a328] := 1A;
                                let:16 a329 = (-1 + a328) in
                                M[a329] := 3B;
                                A := a318[7:0];
                                B := M[201B];
                                H := 20;
                                L := 18;
                                SPH := a329[15:8];
                                SPL := a329[7:0];
                                FlagS := a318[7:0][7];
                                FlagZ := is_zero(a318[7:0]);
                                FlagA := a321[7:0][4];
                                FlagP := parity(a318[7:0]);
                                FlagCY := !a302[15:8][0];
                                jump (0008);
                              } else {
                                let:16 a330 = (-1 + a327) in
                                M[a330] := 1A;
                                let:16 a331 = (-1 + a330) in
                                M[a331] := 3B;
                                A := a318[7:0];
                                B := M[201B];
                                H := 20;
                                L := 18;
                                SPH := a331[15:8];
                                SPL := a331[7:0];
                                FlagS := a318[7:0][7];
                                FlagZ := is_zero(a318[7:0]);
                                FlagA := a321[7:0][4];
                                FlagP := parity(a318[7:0]);
                                FlagCY := !a302[15:8][0];
                                jump (0010);
                              }
                            } else {
                              #1A3C
                              #1A3D
                              #1A3E
                              #1A3F
                              #1A40
                              #1A41
                              #1A42
                              #1A43
                              #1A44
                              #1A45
                              #1A46
                              let:16 a332 = (1 + a327) in
                              let:16 a333 = (1 + a332) in
                              A := M[201A];
                              B := M[201C];
                              C := M[201B];
                              D := M[2019];
                              E := M[2018];
                              H := M[201B];
                              L := M[201A];
                              SPH := a333[15:8];
                              SPL := a333[7:0];
                              FlagS := a318[7:0][7];
                              FlagZ := is_zero(a318[7:0]);
                              FlagA := a321[7:0][4];
                              FlagP := parity(a318[7:0]);
                              FlagCY := !a302[15:8][0];
                              jump ((M[a332],M[a327]));
                            }
                          }
                        }
                      }
                    } else {
                      #0360
                      #036F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a334 = (-1 + a2) in
                          M[a334] := 03;
                          let:16 a335 = (-1 + a334) in
                          M[a335] := 6F;
                          A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                          B := M[201B];
                          H := 20;
                          L := 69;
                          SPH := a335[15:8];
                          SPL := a335[7:0];
                          FlagS := a242[7];
                          FlagZ := is_zero(a242);
                          FlagA := a243[3];
                          FlagP := parity(a242);
                          FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                          jump (0008);
                        } else {
                          let:16 a336 = (-1 + a2) in
                          M[a336] := 03;
                          let:16 a337 = (-1 + a336) in
                          M[a337] := 6F;
                          A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                          B := M[201B];
                          H := 20;
                          L := 69;
                          SPH := a337[15:8];
                          SPL := a337[7:0];
                          FlagS := a242[7];
                          FlagZ := is_zero(a242);
                          FlagA := a243[3];
                          FlagP := parity(a242);
                          FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                          jump (0010);
                        }
                      } else {
                        #0372
                        let:16 a338 = (-1 + a2) in
                        M[a338] := 03;
                        let:16 a339 = (-1 + a338) in
                        M[a339] := 75;
                        #return-to: 0375
                        #1A3B
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a340 = (-1 + a339) in
                            M[a340] := 1A;
                            let:16 a341 = (-1 + a340) in
                            M[a341] := 3B;
                            A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                            B := M[201B];
                            H := 20;
                            L := 18;
                            SPH := a341[15:8];
                            SPL := a341[7:0];
                            FlagS := a242[7];
                            FlagZ := is_zero(a242);
                            FlagA := a243[3];
                            FlagP := parity(a242);
                            FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                            jump (0008);
                          } else {
                            let:16 a342 = (-1 + a339) in
                            M[a342] := 1A;
                            let:16 a343 = (-1 + a342) in
                            M[a343] := 3B;
                            A := updateBit((updateBit((M[201D] >> 01),7,M[201D][0]) >> 01),7,updateBit((M[201D] >> 01),7,M[201D][0])[0]);
                            B := M[201B];
                            H := 20;
                            L := 18;
                            SPH := a343[15:8];
                            SPL := a343[7:0];
                            FlagS := a242[7];
                            FlagZ := is_zero(a242);
                            FlagA := a243[3];
                            FlagP := parity(a242);
                            FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                            jump (0010);
                          }
                        } else {
                          #1A3C
                          #1A3D
                          #1A3E
                          #1A3F
                          #1A40
                          #1A41
                          #1A42
                          #1A43
                          #1A44
                          #1A45
                          #1A46
                          let:16 a344 = (1 + a339) in
                          let:16 a345 = (1 + a344) in
                          A := M[201A];
                          B := M[201C];
                          C := M[201B];
                          D := M[2019];
                          E := M[2018];
                          H := M[201B];
                          L := M[201A];
                          SPH := a345[15:8];
                          SPL := a345[7:0];
                          FlagS := a242[7];
                          FlagZ := is_zero(a242);
                          FlagA := a243[3];
                          FlagP := parity(a242);
                          FlagCY := updateBit((M[201D] >> 01),7,M[201D][0])[0];
                          jump ((M[a344],M[a339]));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    } else {
      #0296
      let:16 a346 = (1 + a3) in
      #0297
      let:16 a347 = addWithCarry(!true,M[a346],~00) in
      let:8 a348 = (M[a346] & 0F) in
      let:8 a349 = (~00 & 0F) in
      let:16 a350 = addWithCarry(!true,a348,a349) in
      M[a346] := a347[7:0];
      #0298
      if (!is_zero(a347[7:0])) {
        let:16 a351 = (1 + a2) in
        let:16 a352 = (1 + a351) in
        A := M[a3];
        H := a346[15:8];
        L := a346[7:0];
        SPH := a352[15:8];
        SPL := a352[7:0];
        FlagS := a347[7:0][7];
        FlagZ := is_zero(a347[7:0]);
        FlagA := a350[7:0][4];
        FlagP := parity(a347[7:0]);
        FlagCY := !a4[15:8][0];
        jump ((M[a351],M[a2]));
      } else {
        #0299
        #029A
        let:8 a353 = (M[a3] ^ M[a3]) in
        #029B
        M[2068] := a353;
        #029E
        M[2069] := a353;
        #02A1
        #02A3
        M[206A] := 30;
        #02A6
        #02A7
        M[a346] := 05;
        #02A9
        let:16 a354 = (1 + a346) in
        #02AA
        let:16 a355 = addWithCarry(!true,M[a354],~00) in
        let:8 a356 = (M[a354] & 0F) in
        let:8 a357 = (~00 & 0F) in
        let:16 a358 = addWithCarry(!true,a356,a357) in
        M[a354] := a355[7:0];
        #02AB
        if (!is_zero(a355[7:0])) {
          #039B
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a359 = (-1 + a2) in
              M[a359] := 03;
              let:16 a360 = (-1 + a359) in
              M[a360] := 9B;
              A := M[a3];
              B := M[a3];
              H := a354[15:8];
              L := a354[7:0];
              SPH := a360[15:8];
              SPL := a360[7:0];
              FlagS := a355[7:0][7];
              FlagZ := is_zero(a355[7:0]);
              FlagA := a358[7:0][4];
              FlagP := parity(a355[7:0]);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a361 = (-1 + a2) in
              M[a361] := 03;
              let:16 a362 = (-1 + a361) in
              M[a362] := 9B;
              A := M[a3];
              B := M[a3];
              H := a354[15:8];
              L := a354[7:0];
              SPH := a362[15:8];
              SPL := a362[7:0];
              FlagS := a355[7:0][7];
              FlagZ := is_zero(a355[7:0]);
              FlagA := a358[7:0][4];
              FlagP := parity(a355[7:0]);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a363 = addWithCarry(true,M[a3],00) in
            let:8 a364 = (M[a3] & 0F) in
            let:8 a365 = (00 & 0F) in
            let:16 a366 = addWithCarry(true,a364,a365) in
            #039C
            let:8 a367 = (01 & a363[7:0]) in
            let:8 a368 = (01 | a363[7:0]) in
            #039E
            M[2015] := a367;
            #03A1
            #03A2
            #03A3
            #03A4
            #03A5
            #03A8
            let:16 a369 = addWithCarry(false,70,updateBit((updateBit((updateBit((updateBit((a367 << 01),0,a367[7]) << 01),0,updateBit((a367 << 01),0,a367[7])[7]) << 01),0,updateBit((updateBit((a367 << 01),0,a367[7]) << 01),0,updateBit((a367 << 01),0,a367[7])[7])[7]) << 01),0,updateBit((updateBit((updateBit((a367 << 01),0,a367[7]) << 01),0,updateBit((a367 << 01),0,a367[7])[7]) << 01),0,updateBit((updateBit((a367 << 01),0,a367[7]) << 01),0,updateBit((a367 << 01),0,a367[7])[7])[7])[7])) in
            let:8 a370 = (70 & 0F) in
            let:8 a371 = (updateBit((updateBit((updateBit((updateBit((a367 << 01),0,a367[7]) << 01),0,updateBit((a367 << 01),0,a367[7])[7]) << 01),0,updateBit((updateBit((a367 << 01),0,a367[7]) << 01),0,updateBit((a367 << 01),0,a367[7])[7])[7]) << 01),0,updateBit((updateBit((updateBit((a367 << 01),0,a367[7]) << 01),0,updateBit((a367 << 01),0,a367[7])[7]) << 01),0,updateBit((updateBit((a367 << 01),0,a367[7]) << 01),0,updateBit((a367 << 01),0,a367[7])[7])[7])[7]) & 0F) in
            let:16 a372 = addWithCarry(false,a370,a371) in
            #03A9
            #03AA
            M[2018] := a369[7:0];
            M[2019] := 1C;
            #03AD
            #036F
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a373 = (-1 + a2) in
                M[a373] := 03;
                let:16 a374 = (-1 + a373) in
                M[a374] := 6F;
                A := a369[7:0];
                B := M[a3];
                H := 1C;
                L := a369[7:0];
                SPH := a374[15:8];
                SPL := a374[7:0];
                FlagS := a369[7:0][7];
                FlagZ := is_zero(a369[7:0]);
                FlagA := a372[7:0][4];
                FlagP := parity(a369[7:0]);
                FlagCY := a369[15:8][0];
                jump (0008);
              } else {
                let:16 a375 = (-1 + a2) in
                M[a375] := 03;
                let:16 a376 = (-1 + a375) in
                M[a376] := 6F;
                A := a369[7:0];
                B := M[a3];
                H := 1C;
                L := a369[7:0];
                SPH := a376[15:8];
                SPL := a376[7:0];
                FlagS := a369[7:0][7];
                FlagZ := is_zero(a369[7:0]);
                FlagA := a372[7:0][4];
                FlagP := parity(a369[7:0]);
                FlagCY := a369[15:8][0];
                jump (0010);
              }
            } else {
              #0372
              let:16 a377 = (-1 + a2) in
              M[a377] := 03;
              let:16 a378 = (-1 + a377) in
              M[a378] := 75;
              #return-to: 0375
              #1A3B
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a379 = (-1 + a378) in
                  M[a379] := 1A;
                  let:16 a380 = (-1 + a379) in
                  M[a380] := 3B;
                  A := a369[7:0];
                  B := M[a3];
                  H := 20;
                  L := 18;
                  SPH := a380[15:8];
                  SPL := a380[7:0];
                  FlagS := a369[7:0][7];
                  FlagZ := is_zero(a369[7:0]);
                  FlagA := a372[7:0][4];
                  FlagP := parity(a369[7:0]);
                  FlagCY := a369[15:8][0];
                  jump (0008);
                } else {
                  let:16 a381 = (-1 + a378) in
                  M[a381] := 1A;
                  let:16 a382 = (-1 + a381) in
                  M[a382] := 3B;
                  A := a369[7:0];
                  B := M[a3];
                  H := 20;
                  L := 18;
                  SPH := a382[15:8];
                  SPL := a382[7:0];
                  FlagS := a369[7:0][7];
                  FlagZ := is_zero(a369[7:0]);
                  FlagA := a372[7:0][4];
                  FlagP := parity(a369[7:0]);
                  FlagCY := a369[15:8][0];
                  jump (0010);
                }
              } else {
                #1A3C
                #1A3D
                #1A3E
                #1A3F
                #1A40
                #1A41
                #1A42
                #1A43
                #1A44
                #1A45
                #1A46
                let:16 a383 = (1 + a378) in
                let:16 a384 = (1 + a383) in
                A := M[201A];
                B := M[201C];
                C := M[201B];
                D := M[2019];
                E := M[2018];
                H := M[201B];
                L := M[201A];
                SPH := a384[15:8];
                SPL := a384[7:0];
                FlagS := a369[7:0][7];
                FlagZ := is_zero(a369[7:0]);
                FlagA := a372[7:0][4];
                FlagP := parity(a369[7:0]);
                FlagCY := a369[15:8][0];
                jump ((M[a383],M[a378]));
              }
            }
          }
        } else {
          #02AE
          #02B1
          #02B3
          let:16 a385 = (-1 + a2) in
          M[a385] := 02;
          let:16 a386 = (-1 + a385) in
          M[a386] := B6;
          #return-to: 02B6
          #1424
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a387 = (-1 + a386) in
              M[a387] := 14;
              let:16 a388 = (-1 + a387) in
              M[a388] := 24;
              A := M[a3];
              B := 10;
              H := M[201B];
              L := M[201A];
              SPH := a388[15:8];
              SPL := a388[7:0];
              FlagS := a355[7:0][7];
              FlagZ := is_zero(a355[7:0]);
              FlagA := a358[7:0][4];
              FlagP := parity(a355[7:0]);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a389 = (-1 + a386) in
              M[a389] := 14;
              let:16 a390 = (-1 + a389) in
              M[a390] := 24;
              A := M[a3];
              B := 10;
              H := M[201B];
              L := M[201A];
              SPH := a390[15:8];
              SPL := a390[7:0];
              FlagS := a355[7:0][7];
              FlagZ := is_zero(a355[7:0]);
              FlagA := a358[7:0][4];
              FlagP := parity(a355[7:0]);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a391 = (-1 + a386) in
            M[a391] := 14;
            let:16 a392 = (-1 + a391) in
            M[a392] := 27;
            #return-to: 1427
            #1474
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a393 = (-1 + a392) in
                M[a393] := 14;
                let:16 a394 = (-1 + a393) in
                M[a394] := 74;
                A := M[a3];
                B := 10;
                H := M[201B];
                L := M[201A];
                SPH := a394[15:8];
                SPL := a394[7:0];
                FlagS := a355[7:0][7];
                FlagZ := is_zero(a355[7:0]);
                FlagA := a358[7:0][4];
                FlagP := parity(a355[7:0]);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a395 = (-1 + a392) in
                M[a395] := 14;
                let:16 a396 = (-1 + a395) in
                M[a396] := 74;
                A := M[a3];
                B := 10;
                H := M[201B];
                L := M[201A];
                SPH := a396[15:8];
                SPL := a396[7:0];
                FlagS := a355[7:0][7];
                FlagZ := is_zero(a355[7:0]);
                FlagA := a358[7:0][4];
                FlagP := parity(a355[7:0]);
                FlagCY := false;
                jump (0010);
              }
            } else {
              #1475
              let:8 a397 = (07 & M[201A]) in
              let:8 a398 = (07 | M[201A]) in
              #1477
              #1479
              #1A47
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a399 = (-1 + a392) in
                  M[a399] := 1A;
                  let:16 a400 = (-1 + a399) in
                  M[a400] := 47;
                  A := a397;
                  B := 10;
                  H := M[201B];
                  L := M[201A];
                  SPH := a400[15:8];
                  SPL := a400[7:0];
                  FlagS := a397[7];
                  FlagZ := is_zero(a397);
                  FlagA := a398[3];
                  FlagP := parity(a397);
                  FlagCY := false;
                  Shifter_OFF := a397;
                  jump (0008);
                } else {
                  let:16 a401 = (-1 + a392) in
                  M[a401] := 1A;
                  let:16 a402 = (-1 + a401) in
                  M[a402] := 47;
                  A := a397;
                  B := 10;
                  H := M[201B];
                  L := M[201A];
                  SPH := a402[15:8];
                  SPL := a402[7:0];
                  FlagS := a397[7];
                  FlagZ := is_zero(a397);
                  FlagA := a398[3];
                  FlagP := parity(a397);
                  FlagCY := false;
                  Shifter_OFF := a397;
                  jump (0010);
                }
              } else {
                let:16 a403 = (-1 + a392) in
                M[a403] := 10;
                let:16 a404 = (-1 + a403) in
                M[a404] := C;
                #1A48
                #1A4A
                #1A4B
                #1A4C
                #1A4D
                #1A4E
                #1A4F
                #1A50
                let:16 a405 = addWithCarry(!true,03,~00) in
                let:8 a406 = (03 & 0F) in
                let:8 a407 = (~00 & 0F) in
                let:16 a408 = addWithCarry(!true,a406,a407) in
                #1A51
                if (!is_zero(a405[7:0])) {
                  A := updateBit((M[201A] >> 01),7,M[201B][0]);
                  B := a405[7:0];
                  H := updateBit((M[201B] >> 01),7,false);
                  L := updateBit((M[201A] >> 01),7,M[201B][0]);
                  SPH := a404[15:8];
                  SPL := a404[7:0];
                  FlagS := a405[7:0][7];
                  FlagZ := is_zero(a405[7:0]);
                  FlagA := a408[7:0][4];
                  FlagP := parity(a405[7:0]);
                  FlagCY := M[201A][0];
                  Shifter_OFF := a397;
                  jump (1A4A);
                } else {
                  #1A54
                  #1A55
                  let:8 a409 = (3F & updateBit((M[201B] >> 01),7,false)) in
                  let:8 a410 = (3F | updateBit((M[201B] >> 01),7,false)) in
                  #1A57
                  let:8 a411 = (20 | a409) in
                  #1A59
                  #1A5A
                  let:16 a412 = (1 + a404) in
                  let:16 a413 = (1 + a412) in
                  #1A5B
                  let:16 a414 = (1 + a413) in
                  let:16 a415 = (1 + a414) in
                  A := a411;
                  B := M[a412];
                  C := M[a404];
                  H := a411;
                  L := updateBit((M[201A] >> 01),7,M[201B][0]);
                  SPH := a415[15:8];
                  SPL := a415[7:0];
                  FlagS := a411[7];
                  FlagZ := is_zero(a411);
                  FlagA := false;
                  FlagP := parity(a411);
                  FlagCY := false;
                  Shifter_OFF := a397;
                  jump ((M[a414],M[a413]));
                }
              }
            }
          }
        }
      }
    }

02B6:

    #02B9
    #02BC
    #02BE
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 02;
    let:16 a2 = (-1 + a1) in
    M[a2] := C1;
    #return-to: 02C1
    #1A32
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 1A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 32;
        B := 10;
        D := 1B;
        E := 10;
        H := 20;
        L := 10;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 1A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 32;
        B := 10;
        D := 1B;
        E := 10;
        H := 20;
        L := 10;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1A33
      M[2010] := 00;
      #1A34
      #1A35
      #1A36
      let:16 a7 = addWithCarry(!true,10,~00) in
      let:8 a8 = (10 & 0F) in
      let:8 a9 = (~00 & 0F) in
      let:16 a10 = addWithCarry(!true,a8,a9) in
      #1A37
      if (!is_zero(a7[7:0])) {
        A := 00;
        B := a7[7:0];
        D := 1B;
        E := 11;
        H := 20;
        L := 11;
        SPH := a2[15:8];
        SPL := a2[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        jump (1A32);
      } else {
        #1A3A
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := 00;
        B := a7[7:0];
        D := 1B;
        E := 11;
        H := 20;
        L := 11;
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        jump ((M[a11],M[a2]));
      }
    }

02C1:

    #02C3
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 02;
    let:16 a2 = (-1 + a1) in
    M[a2] := C6;
    #return-to: 02C6
    #19DC
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := DC;
        B := 00;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := DC;
        B := 00;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #19DF
      let:8 a7 = (00 & M[2094]) in
      let:8 a8 = (00 | M[2094]) in
      #19E0
      M[2094] := a7;
      #19E3
      sound_control(Ufo,a7[0]);
      sound_control(Shot,a7[1]);
      sound_control(PlayerDie,a7[2]);
      sound_control(InvaderDie,a7[3]);
      sound_control(ExtraLife,a7[4]);
      #19E5
      let:16 a9 = (1 + a2) in
      let:16 a10 = (1 + a9) in
      A := a7;
      B := 00;
      SPH := a10[15:8];
      SPL := a10[7:0];
      FlagS := a7[7];
      FlagZ := is_zero(a7);
      FlagA := a8[3];
      FlagP := parity(a7);
      FlagCY := false;
      jump ((M[a9],M[a2]));
    }

02C6:

    #02C9
    let:8 a1 = (M[206D] & M[206D]) in
    let:8 a2 = (M[206D] | M[206D]) in
    #02CA
    if (!is_zero(a1)) {
      let:16 a3 = (1 + (SPH,SPL)) in
      let:16 a4 = (1 + a3) in
      A := a1;
      SPH := a4[15:8];
      SPL := a4[7:0];
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump ((M[a3],M[(SPH,SPL)]));
    } else {
      #02CB
      #02CE
      let:8 a5 = (M[20EF] & M[20EF]) in
      let:8 a6 = (M[20EF] | M[20EF]) in
      #02CF
      if (is_zero(a5)) {
        let:16 a7 = (1 + (SPH,SPL)) in
        let:16 a8 = (1 + a7) in
        A := a5;
        SPH := a8[15:8];
        SPL := a8[7:0];
        FlagS := a5[7];
        FlagZ := is_zero(a5);
        FlagA := a6[3];
        FlagP := parity(a5);
        FlagCY := false;
        jump ((M[a7],M[(SPH,SPL)]));
      } else {
        #02D0
        #02D3
        enable_interrupts()
        #02D4
        M[23FF] := 02;
        M[23FE] := D7;
        #return-to: 02D7
        #19D7
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            M[23FD] := 19;
            M[23FC] := D7;
            A := a5;
            SPH := 23;
            SPL := FC;
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := false;
            jump (0008);
          } else {
            M[23FD] := 19;
            M[23FC] := D7;
            A := a5;
            SPH := 23;
            SPL := FC;
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:8 a9 = (a5 ^ a5) in
          #19D8
          #19D3
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              M[23FD] := 19;
              M[23FC] := D3;
              A := a9;
              SPH := 23;
              SPL := FC;
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := false;
              FlagP := parity(a9);
              FlagCY := false;
              jump (0008);
            } else {
              M[23FD] := 19;
              M[23FC] := D3;
              A := a9;
              SPH := 23;
              SPL := FC;
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := false;
              FlagP := parity(a9);
              FlagCY := false;
              jump (0010);
            }
          } else {
            M[20E9] := a9;
            #19D6
            A := a9;
            SPH := 24;
            SPL := 00;
            FlagS := a9[7];
            FlagZ := is_zero(a9);
            FlagA := false;
            FlagP := parity(a9);
            FlagCY := false;
            jump ((M[23FF],M[23FE]));
          }
        }
      }
    }

02D7:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 02;
    let:16 a2 = (-1 + a1) in
    M[a2] := DA;
    #return-to: 02DA
    #092E
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 09;
        let:16 a4 = (-1 + a3) in
        M[a4] := 2E;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 09;
        let:16 a6 = (-1 + a5) in
        M[a6] := 2E;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 09;
      let:16 a8 = (-1 + a7) in
      M[a8] := 31;
      #return-to: 0931
      #1611
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 16;
          let:16 a10 = (-1 + a9) in
          M[a10] := 11;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 16;
          let:16 a12 = (-1 + a11) in
          M[a12] := 11;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1613
        #1616
        #1617
        let:16 a13 = (1 + a8) in
        let:16 a14 = (1 + a13) in
        A := M[2067];
        H := M[2067];
        L := 00;
        SPH := a14[15:8];
        SPL := a14[7:0];
        jump ((M[a13],M[a8]));
      }
    }

02DA:

    let:8 a1 = (A & A) in
    let:8 a2 = (A | A) in
    #02DB
    if (is_zero(a1)) {
      #166D
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 16;
          let:16 a4 = (-1 + a3) in
          M[a4] := 6D;
          A := a1;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 16;
          let:16 a6 = (-1 + a5) in
          M[a6] := 6D;
          A := a1;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        let:8 a7 = (a1 ^ a1) in
        #166E
        let:16 a8 = (-1 + (SPH,SPL)) in
        M[a8] := 16;
        let:16 a9 = (-1 + a8) in
        M[a9] := 71;
        #return-to: 1671
        #1A8B
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a10 = (-1 + a9) in
            M[a10] := 1A;
            let:16 a11 = (-1 + a10) in
            M[a11] := 8B;
            A := a7;
            SPH := a11[15:8];
            SPL := a11[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := false;
            FlagP := parity(a7);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a12 = (-1 + a9) in
            M[a12] := 1A;
            let:16 a13 = (-1 + a12) in
            M[a13] := 8B;
            A := a7;
            SPH := a13[15:8];
            SPL := a13[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := false;
            FlagP := parity(a7);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #1A8E
          let:8 a14 = (0F & a7) in
          let:8 a15 = (0F | a7) in
          #1A90
          #09C5
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a16 = (-1 + a9) in
              M[a16] := 09;
              let:16 a17 = (-1 + a16) in
              M[a17] := C5;
              A := a14;
              H := 25;
              L := 01;
              SPH := a17[15:8];
              SPL := a17[7:0];
              FlagS := a14[7];
              FlagZ := is_zero(a14);
              FlagA := a15[3];
              FlagP := parity(a14);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a18 = (-1 + a9) in
              M[a18] := 09;
              let:16 a19 = (-1 + a18) in
              M[a19] := C5;
              A := a14;
              H := 25;
              L := 01;
              SPH := a19[15:8];
              SPL := a19[7:0];
              FlagS := a14[7];
              FlagZ := is_zero(a14);
              FlagA := a15[3];
              FlagP := parity(a14);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a20 = addWithCarry(false,1A,a14) in
            let:8 a21 = (1A & 0F) in
            let:8 a22 = (a14 & 0F) in
            let:16 a23 = addWithCarry(false,a21,a22) in
            #09C7
            #08FF
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a24 = (-1 + a9) in
                M[a24] := 08;
                let:16 a25 = (-1 + a24) in
                M[a25] := FF;
                A := a20[7:0];
                H := 25;
                L := 01;
                SPH := a25[15:8];
                SPL := a25[7:0];
                FlagS := a20[7:0][7];
                FlagZ := is_zero(a20[7:0]);
                FlagA := a23[7:0][4];
                FlagP := parity(a20[7:0]);
                FlagCY := a20[15:8][0];
                jump (0008);
              } else {
                let:16 a26 = (-1 + a9) in
                M[a26] := 08;
                let:16 a27 = (-1 + a26) in
                M[a27] := FF;
                A := a20[7:0];
                H := 25;
                L := 01;
                SPH := a27[15:8];
                SPL := a27[7:0];
                FlagS := a20[7:0][7];
                FlagZ := is_zero(a20[7:0]);
                FlagA := a23[7:0][4];
                FlagP := parity(a20[7:0]);
                FlagCY := a20[15:8][0];
                jump (0010);
              }
            } else {
              #0902
              let:16 a28 = (-1 + a9) in
              M[a28] := 25;
              let:16 a29 = (-1 + a28) in
              M[a29] := 01;
              #0903
              #0905
              #0906
              let:17 a30 = add17((00,a20[7:0]),(00,a20[7:0])) in
              #0907
              let:17 a31 = add17(a30[15:0],a30[15:0]) in
              #0908
              let:17 a32 = add17(a31[15:0],a31[15:0]) in
              #0909
              let:17 a33 = add17(1E00,a32[15:0]) in
              #090A
              #090B
              let:16 a34 = (1 + a29) in
              let:16 a35 = (1 + a34) in
              #090C
              #090E
              #0910
              #1439
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a36 = (-1 + a35) in
                  M[a36] := 14;
                  let:16 a37 = (-1 + a36) in
                  M[a37] := 39;
                  A := a20[7:0];
                  B := 08;
                  D := a33[15:0][15:8];
                  E := a33[15:0][7:0];
                  H := M[a34];
                  L := M[a29];
                  SPH := a37[15:8];
                  SPL := a37[7:0];
                  FlagS := a20[7:0][7];
                  FlagZ := is_zero(a20[7:0]);
                  FlagA := a23[7:0][4];
                  FlagP := parity(a20[7:0]);
                  FlagCY := a33[16];
                  jump (0008);
                } else {
                  let:16 a38 = (-1 + a35) in
                  M[a38] := 14;
                  let:16 a39 = (-1 + a38) in
                  M[a39] := 39;
                  A := a20[7:0];
                  B := 08;
                  D := a33[15:0][15:8];
                  E := a33[15:0][7:0];
                  H := M[a34];
                  L := M[a29];
                  SPH := a39[15:8];
                  SPL := a39[7:0];
                  FlagS := a20[7:0][7];
                  FlagZ := is_zero(a20[7:0]);
                  FlagA := a23[7:0][4];
                  FlagP := parity(a20[7:0]);
                  FlagCY := a33[16];
                  jump (0010);
                }
              } else {
                let:16 a40 = (-1 + a35) in
                M[a40] := 08;
                let:16 a41 = (-1 + a40) in
                M[a41] := C;
                #143A
                #143B
                M[(M[a34],M[a29])] := M[a33[15:0]];
                #143C
                let:16 a42 = (1 + a33[15:0]) in
                #143D
                #1440
                let:17 a43 = add17(0020,(M[a34],M[a29])) in
                #1441
                let:16 a44 = (1 + a41) in
                let:16 a45 = (1 + a44) in
                #1442
                let:16 a46 = addWithCarry(!true,M[a44],~00) in
                let:8 a47 = (M[a44] & 0F) in
                let:8 a48 = (~00 & 0F) in
                let:16 a49 = addWithCarry(!true,a47,a48) in
                #1443
                if (!is_zero(a46[7:0])) {
                  A := M[a33[15:0]];
                  B := a46[7:0];
                  C := M[a41];
                  D := a42[15:8];
                  E := a42[7:0];
                  H := a43[15:0][15:8];
                  L := a43[15:0][7:0];
                  SPH := a45[15:8];
                  SPL := a45[7:0];
                  FlagS := a46[7:0][7];
                  FlagZ := is_zero(a46[7:0]);
                  FlagA := a49[7:0][4];
                  FlagP := parity(a46[7:0]);
                  FlagCY := a43[16];
                  jump (1439);
                } else {
                  #1446
                  let:16 a50 = (1 + a45) in
                  let:16 a51 = (1 + a50) in
                  A := M[a33[15:0]];
                  B := a46[7:0];
                  C := M[a41];
                  D := a42[15:8];
                  E := a42[7:0];
                  H := a43[15:0][15:8];
                  L := a43[15:0][7:0];
                  SPH := a51[15:8];
                  SPL := a51[7:0];
                  FlagS := a46[7:0][7];
                  FlagZ := is_zero(a46[7:0]);
                  FlagA := a49[7:0][4];
                  FlagP := parity(a46[7:0]);
                  FlagCY := a43[16];
                  jump ((M[a50],M[a45]));
                }
              }
            }
          }
        }
      }
    } else {
      #02DE
      let:16 a52 = (-1 + (SPH,SPL)) in
      M[a52] := 02;
      let:16 a53 = (-1 + a52) in
      M[a53] := E1;
      #return-to: 02E1
      #18E7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a54 = (-1 + a53) in
          M[a54] := 18;
          let:16 a55 = (-1 + a54) in
          M[a55] := E7;
          A := a1;
          SPH := a55[15:8];
          SPL := a55[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a56 = (-1 + a53) in
          M[a56] := 18;
          let:16 a57 = (-1 + a56) in
          M[a57] := E7;
          A := a1;
          SPH := a57[15:8];
          SPL := a57[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #18EA
        #18ED
        #18EE
        if (!M[2067][0]) {
          let:16 a58 = (1 + a53) in
          let:16 a59 = (1 + a58) in
          A := updateBit((M[2067] >> 01),7,M[2067][0]);
          H := 20;
          L := E7;
          SPH := a59[15:8];
          SPL := a59[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := M[2067][0];
          jump ((M[a58],M[a53]));
        } else {
          #18EF
          #18F0
          let:16 a60 = (1 + a53) in
          let:16 a61 = (1 + a60) in
          A := updateBit((M[2067] >> 01),7,M[2067][0]);
          H := 20;
          L := E8;
          SPH := a61[15:8];
          SPL := a61[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := M[2067][0];
          jump ((M[a60],M[a53]));
        }
      }
    }

02E1:

    #02E2
    let:8 a1 = (M[(H,L)] & M[(H,L)]) in
    let:8 a2 = (M[(H,L)] | M[(H,L)]) in
    #02E3
    if (is_zero(a1)) {
      #032C
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 03;
          let:16 a4 = (-1 + a3) in
          M[a4] := 2C;
          A := a1;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 03;
          let:16 a6 = (-1 + a5) in
          M[a6] := 2C;
          A := a1;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        let:16 a7 = (-1 + (SPH,SPL)) in
        M[a7] := 03;
        let:16 a8 = (-1 + a7) in
        M[a8] := 2F;
        #return-to: 032F
        #1A7F
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a8) in
            M[a9] := 1A;
            let:16 a10 = (-1 + a9) in
            M[a10] := 7F;
            A := a1;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a11 = (-1 + a8) in
            M[a11] := 1A;
            let:16 a12 = (-1 + a11) in
            M[a12] := 7F;
            A := a1;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a13 = (-1 + a8) in
          M[a13] := 1A;
          let:16 a14 = (-1 + a13) in
          M[a14] := 82;
          #return-to: 1A82
          #092E
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a15 = (-1 + a14) in
              M[a15] := 09;
              let:16 a16 = (-1 + a15) in
              M[a16] := 2E;
              A := a1;
              SPH := a16[15:8];
              SPL := a16[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a17 = (-1 + a14) in
              M[a17] := 09;
              let:16 a18 = (-1 + a17) in
              M[a18] := 2E;
              A := a1;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a19 = (-1 + a14) in
            M[a19] := 09;
            let:16 a20 = (-1 + a19) in
            M[a20] := 31;
            #return-to: 0931
            #1611
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a21 = (-1 + a20) in
                M[a21] := 16;
                let:16 a22 = (-1 + a21) in
                M[a22] := 11;
                A := a1;
                SPH := a22[15:8];
                SPL := a22[7:0];
                FlagS := a1[7];
                FlagZ := is_zero(a1);
                FlagA := a2[3];
                FlagP := parity(a1);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a23 = (-1 + a20) in
                M[a23] := 16;
                let:16 a24 = (-1 + a23) in
                M[a24] := 11;
                A := a1;
                SPH := a24[15:8];
                SPL := a24[7:0];
                FlagS := a1[7];
                FlagZ := is_zero(a1);
                FlagA := a2[3];
                FlagP := parity(a1);
                FlagCY := false;
                jump (0010);
              }
            } else {
              #1613
              #1616
              #1617
              let:16 a25 = (1 + a20) in
              let:16 a26 = (1 + a25) in
              A := M[2067];
              H := M[2067];
              L := 00;
              SPH := a26[15:8];
              SPL := a26[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := false;
              jump ((M[a25],M[a20]));
            }
          }
        }
      }
    } else {
      #02E6
      #02E9
      let:8 a27 = (M[20CE] & M[20CE]) in
      let:8 a28 = (M[20CE] | M[20CE]) in
      #02EA
      if (is_zero(a27)) {
        #032C
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a29 = (-1 + (SPH,SPL)) in
            M[a29] := 03;
            let:16 a30 = (-1 + a29) in
            M[a30] := 2C;
            A := a27;
            SPH := a30[15:8];
            SPL := a30[7:0];
            FlagS := a27[7];
            FlagZ := is_zero(a27);
            FlagA := a28[3];
            FlagP := parity(a27);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a31 = (-1 + (SPH,SPL)) in
            M[a31] := 03;
            let:16 a32 = (-1 + a31) in
            M[a32] := 2C;
            A := a27;
            SPH := a32[15:8];
            SPL := a32[7:0];
            FlagS := a27[7];
            FlagZ := is_zero(a27);
            FlagA := a28[3];
            FlagP := parity(a27);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a33 = (-1 + (SPH,SPL)) in
          M[a33] := 03;
          let:16 a34 = (-1 + a33) in
          M[a34] := 2F;
          #return-to: 032F
          #1A7F
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a35 = (-1 + a34) in
              M[a35] := 1A;
              let:16 a36 = (-1 + a35) in
              M[a36] := 7F;
              A := a27;
              SPH := a36[15:8];
              SPL := a36[7:0];
              FlagS := a27[7];
              FlagZ := is_zero(a27);
              FlagA := a28[3];
              FlagP := parity(a27);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a37 = (-1 + a34) in
              M[a37] := 1A;
              let:16 a38 = (-1 + a37) in
              M[a38] := 7F;
              A := a27;
              SPH := a38[15:8];
              SPL := a38[7:0];
              FlagS := a27[7];
              FlagZ := is_zero(a27);
              FlagA := a28[3];
              FlagP := parity(a27);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a39 = (-1 + a34) in
            M[a39] := 1A;
            let:16 a40 = (-1 + a39) in
            M[a40] := 82;
            #return-to: 1A82
            #092E
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a41 = (-1 + a40) in
                M[a41] := 09;
                let:16 a42 = (-1 + a41) in
                M[a42] := 2E;
                A := a27;
                SPH := a42[15:8];
                SPL := a42[7:0];
                FlagS := a27[7];
                FlagZ := is_zero(a27);
                FlagA := a28[3];
                FlagP := parity(a27);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a43 = (-1 + a40) in
                M[a43] := 09;
                let:16 a44 = (-1 + a43) in
                M[a44] := 2E;
                A := a27;
                SPH := a44[15:8];
                SPL := a44[7:0];
                FlagS := a27[7];
                FlagZ := is_zero(a27);
                FlagA := a28[3];
                FlagP := parity(a27);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a45 = (-1 + a40) in
              M[a45] := 09;
              let:16 a46 = (-1 + a45) in
              M[a46] := 31;
              #return-to: 0931
              #1611
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a47 = (-1 + a46) in
                  M[a47] := 16;
                  let:16 a48 = (-1 + a47) in
                  M[a48] := 11;
                  A := a27;
                  SPH := a48[15:8];
                  SPL := a48[7:0];
                  FlagS := a27[7];
                  FlagZ := is_zero(a27);
                  FlagA := a28[3];
                  FlagP := parity(a27);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a49 = (-1 + a46) in
                  M[a49] := 16;
                  let:16 a50 = (-1 + a49) in
                  M[a50] := 11;
                  A := a27;
                  SPH := a50[15:8];
                  SPL := a50[7:0];
                  FlagS := a27[7];
                  FlagZ := is_zero(a27);
                  FlagA := a28[3];
                  FlagP := parity(a27);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #1613
                #1616
                #1617
                let:16 a51 = (1 + a46) in
                let:16 a52 = (1 + a51) in
                A := M[2067];
                H := M[2067];
                L := 00;
                SPH := a52[15:8];
                SPL := a52[7:0];
                FlagS := a27[7];
                FlagZ := is_zero(a27);
                FlagA := a28[3];
                FlagP := parity(a27);
                FlagCY := false;
                jump ((M[a51],M[a46]));
              }
            }
          }
        }
      } else {
        #02ED
        #02F0
        let:16 a53 = (-1 + (SPH,SPL)) in
        M[a53] := M[2067];
        let:16 a54 = (-1 + a53) in
        M[a54] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a27[7]),6,is_zero(a27)),4,a28[3]),2,parity(a27)),0,false);
        #02F1
        #02F2
        if (M[2067][0]) {
          #0332
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a55 = (-1 + a54) in
              M[a55] := 03;
              let:16 a56 = (-1 + a55) in
              M[a56] := 32;
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              SPH := a56[15:8];
              SPL := a56[7:0];
              FlagS := a27[7];
              FlagZ := is_zero(a27);
              FlagA := a28[3];
              FlagP := parity(a27);
              FlagCY := M[2067][0];
              jump (0008);
            } else {
              let:16 a57 = (-1 + a54) in
              M[a57] := 03;
              let:16 a58 = (-1 + a57) in
              M[a58] := 32;
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              SPH := a58[15:8];
              SPL := a58[7:0];
              FlagS := a27[7];
              FlagZ := is_zero(a27);
              FlagA := a28[3];
              FlagP := parity(a27);
              FlagCY := M[2067][0];
              jump (0010);
            }
          } else {
            let:16 a59 = (-1 + a54) in
            M[a59] := 03;
            let:16 a60 = (-1 + a59) in
            M[a60] := 35;
            #return-to: 0335
            #0209
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a61 = (-1 + a60) in
                M[a61] := 02;
                let:16 a62 = (-1 + a61) in
                M[a62] := 09;
                A := updateBit((M[2067] >> 01),7,M[2067][0]);
                SPH := a62[15:8];
                SPL := a62[7:0];
                FlagS := a27[7];
                FlagZ := is_zero(a27);
                FlagA := a28[3];
                FlagP := parity(a27);
                FlagCY := M[2067][0];
                jump (0008);
              } else {
                let:16 a63 = (-1 + a60) in
                M[a63] := 02;
                let:16 a64 = (-1 + a63) in
                M[a64] := 09;
                A := updateBit((M[2067] >> 01),7,M[2067][0]);
                SPH := a64[15:8];
                SPL := a64[7:0];
                FlagS := a27[7];
                FlagZ := is_zero(a27);
                FlagA := a28[3];
                FlagP := parity(a27);
                FlagCY := M[2067][0];
                jump (0010);
              }
            } else {
              #020B
              #021B
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a65 = (-1 + a60) in
                  M[a65] := 02;
                  let:16 a66 = (-1 + a65) in
                  M[a66] := 1B;
                  A := 01;
                  SPH := a66[15:8];
                  SPL := a66[7:0];
                  FlagS := a27[7];
                  FlagZ := is_zero(a27);
                  FlagA := a28[3];
                  FlagP := parity(a27);
                  FlagCY := M[2067][0];
                  jump (0008);
                } else {
                  let:16 a67 = (-1 + a60) in
                  M[a67] := 02;
                  let:16 a68 = (-1 + a67) in
                  M[a68] := 1B;
                  A := 01;
                  SPH := a68[15:8];
                  SPL := a68[7:0];
                  FlagS := a27[7];
                  FlagZ := is_zero(a27);
                  FlagA := a28[3];
                  FlagP := parity(a27);
                  FlagCY := M[2067][0];
                  jump (0010);
                }
              } else {
                #021E
                M[2081] := 01;
                #0221
                #0224
                #0227
                #0229
                let:16 a69 = (-1 + a60) in
                M[a69] := 04;
                let:16 a70 = (-1 + a69) in
                M[a70] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a27[7]),6,is_zero(a27)),4,a28[3]),2,parity(a27)),0,M[2067][0]);
                #022A
                let:16 a71 = (-1 + a70) in
                M[a71] := 16;
                let:16 a72 = (-1 + a71) in
                M[a72] := 02;
                #022B
                #022E
                let:8 a73 = (M[2081] & M[2081]) in
                let:8 a74 = (M[2081] | M[2081]) in
                #022F
                if (!is_zero(a73)) {
                  #0242
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a75 = (-1 + a72) in
                      M[a75] := 02;
                      let:16 a76 = (-1 + a75) in
                      M[a76] := 42;
                      A := a73;
                      B := 16;
                      C := 02;
                      D := 21;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a76[15:8];
                      SPL := a76[7:0];
                      FlagS := a73[7];
                      FlagZ := is_zero(a73);
                      FlagA := a74[3];
                      FlagP := parity(a73);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a77 = (-1 + a72) in
                      M[a77] := 02;
                      let:16 a78 = (-1 + a77) in
                      M[a78] := 42;
                      A := a73;
                      B := 16;
                      C := 02;
                      D := 21;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a78[15:8];
                      SPL := a78[7:0];
                      FlagS := a73[7];
                      FlagZ := is_zero(a73);
                      FlagA := a74[3];
                      FlagP := parity(a73);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:16 a79 = (-1 + a72) in
                    M[a79] := 02;
                    let:16 a80 = (-1 + a79) in
                    M[a80] := 45;
                    #return-to: 0245
                    #147C
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a81 = (-1 + a80) in
                        M[a81] := 14;
                        let:16 a82 = (-1 + a81) in
                        M[a82] := 7C;
                        A := a73;
                        B := 16;
                        C := 02;
                        D := 21;
                        E := 42;
                        H := 28;
                        L := 06;
                        SPH := a82[15:8];
                        SPL := a82[7:0];
                        FlagS := a73[7];
                        FlagZ := is_zero(a73);
                        FlagA := a74[3];
                        FlagP := parity(a73);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a83 = (-1 + a80) in
                        M[a83] := 14;
                        let:16 a84 = (-1 + a83) in
                        M[a84] := 7C;
                        A := a73;
                        B := 16;
                        C := 02;
                        D := 21;
                        E := 42;
                        H := 28;
                        L := 06;
                        SPH := a84[15:8];
                        SPL := a84[7:0];
                        FlagS := a73[7];
                        FlagZ := is_zero(a73);
                        FlagA := a74[3];
                        FlagP := parity(a73);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      let:16 a85 = (-1 + a80) in
                      M[a85] := 16;
                      let:16 a86 = (-1 + a85) in
                      M[a86] := 02;
                      #147D
                      let:16 a87 = (-1 + a86) in
                      M[a87] := 28;
                      let:16 a88 = (-1 + a87) in
                      M[a88] := 06;
                      #147E
                      #147F
                      M[2142] := M[2806];
                      #1480
                      #1481
                      #1482
                      let:16 a89 = addWithCarry(!true,02,~00) in
                      let:8 a90 = (02 & 0F) in
                      let:8 a91 = (~00 & 0F) in
                      let:16 a92 = addWithCarry(!true,a90,a91) in
                      #1483
                      if (!is_zero(a89[7:0])) {
                        A := M[2806];
                        B := 16;
                        C := a89[7:0];
                        D := 21;
                        E := 43;
                        H := 28;
                        L := 07;
                        SPH := a88[15:8];
                        SPL := a88[7:0];
                        FlagS := a89[7:0][7];
                        FlagZ := is_zero(a89[7:0]);
                        FlagA := a92[7:0][4];
                        FlagP := parity(a89[7:0]);
                        FlagCY := false;
                        jump (147E);
                      } else {
                        #1486
                        let:16 a93 = (1 + a88) in
                        let:16 a94 = (1 + a93) in
                        #1487
                        #148A
                        let:17 a95 = add17(0020,(M[a93],M[a88])) in
                        #148B
                        let:16 a96 = (1 + a94) in
                        let:16 a97 = (1 + a96) in
                        #148C
                        let:16 a98 = addWithCarry(!true,M[a96],~00) in
                        let:8 a99 = (M[a96] & 0F) in
                        let:8 a100 = (~00 & 0F) in
                        let:16 a101 = addWithCarry(!true,a99,a100) in
                        #148D
                        if (!is_zero(a98[7:0])) {
                          A := M[2806];
                          B := a98[7:0];
                          C := M[a94];
                          D := 21;
                          E := 43;
                          H := a95[15:0][15:8];
                          L := a95[15:0][7:0];
                          SPH := a97[15:8];
                          SPL := a97[7:0];
                          FlagS := a98[7:0][7];
                          FlagZ := is_zero(a98[7:0]);
                          FlagA := a101[7:0][4];
                          FlagP := parity(a98[7:0]);
                          FlagCY := a95[16];
                          jump (147C);
                        } else {
                          #1490
                          let:16 a102 = (1 + a97) in
                          let:16 a103 = (1 + a102) in
                          A := M[2806];
                          B := a98[7:0];
                          C := M[a94];
                          D := 21;
                          E := 43;
                          H := a95[15:0][15:8];
                          L := a95[15:0][7:0];
                          SPH := a103[15:8];
                          SPL := a103[7:0];
                          FlagS := a98[7:0][7];
                          FlagZ := is_zero(a98[7:0]);
                          FlagA := a101[7:0][4];
                          FlagP := parity(a98[7:0]);
                          FlagCY := a95[16];
                          jump ((M[a102],M[a97]));
                        }
                      }
                    }
                  }
                } else {
                  #0232
                  let:16 a104 = (-1 + a72) in
                  M[a104] := 02;
                  let:16 a105 = (-1 + a104) in
                  M[a105] := 35;
                  #return-to: 0235
                  #1A69
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a106 = (-1 + a105) in
                      M[a106] := 1A;
                      let:16 a107 = (-1 + a106) in
                      M[a107] := 69;
                      A := a73;
                      B := 16;
                      C := 02;
                      D := 21;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a107[15:8];
                      SPL := a107[7:0];
                      FlagS := a73[7];
                      FlagZ := is_zero(a73);
                      FlagA := a74[3];
                      FlagP := parity(a73);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a108 = (-1 + a105) in
                      M[a108] := 1A;
                      let:16 a109 = (-1 + a108) in
                      M[a109] := 69;
                      A := a73;
                      B := 16;
                      C := 02;
                      D := 21;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a109[15:8];
                      SPL := a109[7:0];
                      FlagS := a73[7];
                      FlagZ := is_zero(a73);
                      FlagA := a74[3];
                      FlagP := parity(a73);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:16 a110 = (-1 + a105) in
                    M[a110] := 16;
                    let:16 a111 = (-1 + a110) in
                    M[a111] := 02;
                    #1A6A
                    let:16 a112 = (-1 + a111) in
                    M[a112] := 28;
                    let:16 a113 = (-1 + a112) in
                    M[a113] := 06;
                    #1A6B
                    #1A6C
                    let:8 a114 = (M[2806] | M[2142]) in
                    #1A6D
                    M[2806] := a114;
                    #1A6E
                    #1A6F
                    #1A70
                    let:16 a115 = addWithCarry(!true,02,~00) in
                    let:8 a116 = (02 & 0F) in
                    let:8 a117 = (~00 & 0F) in
                    let:16 a118 = addWithCarry(!true,a116,a117) in
                    #1A71
                    if (!is_zero(a115[7:0])) {
                      A := a114;
                      B := 16;
                      C := a115[7:0];
                      D := 21;
                      E := 43;
                      H := 28;
                      L := 07;
                      SPH := a113[15:8];
                      SPL := a113[7:0];
                      FlagS := a115[7:0][7];
                      FlagZ := is_zero(a115[7:0]);
                      FlagA := a118[7:0][4];
                      FlagP := parity(a115[7:0]);
                      FlagCY := false;
                      jump (1A6B);
                    } else {
                      #1A74
                      let:16 a119 = (1 + a113) in
                      let:16 a120 = (1 + a119) in
                      #1A75
                      #1A78
                      let:17 a121 = add17(0020,(M[a119],M[a113])) in
                      #1A79
                      let:16 a122 = (1 + a120) in
                      let:16 a123 = (1 + a122) in
                      #1A7A
                      let:16 a124 = addWithCarry(!true,M[a122],~00) in
                      let:8 a125 = (M[a122] & 0F) in
                      let:8 a126 = (~00 & 0F) in
                      let:16 a127 = addWithCarry(!true,a125,a126) in
                      #1A7B
                      if (!is_zero(a124[7:0])) {
                        A := a114;
                        B := a124[7:0];
                        C := M[a120];
                        D := 21;
                        E := 43;
                        H := a121[15:0][15:8];
                        L := a121[15:0][7:0];
                        SPH := a123[15:8];
                        SPL := a123[7:0];
                        FlagS := a124[7:0][7];
                        FlagZ := is_zero(a124[7:0]);
                        FlagA := a127[7:0][4];
                        FlagP := parity(a124[7:0]);
                        FlagCY := a121[16];
                        jump (1A69);
                      } else {
                        #1A7E
                        let:16 a128 = (1 + a123) in
                        let:16 a129 = (1 + a128) in
                        A := a114;
                        B := a124[7:0];
                        C := M[a120];
                        D := 21;
                        E := 43;
                        H := a121[15:0][15:8];
                        L := a121[15:0][7:0];
                        SPH := a129[15:8];
                        SPL := a129[7:0];
                        FlagS := a124[7:0][7];
                        FlagZ := is_zero(a124[7:0]);
                        FlagA := a127[7:0][4];
                        FlagP := parity(a124[7:0]);
                        FlagCY := a121[16];
                        jump ((M[a128],M[a123]));
                      }
                    }
                  }
                }
              }
            }
          }
        } else {
          #02F5
          let:16 a130 = (-1 + a54) in
          M[a130] := 02;
          let:16 a131 = (-1 + a130) in
          M[a131] := F8;
          #return-to: 02F8
          #020E
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a132 = (-1 + a131) in
              M[a132] := 02;
              let:16 a133 = (-1 + a132) in
              M[a133] := 0E;
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              SPH := a133[15:8];
              SPL := a133[7:0];
              FlagS := a27[7];
              FlagZ := is_zero(a27);
              FlagA := a28[3];
              FlagP := parity(a27);
              FlagCY := M[2067][0];
              jump (0008);
            } else {
              let:16 a134 = (-1 + a131) in
              M[a134] := 02;
              let:16 a135 = (-1 + a134) in
              M[a135] := 0E;
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              SPH := a135[15:8];
              SPL := a135[7:0];
              FlagS := a27[7];
              FlagZ := is_zero(a27);
              FlagA := a28[3];
              FlagP := parity(a27);
              FlagCY := M[2067][0];
              jump (0010);
            }
          } else {
            #0210
            #0214
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a136 = (-1 + a131) in
                M[a136] := 02;
                let:16 a137 = (-1 + a136) in
                M[a137] := 14;
                A := 01;
                SPH := a137[15:8];
                SPL := a137[7:0];
                FlagS := a27[7];
                FlagZ := is_zero(a27);
                FlagA := a28[3];
                FlagP := parity(a27);
                FlagCY := M[2067][0];
                jump (0008);
              } else {
                let:16 a138 = (-1 + a131) in
                M[a138] := 02;
                let:16 a139 = (-1 + a138) in
                M[a139] := 14;
                A := 01;
                SPH := a139[15:8];
                SPL := a139[7:0];
                FlagS := a27[7];
                FlagZ := is_zero(a27);
                FlagA := a28[3];
                FlagP := parity(a27);
                FlagCY := M[2067][0];
                jump (0010);
              }
            } else {
              #0217
              #021E
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a140 = (-1 + a131) in
                  M[a140] := 02;
                  let:16 a141 = (-1 + a140) in
                  M[a141] := 1E;
                  A := 01;
                  D := 22;
                  E := 42;
                  SPH := a141[15:8];
                  SPL := a141[7:0];
                  FlagS := a27[7];
                  FlagZ := is_zero(a27);
                  FlagA := a28[3];
                  FlagP := parity(a27);
                  FlagCY := M[2067][0];
                  jump (0008);
                } else {
                  let:16 a142 = (-1 + a131) in
                  M[a142] := 02;
                  let:16 a143 = (-1 + a142) in
                  M[a143] := 1E;
                  A := 01;
                  D := 22;
                  E := 42;
                  SPH := a143[15:8];
                  SPL := a143[7:0];
                  FlagS := a27[7];
                  FlagZ := is_zero(a27);
                  FlagA := a28[3];
                  FlagP := parity(a27);
                  FlagCY := M[2067][0];
                  jump (0010);
                }
              } else {
                M[2081] := 01;
                #0221
                #0224
                #0227
                #0229
                let:16 a144 = (-1 + a131) in
                M[a144] := 04;
                let:16 a145 = (-1 + a144) in
                M[a145] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a27[7]),6,is_zero(a27)),4,a28[3]),2,parity(a27)),0,M[2067][0]);
                #022A
                let:16 a146 = (-1 + a145) in
                M[a146] := 16;
                let:16 a147 = (-1 + a146) in
                M[a147] := 02;
                #022B
                #022E
                let:8 a148 = (M[2081] & M[2081]) in
                let:8 a149 = (M[2081] | M[2081]) in
                #022F
                if (!is_zero(a148)) {
                  #0242
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a150 = (-1 + a147) in
                      M[a150] := 02;
                      let:16 a151 = (-1 + a150) in
                      M[a151] := 42;
                      A := a148;
                      B := 16;
                      C := 02;
                      D := 22;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a151[15:8];
                      SPL := a151[7:0];
                      FlagS := a148[7];
                      FlagZ := is_zero(a148);
                      FlagA := a149[3];
                      FlagP := parity(a148);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a152 = (-1 + a147) in
                      M[a152] := 02;
                      let:16 a153 = (-1 + a152) in
                      M[a153] := 42;
                      A := a148;
                      B := 16;
                      C := 02;
                      D := 22;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a153[15:8];
                      SPL := a153[7:0];
                      FlagS := a148[7];
                      FlagZ := is_zero(a148);
                      FlagA := a149[3];
                      FlagP := parity(a148);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:16 a154 = (-1 + a147) in
                    M[a154] := 02;
                    let:16 a155 = (-1 + a154) in
                    M[a155] := 45;
                    #return-to: 0245
                    #147C
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a156 = (-1 + a155) in
                        M[a156] := 14;
                        let:16 a157 = (-1 + a156) in
                        M[a157] := 7C;
                        A := a148;
                        B := 16;
                        C := 02;
                        D := 22;
                        E := 42;
                        H := 28;
                        L := 06;
                        SPH := a157[15:8];
                        SPL := a157[7:0];
                        FlagS := a148[7];
                        FlagZ := is_zero(a148);
                        FlagA := a149[3];
                        FlagP := parity(a148);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a158 = (-1 + a155) in
                        M[a158] := 14;
                        let:16 a159 = (-1 + a158) in
                        M[a159] := 7C;
                        A := a148;
                        B := 16;
                        C := 02;
                        D := 22;
                        E := 42;
                        H := 28;
                        L := 06;
                        SPH := a159[15:8];
                        SPL := a159[7:0];
                        FlagS := a148[7];
                        FlagZ := is_zero(a148);
                        FlagA := a149[3];
                        FlagP := parity(a148);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      let:16 a160 = (-1 + a155) in
                      M[a160] := 16;
                      let:16 a161 = (-1 + a160) in
                      M[a161] := 02;
                      #147D
                      let:16 a162 = (-1 + a161) in
                      M[a162] := 28;
                      let:16 a163 = (-1 + a162) in
                      M[a163] := 06;
                      #147E
                      #147F
                      M[2242] := M[2806];
                      #1480
                      #1481
                      #1482
                      let:16 a164 = addWithCarry(!true,02,~00) in
                      let:8 a165 = (02 & 0F) in
                      let:8 a166 = (~00 & 0F) in
                      let:16 a167 = addWithCarry(!true,a165,a166) in
                      #1483
                      if (!is_zero(a164[7:0])) {
                        A := M[2806];
                        B := 16;
                        C := a164[7:0];
                        D := 22;
                        E := 43;
                        H := 28;
                        L := 07;
                        SPH := a163[15:8];
                        SPL := a163[7:0];
                        FlagS := a164[7:0][7];
                        FlagZ := is_zero(a164[7:0]);
                        FlagA := a167[7:0][4];
                        FlagP := parity(a164[7:0]);
                        FlagCY := false;
                        jump (147E);
                      } else {
                        #1486
                        let:16 a168 = (1 + a163) in
                        let:16 a169 = (1 + a168) in
                        #1487
                        #148A
                        let:17 a170 = add17(0020,(M[a168],M[a163])) in
                        #148B
                        let:16 a171 = (1 + a169) in
                        let:16 a172 = (1 + a171) in
                        #148C
                        let:16 a173 = addWithCarry(!true,M[a171],~00) in
                        let:8 a174 = (M[a171] & 0F) in
                        let:8 a175 = (~00 & 0F) in
                        let:16 a176 = addWithCarry(!true,a174,a175) in
                        #148D
                        if (!is_zero(a173[7:0])) {
                          A := M[2806];
                          B := a173[7:0];
                          C := M[a169];
                          D := 22;
                          E := 43;
                          H := a170[15:0][15:8];
                          L := a170[15:0][7:0];
                          SPH := a172[15:8];
                          SPL := a172[7:0];
                          FlagS := a173[7:0][7];
                          FlagZ := is_zero(a173[7:0]);
                          FlagA := a176[7:0][4];
                          FlagP := parity(a173[7:0]);
                          FlagCY := a170[16];
                          jump (147C);
                        } else {
                          #1490
                          let:16 a177 = (1 + a172) in
                          let:16 a178 = (1 + a177) in
                          A := M[2806];
                          B := a173[7:0];
                          C := M[a169];
                          D := 22;
                          E := 43;
                          H := a170[15:0][15:8];
                          L := a170[15:0][7:0];
                          SPH := a178[15:8];
                          SPL := a178[7:0];
                          FlagS := a173[7:0][7];
                          FlagZ := is_zero(a173[7:0]);
                          FlagA := a176[7:0][4];
                          FlagP := parity(a173[7:0]);
                          FlagCY := a170[16];
                          jump ((M[a177],M[a172]));
                        }
                      }
                    }
                  }
                } else {
                  #0232
                  let:16 a179 = (-1 + a147) in
                  M[a179] := 02;
                  let:16 a180 = (-1 + a179) in
                  M[a180] := 35;
                  #return-to: 0235
                  #1A69
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a181 = (-1 + a180) in
                      M[a181] := 1A;
                      let:16 a182 = (-1 + a181) in
                      M[a182] := 69;
                      A := a148;
                      B := 16;
                      C := 02;
                      D := 22;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a182[15:8];
                      SPL := a182[7:0];
                      FlagS := a148[7];
                      FlagZ := is_zero(a148);
                      FlagA := a149[3];
                      FlagP := parity(a148);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a183 = (-1 + a180) in
                      M[a183] := 1A;
                      let:16 a184 = (-1 + a183) in
                      M[a184] := 69;
                      A := a148;
                      B := 16;
                      C := 02;
                      D := 22;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a184[15:8];
                      SPL := a184[7:0];
                      FlagS := a148[7];
                      FlagZ := is_zero(a148);
                      FlagA := a149[3];
                      FlagP := parity(a148);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:16 a185 = (-1 + a180) in
                    M[a185] := 16;
                    let:16 a186 = (-1 + a185) in
                    M[a186] := 02;
                    #1A6A
                    let:16 a187 = (-1 + a186) in
                    M[a187] := 28;
                    let:16 a188 = (-1 + a187) in
                    M[a188] := 06;
                    #1A6B
                    #1A6C
                    let:8 a189 = (M[2806] | M[2242]) in
                    #1A6D
                    M[2806] := a189;
                    #1A6E
                    #1A6F
                    #1A70
                    let:16 a190 = addWithCarry(!true,02,~00) in
                    let:8 a191 = (02 & 0F) in
                    let:8 a192 = (~00 & 0F) in
                    let:16 a193 = addWithCarry(!true,a191,a192) in
                    #1A71
                    if (!is_zero(a190[7:0])) {
                      A := a189;
                      B := 16;
                      C := a190[7:0];
                      D := 22;
                      E := 43;
                      H := 28;
                      L := 07;
                      SPH := a188[15:8];
                      SPL := a188[7:0];
                      FlagS := a190[7:0][7];
                      FlagZ := is_zero(a190[7:0]);
                      FlagA := a193[7:0][4];
                      FlagP := parity(a190[7:0]);
                      FlagCY := false;
                      jump (1A6B);
                    } else {
                      #1A74
                      let:16 a194 = (1 + a188) in
                      let:16 a195 = (1 + a194) in
                      #1A75
                      #1A78
                      let:17 a196 = add17(0020,(M[a194],M[a188])) in
                      #1A79
                      let:16 a197 = (1 + a195) in
                      let:16 a198 = (1 + a197) in
                      #1A7A
                      let:16 a199 = addWithCarry(!true,M[a197],~00) in
                      let:8 a200 = (M[a197] & 0F) in
                      let:8 a201 = (~00 & 0F) in
                      let:16 a202 = addWithCarry(!true,a200,a201) in
                      #1A7B
                      if (!is_zero(a199[7:0])) {
                        A := a189;
                        B := a199[7:0];
                        C := M[a195];
                        D := 22;
                        E := 43;
                        H := a196[15:0][15:8];
                        L := a196[15:0][7:0];
                        SPH := a198[15:8];
                        SPL := a198[7:0];
                        FlagS := a199[7:0][7];
                        FlagZ := is_zero(a199[7:0]);
                        FlagA := a202[7:0][4];
                        FlagP := parity(a199[7:0]);
                        FlagCY := a196[16];
                        jump (1A69);
                      } else {
                        #1A7E
                        let:16 a203 = (1 + a198) in
                        let:16 a204 = (1 + a203) in
                        A := a189;
                        B := a199[7:0];
                        C := M[a195];
                        D := 22;
                        E := 43;
                        H := a196[15:0][15:8];
                        L := a196[15:0][7:0];
                        SPH := a204[15:8];
                        SPL := a204[7:0];
                        FlagS := a199[7:0][7];
                        FlagZ := is_zero(a199[7:0]);
                        FlagA := a202[7:0][4];
                        FlagP := parity(a199[7:0]);
                        FlagCY := a196[16];
                        jump ((M[a203],M[a198]));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

02F8:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 02;
    let:16 a2 = (-1 + a1) in
    M[a2] := FB;
    #return-to: 02FB
    #0878
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 08;
        let:16 a4 = (-1 + a3) in
        M[a4] := 78;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 08;
        let:16 a6 = (-1 + a5) in
        M[a6] := 78;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #087B
      #087C
      #087F
      #0880
      #0886
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 08;
          let:16 a8 = (-1 + a7) in
          M[a8] := 86;
          A := M[2008];
          B := M[2008];
          D := M[200A];
          E := M[2009];
          H := D;
          L := E;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 08;
          let:16 a10 = (-1 + a9) in
          M[a10] := 86;
          A := M[2008];
          B := M[2008];
          D := M[200A];
          E := M[2009];
          H := D;
          L := E;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #0889
        #088A
        #088C
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := M[2067];
        B := M[2008];
        D := M[200A];
        E := M[2009];
        H := M[2067];
        L := FC;
        SPH := a12[15:8];
        SPL := a12[7:0];
        jump ((M[a11],M[a2]));
      }
    }

02FB:

    M[(H,L)] := E;
    #02FC
    let:16 a1 = (1 + (H,L)) in
    #02FD
    M[a1] := D;
    #02FE
    let:16 a2 = (-1 + a1) in
    #02FF
    let:16 a3 = (-1 + a2) in
    #0300
    M[a3] := B;
    #0301
    #0302
    let:16 a4 = (-1 + (SPH,SPL)) in
    M[a4] := 03;
    let:16 a5 = (-1 + a4) in
    M[a5] := 05;
    #return-to: 0305
    #01E4
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a6 = (-1 + a5) in
        M[a6] := 01;
        let:16 a7 = (-1 + a6) in
        M[a7] := E4;
        H := a3[15:8];
        L := a3[7:0];
        SPH := a7[15:8];
        SPL := a7[7:0];
        jump (0008);
      } else {
        let:16 a8 = (-1 + a5) in
        M[a8] := 01;
        let:16 a9 = (-1 + a8) in
        M[a9] := E4;
        H := a3[15:8];
        L := a3[7:0];
        SPH := a9[15:8];
        SPL := a9[7:0];
        jump (0010);
      }
    } else {
      #01E6
      #01E9
      #01EC
      #1A32
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a10 = (-1 + a5) in
          M[a10] := 1A;
          let:16 a11 = (-1 + a10) in
          M[a11] := 32;
          B := C0;
          D := 1B;
          E := 00;
          H := 20;
          L := 00;
          SPH := a11[15:8];
          SPL := a11[7:0];
          jump (0008);
        } else {
          let:16 a12 = (-1 + a5) in
          M[a12] := 1A;
          let:16 a13 = (-1 + a12) in
          M[a13] := 32;
          B := C0;
          D := 1B;
          E := 00;
          H := 20;
          L := 00;
          SPH := a13[15:8];
          SPL := a13[7:0];
          jump (0010);
        }
      } else {
        #1A33
        M[2000] := 01;
        #1A34
        #1A35
        #1A36
        let:16 a14 = addWithCarry(!true,C0,~00) in
        let:8 a15 = (C0 & 0F) in
        let:8 a16 = (~00 & 0F) in
        let:16 a17 = addWithCarry(!true,a15,a16) in
        #1A37
        if (!is_zero(a14[7:0])) {
          A := 01;
          B := a14[7:0];
          D := 1B;
          E := 01;
          H := 20;
          L := 01;
          SPH := a5[15:8];
          SPL := a5[7:0];
          FlagS := a14[7:0][7];
          FlagZ := is_zero(a14[7:0]);
          FlagA := a17[7:0][4];
          FlagP := parity(a14[7:0]);
          jump (1A32);
        } else {
          #1A3A
          let:16 a18 = (1 + a5) in
          let:16 a19 = (1 + a18) in
          A := 01;
          B := a14[7:0];
          D := 1B;
          E := 01;
          H := 20;
          L := 01;
          SPH := a19[15:8];
          SPL := a19[7:0];
          FlagS := a14[7:0][7];
          FlagZ := is_zero(a14[7:0]);
          FlagA := a17[7:0][4];
          FlagP := parity(a14[7:0]);
          jump ((M[a18],M[a5]));
        }
      }
    }

0305:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #0306
    #0307
    #0309
    #030B
    if (!M[a1][0]) {
      #0312
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + a2) in
          M[a3] := 03;
          let:16 a4 = (-1 + a3) in
          M[a4] := 12;
          A := 21;
          B := 00;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := M[(SPH,SPL)][7];
          FlagZ := M[(SPH,SPL)][6];
          FlagA := M[(SPH,SPL)][4];
          FlagP := M[(SPH,SPL)][2];
          FlagCY := M[a1][0];
          jump (0008);
        } else {
          let:16 a5 = (-1 + a2) in
          M[a5] := 03;
          let:16 a6 = (-1 + a5) in
          M[a6] := 12;
          A := 21;
          B := 00;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := M[(SPH,SPL)][7];
          FlagZ := M[(SPH,SPL)][6];
          FlagA := M[(SPH,SPL)][4];
          FlagP := M[(SPH,SPL)][2];
          FlagCY := M[a1][0];
          jump (0010);
        }
      } else {
        M[2067] := 21;
        #0315
        let:16 a7 = (-1 + a2) in
        M[a7] := 03;
        let:16 a8 = (-1 + a7) in
        M[a8] := 18;
        #return-to: 0318
        #0AB6
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a8) in
            M[a9] := 0A;
            let:16 a10 = (-1 + a9) in
            M[a10] := B6;
            A := 21;
            B := 00;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := M[(SPH,SPL)][7];
            FlagZ := M[(SPH,SPL)][6];
            FlagA := M[(SPH,SPL)][4];
            FlagP := M[(SPH,SPL)][2];
            FlagCY := M[a1][0];
            jump (0008);
          } else {
            let:16 a11 = (-1 + a8) in
            M[a11] := 0A;
            let:16 a12 = (-1 + a11) in
            M[a12] := B6;
            A := 21;
            B := 00;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := M[(SPH,SPL)][7];
            FlagZ := M[(SPH,SPL)][6];
            FlagA := M[(SPH,SPL)][4];
            FlagP := M[(SPH,SPL)][2];
            FlagCY := M[a1][0];
            jump (0010);
          }
        } else {
          #0AB8
          #0AD7
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a13 = (-1 + a8) in
              M[a13] := 0A;
              let:16 a14 = (-1 + a13) in
              M[a14] := D7;
              A := 80;
              B := 00;
              SPH := a14[15:8];
              SPL := a14[7:0];
              FlagS := M[(SPH,SPL)][7];
              FlagZ := M[(SPH,SPL)][6];
              FlagA := M[(SPH,SPL)][4];
              FlagP := M[(SPH,SPL)][2];
              FlagCY := M[a1][0];
              jump (0008);
            } else {
              let:16 a15 = (-1 + a8) in
              M[a15] := 0A;
              let:16 a16 = (-1 + a15) in
              M[a16] := D7;
              A := 80;
              B := 00;
              SPH := a16[15:8];
              SPL := a16[7:0];
              FlagS := M[(SPH,SPL)][7];
              FlagZ := M[(SPH,SPL)][6];
              FlagA := M[(SPH,SPL)][4];
              FlagP := M[(SPH,SPL)][2];
              FlagCY := M[a1][0];
              jump (0010);
            }
          } else {
            M[20C0] := 80;
            #0ADA
            #0ADD
            let:8 a17 = (M[20C0] & M[20C0]) in
            let:8 a18 = (M[20C0] | M[20C0]) in
            #0ADE
            if (!is_zero(a17)) {
              A := a17;
              B := 00;
              SPH := a8[15:8];
              SPL := a8[7:0];
              FlagS := a17[7];
              FlagZ := is_zero(a17);
              FlagA := a18[3];
              FlagP := parity(a17);
              FlagCY := false;
              jump (0ADA);
            } else {
              #0AE1
              let:16 a19 = (1 + a8) in
              let:16 a20 = (1 + a19) in
              A := a17;
              B := 00;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a17[7];
              FlagZ := is_zero(a17);
              FlagA := a18[3];
              FlagP := parity(a17);
              FlagCY := false;
              jump ((M[a19],M[a8]));
            }
          }
        }
      }
    } else {
      #030E
      #0310
      #0312
      M[2067] := 22;
      #0315
      let:16 a21 = (-1 + a2) in
      M[a21] := 03;
      let:16 a22 = (-1 + a21) in
      M[a22] := 18;
      #return-to: 0318
      #0AB6
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a23 = (-1 + a22) in
          M[a23] := 0A;
          let:16 a24 = (-1 + a23) in
          M[a24] := B6;
          A := 22;
          B := 20;
          SPH := a24[15:8];
          SPL := a24[7:0];
          FlagS := M[(SPH,SPL)][7];
          FlagZ := M[(SPH,SPL)][6];
          FlagA := M[(SPH,SPL)][4];
          FlagP := M[(SPH,SPL)][2];
          FlagCY := M[a1][0];
          jump (0008);
        } else {
          let:16 a25 = (-1 + a22) in
          M[a25] := 0A;
          let:16 a26 = (-1 + a25) in
          M[a26] := B6;
          A := 22;
          B := 20;
          SPH := a26[15:8];
          SPL := a26[7:0];
          FlagS := M[(SPH,SPL)][7];
          FlagZ := M[(SPH,SPL)][6];
          FlagA := M[(SPH,SPL)][4];
          FlagP := M[(SPH,SPL)][2];
          FlagCY := M[a1][0];
          jump (0010);
        }
      } else {
        #0AB8
        #0AD7
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a27 = (-1 + a22) in
            M[a27] := 0A;
            let:16 a28 = (-1 + a27) in
            M[a28] := D7;
            A := 80;
            B := 20;
            SPH := a28[15:8];
            SPL := a28[7:0];
            FlagS := M[(SPH,SPL)][7];
            FlagZ := M[(SPH,SPL)][6];
            FlagA := M[(SPH,SPL)][4];
            FlagP := M[(SPH,SPL)][2];
            FlagCY := M[a1][0];
            jump (0008);
          } else {
            let:16 a29 = (-1 + a22) in
            M[a29] := 0A;
            let:16 a30 = (-1 + a29) in
            M[a30] := D7;
            A := 80;
            B := 20;
            SPH := a30[15:8];
            SPL := a30[7:0];
            FlagS := M[(SPH,SPL)][7];
            FlagZ := M[(SPH,SPL)][6];
            FlagA := M[(SPH,SPL)][4];
            FlagP := M[(SPH,SPL)][2];
            FlagCY := M[a1][0];
            jump (0010);
          }
        } else {
          M[20C0] := 80;
          #0ADA
          #0ADD
          let:8 a31 = (M[20C0] & M[20C0]) in
          let:8 a32 = (M[20C0] | M[20C0]) in
          #0ADE
          if (!is_zero(a31)) {
            A := a31;
            B := 20;
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a31[7];
            FlagZ := is_zero(a31);
            FlagA := a32[3];
            FlagP := parity(a31);
            FlagCY := false;
            jump (0ADA);
          } else {
            #0AE1
            let:16 a33 = (1 + a22) in
            let:16 a34 = (1 + a33) in
            A := a31;
            B := 20;
            SPH := a34[15:8];
            SPL := a34[7:0];
            FlagS := a31[7];
            FlagZ := is_zero(a31);
            FlagA := a32[3];
            FlagP := parity(a31);
            FlagCY := false;
            jump ((M[a33],M[a22]));
          }
        }
      }
    }

0318:

    let:8 a1 = (A ^ A) in
    #0319
    M[2011] := a1;
    #031C
    #031D
    sound_control(FleetMovement1,B[0]);
    sound_control(FleetMovement2,B[1]);
    sound_control(FleetMovement3,B[2]);
    sound_control(FleetMovement4,B[3]);
    sound_control(UfoHit,B[4]);
    #031F
    let:16 a2 = addWithCarry(true,B,00) in
    let:8 a3 = (B & 0F) in
    let:8 a4 = (00 & 0F) in
    let:16 a5 = addWithCarry(true,a3,a4) in
    #0320
    M[2098] := a2[7:0];
    #0323
    let:16 a6 = (-1 + (SPH,SPL)) in
    M[a6] := 03;
    let:16 a7 = (-1 + a6) in
    M[a7] := 26;
    #return-to: 0326
    #09D6
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a8 = (-1 + a7) in
        M[a8] := 09;
        let:16 a9 = (-1 + a8) in
        M[a9] := D6;
        A := a2[7:0];
        SPH := a9[15:8];
        SPL := a9[7:0];
        FlagS := a2[7:0][7];
        FlagZ := is_zero(a2[7:0]);
        FlagA := a5[7:0][4];
        FlagP := parity(a2[7:0]);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a10 = (-1 + a7) in
        M[a10] := 09;
        let:16 a11 = (-1 + a10) in
        M[a11] := D6;
        A := a2[7:0];
        SPH := a11[15:8];
        SPL := a11[7:0];
        FlagS := a2[7:0][7];
        FlagZ := is_zero(a2[7:0]);
        FlagA := a5[7:0][4];
        FlagP := parity(a2[7:0]);
        FlagCY := false;
        jump (0010);
      }
    } else {
      #09D9
      M[2402] := 00;
      #09DB
      #09DC
      #09DD
      let:8 a12 = (1F & 03) in
      let:8 a13 = (1F | 03) in
      #09DF
      let:16 a14 = addWithCarry(!false,a12,~1C) in
      let:8 a15 = (a12 & 0F) in
      let:8 a16 = (~1C & 0F) in
      let:16 a17 = addWithCarry(!false,a15,a16) in
      #09E1
      if (!a14[15:8][0]) {
        #09E8
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a18 = (-1 + a7) in
            M[a18] := 09;
            let:16 a19 = (-1 + a18) in
            M[a19] := E8;
            A := a12;
            H := 24;
            L := 03;
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a14[7:0][7];
            FlagZ := is_zero(a14[7:0]);
            FlagA := a17[7:0][4];
            FlagP := parity(a14[7:0]);
            FlagCY := !a14[15:8][0];
            jump (0008);
          } else {
            let:16 a20 = (-1 + a7) in
            M[a20] := 09;
            let:16 a21 = (-1 + a20) in
            M[a21] := E8;
            A := a12;
            H := 24;
            L := 03;
            SPH := a21[15:8];
            SPL := a21[7:0];
            FlagS := a14[7:0][7];
            FlagZ := is_zero(a14[7:0]);
            FlagA := a17[7:0][4];
            FlagP := parity(a14[7:0]);
            FlagCY := !a14[15:8][0];
            jump (0010);
          }
        } else {
          #09E9
          let:16 a22 = addWithCarry(!false,24,~40) in
          let:8 a23 = (24 & 0F) in
          let:8 a24 = (~40 & 0F) in
          let:16 a25 = addWithCarry(!false,a23,a24) in
          #09EB
          if (!a22[15:8][0]) {
            A := 24;
            H := 24;
            L := 03;
            SPH := a7[15:8];
            SPL := a7[7:0];
            FlagS := a22[7:0][7];
            FlagZ := is_zero(a22[7:0]);
            FlagA := a25[7:0][4];
            FlagP := parity(a22[7:0]);
            FlagCY := !a22[15:8][0];
            jump (09D9);
          } else {
            #09EE
            let:16 a26 = (1 + a7) in
            let:16 a27 = (1 + a26) in
            A := 24;
            H := 24;
            L := 03;
            SPH := a27[15:8];
            SPL := a27[7:0];
            FlagS := a22[7:0][7];
            FlagZ := is_zero(a22[7:0]);
            FlagA := a25[7:0][4];
            FlagP := parity(a22[7:0]);
            FlagCY := !a22[15:8][0];
            jump ((M[a26],M[a7]));
          }
        }
      } else {
        #09E4
        #09E7
        let:17 a28 = add17(0006,2403) in
        #09E8
        #09E9
        let:16 a29 = addWithCarry(!false,a28[15:0][15:8],~40) in
        let:8 a30 = (a28[15:0][15:8] & 0F) in
        let:8 a31 = (~40 & 0F) in
        let:16 a32 = addWithCarry(!false,a30,a31) in
        #09EB
        if (!a29[15:8][0]) {
          A := a28[15:0][15:8];
          D := 00;
          E := 06;
          H := a28[15:0][15:8];
          L := a28[15:0][7:0];
          SPH := a7[15:8];
          SPL := a7[7:0];
          FlagS := a29[7:0][7];
          FlagZ := is_zero(a29[7:0]);
          FlagA := a32[7:0][4];
          FlagP := parity(a29[7:0]);
          FlagCY := !a29[15:8][0];
          jump (09D9);
        } else {
          #09EE
          let:16 a33 = (1 + a7) in
          let:16 a34 = (1 + a33) in
          A := a28[15:0][15:8];
          D := 00;
          E := 06;
          H := a28[15:0][15:8];
          L := a28[15:0][7:0];
          SPH := a34[15:8];
          SPL := a34[7:0];
          FlagS := a29[7:0][7];
          FlagZ := is_zero(a29[7:0]);
          FlagA := a32[7:0][4];
          FlagP := parity(a29[7:0]);
          FlagCY := !a29[15:8][0];
          jump ((M[a33],M[a7]));
        }
      }
    }

0326:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 03;
    let:16 a2 = (-1 + a1) in
    M[a2] := 29;
    #return-to: 0329
    #1A7F
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 1A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 7F;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 1A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 7F;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 1A;
      let:16 a8 = (-1 + a7) in
      M[a8] := 82;
      #return-to: 1A82
      #092E
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 09;
          let:16 a10 = (-1 + a9) in
          M[a10] := 2E;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 09;
          let:16 a12 = (-1 + a11) in
          M[a12] := 2E;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        let:16 a13 = (-1 + a8) in
        M[a13] := 09;
        let:16 a14 = (-1 + a13) in
        M[a14] := 31;
        #return-to: 0931
        #1611
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 16;
            let:16 a16 = (-1 + a15) in
            M[a16] := 11;
            SPH := a16[15:8];
            SPL := a16[7:0];
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 16;
            let:16 a18 = (-1 + a17) in
            M[a18] := 11;
            SPH := a18[15:8];
            SPL := a18[7:0];
            jump (0010);
          }
        } else {
          #1613
          #1616
          #1617
          let:16 a19 = (1 + a14) in
          let:16 a20 = (1 + a19) in
          A := M[2067];
          H := M[2067];
          L := 00;
          SPH := a20[15:8];
          SPL := a20[7:0];
          jump ((M[a19],M[a14]));
        }
      }
    }

0329:

    jump (07F9);

032F:

    jump (0817);

0335:

    jump (02F8);

0366:

    #0367
    #0368
    if (updateBit((A << 01),0,A[7])[7]) {
      #0381
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a1 = (-1 + (SPH,SPL)) in
          M[a1] := 03;
          let:16 a2 = (-1 + a1) in
          M[a2] := 81;
          A := updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7]);
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagCY := updateBit((A << 01),0,A[7])[7];
          jump (0008);
        } else {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 03;
          let:16 a4 = (-1 + a3) in
          M[a4] := 81;
          A := updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7]);
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagCY := updateBit((A << 01),0,A[7])[7];
          jump (0010);
        }
      } else {
        #0382
        let:16 a5 = addWithCarry(!false,B,~D9) in
        let:8 a6 = (B & 0F) in
        let:8 a7 = (~D9 & 0F) in
        let:16 a8 = addWithCarry(!false,a6,a7) in
        #0384
        if (is_zero(a5[7:0])) {
          #036F
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a9 = (-1 + (SPH,SPL)) in
              M[a9] := 03;
              let:16 a10 = (-1 + a9) in
              M[a10] := 6F;
              A := B;
              SPH := a10[15:8];
              SPL := a10[7:0];
              FlagS := a5[7:0][7];
              FlagZ := is_zero(a5[7:0]);
              FlagA := a8[7:0][4];
              FlagP := parity(a5[7:0]);
              FlagCY := !a5[15:8][0];
              jump (0008);
            } else {
              let:16 a11 = (-1 + (SPH,SPL)) in
              M[a11] := 03;
              let:16 a12 = (-1 + a11) in
              M[a12] := 6F;
              A := B;
              SPH := a12[15:8];
              SPL := a12[7:0];
              FlagS := a5[7:0][7];
              FlagZ := is_zero(a5[7:0]);
              FlagA := a8[7:0][4];
              FlagP := parity(a5[7:0]);
              FlagCY := !a5[15:8][0];
              jump (0010);
            }
          } else {
            #0372
            let:16 a13 = (-1 + (SPH,SPL)) in
            M[a13] := 03;
            let:16 a14 = (-1 + a13) in
            M[a14] := 75;
            #return-to: 0375
            #1A3B
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a15 = (-1 + a14) in
                M[a15] := 1A;
                let:16 a16 = (-1 + a15) in
                M[a16] := 3B;
                A := B;
                H := 20;
                L := 18;
                SPH := a16[15:8];
                SPL := a16[7:0];
                FlagS := a5[7:0][7];
                FlagZ := is_zero(a5[7:0]);
                FlagA := a8[7:0][4];
                FlagP := parity(a5[7:0]);
                FlagCY := !a5[15:8][0];
                jump (0008);
              } else {
                let:16 a17 = (-1 + a14) in
                M[a17] := 1A;
                let:16 a18 = (-1 + a17) in
                M[a18] := 3B;
                A := B;
                H := 20;
                L := 18;
                SPH := a18[15:8];
                SPL := a18[7:0];
                FlagS := a5[7:0][7];
                FlagZ := is_zero(a5[7:0]);
                FlagA := a8[7:0][4];
                FlagP := parity(a5[7:0]);
                FlagCY := !a5[15:8][0];
                jump (0010);
              }
            } else {
              #1A3C
              #1A3D
              #1A3E
              #1A3F
              #1A40
              #1A41
              #1A42
              #1A43
              #1A44
              #1A45
              #1A46
              let:16 a19 = (1 + a14) in
              let:16 a20 = (1 + a19) in
              A := M[201A];
              B := M[201C];
              C := M[201B];
              D := M[2019];
              E := M[2018];
              H := M[201B];
              L := M[201A];
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a5[7:0][7];
              FlagZ := is_zero(a5[7:0]);
              FlagA := a8[7:0][4];
              FlagP := parity(a5[7:0]);
              FlagCY := !a5[15:8][0];
              jump ((M[a19],M[a14]));
            }
          }
        } else {
          #0387
          let:16 a21 = addWithCarry(true,B,00) in
          let:8 a22 = (B & 0F) in
          let:8 a23 = (00 & 0F) in
          let:16 a24 = addWithCarry(true,a22,a23) in
          #0388
          M[201B] := a21[7:0];
          #038B
          #036F
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a25 = (-1 + (SPH,SPL)) in
              M[a25] := 03;
              let:16 a26 = (-1 + a25) in
              M[a26] := 6F;
              A := a21[7:0];
              SPH := a26[15:8];
              SPL := a26[7:0];
              FlagS := a21[7:0][7];
              FlagZ := is_zero(a21[7:0]);
              FlagA := a24[7:0][4];
              FlagP := parity(a21[7:0]);
              FlagCY := !a5[15:8][0];
              jump (0008);
            } else {
              let:16 a27 = (-1 + (SPH,SPL)) in
              M[a27] := 03;
              let:16 a28 = (-1 + a27) in
              M[a28] := 6F;
              A := a21[7:0];
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagS := a21[7:0][7];
              FlagZ := is_zero(a21[7:0]);
              FlagA := a24[7:0][4];
              FlagP := parity(a21[7:0]);
              FlagCY := !a5[15:8][0];
              jump (0010);
            }
          } else {
            #0372
            let:16 a29 = (-1 + (SPH,SPL)) in
            M[a29] := 03;
            let:16 a30 = (-1 + a29) in
            M[a30] := 75;
            #return-to: 0375
            #1A3B
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a31 = (-1 + a30) in
                M[a31] := 1A;
                let:16 a32 = (-1 + a31) in
                M[a32] := 3B;
                A := a21[7:0];
                H := 20;
                L := 18;
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagS := a21[7:0][7];
                FlagZ := is_zero(a21[7:0]);
                FlagA := a24[7:0][4];
                FlagP := parity(a21[7:0]);
                FlagCY := !a5[15:8][0];
                jump (0008);
              } else {
                let:16 a33 = (-1 + a30) in
                M[a33] := 1A;
                let:16 a34 = (-1 + a33) in
                M[a34] := 3B;
                A := a21[7:0];
                H := 20;
                L := 18;
                SPH := a34[15:8];
                SPL := a34[7:0];
                FlagS := a21[7:0][7];
                FlagZ := is_zero(a21[7:0]);
                FlagA := a24[7:0][4];
                FlagP := parity(a21[7:0]);
                FlagCY := !a5[15:8][0];
                jump (0010);
              }
            } else {
              #1A3C
              #1A3D
              #1A3E
              #1A3F
              #1A40
              #1A41
              #1A42
              #1A43
              #1A44
              #1A45
              #1A46
              let:16 a35 = (1 + a30) in
              let:16 a36 = (1 + a35) in
              A := M[201A];
              B := M[201C];
              C := M[201B];
              D := M[2019];
              E := M[2018];
              H := M[201B];
              L := M[201A];
              SPH := a36[15:8];
              SPL := a36[7:0];
              FlagS := a21[7:0][7];
              FlagZ := is_zero(a21[7:0]);
              FlagA := a24[7:0][4];
              FlagP := parity(a21[7:0]);
              FlagCY := !a5[15:8][0];
              jump ((M[a35],M[a30]));
            }
          }
        }
      }
    } else {
      #036B
      #036C
      if (updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7])[7]) {
        #038E
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a37 = (-1 + (SPH,SPL)) in
            M[a37] := 03;
            let:16 a38 = (-1 + a37) in
            M[a38] := 8E;
            A := updateBit((updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7]) << 01),0,updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7])[7]);
            SPH := a38[15:8];
            SPL := a38[7:0];
            FlagCY := updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7])[7];
            jump (0008);
          } else {
            let:16 a39 = (-1 + (SPH,SPL)) in
            M[a39] := 03;
            let:16 a40 = (-1 + a39) in
            M[a40] := 8E;
            A := updateBit((updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7]) << 01),0,updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7])[7]);
            SPH := a40[15:8];
            SPL := a40[7:0];
            FlagCY := updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7])[7];
            jump (0010);
          }
        } else {
          #038F
          let:16 a41 = addWithCarry(!false,B,~30) in
          let:8 a42 = (B & 0F) in
          let:8 a43 = (~30 & 0F) in
          let:16 a44 = addWithCarry(!false,a42,a43) in
          #0391
          if (is_zero(a41[7:0])) {
            #036F
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a45 = (-1 + (SPH,SPL)) in
                M[a45] := 03;
                let:16 a46 = (-1 + a45) in
                M[a46] := 6F;
                A := B;
                SPH := a46[15:8];
                SPL := a46[7:0];
                FlagS := a41[7:0][7];
                FlagZ := is_zero(a41[7:0]);
                FlagA := a44[7:0][4];
                FlagP := parity(a41[7:0]);
                FlagCY := !a41[15:8][0];
                jump (0008);
              } else {
                let:16 a47 = (-1 + (SPH,SPL)) in
                M[a47] := 03;
                let:16 a48 = (-1 + a47) in
                M[a48] := 6F;
                A := B;
                SPH := a48[15:8];
                SPL := a48[7:0];
                FlagS := a41[7:0][7];
                FlagZ := is_zero(a41[7:0]);
                FlagA := a44[7:0][4];
                FlagP := parity(a41[7:0]);
                FlagCY := !a41[15:8][0];
                jump (0010);
              }
            } else {
              #0372
              let:16 a49 = (-1 + (SPH,SPL)) in
              M[a49] := 03;
              let:16 a50 = (-1 + a49) in
              M[a50] := 75;
              #return-to: 0375
              #1A3B
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a51 = (-1 + a50) in
                  M[a51] := 1A;
                  let:16 a52 = (-1 + a51) in
                  M[a52] := 3B;
                  A := B;
                  H := 20;
                  L := 18;
                  SPH := a52[15:8];
                  SPL := a52[7:0];
                  FlagS := a41[7:0][7];
                  FlagZ := is_zero(a41[7:0]);
                  FlagA := a44[7:0][4];
                  FlagP := parity(a41[7:0]);
                  FlagCY := !a41[15:8][0];
                  jump (0008);
                } else {
                  let:16 a53 = (-1 + a50) in
                  M[a53] := 1A;
                  let:16 a54 = (-1 + a53) in
                  M[a54] := 3B;
                  A := B;
                  H := 20;
                  L := 18;
                  SPH := a54[15:8];
                  SPL := a54[7:0];
                  FlagS := a41[7:0][7];
                  FlagZ := is_zero(a41[7:0]);
                  FlagA := a44[7:0][4];
                  FlagP := parity(a41[7:0]);
                  FlagCY := !a41[15:8][0];
                  jump (0010);
                }
              } else {
                #1A3C
                #1A3D
                #1A3E
                #1A3F
                #1A40
                #1A41
                #1A42
                #1A43
                #1A44
                #1A45
                #1A46
                let:16 a55 = (1 + a50) in
                let:16 a56 = (1 + a55) in
                A := M[201A];
                B := M[201C];
                C := M[201B];
                D := M[2019];
                E := M[2018];
                H := M[201B];
                L := M[201A];
                SPH := a56[15:8];
                SPL := a56[7:0];
                FlagS := a41[7:0][7];
                FlagZ := is_zero(a41[7:0]);
                FlagA := a44[7:0][4];
                FlagP := parity(a41[7:0]);
                FlagCY := !a41[15:8][0];
                jump ((M[a55],M[a50]));
              }
            }
          } else {
            #0394
            let:16 a57 = addWithCarry(!true,B,~00) in
            let:8 a58 = (B & 0F) in
            let:8 a59 = (~00 & 0F) in
            let:16 a60 = addWithCarry(!true,a58,a59) in
            #0395
            M[201B] := a57[7:0];
            #0398
            #036F
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a61 = (-1 + (SPH,SPL)) in
                M[a61] := 03;
                let:16 a62 = (-1 + a61) in
                M[a62] := 6F;
                A := a57[7:0];
                SPH := a62[15:8];
                SPL := a62[7:0];
                FlagS := a57[7:0][7];
                FlagZ := is_zero(a57[7:0]);
                FlagA := a60[7:0][4];
                FlagP := parity(a57[7:0]);
                FlagCY := !a41[15:8][0];
                jump (0008);
              } else {
                let:16 a63 = (-1 + (SPH,SPL)) in
                M[a63] := 03;
                let:16 a64 = (-1 + a63) in
                M[a64] := 6F;
                A := a57[7:0];
                SPH := a64[15:8];
                SPL := a64[7:0];
                FlagS := a57[7:0][7];
                FlagZ := is_zero(a57[7:0]);
                FlagA := a60[7:0][4];
                FlagP := parity(a57[7:0]);
                FlagCY := !a41[15:8][0];
                jump (0010);
              }
            } else {
              #0372
              let:16 a65 = (-1 + (SPH,SPL)) in
              M[a65] := 03;
              let:16 a66 = (-1 + a65) in
              M[a66] := 75;
              #return-to: 0375
              #1A3B
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a67 = (-1 + a66) in
                  M[a67] := 1A;
                  let:16 a68 = (-1 + a67) in
                  M[a68] := 3B;
                  A := a57[7:0];
                  H := 20;
                  L := 18;
                  SPH := a68[15:8];
                  SPL := a68[7:0];
                  FlagS := a57[7:0][7];
                  FlagZ := is_zero(a57[7:0]);
                  FlagA := a60[7:0][4];
                  FlagP := parity(a57[7:0]);
                  FlagCY := !a41[15:8][0];
                  jump (0008);
                } else {
                  let:16 a69 = (-1 + a66) in
                  M[a69] := 1A;
                  let:16 a70 = (-1 + a69) in
                  M[a70] := 3B;
                  A := a57[7:0];
                  H := 20;
                  L := 18;
                  SPH := a70[15:8];
                  SPL := a70[7:0];
                  FlagS := a57[7:0][7];
                  FlagZ := is_zero(a57[7:0]);
                  FlagA := a60[7:0][4];
                  FlagP := parity(a57[7:0]);
                  FlagCY := !a41[15:8][0];
                  jump (0010);
                }
              } else {
                #1A3C
                #1A3D
                #1A3E
                #1A3F
                #1A40
                #1A41
                #1A42
                #1A43
                #1A44
                #1A45
                #1A46
                let:16 a71 = (1 + a66) in
                let:16 a72 = (1 + a71) in
                A := M[201A];
                B := M[201C];
                C := M[201B];
                D := M[2019];
                E := M[2018];
                H := M[201B];
                L := M[201A];
                SPH := a72[15:8];
                SPL := a72[7:0];
                FlagS := a57[7:0][7];
                FlagZ := is_zero(a57[7:0]);
                FlagA := a60[7:0][4];
                FlagP := parity(a57[7:0]);
                FlagCY := !a41[15:8][0];
                jump ((M[a71],M[a66]));
              }
            }
          }
        }
      } else {
        #036F
        #0372
        let:16 a73 = (-1 + (SPH,SPL)) in
        M[a73] := 03;
        let:16 a74 = (-1 + a73) in
        M[a74] := 75;
        #return-to: 0375
        #1A3B
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a75 = (-1 + a74) in
            M[a75] := 1A;
            let:16 a76 = (-1 + a75) in
            M[a76] := 3B;
            A := updateBit((updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7]) << 01),0,updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7])[7]);
            H := 20;
            L := 18;
            SPH := a76[15:8];
            SPL := a76[7:0];
            FlagCY := updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7])[7];
            jump (0008);
          } else {
            let:16 a77 = (-1 + a74) in
            M[a77] := 1A;
            let:16 a78 = (-1 + a77) in
            M[a78] := 3B;
            A := updateBit((updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7]) << 01),0,updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7])[7]);
            H := 20;
            L := 18;
            SPH := a78[15:8];
            SPL := a78[7:0];
            FlagCY := updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7])[7];
            jump (0010);
          }
        } else {
          #1A3C
          #1A3D
          #1A3E
          #1A3F
          #1A40
          #1A41
          #1A42
          #1A43
          #1A44
          #1A45
          #1A46
          let:16 a79 = (1 + a74) in
          let:16 a80 = (1 + a79) in
          A := M[201A];
          B := M[201C];
          C := M[201B];
          D := M[2019];
          E := M[2018];
          H := M[201B];
          L := M[201A];
          SPH := a80[15:8];
          SPL := a80[7:0];
          FlagCY := updateBit((updateBit((A << 01),0,A[7]) << 01),0,updateBit((A << 01),0,A[7])[7])[7];
          jump ((M[a79],M[a74]));
        }
      }
    }

0375:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 03;
    let:16 a2 = (-1 + a1) in
    M[a2] := 78;
    #return-to: 0378
    #1A47
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 1A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 47;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 1A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 47;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := B;
      let:16 a8 = (-1 + a7) in
      M[a8] := C;
      #1A48
      #1A4A
      #1A4B
      #1A4C
      #1A4D
      #1A4E
      #1A4F
      #1A50
      let:16 a9 = addWithCarry(!true,03,~00) in
      let:8 a10 = (03 & 0F) in
      let:8 a11 = (~00 & 0F) in
      let:16 a12 = addWithCarry(!true,a10,a11) in
      #1A51
      if (!is_zero(a9[7:0])) {
        A := updateBit((L >> 01),7,H[0]);
        B := a9[7:0];
        H := updateBit((H >> 01),7,FlagCY);
        L := updateBit((L >> 01),7,H[0]);
        SPH := a8[15:8];
        SPL := a8[7:0];
        FlagS := a9[7:0][7];
        FlagZ := is_zero(a9[7:0]);
        FlagA := a12[7:0][4];
        FlagP := parity(a9[7:0]);
        FlagCY := L[0];
        jump (1A4A);
      } else {
        #1A54
        #1A55
        let:8 a13 = (3F & updateBit((H >> 01),7,FlagCY)) in
        let:8 a14 = (3F | updateBit((H >> 01),7,FlagCY)) in
        #1A57
        let:8 a15 = (20 | a13) in
        #1A59
        #1A5A
        let:16 a16 = (1 + a8) in
        let:16 a17 = (1 + a16) in
        #1A5B
        let:16 a18 = (1 + a17) in
        let:16 a19 = (1 + a18) in
        A := a15;
        B := M[a16];
        C := M[a8];
        H := a15;
        L := updateBit((L >> 01),7,H[0]);
        SPH := a19[15:8];
        SPL := a19[7:0];
        FlagS := a15[7];
        FlagZ := is_zero(a15);
        FlagA := false;
        FlagP := parity(a15);
        FlagCY := false;
        jump ((M[a18],M[a17]));
      }
    }

0378:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 03;
    let:16 a2 = (-1 + a1) in
    M[a2] := 7B;
    #return-to: 037B
    #1439
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 14;
        let:16 a4 = (-1 + a3) in
        M[a4] := 39;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 14;
        let:16 a6 = (-1 + a5) in
        M[a6] := 39;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := B;
      let:16 a8 = (-1 + a7) in
      M[a8] := C;
      #143A
      #143B
      M[(H,L)] := M[(D,E)];
      #143C
      let:16 a9 = (1 + (D,E)) in
      #143D
      #1440
      let:17 a10 = add17(0020,(H,L)) in
      #1441
      let:16 a11 = (1 + a8) in
      let:16 a12 = (1 + a11) in
      #1442
      let:16 a13 = addWithCarry(!true,M[a11],~00) in
      let:8 a14 = (M[a11] & 0F) in
      let:8 a15 = (~00 & 0F) in
      let:16 a16 = addWithCarry(!true,a14,a15) in
      #1443
      if (!is_zero(a13[7:0])) {
        A := M[(D,E)];
        B := a13[7:0];
        C := M[a8];
        D := a9[15:8];
        E := a9[7:0];
        H := a10[15:0][15:8];
        L := a10[15:0][7:0];
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a13[7:0][7];
        FlagZ := is_zero(a13[7:0]);
        FlagA := a16[7:0][4];
        FlagP := parity(a13[7:0]);
        FlagCY := a10[16];
        jump (1439);
      } else {
        #1446
        let:16 a17 = (1 + a12) in
        let:16 a18 = (1 + a17) in
        A := M[(D,E)];
        B := a13[7:0];
        C := M[a8];
        D := a9[15:8];
        E := a9[7:0];
        H := a10[15:0][15:8];
        L := a10[15:0][7:0];
        SPH := a18[15:8];
        SPL := a18[7:0];
        FlagS := a13[7:0][7];
        FlagZ := is_zero(a13[7:0]);
        FlagA := a16[7:0][4];
        FlagP := parity(a13[7:0]);
        FlagCY := a10[16];
        jump ((M[a17],M[a12]));
      }
    }

037B:

    #037D
    M[2012] := 00;
    #0380
    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    A := 00;
    SPH := a2[15:8];
    SPL := a2[7:0];
    jump ((M[a1],M[(SPH,SPL)]));

03BB:

    #03BE
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 03;
    let:16 a2 = (-1 + a1) in
    M[a2] := C1;
    #return-to: 03C1
    #1A06
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 1A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 06;
        D := 20;
        E := 2A;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 1A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 06;
        D := 20;
        E := 2A;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1A09
      #1A0A
      #1A0B
      let:8 a7 = (80 & M[202A]) in
      let:8 a8 = (80 | M[202A]) in
      #1A0D
      let:8 a9 = (M[2072] ^ a7) in
      #1A0E
      if (!is_zero(a9)) {
        let:16 a10 = (1 + a2) in
        let:16 a11 = (1 + a10) in
        A := a9;
        B := M[2072];
        D := 20;
        E := 2A;
        H := 20;
        L := 72;
        SPH := a11[15:8];
        SPL := a11[7:0];
        FlagS := a9[7];
        FlagZ := is_zero(a9);
        FlagA := false;
        FlagP := parity(a9);
        FlagCY := false;
        jump ((M[a10],M[a2]));
      } else {
        #1A0F
        #1A10
        let:16 a12 = (1 + a2) in
        let:16 a13 = (1 + a12) in
        A := a9;
        B := M[2072];
        D := 20;
        E := 2A;
        H := 20;
        L := 72;
        SPH := a13[15:8];
        SPL := a13[7:0];
        FlagS := a9[7];
        FlagZ := is_zero(a9);
        FlagA := false;
        FlagP := parity(a9);
        FlagCY := true;
        jump ((M[a12],M[a2]));
      }
    }

03C1:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #03C2
    if (!FlagCY) {
      let:16 a3 = (1 + a2) in
      let:16 a4 = (1 + a3) in
      H := M[a1];
      L := M[(SPH,SPL)];
      SPH := a4[15:8];
      SPL := a4[7:0];
      jump ((M[a3],M[a2]));
    } else {
      #03C3
      let:16 a5 = (1 + (M[a1],M[(SPH,SPL)])) in
      #03C4
      #03C5
      let:8 a6 = (M[a5] & M[a5]) in
      let:8 a7 = (M[a5] | M[a5]) in
      #03C6
      if (is_zero(a6)) {
        let:16 a8 = (1 + a2) in
        let:16 a9 = (1 + a8) in
        A := a6;
        H := a5[15:8];
        L := a5[7:0];
        SPH := a9[15:8];
        SPL := a9[7:0];
        FlagS := a6[7];
        FlagZ := is_zero(a6);
        FlagA := a7[3];
        FlagP := parity(a6);
        FlagCY := false;
        jump ((M[a8],M[a2]));
      } else {
        #03C7
        let:16 a10 = addWithCarry(!false,a6,~01) in
        let:8 a11 = (a6 & 0F) in
        let:8 a12 = (~01 & 0F) in
        let:16 a13 = addWithCarry(!false,a11,a12) in
        #03C9
        if (is_zero(a10[7:0])) {
          #03FA
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a14 = (-1 + a2) in
              M[a14] := 03;
              let:16 a15 = (-1 + a14) in
              M[a15] := FA;
              A := a6;
              H := a5[15:8];
              L := a5[7:0];
              SPH := a15[15:8];
              SPL := a15[7:0];
              FlagS := a10[7:0][7];
              FlagZ := is_zero(a10[7:0]);
              FlagA := a13[7:0][4];
              FlagP := parity(a10[7:0]);
              FlagCY := !a10[15:8][0];
              jump (0008);
            } else {
              let:16 a16 = (-1 + a2) in
              M[a16] := 03;
              let:16 a17 = (-1 + a16) in
              M[a17] := FA;
              A := a6;
              H := a5[15:8];
              L := a5[7:0];
              SPH := a17[15:8];
              SPL := a17[7:0];
              FlagS := a10[7:0][7];
              FlagZ := is_zero(a10[7:0]);
              FlagA := a13[7:0][4];
              FlagP := parity(a10[7:0]);
              FlagCY := !a10[15:8][0];
              jump (0010);
            }
          } else {
            let:16 a18 = addWithCarry(true,a6,00) in
            let:8 a19 = (a6 & 0F) in
            let:8 a20 = (00 & 0F) in
            let:16 a21 = addWithCarry(true,a19,a20) in
            #03FB
            M[a5] := a18[7:0];
            #03FC
            #03FF
            let:16 a22 = addWithCarry(false,08,M[201B]) in
            let:8 a23 = (08 & 0F) in
            let:8 a24 = (M[201B] & 0F) in
            let:16 a25 = addWithCarry(false,a23,a24) in
            #0401
            M[202A] := a22[7:0];
            #0404
            let:16 a26 = (-1 + a2) in
            M[a26] := 04;
            let:16 a27 = (-1 + a26) in
            M[a27] := 07;
            #return-to: 0407
            #0430
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a28 = (-1 + a27) in
                M[a28] := 04;
                let:16 a29 = (-1 + a28) in
                M[a29] := 30;
                A := a22[7:0];
                H := a5[15:8];
                L := a5[7:0];
                SPH := a29[15:8];
                SPL := a29[7:0];
                FlagS := a22[7:0][7];
                FlagZ := is_zero(a22[7:0]);
                FlagA := a25[7:0][4];
                FlagP := parity(a22[7:0]);
                FlagCY := a22[15:8][0];
                jump (0008);
              } else {
                let:16 a30 = (-1 + a27) in
                M[a30] := 04;
                let:16 a31 = (-1 + a30) in
                M[a31] := 30;
                A := a22[7:0];
                H := a5[15:8];
                L := a5[7:0];
                SPH := a31[15:8];
                SPL := a31[7:0];
                FlagS := a22[7:0][7];
                FlagZ := is_zero(a22[7:0]);
                FlagA := a25[7:0][4];
                FlagP := parity(a22[7:0]);
                FlagCY := a22[15:8][0];
                jump (0010);
              }
            } else {
              #0433
              #1A3B
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a32 = (-1 + a27) in
                  M[a32] := 1A;
                  let:16 a33 = (-1 + a32) in
                  M[a33] := 3B;
                  A := a22[7:0];
                  H := 20;
                  L := 27;
                  SPH := a33[15:8];
                  SPL := a33[7:0];
                  FlagS := a22[7:0][7];
                  FlagZ := is_zero(a22[7:0]);
                  FlagA := a25[7:0][4];
                  FlagP := parity(a22[7:0]);
                  FlagCY := a22[15:8][0];
                  jump (0008);
                } else {
                  let:16 a34 = (-1 + a27) in
                  M[a34] := 1A;
                  let:16 a35 = (-1 + a34) in
                  M[a35] := 3B;
                  A := a22[7:0];
                  H := 20;
                  L := 27;
                  SPH := a35[15:8];
                  SPL := a35[7:0];
                  FlagS := a22[7:0][7];
                  FlagZ := is_zero(a22[7:0]);
                  FlagA := a25[7:0][4];
                  FlagP := parity(a22[7:0]);
                  FlagCY := a22[15:8][0];
                  jump (0010);
                }
              } else {
                #1A3C
                #1A3D
                #1A3E
                #1A3F
                #1A40
                #1A41
                #1A42
                #1A43
                #1A44
                #1A45
                #1A46
                let:16 a36 = (1 + a27) in
                let:16 a37 = (1 + a36) in
                A := M[2029];
                B := M[202B];
                C := M[202A];
                D := M[2028];
                E := M[2027];
                H := M[202A];
                L := M[2029];
                SPH := a37[15:8];
                SPL := a37[7:0];
                FlagS := a22[7:0][7];
                FlagZ := is_zero(a22[7:0]);
                FlagA := a25[7:0][4];
                FlagP := parity(a22[7:0]);
                FlagCY := a22[15:8][0];
                jump ((M[a36],M[a27]));
              }
            }
          }
        } else {
          #03CC
          let:16 a38 = addWithCarry(!false,a6,~02) in
          let:8 a39 = (a6 & 0F) in
          let:8 a40 = (~02 & 0F) in
          let:16 a41 = addWithCarry(!false,a39,a40) in
          #03CE
          if (is_zero(a38[7:0])) {
            #040A
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a42 = (-1 + a2) in
                M[a42] := 04;
                let:16 a43 = (-1 + a42) in
                M[a43] := 0A;
                A := a6;
                H := a5[15:8];
                L := a5[7:0];
                SPH := a43[15:8];
                SPL := a43[7:0];
                FlagS := a38[7:0][7];
                FlagZ := is_zero(a38[7:0]);
                FlagA := a41[7:0][4];
                FlagP := parity(a38[7:0]);
                FlagCY := !a38[15:8][0];
                jump (0008);
              } else {
                let:16 a44 = (-1 + a2) in
                M[a44] := 04;
                let:16 a45 = (-1 + a44) in
                M[a45] := 0A;
                A := a6;
                H := a5[15:8];
                L := a5[7:0];
                SPH := a45[15:8];
                SPL := a45[7:0];
                FlagS := a38[7:0][7];
                FlagZ := is_zero(a38[7:0]);
                FlagA := a41[7:0][4];
                FlagP := parity(a38[7:0]);
                FlagCY := !a38[15:8][0];
                jump (0010);
              }
            } else {
              let:16 a46 = (-1 + a2) in
              M[a46] := 04;
              let:16 a47 = (-1 + a46) in
              M[a47] := 0D;
              #return-to: 040D
              #0430
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a48 = (-1 + a47) in
                  M[a48] := 04;
                  let:16 a49 = (-1 + a48) in
                  M[a49] := 30;
                  A := a6;
                  H := a5[15:8];
                  L := a5[7:0];
                  SPH := a49[15:8];
                  SPL := a49[7:0];
                  FlagS := a38[7:0][7];
                  FlagZ := is_zero(a38[7:0]);
                  FlagA := a41[7:0][4];
                  FlagP := parity(a38[7:0]);
                  FlagCY := !a38[15:8][0];
                  jump (0008);
                } else {
                  let:16 a50 = (-1 + a47) in
                  M[a50] := 04;
                  let:16 a51 = (-1 + a50) in
                  M[a51] := 30;
                  A := a6;
                  H := a5[15:8];
                  L := a5[7:0];
                  SPH := a51[15:8];
                  SPL := a51[7:0];
                  FlagS := a38[7:0][7];
                  FlagZ := is_zero(a38[7:0]);
                  FlagA := a41[7:0][4];
                  FlagP := parity(a38[7:0]);
                  FlagCY := !a38[15:8][0];
                  jump (0010);
                }
              } else {
                #0433
                #1A3B
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a52 = (-1 + a47) in
                    M[a52] := 1A;
                    let:16 a53 = (-1 + a52) in
                    M[a53] := 3B;
                    A := a6;
                    H := 20;
                    L := 27;
                    SPH := a53[15:8];
                    SPL := a53[7:0];
                    FlagS := a38[7:0][7];
                    FlagZ := is_zero(a38[7:0]);
                    FlagA := a41[7:0][4];
                    FlagP := parity(a38[7:0]);
                    FlagCY := !a38[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a54 = (-1 + a47) in
                    M[a54] := 1A;
                    let:16 a55 = (-1 + a54) in
                    M[a55] := 3B;
                    A := a6;
                    H := 20;
                    L := 27;
                    SPH := a55[15:8];
                    SPL := a55[7:0];
                    FlagS := a38[7:0][7];
                    FlagZ := is_zero(a38[7:0]);
                    FlagA := a41[7:0][4];
                    FlagP := parity(a38[7:0]);
                    FlagCY := !a38[15:8][0];
                    jump (0010);
                  }
                } else {
                  #1A3C
                  #1A3D
                  #1A3E
                  #1A3F
                  #1A40
                  #1A41
                  #1A42
                  #1A43
                  #1A44
                  #1A45
                  #1A46
                  let:16 a56 = (1 + a47) in
                  let:16 a57 = (1 + a56) in
                  A := M[2029];
                  B := M[202B];
                  C := M[202A];
                  D := M[2028];
                  E := M[2027];
                  H := M[202A];
                  L := M[2029];
                  SPH := a57[15:8];
                  SPL := a57[7:0];
                  FlagS := a38[7:0][7];
                  FlagZ := is_zero(a38[7:0]);
                  FlagA := a41[7:0][4];
                  FlagP := parity(a38[7:0]);
                  FlagCY := !a38[15:8][0];
                  jump ((M[a56],M[a47]));
                }
              }
            }
          } else {
            #03D1
            let:16 a58 = (1 + a5) in
            #03D2
            let:16 a59 = addWithCarry(!false,a6,~03) in
            let:8 a60 = (a6 & 0F) in
            let:8 a61 = (~03 & 0F) in
            let:16 a62 = addWithCarry(!false,a60,a61) in
            #03D4
            if (!is_zero(a59[7:0])) {
              #042A
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a63 = (-1 + a2) in
                  M[a63] := 04;
                  let:16 a64 = (-1 + a63) in
                  M[a64] := 2A;
                  A := a6;
                  H := a58[15:8];
                  L := a58[7:0];
                  SPH := a64[15:8];
                  SPL := a64[7:0];
                  FlagS := a59[7:0][7];
                  FlagZ := is_zero(a59[7:0]);
                  FlagA := a62[7:0][4];
                  FlagP := parity(a59[7:0]);
                  FlagCY := !a59[15:8][0];
                  jump (0008);
                } else {
                  let:16 a65 = (-1 + a2) in
                  M[a65] := 04;
                  let:16 a66 = (-1 + a65) in
                  M[a66] := 2A;
                  A := a6;
                  H := a58[15:8];
                  L := a58[7:0];
                  SPH := a66[15:8];
                  SPL := a66[7:0];
                  FlagS := a59[7:0][7];
                  FlagZ := is_zero(a59[7:0]);
                  FlagA := a62[7:0][4];
                  FlagP := parity(a59[7:0]);
                  FlagCY := !a59[15:8][0];
                  jump (0010);
                }
              } else {
                let:16 a67 = addWithCarry(!false,a6,~05) in
                let:8 a68 = (a6 & 0F) in
                let:8 a69 = (~05 & 0F) in
                let:16 a70 = addWithCarry(!false,a68,a69) in
                #042C
                if (is_zero(a67[7:0])) {
                  let:16 a71 = (1 + a2) in
                  let:16 a72 = (1 + a71) in
                  A := a6;
                  H := a58[15:8];
                  L := a58[7:0];
                  SPH := a72[15:8];
                  SPL := a72[7:0];
                  FlagS := a67[7:0][7];
                  FlagZ := is_zero(a67[7:0]);
                  FlagA := a70[7:0][4];
                  FlagP := parity(a67[7:0]);
                  FlagCY := !a67[15:8][0];
                  jump ((M[a71],M[a2]));
                } else {
                  #042D
                  #0436
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a73 = (-1 + a2) in
                      M[a73] := 04;
                      let:16 a74 = (-1 + a73) in
                      M[a74] := 36;
                      A := a6;
                      H := a58[15:8];
                      L := a58[7:0];
                      SPH := a74[15:8];
                      SPL := a74[7:0];
                      FlagS := a67[7:0][7];
                      FlagZ := is_zero(a67[7:0]);
                      FlagA := a70[7:0][4];
                      FlagP := parity(a67[7:0]);
                      FlagCY := !a67[15:8][0];
                      jump (0008);
                    } else {
                      let:16 a75 = (-1 + a2) in
                      M[a75] := 04;
                      let:16 a76 = (-1 + a75) in
                      M[a76] := 36;
                      A := a6;
                      H := a58[15:8];
                      L := a58[7:0];
                      SPH := a76[15:8];
                      SPL := a76[7:0];
                      FlagS := a67[7:0][7];
                      FlagZ := is_zero(a67[7:0]);
                      FlagA := a70[7:0][4];
                      FlagP := parity(a67[7:0]);
                      FlagCY := !a67[15:8][0];
                      jump (0010);
                    }
                  } else {
                    let:16 a77 = (-1 + a2) in
                    M[a77] := 04;
                    let:16 a78 = (-1 + a77) in
                    M[a78] := 39;
                    #return-to: 0439
                    #0430
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a79 = (-1 + a78) in
                        M[a79] := 04;
                        let:16 a80 = (-1 + a79) in
                        M[a80] := 30;
                        A := a6;
                        H := a58[15:8];
                        L := a58[7:0];
                        SPH := a80[15:8];
                        SPL := a80[7:0];
                        FlagS := a67[7:0][7];
                        FlagZ := is_zero(a67[7:0]);
                        FlagA := a70[7:0][4];
                        FlagP := parity(a67[7:0]);
                        FlagCY := !a67[15:8][0];
                        jump (0008);
                      } else {
                        let:16 a81 = (-1 + a78) in
                        M[a81] := 04;
                        let:16 a82 = (-1 + a81) in
                        M[a82] := 30;
                        A := a6;
                        H := a58[15:8];
                        L := a58[7:0];
                        SPH := a82[15:8];
                        SPL := a82[7:0];
                        FlagS := a67[7:0][7];
                        FlagZ := is_zero(a67[7:0]);
                        FlagA := a70[7:0][4];
                        FlagP := parity(a67[7:0]);
                        FlagCY := !a67[15:8][0];
                        jump (0010);
                      }
                    } else {
                      #0433
                      #1A3B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a83 = (-1 + a78) in
                          M[a83] := 1A;
                          let:16 a84 = (-1 + a83) in
                          M[a84] := 3B;
                          A := a6;
                          H := 20;
                          L := 27;
                          SPH := a84[15:8];
                          SPL := a84[7:0];
                          FlagS := a67[7:0][7];
                          FlagZ := is_zero(a67[7:0]);
                          FlagA := a70[7:0][4];
                          FlagP := parity(a67[7:0]);
                          FlagCY := !a67[15:8][0];
                          jump (0008);
                        } else {
                          let:16 a85 = (-1 + a78) in
                          M[a85] := 1A;
                          let:16 a86 = (-1 + a85) in
                          M[a86] := 3B;
                          A := a6;
                          H := 20;
                          L := 27;
                          SPH := a86[15:8];
                          SPL := a86[7:0];
                          FlagS := a67[7:0][7];
                          FlagZ := is_zero(a67[7:0]);
                          FlagA := a70[7:0][4];
                          FlagP := parity(a67[7:0]);
                          FlagCY := !a67[15:8][0];
                          jump (0010);
                        }
                      } else {
                        #1A3C
                        #1A3D
                        #1A3E
                        #1A3F
                        #1A40
                        #1A41
                        #1A42
                        #1A43
                        #1A44
                        #1A45
                        #1A46
                        let:16 a87 = (1 + a78) in
                        let:16 a88 = (1 + a87) in
                        A := M[2029];
                        B := M[202B];
                        C := M[202A];
                        D := M[2028];
                        E := M[2027];
                        H := M[202A];
                        L := M[2029];
                        SPH := a88[15:8];
                        SPL := a88[7:0];
                        FlagS := a67[7:0][7];
                        FlagZ := is_zero(a67[7:0]);
                        FlagA := a70[7:0][4];
                        FlagP := parity(a67[7:0]);
                        FlagCY := !a67[15:8][0];
                        jump ((M[a87],M[a78]));
                      }
                    }
                  }
                }
              }
            } else {
              #03D7
              let:16 a89 = addWithCarry(!true,M[a58],~00) in
              let:8 a90 = (M[a58] & 0F) in
              let:8 a91 = (~00 & 0F) in
              let:16 a92 = addWithCarry(!true,a90,a91) in
              M[a58] := a89[7:0];
              #03D8
              if (is_zero(a89[7:0])) {
                #0436
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a93 = (-1 + a2) in
                    M[a93] := 04;
                    let:16 a94 = (-1 + a93) in
                    M[a94] := 36;
                    A := a6;
                    H := a58[15:8];
                    L := a58[7:0];
                    SPH := a94[15:8];
                    SPL := a94[7:0];
                    FlagS := a89[7:0][7];
                    FlagZ := is_zero(a89[7:0]);
                    FlagA := a92[7:0][4];
                    FlagP := parity(a89[7:0]);
                    FlagCY := !a59[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a95 = (-1 + a2) in
                    M[a95] := 04;
                    let:16 a96 = (-1 + a95) in
                    M[a96] := 36;
                    A := a6;
                    H := a58[15:8];
                    L := a58[7:0];
                    SPH := a96[15:8];
                    SPL := a96[7:0];
                    FlagS := a89[7:0][7];
                    FlagZ := is_zero(a89[7:0]);
                    FlagA := a92[7:0][4];
                    FlagP := parity(a89[7:0]);
                    FlagCY := !a59[15:8][0];
                    jump (0010);
                  }
                } else {
                  let:16 a97 = (-1 + a2) in
                  M[a97] := 04;
                  let:16 a98 = (-1 + a97) in
                  M[a98] := 39;
                  #return-to: 0439
                  #0430
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a99 = (-1 + a98) in
                      M[a99] := 04;
                      let:16 a100 = (-1 + a99) in
                      M[a100] := 30;
                      A := a6;
                      H := a58[15:8];
                      L := a58[7:0];
                      SPH := a100[15:8];
                      SPL := a100[7:0];
                      FlagS := a89[7:0][7];
                      FlagZ := is_zero(a89[7:0]);
                      FlagA := a92[7:0][4];
                      FlagP := parity(a89[7:0]);
                      FlagCY := !a59[15:8][0];
                      jump (0008);
                    } else {
                      let:16 a101 = (-1 + a98) in
                      M[a101] := 04;
                      let:16 a102 = (-1 + a101) in
                      M[a102] := 30;
                      A := a6;
                      H := a58[15:8];
                      L := a58[7:0];
                      SPH := a102[15:8];
                      SPL := a102[7:0];
                      FlagS := a89[7:0][7];
                      FlagZ := is_zero(a89[7:0]);
                      FlagA := a92[7:0][4];
                      FlagP := parity(a89[7:0]);
                      FlagCY := !a59[15:8][0];
                      jump (0010);
                    }
                  } else {
                    #0433
                    #1A3B
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a103 = (-1 + a98) in
                        M[a103] := 1A;
                        let:16 a104 = (-1 + a103) in
                        M[a104] := 3B;
                        A := a6;
                        H := 20;
                        L := 27;
                        SPH := a104[15:8];
                        SPL := a104[7:0];
                        FlagS := a89[7:0][7];
                        FlagZ := is_zero(a89[7:0]);
                        FlagA := a92[7:0][4];
                        FlagP := parity(a89[7:0]);
                        FlagCY := !a59[15:8][0];
                        jump (0008);
                      } else {
                        let:16 a105 = (-1 + a98) in
                        M[a105] := 1A;
                        let:16 a106 = (-1 + a105) in
                        M[a106] := 3B;
                        A := a6;
                        H := 20;
                        L := 27;
                        SPH := a106[15:8];
                        SPL := a106[7:0];
                        FlagS := a89[7:0][7];
                        FlagZ := is_zero(a89[7:0]);
                        FlagA := a92[7:0][4];
                        FlagP := parity(a89[7:0]);
                        FlagCY := !a59[15:8][0];
                        jump (0010);
                      }
                    } else {
                      #1A3C
                      #1A3D
                      #1A3E
                      #1A3F
                      #1A40
                      #1A41
                      #1A42
                      #1A43
                      #1A44
                      #1A45
                      #1A46
                      let:16 a107 = (1 + a98) in
                      let:16 a108 = (1 + a107) in
                      A := M[2029];
                      B := M[202B];
                      C := M[202A];
                      D := M[2028];
                      E := M[2027];
                      H := M[202A];
                      L := M[2029];
                      SPH := a108[15:8];
                      SPL := a108[7:0];
                      FlagS := a89[7:0][7];
                      FlagZ := is_zero(a89[7:0]);
                      FlagA := a92[7:0][4];
                      FlagP := parity(a89[7:0]);
                      FlagCY := !a59[15:8][0];
                      jump ((M[a107],M[a98]));
                    }
                  }
                }
              } else {
                #03DB
                #03DC
                let:16 a109 = addWithCarry(!false,M[a58],~0F) in
                let:8 a110 = (M[a58] & 0F) in
                let:8 a111 = (~0F & 0F) in
                let:16 a112 = addWithCarry(!false,a110,a111) in
                #03DE
                if (!is_zero(a109[7:0])) {
                  let:16 a113 = (1 + a2) in
                  let:16 a114 = (1 + a113) in
                  A := M[a58];
                  H := a58[15:8];
                  L := a58[7:0];
                  SPH := a114[15:8];
                  SPL := a114[7:0];
                  FlagS := a109[7:0][7];
                  FlagZ := is_zero(a109[7:0]);
                  FlagA := a112[7:0][4];
                  FlagP := parity(a109[7:0]);
                  FlagCY := !a109[15:8][0];
                  jump ((M[a113],M[a2]));
                } else {
                  #03DF
                  let:16 a115 = (-1 + a2) in
                  M[a115] := a58[15:8];
                  let:16 a116 = (-1 + a115) in
                  M[a116] := a58[7:0];
                  #03E0
                  let:16 a117 = (-1 + a116) in
                  M[a117] := 03;
                  let:16 a118 = (-1 + a117) in
                  M[a118] := E3;
                  #return-to: 03E3
                  #0430
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a119 = (-1 + a118) in
                      M[a119] := 04;
                      let:16 a120 = (-1 + a119) in
                      M[a120] := 30;
                      A := M[a58];
                      H := a58[15:8];
                      L := a58[7:0];
                      SPH := a120[15:8];
                      SPL := a120[7:0];
                      FlagS := a109[7:0][7];
                      FlagZ := is_zero(a109[7:0]);
                      FlagA := a112[7:0][4];
                      FlagP := parity(a109[7:0]);
                      FlagCY := !a109[15:8][0];
                      jump (0008);
                    } else {
                      let:16 a121 = (-1 + a118) in
                      M[a121] := 04;
                      let:16 a122 = (-1 + a121) in
                      M[a122] := 30;
                      A := M[a58];
                      H := a58[15:8];
                      L := a58[7:0];
                      SPH := a122[15:8];
                      SPL := a122[7:0];
                      FlagS := a109[7:0][7];
                      FlagZ := is_zero(a109[7:0]);
                      FlagA := a112[7:0][4];
                      FlagP := parity(a109[7:0]);
                      FlagCY := !a109[15:8][0];
                      jump (0010);
                    }
                  } else {
                    #0433
                    #1A3B
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a123 = (-1 + a118) in
                        M[a123] := 1A;
                        let:16 a124 = (-1 + a123) in
                        M[a124] := 3B;
                        A := M[a58];
                        H := 20;
                        L := 27;
                        SPH := a124[15:8];
                        SPL := a124[7:0];
                        FlagS := a109[7:0][7];
                        FlagZ := is_zero(a109[7:0]);
                        FlagA := a112[7:0][4];
                        FlagP := parity(a109[7:0]);
                        FlagCY := !a109[15:8][0];
                        jump (0008);
                      } else {
                        let:16 a125 = (-1 + a118) in
                        M[a125] := 1A;
                        let:16 a126 = (-1 + a125) in
                        M[a126] := 3B;
                        A := M[a58];
                        H := 20;
                        L := 27;
                        SPH := a126[15:8];
                        SPL := a126[7:0];
                        FlagS := a109[7:0][7];
                        FlagZ := is_zero(a109[7:0]);
                        FlagA := a112[7:0][4];
                        FlagP := parity(a109[7:0]);
                        FlagCY := !a109[15:8][0];
                        jump (0010);
                      }
                    } else {
                      #1A3C
                      #1A3D
                      #1A3E
                      #1A3F
                      #1A40
                      #1A41
                      #1A42
                      #1A43
                      #1A44
                      #1A45
                      #1A46
                      let:16 a127 = (1 + a118) in
                      let:16 a128 = (1 + a127) in
                      A := M[2029];
                      B := M[202B];
                      C := M[202A];
                      D := M[2028];
                      E := M[2027];
                      H := M[202A];
                      L := M[2029];
                      SPH := a128[15:8];
                      SPL := a128[7:0];
                      FlagS := a109[7:0][7];
                      FlagZ := is_zero(a109[7:0]);
                      FlagA := a112[7:0][4];
                      FlagP := parity(a109[7:0]);
                      FlagCY := !a109[15:8][0];
                      jump ((M[a127],M[a118]));
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

03E3:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 03;
    let:16 a2 = (-1 + a1) in
    M[a2] := E6;
    #return-to: 03E6
    #1452
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 14;
        let:16 a4 = (-1 + a3) in
        M[a4] := 52;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 14;
        let:16 a6 = (-1 + a5) in
        M[a6] := 52;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 14;
      let:16 a8 = (-1 + a7) in
      M[a8] := 55;
      #return-to: 1455
      #1474
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := 74;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 14;
          let:16 a12 = (-1 + a11) in
          M[a12] := 74;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1475
        let:8 a13 = (07 & L) in
        let:8 a14 = (07 | L) in
        #1477
        #1479
        #1A47
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a8) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 47;
            A := a13;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := a14[3];
            FlagP := parity(a13);
            FlagCY := false;
            Shifter_OFF := a13;
            jump (0008);
          } else {
            let:16 a17 = (-1 + a8) in
            M[a17] := 1A;
            let:16 a18 = (-1 + a17) in
            M[a18] := 47;
            A := a13;
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := a14[3];
            FlagP := parity(a13);
            FlagCY := false;
            Shifter_OFF := a13;
            jump (0010);
          }
        } else {
          let:16 a19 = (-1 + a8) in
          M[a19] := B;
          let:16 a20 = (-1 + a19) in
          M[a20] := C;
          #1A48
          #1A4A
          #1A4B
          #1A4C
          #1A4D
          #1A4E
          #1A4F
          #1A50
          let:16 a21 = addWithCarry(!true,03,~00) in
          let:8 a22 = (03 & 0F) in
          let:8 a23 = (~00 & 0F) in
          let:16 a24 = addWithCarry(!true,a22,a23) in
          #1A51
          if (!is_zero(a21[7:0])) {
            A := updateBit((L >> 01),7,H[0]);
            B := a21[7:0];
            H := updateBit((H >> 01),7,false);
            L := updateBit((L >> 01),7,H[0]);
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a21[7:0][7];
            FlagZ := is_zero(a21[7:0]);
            FlagA := a24[7:0][4];
            FlagP := parity(a21[7:0]);
            FlagCY := L[0];
            Shifter_OFF := a13;
            jump (1A4A);
          } else {
            #1A54
            #1A55
            let:8 a25 = (3F & updateBit((H >> 01),7,false)) in
            let:8 a26 = (3F | updateBit((H >> 01),7,false)) in
            #1A57
            let:8 a27 = (20 | a25) in
            #1A59
            #1A5A
            let:16 a28 = (1 + a20) in
            let:16 a29 = (1 + a28) in
            #1A5B
            let:16 a30 = (1 + a29) in
            let:16 a31 = (1 + a30) in
            A := a27;
            B := M[a28];
            C := M[a20];
            H := a27;
            L := updateBit((L >> 01),7,H[0]);
            SPH := a31[15:8];
            SPL := a31[7:0];
            FlagS := a27[7];
            FlagZ := is_zero(a27);
            FlagA := false;
            FlagP := parity(a27);
            FlagCY := false;
            Shifter_OFF := a13;
            jump ((M[a30],M[a29]));
          }
        }
      }
    }

03E6:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #03E7
    let:16 a3 = (1 + (M[a1],M[(SPH,SPL)])) in
    #03E8
    let:16 a4 = addWithCarry(true,M[a3],00) in
    let:8 a5 = (M[a3] & 0F) in
    let:8 a6 = (00 & 0F) in
    let:16 a7 = addWithCarry(true,a5,a6) in
    M[a3] := a4[7:0];
    #03E9
    let:16 a8 = (1 + a3) in
    #03EA
    let:16 a9 = (1 + a8) in
    #03EB
    let:16 a10 = addWithCarry(!true,M[a9],~00) in
    let:8 a11 = (M[a9] & 0F) in
    let:8 a12 = (~00 & 0F) in
    let:16 a13 = addWithCarry(!true,a11,a12) in
    M[a9] := a10[7:0];
    #03EC
    let:16 a14 = addWithCarry(!true,M[a9],~00) in
    let:8 a15 = (M[a9] & 0F) in
    let:8 a16 = (~00 & 0F) in
    let:16 a17 = addWithCarry(!true,a15,a16) in
    M[a9] := a14[7:0];
    #03ED
    let:16 a18 = (1 + a9) in
    #03EE
    let:16 a19 = addWithCarry(!true,M[a18],~00) in
    let:8 a20 = (M[a18] & 0F) in
    let:8 a21 = (~00 & 0F) in
    let:16 a22 = addWithCarry(!true,a20,a21) in
    M[a18] := a19[7:0];
    #03EF
    let:16 a23 = addWithCarry(!true,M[a18],~00) in
    let:8 a24 = (M[a18] & 0F) in
    let:8 a25 = (~00 & 0F) in
    let:16 a26 = addWithCarry(!true,a24,a25) in
    M[a18] := a23[7:0];
    #03F0
    let:16 a27 = addWithCarry(!true,M[a18],~00) in
    let:8 a28 = (M[a18] & 0F) in
    let:8 a29 = (~00 & 0F) in
    let:16 a30 = addWithCarry(!true,a28,a29) in
    M[a18] := a27[7:0];
    #03F1
    let:16 a31 = (1 + a18) in
    #03F2
    M[a31] := 08;
    #03F4
    let:16 a32 = (-1 + a2) in
    M[a32] := 03;
    let:16 a33 = (-1 + a32) in
    M[a33] := F7;
    #return-to: 03F7
    #0430
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a34 = (-1 + a33) in
        M[a34] := 04;
        let:16 a35 = (-1 + a34) in
        M[a35] := 30;
        H := a31[15:8];
        L := a31[7:0];
        SPH := a35[15:8];
        SPL := a35[7:0];
        FlagS := a27[7:0][7];
        FlagZ := is_zero(a27[7:0]);
        FlagA := a30[7:0][4];
        FlagP := parity(a27[7:0]);
        jump (0008);
      } else {
        let:16 a36 = (-1 + a33) in
        M[a36] := 04;
        let:16 a37 = (-1 + a36) in
        M[a37] := 30;
        H := a31[15:8];
        L := a31[7:0];
        SPH := a37[15:8];
        SPL := a37[7:0];
        FlagS := a27[7:0][7];
        FlagZ := is_zero(a27[7:0]);
        FlagA := a30[7:0][4];
        FlagP := parity(a27[7:0]);
        jump (0010);
      }
    } else {
      #0433
      #1A3B
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a38 = (-1 + a33) in
          M[a38] := 1A;
          let:16 a39 = (-1 + a38) in
          M[a39] := 3B;
          H := 20;
          L := 27;
          SPH := a39[15:8];
          SPL := a39[7:0];
          FlagS := a27[7:0][7];
          FlagZ := is_zero(a27[7:0]);
          FlagA := a30[7:0][4];
          FlagP := parity(a27[7:0]);
          jump (0008);
        } else {
          let:16 a40 = (-1 + a33) in
          M[a40] := 1A;
          let:16 a41 = (-1 + a40) in
          M[a41] := 3B;
          H := 20;
          L := 27;
          SPH := a41[15:8];
          SPL := a41[7:0];
          FlagS := a27[7:0][7];
          FlagZ := is_zero(a27[7:0]);
          FlagA := a30[7:0][4];
          FlagP := parity(a27[7:0]);
          jump (0010);
        }
      } else {
        #1A3C
        #1A3D
        #1A3E
        #1A3F
        #1A40
        #1A41
        #1A42
        #1A43
        #1A44
        #1A45
        #1A46
        let:16 a42 = (1 + a33) in
        let:16 a43 = (1 + a42) in
        A := M[2029];
        B := M[202B];
        C := M[202A];
        D := M[2028];
        E := M[2027];
        H := M[202A];
        L := M[2029];
        SPH := a43[15:8];
        SPL := a43[7:0];
        FlagS := a27[7:0][7];
        FlagZ := is_zero(a27[7:0]);
        FlagA := a30[7:0][4];
        FlagP := parity(a27[7:0]);
        jump ((M[a42],M[a33]));
      }
    }

03F7:

    #1400
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 14;
        let:16 a2 = (-1 + a1) in
        M[a2] := 00;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 14;
        let:16 a4 = (-1 + a3) in
        M[a4] := 00;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      #1401
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 14;
      let:16 a6 = (-1 + a5) in
      M[a6] := 04;
      #return-to: 1404
      #1474
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 14;
          let:16 a8 = (-1 + a7) in
          M[a8] := 74;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := 74;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1475
        let:8 a11 = (07 & L) in
        let:8 a12 = (07 | L) in
        #1477
        #1479
        #1A47
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + a6) in
            M[a13] := 1A;
            let:16 a14 = (-1 + a13) in
            M[a14] := 47;
            A := a11;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            Shifter_OFF := a11;
            jump (0008);
          } else {
            let:16 a15 = (-1 + a6) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 47;
            A := a11;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            Shifter_OFF := a11;
            jump (0010);
          }
        } else {
          let:16 a17 = (-1 + a6) in
          M[a17] := B;
          let:16 a18 = (-1 + a17) in
          M[a18] := C;
          #1A48
          #1A4A
          #1A4B
          #1A4C
          #1A4D
          #1A4E
          #1A4F
          #1A50
          let:16 a19 = addWithCarry(!true,03,~00) in
          let:8 a20 = (03 & 0F) in
          let:8 a21 = (~00 & 0F) in
          let:16 a22 = addWithCarry(!true,a20,a21) in
          #1A51
          if (!is_zero(a19[7:0])) {
            A := updateBit((L >> 01),7,H[0]);
            B := a19[7:0];
            H := updateBit((H >> 01),7,false);
            L := updateBit((L >> 01),7,H[0]);
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := L[0];
            Shifter_OFF := a11;
            jump (1A4A);
          } else {
            #1A54
            #1A55
            let:8 a23 = (3F & updateBit((H >> 01),7,false)) in
            let:8 a24 = (3F | updateBit((H >> 01),7,false)) in
            #1A57
            let:8 a25 = (20 | a23) in
            #1A59
            #1A5A
            let:16 a26 = (1 + a18) in
            let:16 a27 = (1 + a26) in
            #1A5B
            let:16 a28 = (1 + a27) in
            let:16 a29 = (1 + a28) in
            A := a25;
            B := M[a26];
            C := M[a18];
            H := a25;
            L := updateBit((L >> 01),7,H[0]);
            SPH := a29[15:8];
            SPL := a29[7:0];
            FlagS := a25[7];
            FlagZ := is_zero(a25);
            FlagA := false;
            FlagP := parity(a25);
            FlagCY := false;
            Shifter_OFF := a11;
            jump ((M[a28],M[a27]));
          }
        }
      }
    }

0407:

    #1400
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 14;
        let:16 a2 = (-1 + a1) in
        M[a2] := 00;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 14;
        let:16 a4 = (-1 + a3) in
        M[a4] := 00;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      #1401
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 14;
      let:16 a6 = (-1 + a5) in
      M[a6] := 04;
      #return-to: 1404
      #1474
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 14;
          let:16 a8 = (-1 + a7) in
          M[a8] := 74;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := 74;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1475
        let:8 a11 = (07 & L) in
        let:8 a12 = (07 | L) in
        #1477
        #1479
        #1A47
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + a6) in
            M[a13] := 1A;
            let:16 a14 = (-1 + a13) in
            M[a14] := 47;
            A := a11;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            Shifter_OFF := a11;
            jump (0008);
          } else {
            let:16 a15 = (-1 + a6) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 47;
            A := a11;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            Shifter_OFF := a11;
            jump (0010);
          }
        } else {
          let:16 a17 = (-1 + a6) in
          M[a17] := B;
          let:16 a18 = (-1 + a17) in
          M[a18] := C;
          #1A48
          #1A4A
          #1A4B
          #1A4C
          #1A4D
          #1A4E
          #1A4F
          #1A50
          let:16 a19 = addWithCarry(!true,03,~00) in
          let:8 a20 = (03 & 0F) in
          let:8 a21 = (~00 & 0F) in
          let:16 a22 = addWithCarry(!true,a20,a21) in
          #1A51
          if (!is_zero(a19[7:0])) {
            A := updateBit((L >> 01),7,H[0]);
            B := a19[7:0];
            H := updateBit((H >> 01),7,false);
            L := updateBit((L >> 01),7,H[0]);
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := L[0];
            Shifter_OFF := a11;
            jump (1A4A);
          } else {
            #1A54
            #1A55
            let:8 a23 = (3F & updateBit((H >> 01),7,false)) in
            let:8 a24 = (3F | updateBit((H >> 01),7,false)) in
            #1A57
            let:8 a25 = (20 | a23) in
            #1A59
            #1A5A
            let:16 a26 = (1 + a18) in
            let:16 a27 = (1 + a26) in
            #1A5B
            let:16 a28 = (1 + a27) in
            let:16 a29 = (1 + a28) in
            A := a25;
            B := M[a26];
            C := M[a18];
            H := a25;
            L := updateBit((L >> 01),7,H[0]);
            SPH := a29[15:8];
            SPL := a29[7:0];
            FlagS := a25[7];
            FlagZ := is_zero(a25);
            FlagA := false;
            FlagP := parity(a25);
            FlagCY := false;
            Shifter_OFF := a11;
            jump ((M[a28],M[a27]));
          }
        }
      }
    }

040D:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := D;
    let:16 a2 = (-1 + a1) in
    M[a2] := E;
    #040E
    let:16 a3 = (-1 + a2) in
    M[a3] := H;
    let:16 a4 = (-1 + a3) in
    M[a4] := L;
    #040F
    let:16 a5 = (-1 + a4) in
    M[a5] := B;
    let:16 a6 = (-1 + a5) in
    M[a6] := C;
    #0410
    let:16 a7 = (-1 + a6) in
    M[a7] := 04;
    let:16 a8 = (-1 + a7) in
    M[a8] := 13;
    #return-to: 0413
    #1452
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a9 = (-1 + a8) in
        M[a9] := 14;
        let:16 a10 = (-1 + a9) in
        M[a10] := 52;
        SPH := a10[15:8];
        SPL := a10[7:0];
        jump (0008);
      } else {
        let:16 a11 = (-1 + a8) in
        M[a11] := 14;
        let:16 a12 = (-1 + a11) in
        M[a12] := 52;
        SPH := a12[15:8];
        SPL := a12[7:0];
        jump (0010);
      }
    } else {
      let:16 a13 = (-1 + a8) in
      M[a13] := 14;
      let:16 a14 = (-1 + a13) in
      M[a14] := 55;
      #return-to: 1455
      #1474
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a15 = (-1 + a14) in
          M[a15] := 14;
          let:16 a16 = (-1 + a15) in
          M[a16] := 74;
          SPH := a16[15:8];
          SPL := a16[7:0];
          jump (0008);
        } else {
          let:16 a17 = (-1 + a14) in
          M[a17] := 14;
          let:16 a18 = (-1 + a17) in
          M[a18] := 74;
          SPH := a18[15:8];
          SPL := a18[7:0];
          jump (0010);
        }
      } else {
        #1475
        let:8 a19 = (07 & L) in
        let:8 a20 = (07 | L) in
        #1477
        #1479
        #1A47
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a21 = (-1 + a14) in
            M[a21] := 1A;
            let:16 a22 = (-1 + a21) in
            M[a22] := 47;
            A := a19;
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a19[7];
            FlagZ := is_zero(a19);
            FlagA := a20[3];
            FlagP := parity(a19);
            FlagCY := false;
            Shifter_OFF := a19;
            jump (0008);
          } else {
            let:16 a23 = (-1 + a14) in
            M[a23] := 1A;
            let:16 a24 = (-1 + a23) in
            M[a24] := 47;
            A := a19;
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagS := a19[7];
            FlagZ := is_zero(a19);
            FlagA := a20[3];
            FlagP := parity(a19);
            FlagCY := false;
            Shifter_OFF := a19;
            jump (0010);
          }
        } else {
          let:16 a25 = (-1 + a14) in
          M[a25] := B;
          let:16 a26 = (-1 + a25) in
          M[a26] := C;
          #1A48
          #1A4A
          #1A4B
          #1A4C
          #1A4D
          #1A4E
          #1A4F
          #1A50
          let:16 a27 = addWithCarry(!true,03,~00) in
          let:8 a28 = (03 & 0F) in
          let:8 a29 = (~00 & 0F) in
          let:16 a30 = addWithCarry(!true,a28,a29) in
          #1A51
          if (!is_zero(a27[7:0])) {
            A := updateBit((L >> 01),7,H[0]);
            B := a27[7:0];
            H := updateBit((H >> 01),7,false);
            L := updateBit((L >> 01),7,H[0]);
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagS := a27[7:0][7];
            FlagZ := is_zero(a27[7:0]);
            FlagA := a30[7:0][4];
            FlagP := parity(a27[7:0]);
            FlagCY := L[0];
            Shifter_OFF := a19;
            jump (1A4A);
          } else {
            #1A54
            #1A55
            let:8 a31 = (3F & updateBit((H >> 01),7,false)) in
            let:8 a32 = (3F | updateBit((H >> 01),7,false)) in
            #1A57
            let:8 a33 = (20 | a31) in
            #1A59
            #1A5A
            let:16 a34 = (1 + a26) in
            let:16 a35 = (1 + a34) in
            #1A5B
            let:16 a36 = (1 + a35) in
            let:16 a37 = (1 + a36) in
            A := a33;
            B := M[a34];
            C := M[a26];
            H := a33;
            L := updateBit((L >> 01),7,H[0]);
            SPH := a37[15:8];
            SPL := a37[7:0];
            FlagS := a33[7];
            FlagZ := is_zero(a33);
            FlagA := false;
            FlagP := parity(a33);
            FlagCY := false;
            Shifter_OFF := a19;
            jump ((M[a36],M[a35]));
          }
        }
      }
    }

0413:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #0414
    let:16 a3 = (1 + a2) in
    let:16 a4 = (1 + a3) in
    #0415
    let:16 a5 = (1 + a4) in
    let:16 a6 = (1 + a5) in
    #0416
    #0419
    let:16 a7 = addWithCarry(false,M[a2],M[202C]) in
    let:8 a8 = (M[a2] & 0F) in
    let:8 a9 = (M[202C] & 0F) in
    let:16 a10 = addWithCarry(false,a8,a9) in
    #041A
    #041B
    M[2029] := a7[7:0];
    #041E
    let:16 a11 = (-1 + a6) in
    M[a11] := 04;
    let:16 a12 = (-1 + a11) in
    M[a12] := 21;
    #return-to: 0421
    #1491
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a13 = (-1 + a12) in
        M[a13] := 14;
        let:16 a14 = (-1 + a13) in
        M[a14] := 91;
        A := a7[7:0];
        B := M[a1];
        C := M[(SPH,SPL)];
        D := M[a5];
        E := M[a4];
        H := M[a3];
        L := a7[7:0];
        SPH := a14[15:8];
        SPL := a14[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := a7[15:8][0];
        jump (0008);
      } else {
        let:16 a15 = (-1 + a12) in
        M[a15] := 14;
        let:16 a16 = (-1 + a15) in
        M[a16] := 91;
        A := a7[7:0];
        B := M[a1];
        C := M[(SPH,SPL)];
        D := M[a5];
        E := M[a4];
        H := M[a3];
        L := a7[7:0];
        SPH := a16[15:8];
        SPL := a16[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := a7[15:8][0];
        jump (0010);
      }
    } else {
      let:16 a17 = (-1 + a12) in
      M[a17] := 14;
      let:16 a18 = (-1 + a17) in
      M[a18] := 94;
      #return-to: 1494
      #1474
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a19 = (-1 + a18) in
          M[a19] := 14;
          let:16 a20 = (-1 + a19) in
          M[a20] := 74;
          A := a7[7:0];
          B := M[a1];
          C := M[(SPH,SPL)];
          D := M[a5];
          E := M[a4];
          H := M[a3];
          L := a7[7:0];
          SPH := a20[15:8];
          SPL := a20[7:0];
          FlagS := a7[7:0][7];
          FlagZ := is_zero(a7[7:0]);
          FlagA := a10[7:0][4];
          FlagP := parity(a7[7:0]);
          FlagCY := a7[15:8][0];
          jump (0008);
        } else {
          let:16 a21 = (-1 + a18) in
          M[a21] := 14;
          let:16 a22 = (-1 + a21) in
          M[a22] := 74;
          A := a7[7:0];
          B := M[a1];
          C := M[(SPH,SPL)];
          D := M[a5];
          E := M[a4];
          H := M[a3];
          L := a7[7:0];
          SPH := a22[15:8];
          SPL := a22[7:0];
          FlagS := a7[7:0][7];
          FlagZ := is_zero(a7[7:0]);
          FlagA := a10[7:0][4];
          FlagP := parity(a7[7:0]);
          FlagCY := a7[15:8][0];
          jump (0010);
        }
      } else {
        #1475
        let:8 a23 = (07 & a7[7:0]) in
        let:8 a24 = (07 | a7[7:0]) in
        #1477
        #1479
        #1A47
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a25 = (-1 + a18) in
            M[a25] := 1A;
            let:16 a26 = (-1 + a25) in
            M[a26] := 47;
            A := a23;
            B := M[a1];
            C := M[(SPH,SPL)];
            D := M[a5];
            E := M[a4];
            H := M[a3];
            L := a7[7:0];
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagS := a23[7];
            FlagZ := is_zero(a23);
            FlagA := a24[3];
            FlagP := parity(a23);
            FlagCY := false;
            Shifter_OFF := a23;
            jump (0008);
          } else {
            let:16 a27 = (-1 + a18) in
            M[a27] := 1A;
            let:16 a28 = (-1 + a27) in
            M[a28] := 47;
            A := a23;
            B := M[a1];
            C := M[(SPH,SPL)];
            D := M[a5];
            E := M[a4];
            H := M[a3];
            L := a7[7:0];
            SPH := a28[15:8];
            SPL := a28[7:0];
            FlagS := a23[7];
            FlagZ := is_zero(a23);
            FlagA := a24[3];
            FlagP := parity(a23);
            FlagCY := false;
            Shifter_OFF := a23;
            jump (0010);
          }
        } else {
          let:16 a29 = (-1 + a18) in
          M[a29] := M[a1];
          let:16 a30 = (-1 + a29) in
          M[a30] := M[(SPH,SPL)];
          #1A48
          #1A4A
          #1A4B
          #1A4C
          #1A4D
          #1A4E
          #1A4F
          #1A50
          let:16 a31 = addWithCarry(!true,03,~00) in
          let:8 a32 = (03 & 0F) in
          let:8 a33 = (~00 & 0F) in
          let:16 a34 = addWithCarry(!true,a32,a33) in
          #1A51
          if (!is_zero(a31[7:0])) {
            A := updateBit((a7[7:0] >> 01),7,M[a3][0]);
            B := a31[7:0];
            C := M[(SPH,SPL)];
            D := M[a5];
            E := M[a4];
            H := updateBit((M[a3] >> 01),7,false);
            L := updateBit((a7[7:0] >> 01),7,M[a3][0]);
            SPH := a30[15:8];
            SPL := a30[7:0];
            FlagS := a31[7:0][7];
            FlagZ := is_zero(a31[7:0]);
            FlagA := a34[7:0][4];
            FlagP := parity(a31[7:0]);
            FlagCY := a7[7:0][0];
            Shifter_OFF := a23;
            jump (1A4A);
          } else {
            #1A54
            #1A55
            let:8 a35 = (3F & updateBit((M[a3] >> 01),7,false)) in
            let:8 a36 = (3F | updateBit((M[a3] >> 01),7,false)) in
            #1A57
            let:8 a37 = (20 | a35) in
            #1A59
            #1A5A
            let:16 a38 = (1 + a30) in
            let:16 a39 = (1 + a38) in
            #1A5B
            let:16 a40 = (1 + a39) in
            let:16 a41 = (1 + a40) in
            A := a37;
            B := M[a38];
            C := M[a30];
            D := M[a5];
            E := M[a4];
            H := a37;
            L := updateBit((a7[7:0] >> 01),7,M[a3][0]);
            SPH := a41[15:8];
            SPL := a41[7:0];
            FlagS := a37[7];
            FlagZ := is_zero(a37);
            FlagA := false;
            FlagP := parity(a37);
            FlagCY := false;
            Shifter_OFF := a23;
            jump ((M[a40],M[a39]));
          }
        }
      }
    }

0421:

    #0424
    let:8 a1 = (M[2061] & M[2061]) in
    let:8 a2 = (M[2061] | M[2061]) in
    #0425
    if (is_zero(a1)) {
      let:16 a3 = (1 + (SPH,SPL)) in
      let:16 a4 = (1 + a3) in
      A := a1;
      SPH := a4[15:8];
      SPL := a4[7:0];
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump ((M[a3],M[(SPH,SPL)]));
    } else {
      #0426
      M[2002] := a1;
      #0429
      let:16 a5 = (1 + (SPH,SPL)) in
      let:16 a6 = (1 + a5) in
      A := a1;
      SPH := a6[15:8];
      SPL := a6[7:0];
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump ((M[a5],M[(SPH,SPL)]));
    }

0439:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 04;
    let:16 a2 = (-1 + a1) in
    M[a2] := 3C;
    #return-to: 043C
    #1452
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 14;
        let:16 a4 = (-1 + a3) in
        M[a4] := 52;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 14;
        let:16 a6 = (-1 + a5) in
        M[a6] := 52;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 14;
      let:16 a8 = (-1 + a7) in
      M[a8] := 55;
      #return-to: 1455
      #1474
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := 74;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 14;
          let:16 a12 = (-1 + a11) in
          M[a12] := 74;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1475
        let:8 a13 = (07 & L) in
        let:8 a14 = (07 | L) in
        #1477
        #1479
        #1A47
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a8) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 47;
            A := a13;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := a14[3];
            FlagP := parity(a13);
            FlagCY := false;
            Shifter_OFF := a13;
            jump (0008);
          } else {
            let:16 a17 = (-1 + a8) in
            M[a17] := 1A;
            let:16 a18 = (-1 + a17) in
            M[a18] := 47;
            A := a13;
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := a14[3];
            FlagP := parity(a13);
            FlagCY := false;
            Shifter_OFF := a13;
            jump (0010);
          }
        } else {
          let:16 a19 = (-1 + a8) in
          M[a19] := B;
          let:16 a20 = (-1 + a19) in
          M[a20] := C;
          #1A48
          #1A4A
          #1A4B
          #1A4C
          #1A4D
          #1A4E
          #1A4F
          #1A50
          let:16 a21 = addWithCarry(!true,03,~00) in
          let:8 a22 = (03 & 0F) in
          let:8 a23 = (~00 & 0F) in
          let:16 a24 = addWithCarry(!true,a22,a23) in
          #1A51
          if (!is_zero(a21[7:0])) {
            A := updateBit((L >> 01),7,H[0]);
            B := a21[7:0];
            H := updateBit((H >> 01),7,false);
            L := updateBit((L >> 01),7,H[0]);
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a21[7:0][7];
            FlagZ := is_zero(a21[7:0]);
            FlagA := a24[7:0][4];
            FlagP := parity(a21[7:0]);
            FlagCY := L[0];
            Shifter_OFF := a13;
            jump (1A4A);
          } else {
            #1A54
            #1A55
            let:8 a25 = (3F & updateBit((H >> 01),7,false)) in
            let:8 a26 = (3F | updateBit((H >> 01),7,false)) in
            #1A57
            let:8 a27 = (20 | a25) in
            #1A59
            #1A5A
            let:16 a28 = (1 + a20) in
            let:16 a29 = (1 + a28) in
            #1A5B
            let:16 a30 = (1 + a29) in
            let:16 a31 = (1 + a30) in
            A := a27;
            B := M[a28];
            C := M[a20];
            H := a27;
            L := updateBit((L >> 01),7,H[0]);
            SPH := a31[15:8];
            SPL := a31[7:0];
            FlagS := a27[7];
            FlagZ := is_zero(a27);
            FlagA := false;
            FlagP := parity(a27);
            FlagCY := false;
            Shifter_OFF := a13;
            jump ((M[a30],M[a29]));
          }
        }
      }
    }

043C:

    #043F
    #0442
    #0444
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 04;
    let:16 a2 = (-1 + a1) in
    M[a2] := 47;
    #return-to: 0447
    #1A32
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 1A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 32;
        B := 07;
        D := 1B;
        E := 25;
        H := 20;
        L := 25;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 1A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 32;
        B := 07;
        D := 1B;
        E := 25;
        H := 20;
        L := 25;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1A33
      M[2025] := 00;
      #1A34
      #1A35
      #1A36
      let:16 a7 = addWithCarry(!true,07,~00) in
      let:8 a8 = (07 & 0F) in
      let:8 a9 = (~00 & 0F) in
      let:16 a10 = addWithCarry(!true,a8,a9) in
      #1A37
      if (!is_zero(a7[7:0])) {
        A := 00;
        B := a7[7:0];
        D := 1B;
        E := 26;
        H := 20;
        L := 26;
        SPH := a2[15:8];
        SPL := a2[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        jump (1A32);
      } else {
        #1A3A
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := 00;
        B := a7[7:0];
        D := 1B;
        E := 26;
        H := 20;
        L := 26;
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        jump ((M[a11],M[a2]));
      }
    }

0447:

    #044A
    let:16 a1 = addWithCarry(true,M[208D],00) in
    let:8 a2 = (M[208D] & 0F) in
    let:8 a3 = (00 & 0F) in
    let:16 a4 = addWithCarry(true,a2,a3) in
    #044B
    #044C
    let:16 a5 = addWithCarry(!false,a1[7:0],~63) in
    let:8 a6 = (a1[7:0] & 0F) in
    let:8 a7 = (~63 & 0F) in
    let:16 a8 = addWithCarry(!false,a6,a7) in
    #044E
    if (!a5[15:8][0]) {
      #0453
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + (SPH,SPL)) in
          M[a9] := 04;
          let:16 a10 = (-1 + a9) in
          M[a10] := 53;
          A := a1[7:0];
          H := M[208E];
          L := a1[7:0];
          SPH := a10[15:8];
          SPL := a10[7:0];
          FlagS := a5[7:0][7];
          FlagZ := is_zero(a5[7:0]);
          FlagA := a8[7:0][4];
          FlagP := parity(a5[7:0]);
          FlagCY := !a5[15:8][0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + (SPH,SPL)) in
          M[a11] := 04;
          let:16 a12 = (-1 + a11) in
          M[a12] := 53;
          A := a1[7:0];
          H := M[208E];
          L := a1[7:0];
          SPH := a12[15:8];
          SPL := a12[7:0];
          FlagS := a5[7:0][7];
          FlagZ := is_zero(a5[7:0]);
          FlagA := a8[7:0][4];
          FlagP := parity(a5[7:0]);
          FlagCY := !a5[15:8][0];
          jump (0010);
        }
      } else {
        M[208D] := a1[7:0];
        M[208E] := M[208E];
        #0456
        #0459
        let:16 a13 = addWithCarry(true,M[208F],00) in
        let:8 a14 = (M[208F] & 0F) in
        let:8 a15 = (00 & 0F) in
        let:16 a16 = addWithCarry(true,a14,a15) in
        #045A
        M[208F] := a13[7:0];
        M[2090] := M[2090];
        #045D
        #0460
        let:8 a17 = (M[2084] & M[2084]) in
        let:8 a18 = (M[2084] | M[2084]) in
        #0461
        if (!is_zero(a17)) {
          let:16 a19 = (1 + (SPH,SPL)) in
          let:16 a20 = (1 + a19) in
          A := a17;
          H := M[2090];
          L := a13[7:0];
          SPH := a20[15:8];
          SPL := a20[7:0];
          FlagS := a17[7];
          FlagZ := is_zero(a17);
          FlagA := a18[3];
          FlagP := parity(a17);
          FlagCY := false;
          jump ((M[a19],M[(SPH,SPL)]));
        } else {
          #0462
          #0463
          let:8 a21 = (01 & M[(M[2090],a13[7:0])]) in
          let:8 a22 = (01 | M[(M[2090],a13[7:0])]) in
          #0465
          #0468
          if (!is_zero(a21)) {
            #046E
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a23 = (-1 + (SPH,SPL)) in
                M[a23] := 04;
                let:16 a24 = (-1 + a23) in
                M[a24] := 6E;
                A := a21;
                B := 02;
                C := 29;
                H := M[2090];
                L := a13[7:0];
                SPH := a24[15:8];
                SPL := a24[7:0];
                FlagS := a21[7];
                FlagZ := is_zero(a21);
                FlagA := a22[3];
                FlagP := parity(a21);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a25 = (-1 + (SPH,SPL)) in
                M[a25] := 04;
                let:16 a26 = (-1 + a25) in
                M[a26] := 6E;
                A := a21;
                B := 02;
                C := 29;
                H := M[2090];
                L := a13[7:0];
                SPH := a26[15:8];
                SPL := a26[7:0];
                FlagS := a21[7];
                FlagZ := is_zero(a21);
                FlagA := a22[3];
                FlagP := parity(a21);
                FlagCY := false;
                jump (0010);
              }
            } else {
              #0471
              M[208A] := 29;
              #0472
              #0473
              #0474
              M[208C] := 02;
              #0475
              let:16 a27 = (1 + (SPH,SPL)) in
              let:16 a28 = (1 + a27) in
              A := a21;
              B := 02;
              C := 29;
              H := 20;
              L := 8C;
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagS := a21[7];
              FlagZ := is_zero(a21);
              FlagA := a22[3];
              FlagP := parity(a21);
              FlagCY := false;
              jump ((M[a27],M[(SPH,SPL)]));
            }
          } else {
            #046B
            #046E
            #0471
            M[208A] := E0;
            #0472
            #0473
            #0474
            M[208C] := FE;
            #0475
            let:16 a29 = (1 + (SPH,SPL)) in
            let:16 a30 = (1 + a29) in
            A := a21;
            B := FE;
            C := E0;
            H := 20;
            L := 8C;
            SPH := a30[15:8];
            SPL := a30[7:0];
            FlagS := a21[7];
            FlagZ := is_zero(a21);
            FlagA := a22[3];
            FlagP := parity(a21);
            FlagCY := false;
            jump ((M[a29],M[(SPH,SPL)]));
          }
        }
      }
    } else {
      #0451
      #0453
      M[208D] := 54;
      M[208E] := M[208E];
      #0456
      #0459
      let:16 a31 = addWithCarry(true,M[208F],00) in
      let:8 a32 = (M[208F] & 0F) in
      let:8 a33 = (00 & 0F) in
      let:16 a34 = addWithCarry(true,a32,a33) in
      #045A
      M[208F] := a31[7:0];
      M[2090] := M[2090];
      #045D
      #0460
      let:8 a35 = (M[2084] & M[2084]) in
      let:8 a36 = (M[2084] | M[2084]) in
      #0461
      if (!is_zero(a35)) {
        let:16 a37 = (1 + (SPH,SPL)) in
        let:16 a38 = (1 + a37) in
        A := a35;
        H := M[2090];
        L := a31[7:0];
        SPH := a38[15:8];
        SPL := a38[7:0];
        FlagS := a35[7];
        FlagZ := is_zero(a35);
        FlagA := a36[3];
        FlagP := parity(a35);
        FlagCY := false;
        jump ((M[a37],M[(SPH,SPL)]));
      } else {
        #0462
        #0463
        let:8 a39 = (01 & M[(M[2090],a31[7:0])]) in
        let:8 a40 = (01 | M[(M[2090],a31[7:0])]) in
        #0465
        #0468
        if (!is_zero(a39)) {
          #046E
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a41 = (-1 + (SPH,SPL)) in
              M[a41] := 04;
              let:16 a42 = (-1 + a41) in
              M[a42] := 6E;
              A := a39;
              B := 02;
              C := 29;
              H := M[2090];
              L := a31[7:0];
              SPH := a42[15:8];
              SPL := a42[7:0];
              FlagS := a39[7];
              FlagZ := is_zero(a39);
              FlagA := a40[3];
              FlagP := parity(a39);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a43 = (-1 + (SPH,SPL)) in
              M[a43] := 04;
              let:16 a44 = (-1 + a43) in
              M[a44] := 6E;
              A := a39;
              B := 02;
              C := 29;
              H := M[2090];
              L := a31[7:0];
              SPH := a44[15:8];
              SPL := a44[7:0];
              FlagS := a39[7];
              FlagZ := is_zero(a39);
              FlagA := a40[3];
              FlagP := parity(a39);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #0471
            M[208A] := 29;
            #0472
            #0473
            #0474
            M[208C] := 02;
            #0475
            let:16 a45 = (1 + (SPH,SPL)) in
            let:16 a46 = (1 + a45) in
            A := a39;
            B := 02;
            C := 29;
            H := 20;
            L := 8C;
            SPH := a46[15:8];
            SPL := a46[7:0];
            FlagS := a39[7];
            FlagZ := is_zero(a39);
            FlagA := a40[3];
            FlagP := parity(a39);
            FlagCY := false;
            jump ((M[a45],M[(SPH,SPL)]));
          }
        } else {
          #046B
          #046E
          #0471
          M[208A] := E0;
          #0472
          #0473
          #0474
          M[208C] := FE;
          #0475
          let:16 a47 = (1 + (SPH,SPL)) in
          let:16 a48 = (1 + a47) in
          A := a39;
          B := FE;
          C := E0;
          H := 20;
          L := 8C;
          SPH := a48[15:8];
          SPL := a48[7:0];
          FlagS := a39[7];
          FlagZ := is_zero(a39);
          FlagA := a40[3];
          FlagP := parity(a39);
          FlagCY := false;
          jump ((M[a47],M[(SPH,SPL)]));
        }
      }
    }

0476:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #0477
    #047A
    M[2032] := 02;
    #047D
    #0480
    #0481
    let:8 a3 = (M[2039] | M[2038]) in
    #0482
    if (!is_zero(a3)) {
      #048A
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a4 = (-1 + a2) in
          M[a4] := 04;
          let:16 a5 = (-1 + a4) in
          M[a5] := 8A;
          A := a3;
          H := M[2039];
          L := M[2038];
          SPH := a5[15:8];
          SPL := a5[7:0];
          FlagS := a3[7];
          FlagZ := is_zero(a3);
          FlagA := false;
          FlagP := parity(a3);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a6 = (-1 + a2) in
          M[a6] := 04;
          let:16 a7 = (-1 + a6) in
          M[a7] := 8A;
          A := a3;
          H := M[2039];
          L := M[2038];
          SPH := a7[15:8];
          SPL := a7[7:0];
          FlagS := a3[7];
          FlagZ := is_zero(a3);
          FlagA := false;
          FlagP := parity(a3);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #048D
        #048F
        let:16 a8 = (-1 + a2) in
        M[a8] := 04;
        let:16 a9 = (-1 + a8) in
        M[a9] := 92;
        #return-to: 0492
        #0550
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a10 = (-1 + a9) in
            M[a10] := 05;
            let:16 a11 = (-1 + a10) in
            M[a11] := 50;
            A := F9;
            D := 20;
            E := 35;
            H := M[2039];
            L := M[2038];
            SPH := a11[15:8];
            SPL := a11[7:0];
            FlagS := a3[7];
            FlagZ := is_zero(a3);
            FlagA := false;
            FlagP := parity(a3);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a12 = (-1 + a9) in
            M[a12] := 05;
            let:16 a13 = (-1 + a12) in
            M[a13] := 50;
            A := F9;
            D := 20;
            E := 35;
            H := M[2039];
            L := M[2038];
            SPH := a13[15:8];
            SPL := a13[7:0];
            FlagS := a3[7];
            FlagZ := is_zero(a3);
            FlagA := false;
            FlagP := parity(a3);
            FlagCY := false;
            jump (0010);
          }
        } else {
          M[207F] := F9;
          #0553
          #0556
          #0558
          #1A32
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a14 = (-1 + a9) in
              M[a14] := 1A;
              let:16 a15 = (-1 + a14) in
              M[a15] := 32;
              A := F9;
              B := 0B;
              D := 20;
              E := 35;
              H := 20;
              L := 73;
              SPH := a15[15:8];
              SPL := a15[7:0];
              FlagS := a3[7];
              FlagZ := is_zero(a3);
              FlagA := false;
              FlagP := parity(a3);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a16 = (-1 + a9) in
              M[a16] := 1A;
              let:16 a17 = (-1 + a16) in
              M[a17] := 32;
              A := F9;
              B := 0B;
              D := 20;
              E := 35;
              H := 20;
              L := 73;
              SPH := a17[15:8];
              SPL := a17[7:0];
              FlagS := a3[7];
              FlagZ := is_zero(a3);
              FlagA := false;
              FlagP := parity(a3);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #1A33
            M[2073] := M[2035];
            #1A34
            #1A35
            #1A36
            let:16 a18 = addWithCarry(!true,0B,~00) in
            let:8 a19 = (0B & 0F) in
            let:8 a20 = (~00 & 0F) in
            let:16 a21 = addWithCarry(!true,a19,a20) in
            #1A37
            if (!is_zero(a18[7:0])) {
              A := M[2035];
              B := a18[7:0];
              D := 20;
              E := 36;
              H := 20;
              L := 74;
              SPH := a9[15:8];
              SPL := a9[7:0];
              FlagS := a18[7:0][7];
              FlagZ := is_zero(a18[7:0]);
              FlagA := a21[7:0][4];
              FlagP := parity(a18[7:0]);
              FlagCY := false;
              jump (1A32);
            } else {
              #1A3A
              let:16 a22 = (1 + a9) in
              let:16 a23 = (1 + a22) in
              A := M[2035];
              B := a18[7:0];
              D := 20;
              E := 36;
              H := 20;
              L := 74;
              SPH := a23[15:8];
              SPL := a23[7:0];
              FlagS := a18[7:0][7];
              FlagZ := is_zero(a18[7:0]);
              FlagA := a21[7:0][4];
              FlagP := parity(a18[7:0]);
              FlagCY := false;
              jump ((M[a22],M[a9]));
            }
          }
        }
      }
    } else {
      #0485
      let:16 a24 = (-1 + (M[2039],M[2038])) in
      #0486
      M[2038] := a24[7:0];
      M[2039] := a24[15:8];
      #0489
      let:16 a25 = (1 + a2) in
      let:16 a26 = (1 + a25) in
      A := a3;
      H := a24[15:8];
      L := a24[7:0];
      SPH := a26[15:8];
      SPL := a26[7:0];
      FlagS := a3[7];
      FlagZ := is_zero(a3);
      FlagA := false;
      FlagP := parity(a3);
      FlagCY := false;
      jump ((M[a25],M[a2]));
    }

0492:

    #0495
    M[2070] := M[2046];
    #0498
    #049B
    M[2071] := M[2056];
    #049E
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 04;
    let:16 a2 = (-1 + a1) in
    M[a2] := A1;
    #return-to: 04A1
    #0563
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 05;
        let:16 a4 = (-1 + a3) in
        M[a4] := 63;
        A := M[2056];
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 05;
        let:16 a6 = (-1 + a5) in
        M[a6] := 63;
        A := M[2056];
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0566
      #0567
      let:8 a7 = (80 & M[2073]) in
      let:8 a8 = (80 | M[2073]) in
      #0569
      if (!is_zero(a7)) {
        #05C1
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a2) in
            M[a9] := 05;
            let:16 a10 = (-1 + a9) in
            M[a10] := C1;
            A := a7;
            H := 20;
            L := 73;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a11 = (-1 + a2) in
            M[a11] := 05;
            let:16 a12 = (-1 + a11) in
            M[a12] := C1;
            A := a7;
            H := 20;
            L := 73;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #05C4
          let:16 a13 = (-1 + a2) in
          M[a13] := 05;
          let:16 a14 = (-1 + a13) in
          M[a14] := C7;
          #return-to: 05C7
          #1A06
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a15 = (-1 + a14) in
              M[a15] := 1A;
              let:16 a16 = (-1 + a15) in
              M[a16] := 06;
              A := a7;
              D := 20;
              E := 7C;
              H := 20;
              L := 73;
              SPH := a16[15:8];
              SPL := a16[7:0];
              FlagS := a7[7];
              FlagZ := is_zero(a7);
              FlagA := a8[3];
              FlagP := parity(a7);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a17 = (-1 + a14) in
              M[a17] := 1A;
              let:16 a18 = (-1 + a17) in
              M[a18] := 06;
              A := a7;
              D := 20;
              E := 7C;
              H := 20;
              L := 73;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a7[7];
              FlagZ := is_zero(a7);
              FlagA := a8[3];
              FlagP := parity(a7);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #1A09
            #1A0A
            #1A0B
            let:8 a19 = (80 & M[207C]) in
            let:8 a20 = (80 | M[207C]) in
            #1A0D
            let:8 a21 = (M[2072] ^ a19) in
            #1A0E
            if (!is_zero(a21)) {
              let:16 a22 = (1 + a14) in
              let:16 a23 = (1 + a22) in
              A := a21;
              B := M[2072];
              D := 20;
              E := 7C;
              H := 20;
              L := 72;
              SPH := a23[15:8];
              SPL := a23[7:0];
              FlagS := a21[7];
              FlagZ := is_zero(a21);
              FlagA := false;
              FlagP := parity(a21);
              FlagCY := false;
              jump ((M[a22],M[a14]));
            } else {
              #1A0F
              #1A10
              let:16 a24 = (1 + a14) in
              let:16 a25 = (1 + a24) in
              A := a21;
              B := M[2072];
              D := 20;
              E := 7C;
              H := 20;
              L := 72;
              SPH := a25[15:8];
              SPL := a25[7:0];
              FlagS := a21[7];
              FlagZ := is_zero(a21);
              FlagA := false;
              FlagP := parity(a21);
              FlagCY := true;
              jump ((M[a24],M[a14]));
            }
          }
        }
      } else {
        #056C
        #056F
        let:16 a26 = addWithCarry(!false,M[20C1],~04) in
        let:8 a27 = (M[20C1] & 0F) in
        let:8 a28 = (~04 & 0F) in
        let:16 a29 = addWithCarry(!false,a27,a28) in
        #0571
        #0574
        if (is_zero(a26[7:0])) {
          #05B7
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a30 = (-1 + a2) in
              M[a30] := 05;
              let:16 a31 = (-1 + a30) in
              M[a31] := B7;
              A := M[2069];
              H := 20;
              L := 73;
              SPH := a31[15:8];
              SPL := a31[7:0];
              FlagS := a26[7:0][7];
              FlagZ := is_zero(a26[7:0]);
              FlagA := a29[7:0][4];
              FlagP := parity(a26[7:0]);
              FlagCY := !a26[15:8][0];
              jump (0008);
            } else {
              let:16 a32 = (-1 + a2) in
              M[a32] := 05;
              let:16 a33 = (-1 + a32) in
              M[a33] := B7;
              A := M[2069];
              H := 20;
              L := 73;
              SPH := a33[15:8];
              SPL := a33[7:0];
              FlagS := a26[7:0][7];
              FlagZ := is_zero(a26[7:0]);
              FlagA := a29[7:0][4];
              FlagP := parity(a26[7:0]);
              FlagCY := !a26[15:8][0];
              jump (0010);
            }
          } else {
            #05BA
            #05BB
            let:8 a34 = (80 | M[2073]) in
            #05BD
            M[2073] := a34;
            #05BE
            #05BF
            let:16 a35 = addWithCarry(true,M[2074],00) in
            let:8 a36 = (M[2074] & 0F) in
            let:8 a37 = (00 & 0F) in
            let:16 a38 = addWithCarry(true,a36,a37) in
            M[2074] := a35[7:0];
            #05C0
            let:16 a39 = (1 + a2) in
            let:16 a40 = (1 + a39) in
            A := a34;
            H := 20;
            L := 74;
            SPH := a40[15:8];
            SPL := a40[7:0];
            FlagS := a35[7:0][7];
            FlagZ := is_zero(a35[7:0]);
            FlagA := a38[7:0][4];
            FlagP := parity(a35[7:0]);
            FlagCY := false;
            jump ((M[a39],M[a2]));
          }
        } else {
          #0577
          let:8 a41 = (M[2069] & M[2069]) in
          let:8 a42 = (M[2069] | M[2069]) in
          #0578
          if (is_zero(a41)) {
            let:16 a43 = (1 + a2) in
            let:16 a44 = (1 + a43) in
            A := a41;
            H := 20;
            L := 73;
            SPH := a44[15:8];
            SPL := a44[7:0];
            FlagS := a41[7];
            FlagZ := is_zero(a41);
            FlagA := a42[3];
            FlagP := parity(a41);
            FlagCY := false;
            jump ((M[a43],M[a2]));
          } else {
            #0579
            #057A
            M[2074] := 00;
            #057C
            #057F
            let:8 a45 = (M[2070] & M[2070]) in
            let:8 a46 = (M[2070] | M[2070]) in
            #0580
            if (is_zero(a45)) {
              #0589
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a47 = (-1 + a2) in
                  M[a47] := 05;
                  let:16 a48 = (-1 + a47) in
                  M[a48] := 89;
                  A := a45;
                  H := 20;
                  L := 74;
                  SPH := a48[15:8];
                  SPL := a48[7:0];
                  FlagS := a45[7];
                  FlagZ := is_zero(a45);
                  FlagA := a46[3];
                  FlagP := parity(a45);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a49 = (-1 + a2) in
                  M[a49] := 05;
                  let:16 a50 = (-1 + a49) in
                  M[a50] := 89;
                  A := a45;
                  H := 20;
                  L := 74;
                  SPH := a50[15:8];
                  SPL := a50[7:0];
                  FlagS := a45[7];
                  FlagZ := is_zero(a45);
                  FlagA := a46[3];
                  FlagP := parity(a45);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #058C
                let:8 a51 = (M[2071] & M[2071]) in
                let:8 a52 = (M[2071] | M[2071]) in
                #058D
                if (is_zero(a51)) {
                  #0596
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a53 = (-1 + a2) in
                      M[a53] := 05;
                      let:16 a54 = (-1 + a53) in
                      M[a54] := 96;
                      A := a51;
                      H := 20;
                      L := 74;
                      SPH := a54[15:8];
                      SPL := a54[7:0];
                      FlagS := a51[7];
                      FlagZ := is_zero(a51);
                      FlagA := a52[3];
                      FlagP := parity(a51);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a55 = (-1 + a2) in
                      M[a55] := 05;
                      let:16 a56 = (-1 + a55) in
                      M[a56] := 96;
                      A := a51;
                      H := 20;
                      L := 74;
                      SPH := a56[15:8];
                      SPL := a56[7:0];
                      FlagS := a51[7];
                      FlagZ := is_zero(a51);
                      FlagA := a52[3];
                      FlagP := parity(a51);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    #0597
                    #0598
                    let:8 a57 = (M[2075] & M[2075]) in
                    let:8 a58 = (M[2075] | M[2075]) in
                    #0599
                    if (is_zero(a57)) {
                      #061B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a59 = (-1 + a2) in
                          M[a59] := 06;
                          let:16 a60 = (-1 + a59) in
                          M[a60] := 1B;
                          A := a57;
                          H := 20;
                          L := 75;
                          SPH := a60[15:8];
                          SPL := a60[7:0];
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a61 = (-1 + a2) in
                          M[a61] := 06;
                          let:16 a62 = (-1 + a61) in
                          M[a62] := 1B;
                          A := a57;
                          H := 20;
                          L := 75;
                          SPH := a62[15:8];
                          SPL := a62[7:0];
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #061E
                        let:16 a63 = addWithCarry(false,08,M[201B]) in
                        let:8 a64 = (08 & 0F) in
                        let:8 a65 = (M[201B] & 0F) in
                        let:16 a66 = addWithCarry(false,a64,a65) in
                        #0620
                        #0621
                        let:16 a67 = (-1 + a2) in
                        M[a67] := 06;
                        let:16 a68 = (-1 + a67) in
                        M[a68] := 24;
                        #return-to: 0624
                        #156F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a69 = (-1 + a68) in
                            M[a69] := 15;
                            let:16 a70 = (-1 + a69) in
                            M[a70] := 6F;
                            A := a63[7:0];
                            H := a63[7:0];
                            L := 75;
                            SPH := a70[15:8];
                            SPL := a70[7:0];
                            FlagS := a63[7:0][7];
                            FlagZ := is_zero(a63[7:0]);
                            FlagA := a66[7:0][4];
                            FlagP := parity(a63[7:0]);
                            FlagCY := a63[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a71 = (-1 + a68) in
                            M[a71] := 15;
                            let:16 a72 = (-1 + a71) in
                            M[a72] := 6F;
                            A := a63[7:0];
                            H := a63[7:0];
                            L := 75;
                            SPH := a72[15:8];
                            SPL := a72[7:0];
                            FlagS := a63[7:0][7];
                            FlagZ := is_zero(a63[7:0]);
                            FlagA := a66[7:0][4];
                            FlagP := parity(a63[7:0]);
                            FlagCY := a63[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1572
                          let:16 a73 = (-1 + a68) in
                          M[a73] := 15;
                          let:16 a74 = (-1 + a73) in
                          M[a74] := 75;
                          #return-to: 1575
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a75 = (-1 + a74) in
                              M[a75] := 15;
                              let:16 a76 = (-1 + a75) in
                              M[a76] := 54;
                              A := M[200A];
                              H := a63[7:0];
                              L := 75;
                              SPH := a76[15:8];
                              SPL := a76[7:0];
                              FlagS := a63[7:0][7];
                              FlagZ := is_zero(a63[7:0]);
                              FlagA := a66[7:0][4];
                              FlagP := parity(a63[7:0]);
                              FlagCY := a63[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a77 = (-1 + a74) in
                              M[a77] := 15;
                              let:16 a78 = (-1 + a77) in
                              M[a78] := 54;
                              A := M[200A];
                              H := a63[7:0];
                              L := 75;
                              SPH := a78[15:8];
                              SPL := a78[7:0];
                              FlagS := a63[7:0][7];
                              FlagZ := is_zero(a63[7:0]);
                              FlagA := a66[7:0][4];
                              FlagP := parity(a63[7:0]);
                              FlagCY := a63[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a79 = addWithCarry(!false,M[200A],~a63[7:0]) in
                            let:8 a80 = (M[200A] & 0F) in
                            let:8 a81 = (~a63[7:0] & 0F) in
                            let:16 a82 = addWithCarry(!false,a80,a81) in
                            #1557
                            if (!!a79[15:8][0]) {
                              let:16 a83 = (-1 + a74) in
                              M[a83] := 15;
                              let:16 a84 = (-1 + a83) in
                              M[a84] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a85 = (-1 + a84) in
                                  M[a85] := 15;
                                  let:16 a86 = (-1 + a85) in
                                  M[a86] := 90;
                                  A := M[200A];
                                  C := 00;
                                  H := a63[7:0];
                                  L := 75;
                                  SPH := a86[15:8];
                                  SPL := a86[7:0];
                                  FlagS := a79[7:0][7];
                                  FlagZ := is_zero(a79[7:0]);
                                  FlagA := a82[7:0][4];
                                  FlagP := parity(a79[7:0]);
                                  FlagCY := !a79[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a87 = (-1 + a84) in
                                  M[a87] := 15;
                                  let:16 a88 = (-1 + a87) in
                                  M[a88] := 90;
                                  A := M[200A];
                                  C := 00;
                                  H := a63[7:0];
                                  L := 75;
                                  SPH := a88[15:8];
                                  SPL := a88[7:0];
                                  FlagS := a79[7:0][7];
                                  FlagZ := is_zero(a79[7:0]);
                                  FlagA := a82[7:0][4];
                                  FlagP := parity(a79[7:0]);
                                  FlagCY := !a79[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a89 = addWithCarry(true,00,00) in
                                let:8 a90 = (00 & 0F) in
                                let:8 a91 = (00 & 0F) in
                                let:16 a92 = addWithCarry(true,a90,a91) in
                                #1591
                                let:16 a93 = addWithCarry(false,10,M[200A]) in
                                let:8 a94 = (10 & 0F) in
                                let:8 a95 = (M[200A] & 0F) in
                                let:16 a96 = addWithCarry(false,a94,a95) in
                                #1593
                                if (a93[7:0][7]) {
                                  A := a93[7:0];
                                  C := a89[7:0];
                                  H := a63[7:0];
                                  L := 75;
                                  SPH := a84[15:8];
                                  SPL := a84[7:0];
                                  FlagS := a93[7:0][7];
                                  FlagZ := is_zero(a93[7:0]);
                                  FlagA := a96[7:0][4];
                                  FlagP := parity(a93[7:0]);
                                  FlagCY := a93[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a97 = (1 + a84) in
                                  let:16 a98 = (1 + a97) in
                                  A := a93[7:0];
                                  C := a89[7:0];
                                  H := a63[7:0];
                                  L := 75;
                                  SPH := a98[15:8];
                                  SPL := a98[7:0];
                                  FlagS := a93[7:0][7];
                                  FlagZ := is_zero(a93[7:0]);
                                  FlagA := a96[7:0][4];
                                  FlagP := parity(a93[7:0]);
                                  FlagCY := a93[15:8][0];
                                  jump ((M[a97],M[a84]));
                                }
                              }
                            } else {
                              A := M[200A];
                              C := 00;
                              H := a63[7:0];
                              L := 75;
                              SPH := a74[15:8];
                              SPL := a74[7:0];
                              FlagS := a79[7:0][7];
                              FlagZ := is_zero(a79[7:0]);
                              FlagA := a82[7:0][4];
                              FlagP := parity(a79[7:0]);
                              FlagCY := !a79[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #059C
                      #059F
                      #05A0
                      let:16 a99 = (1 + (M[2077],M[2076])) in
                      #05A1
                      #05A2
                      M[2076] := a99[7:0];
                      M[2077] := a99[15:8];
                      #05A5
                      let:16 a100 = (-1 + a2) in
                      M[a100] := 05;
                      let:16 a101 = (-1 + a100) in
                      M[a101] := A8;
                      #return-to: 05A8
                      #062F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a102 = (-1 + a101) in
                          M[a102] := 06;
                          let:16 a103 = (-1 + a102) in
                          M[a103] := 2F;
                          A := a57;
                          C := M[(M[2077],M[2076])];
                          H := a99[15:8];
                          L := a99[7:0];
                          SPH := a103[15:8];
                          SPL := a103[7:0];
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a104 = (-1 + a101) in
                          M[a104] := 06;
                          let:16 a105 = (-1 + a104) in
                          M[a105] := 2F;
                          A := a57;
                          C := M[(M[2077],M[2076])];
                          H := a99[15:8];
                          L := a99[7:0];
                          SPH := a105[15:8];
                          SPL := a105[7:0];
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a106 = addWithCarry(!true,M[(M[2077],M[2076])],~00) in
                        let:8 a107 = (M[(M[2077],M[2076])] & 0F) in
                        let:8 a108 = (~00 & 0F) in
                        let:16 a109 = addWithCarry(!true,a107,a108) in
                        #0630
                        #0633
                        #0634
                        #0635
                        #0637
                        #0638
                        let:8 a110 = (M[(M[2067],a106[7:0])] & M[(M[2067],a106[7:0])]) in
                        let:8 a111 = (M[(M[2067],a106[7:0])] | M[(M[2067],a106[7:0])]) in
                        #0639
                        #063A
                        if (!is_zero(a110)) {
                          let:16 a112 = (1 + a101) in
                          let:16 a113 = (1 + a112) in
                          A := a110;
                          C := a106[7:0];
                          D := 05;
                          H := M[2067];
                          L := a106[7:0];
                          SPH := a113[15:8];
                          SPL := a113[7:0];
                          FlagS := a110[7];
                          FlagZ := is_zero(a110);
                          FlagA := a111[3];
                          FlagP := parity(a110);
                          FlagCY := true;
                          jump ((M[a112],M[a101]));
                        } else {
                          #063B
                          #063C
                          let:16 a114 = addWithCarry(false,0B,a106[7:0]) in
                          let:8 a115 = (0B & 0F) in
                          let:8 a116 = (a106[7:0] & 0F) in
                          let:16 a117 = addWithCarry(false,a115,a116) in
                          #063E
                          #063F
                          let:16 a118 = addWithCarry(!true,05,~00) in
                          let:8 a119 = (05 & 0F) in
                          let:8 a120 = (~00 & 0F) in
                          let:16 a121 = addWithCarry(!true,a119,a120) in
                          #0640
                          if (!is_zero(a118[7:0])) {
                            A := a114[7:0];
                            C := a106[7:0];
                            D := a118[7:0];
                            H := M[2067];
                            L := a114[7:0];
                            SPH := a101[15:8];
                            SPL := a101[7:0];
                            FlagS := a118[7:0][7];
                            FlagZ := is_zero(a118[7:0]);
                            FlagA := a121[7:0][4];
                            FlagP := parity(a118[7:0]);
                            FlagCY := a114[15:8][0];
                            jump (0637);
                          } else {
                            #0643
                            let:16 a122 = (1 + a101) in
                            let:16 a123 = (1 + a122) in
                            A := a114[7:0];
                            C := a106[7:0];
                            D := a118[7:0];
                            H := M[2067];
                            L := a114[7:0];
                            SPH := a123[15:8];
                            SPL := a123[7:0];
                            FlagS := a118[7:0][7];
                            FlagZ := is_zero(a118[7:0]);
                            FlagA := a121[7:0][4];
                            FlagP := parity(a118[7:0]);
                            FlagCY := a114[15:8][0];
                            jump ((M[a122],M[a101]));
                          }
                        }
                      }
                    }
                  }
                } else {
                  #0590
                  #0591
                  #0594
                  let:16 a124 = addWithCarry(!false,M[20CF],~a51) in
                  let:8 a125 = (M[20CF] & 0F) in
                  let:8 a126 = (~a51 & 0F) in
                  let:16 a127 = addWithCarry(!false,a125,a126) in
                  #0595
                  if (!!a124[15:8][0]) {
                    let:16 a128 = (1 + a2) in
                    let:16 a129 = (1 + a128) in
                    A := M[20CF];
                    B := a51;
                    H := 20;
                    L := 74;
                    SPH := a129[15:8];
                    SPL := a129[7:0];
                    FlagS := a124[7:0][7];
                    FlagZ := is_zero(a124[7:0]);
                    FlagA := a127[7:0][4];
                    FlagP := parity(a124[7:0]);
                    FlagCY := !a124[15:8][0];
                    jump ((M[a128],M[a2]));
                  } else {
                    #0596
                    #0597
                    #0598
                    let:8 a130 = (M[2075] & M[2075]) in
                    let:8 a131 = (M[2075] | M[2075]) in
                    #0599
                    if (is_zero(a130)) {
                      #061B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a132 = (-1 + a2) in
                          M[a132] := 06;
                          let:16 a133 = (-1 + a132) in
                          M[a133] := 1B;
                          A := a130;
                          B := a51;
                          H := 20;
                          L := 75;
                          SPH := a133[15:8];
                          SPL := a133[7:0];
                          FlagS := a130[7];
                          FlagZ := is_zero(a130);
                          FlagA := a131[3];
                          FlagP := parity(a130);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a134 = (-1 + a2) in
                          M[a134] := 06;
                          let:16 a135 = (-1 + a134) in
                          M[a135] := 1B;
                          A := a130;
                          B := a51;
                          H := 20;
                          L := 75;
                          SPH := a135[15:8];
                          SPL := a135[7:0];
                          FlagS := a130[7];
                          FlagZ := is_zero(a130);
                          FlagA := a131[3];
                          FlagP := parity(a130);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #061E
                        let:16 a136 = addWithCarry(false,08,M[201B]) in
                        let:8 a137 = (08 & 0F) in
                        let:8 a138 = (M[201B] & 0F) in
                        let:16 a139 = addWithCarry(false,a137,a138) in
                        #0620
                        #0621
                        let:16 a140 = (-1 + a2) in
                        M[a140] := 06;
                        let:16 a141 = (-1 + a140) in
                        M[a141] := 24;
                        #return-to: 0624
                        #156F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a142 = (-1 + a141) in
                            M[a142] := 15;
                            let:16 a143 = (-1 + a142) in
                            M[a143] := 6F;
                            A := a136[7:0];
                            B := a51;
                            H := a136[7:0];
                            L := 75;
                            SPH := a143[15:8];
                            SPL := a143[7:0];
                            FlagS := a136[7:0][7];
                            FlagZ := is_zero(a136[7:0]);
                            FlagA := a139[7:0][4];
                            FlagP := parity(a136[7:0]);
                            FlagCY := a136[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a144 = (-1 + a141) in
                            M[a144] := 15;
                            let:16 a145 = (-1 + a144) in
                            M[a145] := 6F;
                            A := a136[7:0];
                            B := a51;
                            H := a136[7:0];
                            L := 75;
                            SPH := a145[15:8];
                            SPL := a145[7:0];
                            FlagS := a136[7:0][7];
                            FlagZ := is_zero(a136[7:0]);
                            FlagA := a139[7:0][4];
                            FlagP := parity(a136[7:0]);
                            FlagCY := a136[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1572
                          let:16 a146 = (-1 + a141) in
                          M[a146] := 15;
                          let:16 a147 = (-1 + a146) in
                          M[a147] := 75;
                          #return-to: 1575
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a148 = (-1 + a147) in
                              M[a148] := 15;
                              let:16 a149 = (-1 + a148) in
                              M[a149] := 54;
                              A := M[200A];
                              B := a51;
                              H := a136[7:0];
                              L := 75;
                              SPH := a149[15:8];
                              SPL := a149[7:0];
                              FlagS := a136[7:0][7];
                              FlagZ := is_zero(a136[7:0]);
                              FlagA := a139[7:0][4];
                              FlagP := parity(a136[7:0]);
                              FlagCY := a136[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a150 = (-1 + a147) in
                              M[a150] := 15;
                              let:16 a151 = (-1 + a150) in
                              M[a151] := 54;
                              A := M[200A];
                              B := a51;
                              H := a136[7:0];
                              L := 75;
                              SPH := a151[15:8];
                              SPL := a151[7:0];
                              FlagS := a136[7:0][7];
                              FlagZ := is_zero(a136[7:0]);
                              FlagA := a139[7:0][4];
                              FlagP := parity(a136[7:0]);
                              FlagCY := a136[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a152 = addWithCarry(!false,M[200A],~a136[7:0]) in
                            let:8 a153 = (M[200A] & 0F) in
                            let:8 a154 = (~a136[7:0] & 0F) in
                            let:16 a155 = addWithCarry(!false,a153,a154) in
                            #1557
                            if (!!a152[15:8][0]) {
                              let:16 a156 = (-1 + a147) in
                              M[a156] := 15;
                              let:16 a157 = (-1 + a156) in
                              M[a157] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a158 = (-1 + a157) in
                                  M[a158] := 15;
                                  let:16 a159 = (-1 + a158) in
                                  M[a159] := 90;
                                  A := M[200A];
                                  B := a51;
                                  C := 00;
                                  H := a136[7:0];
                                  L := 75;
                                  SPH := a159[15:8];
                                  SPL := a159[7:0];
                                  FlagS := a152[7:0][7];
                                  FlagZ := is_zero(a152[7:0]);
                                  FlagA := a155[7:0][4];
                                  FlagP := parity(a152[7:0]);
                                  FlagCY := !a152[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a160 = (-1 + a157) in
                                  M[a160] := 15;
                                  let:16 a161 = (-1 + a160) in
                                  M[a161] := 90;
                                  A := M[200A];
                                  B := a51;
                                  C := 00;
                                  H := a136[7:0];
                                  L := 75;
                                  SPH := a161[15:8];
                                  SPL := a161[7:0];
                                  FlagS := a152[7:0][7];
                                  FlagZ := is_zero(a152[7:0]);
                                  FlagA := a155[7:0][4];
                                  FlagP := parity(a152[7:0]);
                                  FlagCY := !a152[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a162 = addWithCarry(true,00,00) in
                                let:8 a163 = (00 & 0F) in
                                let:8 a164 = (00 & 0F) in
                                let:16 a165 = addWithCarry(true,a163,a164) in
                                #1591
                                let:16 a166 = addWithCarry(false,10,M[200A]) in
                                let:8 a167 = (10 & 0F) in
                                let:8 a168 = (M[200A] & 0F) in
                                let:16 a169 = addWithCarry(false,a167,a168) in
                                #1593
                                if (a166[7:0][7]) {
                                  A := a166[7:0];
                                  B := a51;
                                  C := a162[7:0];
                                  H := a136[7:0];
                                  L := 75;
                                  SPH := a157[15:8];
                                  SPL := a157[7:0];
                                  FlagS := a166[7:0][7];
                                  FlagZ := is_zero(a166[7:0]);
                                  FlagA := a169[7:0][4];
                                  FlagP := parity(a166[7:0]);
                                  FlagCY := a166[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a170 = (1 + a157) in
                                  let:16 a171 = (1 + a170) in
                                  A := a166[7:0];
                                  B := a51;
                                  C := a162[7:0];
                                  H := a136[7:0];
                                  L := 75;
                                  SPH := a171[15:8];
                                  SPL := a171[7:0];
                                  FlagS := a166[7:0][7];
                                  FlagZ := is_zero(a166[7:0]);
                                  FlagA := a169[7:0][4];
                                  FlagP := parity(a166[7:0]);
                                  FlagCY := a166[15:8][0];
                                  jump ((M[a170],M[a157]));
                                }
                              }
                            } else {
                              A := M[200A];
                              B := a51;
                              C := 00;
                              H := a136[7:0];
                              L := 75;
                              SPH := a147[15:8];
                              SPL := a147[7:0];
                              FlagS := a152[7:0][7];
                              FlagZ := is_zero(a152[7:0]);
                              FlagA := a155[7:0][4];
                              FlagP := parity(a152[7:0]);
                              FlagCY := !a152[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #059C
                      #059F
                      #05A0
                      let:16 a172 = (1 + (M[2077],M[2076])) in
                      #05A1
                      #05A2
                      M[2076] := a172[7:0];
                      M[2077] := a172[15:8];
                      #05A5
                      let:16 a173 = (-1 + a2) in
                      M[a173] := 05;
                      let:16 a174 = (-1 + a173) in
                      M[a174] := A8;
                      #return-to: 05A8
                      #062F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a175 = (-1 + a174) in
                          M[a175] := 06;
                          let:16 a176 = (-1 + a175) in
                          M[a176] := 2F;
                          A := a130;
                          B := a51;
                          C := M[(M[2077],M[2076])];
                          H := a172[15:8];
                          L := a172[7:0];
                          SPH := a176[15:8];
                          SPL := a176[7:0];
                          FlagS := a130[7];
                          FlagZ := is_zero(a130);
                          FlagA := a131[3];
                          FlagP := parity(a130);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a177 = (-1 + a174) in
                          M[a177] := 06;
                          let:16 a178 = (-1 + a177) in
                          M[a178] := 2F;
                          A := a130;
                          B := a51;
                          C := M[(M[2077],M[2076])];
                          H := a172[15:8];
                          L := a172[7:0];
                          SPH := a178[15:8];
                          SPL := a178[7:0];
                          FlagS := a130[7];
                          FlagZ := is_zero(a130);
                          FlagA := a131[3];
                          FlagP := parity(a130);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a179 = addWithCarry(!true,M[(M[2077],M[2076])],~00) in
                        let:8 a180 = (M[(M[2077],M[2076])] & 0F) in
                        let:8 a181 = (~00 & 0F) in
                        let:16 a182 = addWithCarry(!true,a180,a181) in
                        #0630
                        #0633
                        #0634
                        #0635
                        #0637
                        #0638
                        let:8 a183 = (M[(M[2067],a179[7:0])] & M[(M[2067],a179[7:0])]) in
                        let:8 a184 = (M[(M[2067],a179[7:0])] | M[(M[2067],a179[7:0])]) in
                        #0639
                        #063A
                        if (!is_zero(a183)) {
                          let:16 a185 = (1 + a174) in
                          let:16 a186 = (1 + a185) in
                          A := a183;
                          B := a51;
                          C := a179[7:0];
                          D := 05;
                          H := M[2067];
                          L := a179[7:0];
                          SPH := a186[15:8];
                          SPL := a186[7:0];
                          FlagS := a183[7];
                          FlagZ := is_zero(a183);
                          FlagA := a184[3];
                          FlagP := parity(a183);
                          FlagCY := true;
                          jump ((M[a185],M[a174]));
                        } else {
                          #063B
                          #063C
                          let:16 a187 = addWithCarry(false,0B,a179[7:0]) in
                          let:8 a188 = (0B & 0F) in
                          let:8 a189 = (a179[7:0] & 0F) in
                          let:16 a190 = addWithCarry(false,a188,a189) in
                          #063E
                          #063F
                          let:16 a191 = addWithCarry(!true,05,~00) in
                          let:8 a192 = (05 & 0F) in
                          let:8 a193 = (~00 & 0F) in
                          let:16 a194 = addWithCarry(!true,a192,a193) in
                          #0640
                          if (!is_zero(a191[7:0])) {
                            A := a187[7:0];
                            B := a51;
                            C := a179[7:0];
                            D := a191[7:0];
                            H := M[2067];
                            L := a187[7:0];
                            SPH := a174[15:8];
                            SPL := a174[7:0];
                            FlagS := a191[7:0][7];
                            FlagZ := is_zero(a191[7:0]);
                            FlagA := a194[7:0][4];
                            FlagP := parity(a191[7:0]);
                            FlagCY := a187[15:8][0];
                            jump (0637);
                          } else {
                            #0643
                            let:16 a195 = (1 + a174) in
                            let:16 a196 = (1 + a195) in
                            A := a187[7:0];
                            B := a51;
                            C := a179[7:0];
                            D := a191[7:0];
                            H := M[2067];
                            L := a187[7:0];
                            SPH := a196[15:8];
                            SPL := a196[7:0];
                            FlagS := a191[7:0][7];
                            FlagZ := is_zero(a191[7:0]);
                            FlagA := a194[7:0][4];
                            FlagP := parity(a191[7:0]);
                            FlagCY := a187[15:8][0];
                            jump ((M[a195],M[a174]));
                          }
                        }
                      }
                    }
                  }
                }
              }
            } else {
              #0583
              #0584
              #0587
              let:16 a197 = addWithCarry(!false,M[20CF],~a45) in
              let:8 a198 = (M[20CF] & 0F) in
              let:8 a199 = (~a45 & 0F) in
              let:16 a200 = addWithCarry(!false,a198,a199) in
              #0588
              if (!!a197[15:8][0]) {
                let:16 a201 = (1 + a2) in
                let:16 a202 = (1 + a201) in
                A := M[20CF];
                B := a45;
                H := 20;
                L := 74;
                SPH := a202[15:8];
                SPL := a202[7:0];
                FlagS := a197[7:0][7];
                FlagZ := is_zero(a197[7:0]);
                FlagA := a200[7:0][4];
                FlagP := parity(a197[7:0]);
                FlagCY := !a197[15:8][0];
                jump ((M[a201],M[a2]));
              } else {
                #0589
                #058C
                let:8 a203 = (M[2071] & M[2071]) in
                let:8 a204 = (M[2071] | M[2071]) in
                #058D
                if (is_zero(a203)) {
                  #0596
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a205 = (-1 + a2) in
                      M[a205] := 05;
                      let:16 a206 = (-1 + a205) in
                      M[a206] := 96;
                      A := a203;
                      B := a45;
                      H := 20;
                      L := 74;
                      SPH := a206[15:8];
                      SPL := a206[7:0];
                      FlagS := a203[7];
                      FlagZ := is_zero(a203);
                      FlagA := a204[3];
                      FlagP := parity(a203);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a207 = (-1 + a2) in
                      M[a207] := 05;
                      let:16 a208 = (-1 + a207) in
                      M[a208] := 96;
                      A := a203;
                      B := a45;
                      H := 20;
                      L := 74;
                      SPH := a208[15:8];
                      SPL := a208[7:0];
                      FlagS := a203[7];
                      FlagZ := is_zero(a203);
                      FlagA := a204[3];
                      FlagP := parity(a203);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    #0597
                    #0598
                    let:8 a209 = (M[2075] & M[2075]) in
                    let:8 a210 = (M[2075] | M[2075]) in
                    #0599
                    if (is_zero(a209)) {
                      #061B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a211 = (-1 + a2) in
                          M[a211] := 06;
                          let:16 a212 = (-1 + a211) in
                          M[a212] := 1B;
                          A := a209;
                          B := a45;
                          H := 20;
                          L := 75;
                          SPH := a212[15:8];
                          SPL := a212[7:0];
                          FlagS := a209[7];
                          FlagZ := is_zero(a209);
                          FlagA := a210[3];
                          FlagP := parity(a209);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a213 = (-1 + a2) in
                          M[a213] := 06;
                          let:16 a214 = (-1 + a213) in
                          M[a214] := 1B;
                          A := a209;
                          B := a45;
                          H := 20;
                          L := 75;
                          SPH := a214[15:8];
                          SPL := a214[7:0];
                          FlagS := a209[7];
                          FlagZ := is_zero(a209);
                          FlagA := a210[3];
                          FlagP := parity(a209);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #061E
                        let:16 a215 = addWithCarry(false,08,M[201B]) in
                        let:8 a216 = (08 & 0F) in
                        let:8 a217 = (M[201B] & 0F) in
                        let:16 a218 = addWithCarry(false,a216,a217) in
                        #0620
                        #0621
                        let:16 a219 = (-1 + a2) in
                        M[a219] := 06;
                        let:16 a220 = (-1 + a219) in
                        M[a220] := 24;
                        #return-to: 0624
                        #156F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a221 = (-1 + a220) in
                            M[a221] := 15;
                            let:16 a222 = (-1 + a221) in
                            M[a222] := 6F;
                            A := a215[7:0];
                            B := a45;
                            H := a215[7:0];
                            L := 75;
                            SPH := a222[15:8];
                            SPL := a222[7:0];
                            FlagS := a215[7:0][7];
                            FlagZ := is_zero(a215[7:0]);
                            FlagA := a218[7:0][4];
                            FlagP := parity(a215[7:0]);
                            FlagCY := a215[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a223 = (-1 + a220) in
                            M[a223] := 15;
                            let:16 a224 = (-1 + a223) in
                            M[a224] := 6F;
                            A := a215[7:0];
                            B := a45;
                            H := a215[7:0];
                            L := 75;
                            SPH := a224[15:8];
                            SPL := a224[7:0];
                            FlagS := a215[7:0][7];
                            FlagZ := is_zero(a215[7:0]);
                            FlagA := a218[7:0][4];
                            FlagP := parity(a215[7:0]);
                            FlagCY := a215[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1572
                          let:16 a225 = (-1 + a220) in
                          M[a225] := 15;
                          let:16 a226 = (-1 + a225) in
                          M[a226] := 75;
                          #return-to: 1575
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a227 = (-1 + a226) in
                              M[a227] := 15;
                              let:16 a228 = (-1 + a227) in
                              M[a228] := 54;
                              A := M[200A];
                              B := a45;
                              H := a215[7:0];
                              L := 75;
                              SPH := a228[15:8];
                              SPL := a228[7:0];
                              FlagS := a215[7:0][7];
                              FlagZ := is_zero(a215[7:0]);
                              FlagA := a218[7:0][4];
                              FlagP := parity(a215[7:0]);
                              FlagCY := a215[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a229 = (-1 + a226) in
                              M[a229] := 15;
                              let:16 a230 = (-1 + a229) in
                              M[a230] := 54;
                              A := M[200A];
                              B := a45;
                              H := a215[7:0];
                              L := 75;
                              SPH := a230[15:8];
                              SPL := a230[7:0];
                              FlagS := a215[7:0][7];
                              FlagZ := is_zero(a215[7:0]);
                              FlagA := a218[7:0][4];
                              FlagP := parity(a215[7:0]);
                              FlagCY := a215[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a231 = addWithCarry(!false,M[200A],~a215[7:0]) in
                            let:8 a232 = (M[200A] & 0F) in
                            let:8 a233 = (~a215[7:0] & 0F) in
                            let:16 a234 = addWithCarry(!false,a232,a233) in
                            #1557
                            if (!!a231[15:8][0]) {
                              let:16 a235 = (-1 + a226) in
                              M[a235] := 15;
                              let:16 a236 = (-1 + a235) in
                              M[a236] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a237 = (-1 + a236) in
                                  M[a237] := 15;
                                  let:16 a238 = (-1 + a237) in
                                  M[a238] := 90;
                                  A := M[200A];
                                  B := a45;
                                  C := 00;
                                  H := a215[7:0];
                                  L := 75;
                                  SPH := a238[15:8];
                                  SPL := a238[7:0];
                                  FlagS := a231[7:0][7];
                                  FlagZ := is_zero(a231[7:0]);
                                  FlagA := a234[7:0][4];
                                  FlagP := parity(a231[7:0]);
                                  FlagCY := !a231[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a239 = (-1 + a236) in
                                  M[a239] := 15;
                                  let:16 a240 = (-1 + a239) in
                                  M[a240] := 90;
                                  A := M[200A];
                                  B := a45;
                                  C := 00;
                                  H := a215[7:0];
                                  L := 75;
                                  SPH := a240[15:8];
                                  SPL := a240[7:0];
                                  FlagS := a231[7:0][7];
                                  FlagZ := is_zero(a231[7:0]);
                                  FlagA := a234[7:0][4];
                                  FlagP := parity(a231[7:0]);
                                  FlagCY := !a231[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a241 = addWithCarry(true,00,00) in
                                let:8 a242 = (00 & 0F) in
                                let:8 a243 = (00 & 0F) in
                                let:16 a244 = addWithCarry(true,a242,a243) in
                                #1591
                                let:16 a245 = addWithCarry(false,10,M[200A]) in
                                let:8 a246 = (10 & 0F) in
                                let:8 a247 = (M[200A] & 0F) in
                                let:16 a248 = addWithCarry(false,a246,a247) in
                                #1593
                                if (a245[7:0][7]) {
                                  A := a245[7:0];
                                  B := a45;
                                  C := a241[7:0];
                                  H := a215[7:0];
                                  L := 75;
                                  SPH := a236[15:8];
                                  SPL := a236[7:0];
                                  FlagS := a245[7:0][7];
                                  FlagZ := is_zero(a245[7:0]);
                                  FlagA := a248[7:0][4];
                                  FlagP := parity(a245[7:0]);
                                  FlagCY := a245[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a249 = (1 + a236) in
                                  let:16 a250 = (1 + a249) in
                                  A := a245[7:0];
                                  B := a45;
                                  C := a241[7:0];
                                  H := a215[7:0];
                                  L := 75;
                                  SPH := a250[15:8];
                                  SPL := a250[7:0];
                                  FlagS := a245[7:0][7];
                                  FlagZ := is_zero(a245[7:0]);
                                  FlagA := a248[7:0][4];
                                  FlagP := parity(a245[7:0]);
                                  FlagCY := a245[15:8][0];
                                  jump ((M[a249],M[a236]));
                                }
                              }
                            } else {
                              A := M[200A];
                              B := a45;
                              C := 00;
                              H := a215[7:0];
                              L := 75;
                              SPH := a226[15:8];
                              SPL := a226[7:0];
                              FlagS := a231[7:0][7];
                              FlagZ := is_zero(a231[7:0]);
                              FlagA := a234[7:0][4];
                              FlagP := parity(a231[7:0]);
                              FlagCY := !a231[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #059C
                      #059F
                      #05A0
                      let:16 a251 = (1 + (M[2077],M[2076])) in
                      #05A1
                      #05A2
                      M[2076] := a251[7:0];
                      M[2077] := a251[15:8];
                      #05A5
                      let:16 a252 = (-1 + a2) in
                      M[a252] := 05;
                      let:16 a253 = (-1 + a252) in
                      M[a253] := A8;
                      #return-to: 05A8
                      #062F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a254 = (-1 + a253) in
                          M[a254] := 06;
                          let:16 a255 = (-1 + a254) in
                          M[a255] := 2F;
                          A := a209;
                          B := a45;
                          C := M[(M[2077],M[2076])];
                          H := a251[15:8];
                          L := a251[7:0];
                          SPH := a255[15:8];
                          SPL := a255[7:0];
                          FlagS := a209[7];
                          FlagZ := is_zero(a209);
                          FlagA := a210[3];
                          FlagP := parity(a209);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a256 = (-1 + a253) in
                          M[a256] := 06;
                          let:16 a257 = (-1 + a256) in
                          M[a257] := 2F;
                          A := a209;
                          B := a45;
                          C := M[(M[2077],M[2076])];
                          H := a251[15:8];
                          L := a251[7:0];
                          SPH := a257[15:8];
                          SPL := a257[7:0];
                          FlagS := a209[7];
                          FlagZ := is_zero(a209);
                          FlagA := a210[3];
                          FlagP := parity(a209);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a258 = addWithCarry(!true,M[(M[2077],M[2076])],~00) in
                        let:8 a259 = (M[(M[2077],M[2076])] & 0F) in
                        let:8 a260 = (~00 & 0F) in
                        let:16 a261 = addWithCarry(!true,a259,a260) in
                        #0630
                        #0633
                        #0634
                        #0635
                        #0637
                        #0638
                        let:8 a262 = (M[(M[2067],a258[7:0])] & M[(M[2067],a258[7:0])]) in
                        let:8 a263 = (M[(M[2067],a258[7:0])] | M[(M[2067],a258[7:0])]) in
                        #0639
                        #063A
                        if (!is_zero(a262)) {
                          let:16 a264 = (1 + a253) in
                          let:16 a265 = (1 + a264) in
                          A := a262;
                          B := a45;
                          C := a258[7:0];
                          D := 05;
                          H := M[2067];
                          L := a258[7:0];
                          SPH := a265[15:8];
                          SPL := a265[7:0];
                          FlagS := a262[7];
                          FlagZ := is_zero(a262);
                          FlagA := a263[3];
                          FlagP := parity(a262);
                          FlagCY := true;
                          jump ((M[a264],M[a253]));
                        } else {
                          #063B
                          #063C
                          let:16 a266 = addWithCarry(false,0B,a258[7:0]) in
                          let:8 a267 = (0B & 0F) in
                          let:8 a268 = (a258[7:0] & 0F) in
                          let:16 a269 = addWithCarry(false,a267,a268) in
                          #063E
                          #063F
                          let:16 a270 = addWithCarry(!true,05,~00) in
                          let:8 a271 = (05 & 0F) in
                          let:8 a272 = (~00 & 0F) in
                          let:16 a273 = addWithCarry(!true,a271,a272) in
                          #0640
                          if (!is_zero(a270[7:0])) {
                            A := a266[7:0];
                            B := a45;
                            C := a258[7:0];
                            D := a270[7:0];
                            H := M[2067];
                            L := a266[7:0];
                            SPH := a253[15:8];
                            SPL := a253[7:0];
                            FlagS := a270[7:0][7];
                            FlagZ := is_zero(a270[7:0]);
                            FlagA := a273[7:0][4];
                            FlagP := parity(a270[7:0]);
                            FlagCY := a266[15:8][0];
                            jump (0637);
                          } else {
                            #0643
                            let:16 a274 = (1 + a253) in
                            let:16 a275 = (1 + a274) in
                            A := a266[7:0];
                            B := a45;
                            C := a258[7:0];
                            D := a270[7:0];
                            H := M[2067];
                            L := a266[7:0];
                            SPH := a275[15:8];
                            SPL := a275[7:0];
                            FlagS := a270[7:0][7];
                            FlagZ := is_zero(a270[7:0]);
                            FlagA := a273[7:0][4];
                            FlagP := parity(a270[7:0]);
                            FlagCY := a266[15:8][0];
                            jump ((M[a274],M[a253]));
                          }
                        }
                      }
                    }
                  }
                } else {
                  #0590
                  #0591
                  #0594
                  let:16 a276 = addWithCarry(!false,M[20CF],~a203) in
                  let:8 a277 = (M[20CF] & 0F) in
                  let:8 a278 = (~a203 & 0F) in
                  let:16 a279 = addWithCarry(!false,a277,a278) in
                  #0595
                  if (!!a276[15:8][0]) {
                    let:16 a280 = (1 + a2) in
                    let:16 a281 = (1 + a280) in
                    A := M[20CF];
                    B := a203;
                    H := 20;
                    L := 74;
                    SPH := a281[15:8];
                    SPL := a281[7:0];
                    FlagS := a276[7:0][7];
                    FlagZ := is_zero(a276[7:0]);
                    FlagA := a279[7:0][4];
                    FlagP := parity(a276[7:0]);
                    FlagCY := !a276[15:8][0];
                    jump ((M[a280],M[a2]));
                  } else {
                    #0596
                    #0597
                    #0598
                    let:8 a282 = (M[2075] & M[2075]) in
                    let:8 a283 = (M[2075] | M[2075]) in
                    #0599
                    if (is_zero(a282)) {
                      #061B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a284 = (-1 + a2) in
                          M[a284] := 06;
                          let:16 a285 = (-1 + a284) in
                          M[a285] := 1B;
                          A := a282;
                          B := a203;
                          H := 20;
                          L := 75;
                          SPH := a285[15:8];
                          SPL := a285[7:0];
                          FlagS := a282[7];
                          FlagZ := is_zero(a282);
                          FlagA := a283[3];
                          FlagP := parity(a282);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a286 = (-1 + a2) in
                          M[a286] := 06;
                          let:16 a287 = (-1 + a286) in
                          M[a287] := 1B;
                          A := a282;
                          B := a203;
                          H := 20;
                          L := 75;
                          SPH := a287[15:8];
                          SPL := a287[7:0];
                          FlagS := a282[7];
                          FlagZ := is_zero(a282);
                          FlagA := a283[3];
                          FlagP := parity(a282);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #061E
                        let:16 a288 = addWithCarry(false,08,M[201B]) in
                        let:8 a289 = (08 & 0F) in
                        let:8 a290 = (M[201B] & 0F) in
                        let:16 a291 = addWithCarry(false,a289,a290) in
                        #0620
                        #0621
                        let:16 a292 = (-1 + a2) in
                        M[a292] := 06;
                        let:16 a293 = (-1 + a292) in
                        M[a293] := 24;
                        #return-to: 0624
                        #156F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a294 = (-1 + a293) in
                            M[a294] := 15;
                            let:16 a295 = (-1 + a294) in
                            M[a295] := 6F;
                            A := a288[7:0];
                            B := a203;
                            H := a288[7:0];
                            L := 75;
                            SPH := a295[15:8];
                            SPL := a295[7:0];
                            FlagS := a288[7:0][7];
                            FlagZ := is_zero(a288[7:0]);
                            FlagA := a291[7:0][4];
                            FlagP := parity(a288[7:0]);
                            FlagCY := a288[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a296 = (-1 + a293) in
                            M[a296] := 15;
                            let:16 a297 = (-1 + a296) in
                            M[a297] := 6F;
                            A := a288[7:0];
                            B := a203;
                            H := a288[7:0];
                            L := 75;
                            SPH := a297[15:8];
                            SPL := a297[7:0];
                            FlagS := a288[7:0][7];
                            FlagZ := is_zero(a288[7:0]);
                            FlagA := a291[7:0][4];
                            FlagP := parity(a288[7:0]);
                            FlagCY := a288[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1572
                          let:16 a298 = (-1 + a293) in
                          M[a298] := 15;
                          let:16 a299 = (-1 + a298) in
                          M[a299] := 75;
                          #return-to: 1575
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a300 = (-1 + a299) in
                              M[a300] := 15;
                              let:16 a301 = (-1 + a300) in
                              M[a301] := 54;
                              A := M[200A];
                              B := a203;
                              H := a288[7:0];
                              L := 75;
                              SPH := a301[15:8];
                              SPL := a301[7:0];
                              FlagS := a288[7:0][7];
                              FlagZ := is_zero(a288[7:0]);
                              FlagA := a291[7:0][4];
                              FlagP := parity(a288[7:0]);
                              FlagCY := a288[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a302 = (-1 + a299) in
                              M[a302] := 15;
                              let:16 a303 = (-1 + a302) in
                              M[a303] := 54;
                              A := M[200A];
                              B := a203;
                              H := a288[7:0];
                              L := 75;
                              SPH := a303[15:8];
                              SPL := a303[7:0];
                              FlagS := a288[7:0][7];
                              FlagZ := is_zero(a288[7:0]);
                              FlagA := a291[7:0][4];
                              FlagP := parity(a288[7:0]);
                              FlagCY := a288[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a304 = addWithCarry(!false,M[200A],~a288[7:0]) in
                            let:8 a305 = (M[200A] & 0F) in
                            let:8 a306 = (~a288[7:0] & 0F) in
                            let:16 a307 = addWithCarry(!false,a305,a306) in
                            #1557
                            if (!!a304[15:8][0]) {
                              let:16 a308 = (-1 + a299) in
                              M[a308] := 15;
                              let:16 a309 = (-1 + a308) in
                              M[a309] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a310 = (-1 + a309) in
                                  M[a310] := 15;
                                  let:16 a311 = (-1 + a310) in
                                  M[a311] := 90;
                                  A := M[200A];
                                  B := a203;
                                  C := 00;
                                  H := a288[7:0];
                                  L := 75;
                                  SPH := a311[15:8];
                                  SPL := a311[7:0];
                                  FlagS := a304[7:0][7];
                                  FlagZ := is_zero(a304[7:0]);
                                  FlagA := a307[7:0][4];
                                  FlagP := parity(a304[7:0]);
                                  FlagCY := !a304[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a312 = (-1 + a309) in
                                  M[a312] := 15;
                                  let:16 a313 = (-1 + a312) in
                                  M[a313] := 90;
                                  A := M[200A];
                                  B := a203;
                                  C := 00;
                                  H := a288[7:0];
                                  L := 75;
                                  SPH := a313[15:8];
                                  SPL := a313[7:0];
                                  FlagS := a304[7:0][7];
                                  FlagZ := is_zero(a304[7:0]);
                                  FlagA := a307[7:0][4];
                                  FlagP := parity(a304[7:0]);
                                  FlagCY := !a304[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a314 = addWithCarry(true,00,00) in
                                let:8 a315 = (00 & 0F) in
                                let:8 a316 = (00 & 0F) in
                                let:16 a317 = addWithCarry(true,a315,a316) in
                                #1591
                                let:16 a318 = addWithCarry(false,10,M[200A]) in
                                let:8 a319 = (10 & 0F) in
                                let:8 a320 = (M[200A] & 0F) in
                                let:16 a321 = addWithCarry(false,a319,a320) in
                                #1593
                                if (a318[7:0][7]) {
                                  A := a318[7:0];
                                  B := a203;
                                  C := a314[7:0];
                                  H := a288[7:0];
                                  L := 75;
                                  SPH := a309[15:8];
                                  SPL := a309[7:0];
                                  FlagS := a318[7:0][7];
                                  FlagZ := is_zero(a318[7:0]);
                                  FlagA := a321[7:0][4];
                                  FlagP := parity(a318[7:0]);
                                  FlagCY := a318[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a322 = (1 + a309) in
                                  let:16 a323 = (1 + a322) in
                                  A := a318[7:0];
                                  B := a203;
                                  C := a314[7:0];
                                  H := a288[7:0];
                                  L := 75;
                                  SPH := a323[15:8];
                                  SPL := a323[7:0];
                                  FlagS := a318[7:0][7];
                                  FlagZ := is_zero(a318[7:0]);
                                  FlagA := a321[7:0][4];
                                  FlagP := parity(a318[7:0]);
                                  FlagCY := a318[15:8][0];
                                  jump ((M[a322],M[a309]));
                                }
                              }
                            } else {
                              A := M[200A];
                              B := a203;
                              C := 00;
                              H := a288[7:0];
                              L := 75;
                              SPH := a299[15:8];
                              SPL := a299[7:0];
                              FlagS := a304[7:0][7];
                              FlagZ := is_zero(a304[7:0]);
                              FlagA := a307[7:0][4];
                              FlagP := parity(a304[7:0]);
                              FlagCY := !a304[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #059C
                      #059F
                      #05A0
                      let:16 a324 = (1 + (M[2077],M[2076])) in
                      #05A1
                      #05A2
                      M[2076] := a324[7:0];
                      M[2077] := a324[15:8];
                      #05A5
                      let:16 a325 = (-1 + a2) in
                      M[a325] := 05;
                      let:16 a326 = (-1 + a325) in
                      M[a326] := A8;
                      #return-to: 05A8
                      #062F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a327 = (-1 + a326) in
                          M[a327] := 06;
                          let:16 a328 = (-1 + a327) in
                          M[a328] := 2F;
                          A := a282;
                          B := a203;
                          C := M[(M[2077],M[2076])];
                          H := a324[15:8];
                          L := a324[7:0];
                          SPH := a328[15:8];
                          SPL := a328[7:0];
                          FlagS := a282[7];
                          FlagZ := is_zero(a282);
                          FlagA := a283[3];
                          FlagP := parity(a282);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a329 = (-1 + a326) in
                          M[a329] := 06;
                          let:16 a330 = (-1 + a329) in
                          M[a330] := 2F;
                          A := a282;
                          B := a203;
                          C := M[(M[2077],M[2076])];
                          H := a324[15:8];
                          L := a324[7:0];
                          SPH := a330[15:8];
                          SPL := a330[7:0];
                          FlagS := a282[7];
                          FlagZ := is_zero(a282);
                          FlagA := a283[3];
                          FlagP := parity(a282);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a331 = addWithCarry(!true,M[(M[2077],M[2076])],~00) in
                        let:8 a332 = (M[(M[2077],M[2076])] & 0F) in
                        let:8 a333 = (~00 & 0F) in
                        let:16 a334 = addWithCarry(!true,a332,a333) in
                        #0630
                        #0633
                        #0634
                        #0635
                        #0637
                        #0638
                        let:8 a335 = (M[(M[2067],a331[7:0])] & M[(M[2067],a331[7:0])]) in
                        let:8 a336 = (M[(M[2067],a331[7:0])] | M[(M[2067],a331[7:0])]) in
                        #0639
                        #063A
                        if (!is_zero(a335)) {
                          let:16 a337 = (1 + a326) in
                          let:16 a338 = (1 + a337) in
                          A := a335;
                          B := a203;
                          C := a331[7:0];
                          D := 05;
                          H := M[2067];
                          L := a331[7:0];
                          SPH := a338[15:8];
                          SPL := a338[7:0];
                          FlagS := a335[7];
                          FlagZ := is_zero(a335);
                          FlagA := a336[3];
                          FlagP := parity(a335);
                          FlagCY := true;
                          jump ((M[a337],M[a326]));
                        } else {
                          #063B
                          #063C
                          let:16 a339 = addWithCarry(false,0B,a331[7:0]) in
                          let:8 a340 = (0B & 0F) in
                          let:8 a341 = (a331[7:0] & 0F) in
                          let:16 a342 = addWithCarry(false,a340,a341) in
                          #063E
                          #063F
                          let:16 a343 = addWithCarry(!true,05,~00) in
                          let:8 a344 = (05 & 0F) in
                          let:8 a345 = (~00 & 0F) in
                          let:16 a346 = addWithCarry(!true,a344,a345) in
                          #0640
                          if (!is_zero(a343[7:0])) {
                            A := a339[7:0];
                            B := a203;
                            C := a331[7:0];
                            D := a343[7:0];
                            H := M[2067];
                            L := a339[7:0];
                            SPH := a326[15:8];
                            SPL := a326[7:0];
                            FlagS := a343[7:0][7];
                            FlagZ := is_zero(a343[7:0]);
                            FlagA := a346[7:0][4];
                            FlagP := parity(a343[7:0]);
                            FlagCY := a339[15:8][0];
                            jump (0637);
                          } else {
                            #0643
                            let:16 a347 = (1 + a326) in
                            let:16 a348 = (1 + a347) in
                            A := a339[7:0];
                            B := a203;
                            C := a331[7:0];
                            D := a343[7:0];
                            H := M[2067];
                            L := a339[7:0];
                            SPH := a348[15:8];
                            SPL := a348[7:0];
                            FlagS := a343[7:0][7];
                            FlagZ := is_zero(a343[7:0]);
                            FlagA := a346[7:0][4];
                            FlagP := parity(a343[7:0]);
                            FlagCY := a339[15:8][0];
                            jump ((M[a347],M[a326]));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

04A1:

    #04A4
    let:8 a1 = (M[2078] & M[2078]) in
    let:8 a2 = (M[2078] | M[2078]) in
    #04A5
    #04A8
    if (!is_zero(a1)) {
      #055B
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 05;
          let:16 a4 = (-1 + a3) in
          M[a4] := 5B;
          A := a1;
          H := 20;
          L := 35;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 05;
          let:16 a6 = (-1 + a5) in
          M[a6] := 5B;
          A := a1;
          H := 20;
          L := 35;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #055E
        #0560
        #1A32
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a7 = (-1 + (SPH,SPL)) in
            M[a7] := 1A;
            let:16 a8 = (-1 + a7) in
            M[a8] := 32;
            A := a1;
            B := 0B;
            D := 20;
            E := 73;
            H := 20;
            L := 35;
            SPH := a8[15:8];
            SPL := a8[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a9 = (-1 + (SPH,SPL)) in
            M[a9] := 1A;
            let:16 a10 = (-1 + a9) in
            M[a10] := 32;
            A := a1;
            B := 0B;
            D := 20;
            E := 73;
            H := 20;
            L := 35;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #1A33
          M[2035] := M[2073];
          #1A34
          #1A35
          #1A36
          let:16 a11 = addWithCarry(!true,0B,~00) in
          let:8 a12 = (0B & 0F) in
          let:8 a13 = (~00 & 0F) in
          let:16 a14 = addWithCarry(!true,a12,a13) in
          #1A37
          if (!is_zero(a11[7:0])) {
            A := M[2073];
            B := a11[7:0];
            D := 20;
            E := 74;
            H := 20;
            L := 36;
            FlagS := a11[7:0][7];
            FlagZ := is_zero(a11[7:0]);
            FlagA := a14[7:0][4];
            FlagP := parity(a11[7:0]);
            FlagCY := false;
            jump (1A32);
          } else {
            #1A3A
            let:16 a15 = (1 + (SPH,SPL)) in
            let:16 a16 = (1 + a15) in
            A := M[2073];
            B := a11[7:0];
            D := 20;
            E := 74;
            H := 20;
            L := 36;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a11[7:0][7];
            FlagZ := is_zero(a11[7:0]);
            FlagA := a14[7:0][4];
            FlagP := parity(a11[7:0]);
            FlagCY := false;
            jump ((M[a15],M[(SPH,SPL)]));
          }
        }
      }
    } else {
      #04AB
      #04AE
      #04B1
      #04B3
      #1A32
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a17 = (-1 + (SPH,SPL)) in
          M[a17] := 1A;
          let:16 a18 = (-1 + a17) in
          M[a18] := 32;
          A := a1;
          B := 10;
          D := 1B;
          E := 30;
          H := 20;
          L := 30;
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a19 = (-1 + (SPH,SPL)) in
          M[a19] := 1A;
          let:16 a20 = (-1 + a19) in
          M[a20] := 32;
          A := a1;
          B := 10;
          D := 1B;
          E := 30;
          H := 20;
          L := 30;
          SPH := a20[15:8];
          SPL := a20[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #1A33
        M[2030] := 00;
        #1A34
        #1A35
        #1A36
        let:16 a21 = addWithCarry(!true,10,~00) in
        let:8 a22 = (10 & 0F) in
        let:8 a23 = (~00 & 0F) in
        let:16 a24 = addWithCarry(!true,a22,a23) in
        #1A37
        if (!is_zero(a21[7:0])) {
          A := 00;
          B := a21[7:0];
          D := 1B;
          E := 31;
          H := 20;
          L := 31;
          FlagS := a21[7:0][7];
          FlagZ := is_zero(a21[7:0]);
          FlagA := a24[7:0][4];
          FlagP := parity(a21[7:0]);
          FlagCY := false;
          jump (1A32);
        } else {
          #1A3A
          let:16 a25 = (1 + (SPH,SPL)) in
          let:16 a26 = (1 + a25) in
          A := 00;
          B := a21[7:0];
          D := 1B;
          E := 31;
          H := 20;
          L := 31;
          SPH := a26[15:8];
          SPL := a26[7:0];
          FlagS := a21[7:0][7];
          FlagZ := is_zero(a21[7:0]);
          FlagA := a24[7:0][4];
          FlagP := parity(a21[7:0]);
          FlagCY := false;
          jump ((M[a25],M[(SPH,SPL)]));
        }
      }
    }

04B6:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #04B7
    #04BA
    let:8 a3 = (M[206E] & M[206E]) in
    let:8 a4 = (M[206E] | M[206E]) in
    #04BB
    if (!is_zero(a3)) {
      let:16 a5 = (1 + a2) in
      let:16 a6 = (1 + a5) in
      A := a3;
      H := M[a1];
      L := M[(SPH,SPL)];
      SPH := a6[15:8];
      SPL := a6[7:0];
      FlagS := a3[7];
      FlagZ := is_zero(a3);
      FlagA := a4[3];
      FlagP := parity(a3);
      FlagCY := false;
      jump ((M[a5],M[a2]));
    } else {
      #04BC
      #04BF
      let:16 a7 = addWithCarry(!false,M[2080],~01) in
      let:8 a8 = (M[2080] & 0F) in
      let:8 a9 = (~01 & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #04C1
      if (!is_zero(a7[7:0])) {
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := M[2080];
        H := M[a1];
        L := M[(SPH,SPL)];
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := !a7[15:8][0];
        jump ((M[a11],M[a2]));
      } else {
        #04C2
        #04C5
        #04C7
        let:16 a13 = (-1 + a2) in
        M[a13] := 04;
        let:16 a14 = (-1 + a13) in
        M[a14] := CA;
        #return-to: 04CA
        #0550
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 05;
            let:16 a16 = (-1 + a15) in
            M[a16] := 50;
            A := ED;
            D := 20;
            E := 45;
            H := M[a1];
            L := M[(SPH,SPL)];
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a7[7:0][7];
            FlagZ := is_zero(a7[7:0]);
            FlagA := a10[7:0][4];
            FlagP := parity(a7[7:0]);
            FlagCY := !a7[15:8][0];
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 05;
            let:16 a18 = (-1 + a17) in
            M[a18] := 50;
            A := ED;
            D := 20;
            E := 45;
            H := M[a1];
            L := M[(SPH,SPL)];
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a7[7:0][7];
            FlagZ := is_zero(a7[7:0]);
            FlagA := a10[7:0][4];
            FlagP := parity(a7[7:0]);
            FlagCY := !a7[15:8][0];
            jump (0010);
          }
        } else {
          M[207F] := ED;
          #0553
          #0556
          #0558
          #1A32
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a19 = (-1 + a14) in
              M[a19] := 1A;
              let:16 a20 = (-1 + a19) in
              M[a20] := 32;
              A := ED;
              B := 0B;
              D := 20;
              E := 45;
              H := 20;
              L := 73;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a7[7:0][7];
              FlagZ := is_zero(a7[7:0]);
              FlagA := a10[7:0][4];
              FlagP := parity(a7[7:0]);
              FlagCY := !a7[15:8][0];
              jump (0008);
            } else {
              let:16 a21 = (-1 + a14) in
              M[a21] := 1A;
              let:16 a22 = (-1 + a21) in
              M[a22] := 32;
              A := ED;
              B := 0B;
              D := 20;
              E := 45;
              H := 20;
              L := 73;
              SPH := a22[15:8];
              SPL := a22[7:0];
              FlagS := a7[7:0][7];
              FlagZ := is_zero(a7[7:0]);
              FlagA := a10[7:0][4];
              FlagP := parity(a7[7:0]);
              FlagCY := !a7[15:8][0];
              jump (0010);
            }
          } else {
            #1A33
            M[2073] := M[2045];
            #1A34
            #1A35
            #1A36
            let:16 a23 = addWithCarry(!true,0B,~00) in
            let:8 a24 = (0B & 0F) in
            let:8 a25 = (~00 & 0F) in
            let:16 a26 = addWithCarry(!true,a24,a25) in
            #1A37
            if (!is_zero(a23[7:0])) {
              A := M[2045];
              B := a23[7:0];
              D := 20;
              E := 46;
              H := 20;
              L := 74;
              SPH := a14[15:8];
              SPL := a14[7:0];
              FlagS := a23[7:0][7];
              FlagZ := is_zero(a23[7:0]);
              FlagA := a26[7:0][4];
              FlagP := parity(a23[7:0]);
              FlagCY := !a7[15:8][0];
              jump (1A32);
            } else {
              #1A3A
              let:16 a27 = (1 + a14) in
              let:16 a28 = (1 + a27) in
              A := M[2045];
              B := a23[7:0];
              D := 20;
              E := 46;
              H := 20;
              L := 74;
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagS := a23[7:0][7];
              FlagZ := is_zero(a23[7:0]);
              FlagA := a26[7:0][4];
              FlagP := parity(a23[7:0]);
              FlagCY := !a7[15:8][0];
              jump ((M[a27],M[a14]));
            }
          }
        }
      }
    }

04CA:

    #04CD
    M[2070] := M[2036];
    #04D0
    #04D3
    M[2071] := M[2056];
    #04D6
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 04;
    let:16 a2 = (-1 + a1) in
    M[a2] := D9;
    #return-to: 04D9
    #0563
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 05;
        let:16 a4 = (-1 + a3) in
        M[a4] := 63;
        A := M[2056];
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 05;
        let:16 a6 = (-1 + a5) in
        M[a6] := 63;
        A := M[2056];
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0566
      #0567
      let:8 a7 = (80 & M[2073]) in
      let:8 a8 = (80 | M[2073]) in
      #0569
      if (!is_zero(a7)) {
        #05C1
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a2) in
            M[a9] := 05;
            let:16 a10 = (-1 + a9) in
            M[a10] := C1;
            A := a7;
            H := 20;
            L := 73;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a11 = (-1 + a2) in
            M[a11] := 05;
            let:16 a12 = (-1 + a11) in
            M[a12] := C1;
            A := a7;
            H := 20;
            L := 73;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #05C4
          let:16 a13 = (-1 + a2) in
          M[a13] := 05;
          let:16 a14 = (-1 + a13) in
          M[a14] := C7;
          #return-to: 05C7
          #1A06
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a15 = (-1 + a14) in
              M[a15] := 1A;
              let:16 a16 = (-1 + a15) in
              M[a16] := 06;
              A := a7;
              D := 20;
              E := 7C;
              H := 20;
              L := 73;
              SPH := a16[15:8];
              SPL := a16[7:0];
              FlagS := a7[7];
              FlagZ := is_zero(a7);
              FlagA := a8[3];
              FlagP := parity(a7);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a17 = (-1 + a14) in
              M[a17] := 1A;
              let:16 a18 = (-1 + a17) in
              M[a18] := 06;
              A := a7;
              D := 20;
              E := 7C;
              H := 20;
              L := 73;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a7[7];
              FlagZ := is_zero(a7);
              FlagA := a8[3];
              FlagP := parity(a7);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #1A09
            #1A0A
            #1A0B
            let:8 a19 = (80 & M[207C]) in
            let:8 a20 = (80 | M[207C]) in
            #1A0D
            let:8 a21 = (M[2072] ^ a19) in
            #1A0E
            if (!is_zero(a21)) {
              let:16 a22 = (1 + a14) in
              let:16 a23 = (1 + a22) in
              A := a21;
              B := M[2072];
              D := 20;
              E := 7C;
              H := 20;
              L := 72;
              SPH := a23[15:8];
              SPL := a23[7:0];
              FlagS := a21[7];
              FlagZ := is_zero(a21);
              FlagA := false;
              FlagP := parity(a21);
              FlagCY := false;
              jump ((M[a22],M[a14]));
            } else {
              #1A0F
              #1A10
              let:16 a24 = (1 + a14) in
              let:16 a25 = (1 + a24) in
              A := a21;
              B := M[2072];
              D := 20;
              E := 7C;
              H := 20;
              L := 72;
              SPH := a25[15:8];
              SPL := a25[7:0];
              FlagS := a21[7];
              FlagZ := is_zero(a21);
              FlagA := false;
              FlagP := parity(a21);
              FlagCY := true;
              jump ((M[a24],M[a14]));
            }
          }
        }
      } else {
        #056C
        #056F
        let:16 a26 = addWithCarry(!false,M[20C1],~04) in
        let:8 a27 = (M[20C1] & 0F) in
        let:8 a28 = (~04 & 0F) in
        let:16 a29 = addWithCarry(!false,a27,a28) in
        #0571
        #0574
        if (is_zero(a26[7:0])) {
          #05B7
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a30 = (-1 + a2) in
              M[a30] := 05;
              let:16 a31 = (-1 + a30) in
              M[a31] := B7;
              A := M[2069];
              H := 20;
              L := 73;
              SPH := a31[15:8];
              SPL := a31[7:0];
              FlagS := a26[7:0][7];
              FlagZ := is_zero(a26[7:0]);
              FlagA := a29[7:0][4];
              FlagP := parity(a26[7:0]);
              FlagCY := !a26[15:8][0];
              jump (0008);
            } else {
              let:16 a32 = (-1 + a2) in
              M[a32] := 05;
              let:16 a33 = (-1 + a32) in
              M[a33] := B7;
              A := M[2069];
              H := 20;
              L := 73;
              SPH := a33[15:8];
              SPL := a33[7:0];
              FlagS := a26[7:0][7];
              FlagZ := is_zero(a26[7:0]);
              FlagA := a29[7:0][4];
              FlagP := parity(a26[7:0]);
              FlagCY := !a26[15:8][0];
              jump (0010);
            }
          } else {
            #05BA
            #05BB
            let:8 a34 = (80 | M[2073]) in
            #05BD
            M[2073] := a34;
            #05BE
            #05BF
            let:16 a35 = addWithCarry(true,M[2074],00) in
            let:8 a36 = (M[2074] & 0F) in
            let:8 a37 = (00 & 0F) in
            let:16 a38 = addWithCarry(true,a36,a37) in
            M[2074] := a35[7:0];
            #05C0
            let:16 a39 = (1 + a2) in
            let:16 a40 = (1 + a39) in
            A := a34;
            H := 20;
            L := 74;
            SPH := a40[15:8];
            SPL := a40[7:0];
            FlagS := a35[7:0][7];
            FlagZ := is_zero(a35[7:0]);
            FlagA := a38[7:0][4];
            FlagP := parity(a35[7:0]);
            FlagCY := false;
            jump ((M[a39],M[a2]));
          }
        } else {
          #0577
          let:8 a41 = (M[2069] & M[2069]) in
          let:8 a42 = (M[2069] | M[2069]) in
          #0578
          if (is_zero(a41)) {
            let:16 a43 = (1 + a2) in
            let:16 a44 = (1 + a43) in
            A := a41;
            H := 20;
            L := 73;
            SPH := a44[15:8];
            SPL := a44[7:0];
            FlagS := a41[7];
            FlagZ := is_zero(a41);
            FlagA := a42[3];
            FlagP := parity(a41);
            FlagCY := false;
            jump ((M[a43],M[a2]));
          } else {
            #0579
            #057A
            M[2074] := 00;
            #057C
            #057F
            let:8 a45 = (M[2070] & M[2070]) in
            let:8 a46 = (M[2070] | M[2070]) in
            #0580
            if (is_zero(a45)) {
              #0589
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a47 = (-1 + a2) in
                  M[a47] := 05;
                  let:16 a48 = (-1 + a47) in
                  M[a48] := 89;
                  A := a45;
                  H := 20;
                  L := 74;
                  SPH := a48[15:8];
                  SPL := a48[7:0];
                  FlagS := a45[7];
                  FlagZ := is_zero(a45);
                  FlagA := a46[3];
                  FlagP := parity(a45);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a49 = (-1 + a2) in
                  M[a49] := 05;
                  let:16 a50 = (-1 + a49) in
                  M[a50] := 89;
                  A := a45;
                  H := 20;
                  L := 74;
                  SPH := a50[15:8];
                  SPL := a50[7:0];
                  FlagS := a45[7];
                  FlagZ := is_zero(a45);
                  FlagA := a46[3];
                  FlagP := parity(a45);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #058C
                let:8 a51 = (M[2071] & M[2071]) in
                let:8 a52 = (M[2071] | M[2071]) in
                #058D
                if (is_zero(a51)) {
                  #0596
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a53 = (-1 + a2) in
                      M[a53] := 05;
                      let:16 a54 = (-1 + a53) in
                      M[a54] := 96;
                      A := a51;
                      H := 20;
                      L := 74;
                      SPH := a54[15:8];
                      SPL := a54[7:0];
                      FlagS := a51[7];
                      FlagZ := is_zero(a51);
                      FlagA := a52[3];
                      FlagP := parity(a51);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a55 = (-1 + a2) in
                      M[a55] := 05;
                      let:16 a56 = (-1 + a55) in
                      M[a56] := 96;
                      A := a51;
                      H := 20;
                      L := 74;
                      SPH := a56[15:8];
                      SPL := a56[7:0];
                      FlagS := a51[7];
                      FlagZ := is_zero(a51);
                      FlagA := a52[3];
                      FlagP := parity(a51);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    #0597
                    #0598
                    let:8 a57 = (M[2075] & M[2075]) in
                    let:8 a58 = (M[2075] | M[2075]) in
                    #0599
                    if (is_zero(a57)) {
                      #061B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a59 = (-1 + a2) in
                          M[a59] := 06;
                          let:16 a60 = (-1 + a59) in
                          M[a60] := 1B;
                          A := a57;
                          H := 20;
                          L := 75;
                          SPH := a60[15:8];
                          SPL := a60[7:0];
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a61 = (-1 + a2) in
                          M[a61] := 06;
                          let:16 a62 = (-1 + a61) in
                          M[a62] := 1B;
                          A := a57;
                          H := 20;
                          L := 75;
                          SPH := a62[15:8];
                          SPL := a62[7:0];
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #061E
                        let:16 a63 = addWithCarry(false,08,M[201B]) in
                        let:8 a64 = (08 & 0F) in
                        let:8 a65 = (M[201B] & 0F) in
                        let:16 a66 = addWithCarry(false,a64,a65) in
                        #0620
                        #0621
                        let:16 a67 = (-1 + a2) in
                        M[a67] := 06;
                        let:16 a68 = (-1 + a67) in
                        M[a68] := 24;
                        #return-to: 0624
                        #156F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a69 = (-1 + a68) in
                            M[a69] := 15;
                            let:16 a70 = (-1 + a69) in
                            M[a70] := 6F;
                            A := a63[7:0];
                            H := a63[7:0];
                            L := 75;
                            SPH := a70[15:8];
                            SPL := a70[7:0];
                            FlagS := a63[7:0][7];
                            FlagZ := is_zero(a63[7:0]);
                            FlagA := a66[7:0][4];
                            FlagP := parity(a63[7:0]);
                            FlagCY := a63[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a71 = (-1 + a68) in
                            M[a71] := 15;
                            let:16 a72 = (-1 + a71) in
                            M[a72] := 6F;
                            A := a63[7:0];
                            H := a63[7:0];
                            L := 75;
                            SPH := a72[15:8];
                            SPL := a72[7:0];
                            FlagS := a63[7:0][7];
                            FlagZ := is_zero(a63[7:0]);
                            FlagA := a66[7:0][4];
                            FlagP := parity(a63[7:0]);
                            FlagCY := a63[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1572
                          let:16 a73 = (-1 + a68) in
                          M[a73] := 15;
                          let:16 a74 = (-1 + a73) in
                          M[a74] := 75;
                          #return-to: 1575
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a75 = (-1 + a74) in
                              M[a75] := 15;
                              let:16 a76 = (-1 + a75) in
                              M[a76] := 54;
                              A := M[200A];
                              H := a63[7:0];
                              L := 75;
                              SPH := a76[15:8];
                              SPL := a76[7:0];
                              FlagS := a63[7:0][7];
                              FlagZ := is_zero(a63[7:0]);
                              FlagA := a66[7:0][4];
                              FlagP := parity(a63[7:0]);
                              FlagCY := a63[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a77 = (-1 + a74) in
                              M[a77] := 15;
                              let:16 a78 = (-1 + a77) in
                              M[a78] := 54;
                              A := M[200A];
                              H := a63[7:0];
                              L := 75;
                              SPH := a78[15:8];
                              SPL := a78[7:0];
                              FlagS := a63[7:0][7];
                              FlagZ := is_zero(a63[7:0]);
                              FlagA := a66[7:0][4];
                              FlagP := parity(a63[7:0]);
                              FlagCY := a63[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a79 = addWithCarry(!false,M[200A],~a63[7:0]) in
                            let:8 a80 = (M[200A] & 0F) in
                            let:8 a81 = (~a63[7:0] & 0F) in
                            let:16 a82 = addWithCarry(!false,a80,a81) in
                            #1557
                            if (!!a79[15:8][0]) {
                              let:16 a83 = (-1 + a74) in
                              M[a83] := 15;
                              let:16 a84 = (-1 + a83) in
                              M[a84] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a85 = (-1 + a84) in
                                  M[a85] := 15;
                                  let:16 a86 = (-1 + a85) in
                                  M[a86] := 90;
                                  A := M[200A];
                                  C := 00;
                                  H := a63[7:0];
                                  L := 75;
                                  SPH := a86[15:8];
                                  SPL := a86[7:0];
                                  FlagS := a79[7:0][7];
                                  FlagZ := is_zero(a79[7:0]);
                                  FlagA := a82[7:0][4];
                                  FlagP := parity(a79[7:0]);
                                  FlagCY := !a79[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a87 = (-1 + a84) in
                                  M[a87] := 15;
                                  let:16 a88 = (-1 + a87) in
                                  M[a88] := 90;
                                  A := M[200A];
                                  C := 00;
                                  H := a63[7:0];
                                  L := 75;
                                  SPH := a88[15:8];
                                  SPL := a88[7:0];
                                  FlagS := a79[7:0][7];
                                  FlagZ := is_zero(a79[7:0]);
                                  FlagA := a82[7:0][4];
                                  FlagP := parity(a79[7:0]);
                                  FlagCY := !a79[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a89 = addWithCarry(true,00,00) in
                                let:8 a90 = (00 & 0F) in
                                let:8 a91 = (00 & 0F) in
                                let:16 a92 = addWithCarry(true,a90,a91) in
                                #1591
                                let:16 a93 = addWithCarry(false,10,M[200A]) in
                                let:8 a94 = (10 & 0F) in
                                let:8 a95 = (M[200A] & 0F) in
                                let:16 a96 = addWithCarry(false,a94,a95) in
                                #1593
                                if (a93[7:0][7]) {
                                  A := a93[7:0];
                                  C := a89[7:0];
                                  H := a63[7:0];
                                  L := 75;
                                  SPH := a84[15:8];
                                  SPL := a84[7:0];
                                  FlagS := a93[7:0][7];
                                  FlagZ := is_zero(a93[7:0]);
                                  FlagA := a96[7:0][4];
                                  FlagP := parity(a93[7:0]);
                                  FlagCY := a93[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a97 = (1 + a84) in
                                  let:16 a98 = (1 + a97) in
                                  A := a93[7:0];
                                  C := a89[7:0];
                                  H := a63[7:0];
                                  L := 75;
                                  SPH := a98[15:8];
                                  SPL := a98[7:0];
                                  FlagS := a93[7:0][7];
                                  FlagZ := is_zero(a93[7:0]);
                                  FlagA := a96[7:0][4];
                                  FlagP := parity(a93[7:0]);
                                  FlagCY := a93[15:8][0];
                                  jump ((M[a97],M[a84]));
                                }
                              }
                            } else {
                              A := M[200A];
                              C := 00;
                              H := a63[7:0];
                              L := 75;
                              SPH := a74[15:8];
                              SPL := a74[7:0];
                              FlagS := a79[7:0][7];
                              FlagZ := is_zero(a79[7:0]);
                              FlagA := a82[7:0][4];
                              FlagP := parity(a79[7:0]);
                              FlagCY := !a79[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #059C
                      #059F
                      #05A0
                      let:16 a99 = (1 + (M[2077],M[2076])) in
                      #05A1
                      #05A2
                      M[2076] := a99[7:0];
                      M[2077] := a99[15:8];
                      #05A5
                      let:16 a100 = (-1 + a2) in
                      M[a100] := 05;
                      let:16 a101 = (-1 + a100) in
                      M[a101] := A8;
                      #return-to: 05A8
                      #062F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a102 = (-1 + a101) in
                          M[a102] := 06;
                          let:16 a103 = (-1 + a102) in
                          M[a103] := 2F;
                          A := a57;
                          C := M[(M[2077],M[2076])];
                          H := a99[15:8];
                          L := a99[7:0];
                          SPH := a103[15:8];
                          SPL := a103[7:0];
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a104 = (-1 + a101) in
                          M[a104] := 06;
                          let:16 a105 = (-1 + a104) in
                          M[a105] := 2F;
                          A := a57;
                          C := M[(M[2077],M[2076])];
                          H := a99[15:8];
                          L := a99[7:0];
                          SPH := a105[15:8];
                          SPL := a105[7:0];
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a106 = addWithCarry(!true,M[(M[2077],M[2076])],~00) in
                        let:8 a107 = (M[(M[2077],M[2076])] & 0F) in
                        let:8 a108 = (~00 & 0F) in
                        let:16 a109 = addWithCarry(!true,a107,a108) in
                        #0630
                        #0633
                        #0634
                        #0635
                        #0637
                        #0638
                        let:8 a110 = (M[(M[2067],a106[7:0])] & M[(M[2067],a106[7:0])]) in
                        let:8 a111 = (M[(M[2067],a106[7:0])] | M[(M[2067],a106[7:0])]) in
                        #0639
                        #063A
                        if (!is_zero(a110)) {
                          let:16 a112 = (1 + a101) in
                          let:16 a113 = (1 + a112) in
                          A := a110;
                          C := a106[7:0];
                          D := 05;
                          H := M[2067];
                          L := a106[7:0];
                          SPH := a113[15:8];
                          SPL := a113[7:0];
                          FlagS := a110[7];
                          FlagZ := is_zero(a110);
                          FlagA := a111[3];
                          FlagP := parity(a110);
                          FlagCY := true;
                          jump ((M[a112],M[a101]));
                        } else {
                          #063B
                          #063C
                          let:16 a114 = addWithCarry(false,0B,a106[7:0]) in
                          let:8 a115 = (0B & 0F) in
                          let:8 a116 = (a106[7:0] & 0F) in
                          let:16 a117 = addWithCarry(false,a115,a116) in
                          #063E
                          #063F
                          let:16 a118 = addWithCarry(!true,05,~00) in
                          let:8 a119 = (05 & 0F) in
                          let:8 a120 = (~00 & 0F) in
                          let:16 a121 = addWithCarry(!true,a119,a120) in
                          #0640
                          if (!is_zero(a118[7:0])) {
                            A := a114[7:0];
                            C := a106[7:0];
                            D := a118[7:0];
                            H := M[2067];
                            L := a114[7:0];
                            SPH := a101[15:8];
                            SPL := a101[7:0];
                            FlagS := a118[7:0][7];
                            FlagZ := is_zero(a118[7:0]);
                            FlagA := a121[7:0][4];
                            FlagP := parity(a118[7:0]);
                            FlagCY := a114[15:8][0];
                            jump (0637);
                          } else {
                            #0643
                            let:16 a122 = (1 + a101) in
                            let:16 a123 = (1 + a122) in
                            A := a114[7:0];
                            C := a106[7:0];
                            D := a118[7:0];
                            H := M[2067];
                            L := a114[7:0];
                            SPH := a123[15:8];
                            SPL := a123[7:0];
                            FlagS := a118[7:0][7];
                            FlagZ := is_zero(a118[7:0]);
                            FlagA := a121[7:0][4];
                            FlagP := parity(a118[7:0]);
                            FlagCY := a114[15:8][0];
                            jump ((M[a122],M[a101]));
                          }
                        }
                      }
                    }
                  }
                } else {
                  #0590
                  #0591
                  #0594
                  let:16 a124 = addWithCarry(!false,M[20CF],~a51) in
                  let:8 a125 = (M[20CF] & 0F) in
                  let:8 a126 = (~a51 & 0F) in
                  let:16 a127 = addWithCarry(!false,a125,a126) in
                  #0595
                  if (!!a124[15:8][0]) {
                    let:16 a128 = (1 + a2) in
                    let:16 a129 = (1 + a128) in
                    A := M[20CF];
                    B := a51;
                    H := 20;
                    L := 74;
                    SPH := a129[15:8];
                    SPL := a129[7:0];
                    FlagS := a124[7:0][7];
                    FlagZ := is_zero(a124[7:0]);
                    FlagA := a127[7:0][4];
                    FlagP := parity(a124[7:0]);
                    FlagCY := !a124[15:8][0];
                    jump ((M[a128],M[a2]));
                  } else {
                    #0596
                    #0597
                    #0598
                    let:8 a130 = (M[2075] & M[2075]) in
                    let:8 a131 = (M[2075] | M[2075]) in
                    #0599
                    if (is_zero(a130)) {
                      #061B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a132 = (-1 + a2) in
                          M[a132] := 06;
                          let:16 a133 = (-1 + a132) in
                          M[a133] := 1B;
                          A := a130;
                          B := a51;
                          H := 20;
                          L := 75;
                          SPH := a133[15:8];
                          SPL := a133[7:0];
                          FlagS := a130[7];
                          FlagZ := is_zero(a130);
                          FlagA := a131[3];
                          FlagP := parity(a130);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a134 = (-1 + a2) in
                          M[a134] := 06;
                          let:16 a135 = (-1 + a134) in
                          M[a135] := 1B;
                          A := a130;
                          B := a51;
                          H := 20;
                          L := 75;
                          SPH := a135[15:8];
                          SPL := a135[7:0];
                          FlagS := a130[7];
                          FlagZ := is_zero(a130);
                          FlagA := a131[3];
                          FlagP := parity(a130);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #061E
                        let:16 a136 = addWithCarry(false,08,M[201B]) in
                        let:8 a137 = (08 & 0F) in
                        let:8 a138 = (M[201B] & 0F) in
                        let:16 a139 = addWithCarry(false,a137,a138) in
                        #0620
                        #0621
                        let:16 a140 = (-1 + a2) in
                        M[a140] := 06;
                        let:16 a141 = (-1 + a140) in
                        M[a141] := 24;
                        #return-to: 0624
                        #156F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a142 = (-1 + a141) in
                            M[a142] := 15;
                            let:16 a143 = (-1 + a142) in
                            M[a143] := 6F;
                            A := a136[7:0];
                            B := a51;
                            H := a136[7:0];
                            L := 75;
                            SPH := a143[15:8];
                            SPL := a143[7:0];
                            FlagS := a136[7:0][7];
                            FlagZ := is_zero(a136[7:0]);
                            FlagA := a139[7:0][4];
                            FlagP := parity(a136[7:0]);
                            FlagCY := a136[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a144 = (-1 + a141) in
                            M[a144] := 15;
                            let:16 a145 = (-1 + a144) in
                            M[a145] := 6F;
                            A := a136[7:0];
                            B := a51;
                            H := a136[7:0];
                            L := 75;
                            SPH := a145[15:8];
                            SPL := a145[7:0];
                            FlagS := a136[7:0][7];
                            FlagZ := is_zero(a136[7:0]);
                            FlagA := a139[7:0][4];
                            FlagP := parity(a136[7:0]);
                            FlagCY := a136[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1572
                          let:16 a146 = (-1 + a141) in
                          M[a146] := 15;
                          let:16 a147 = (-1 + a146) in
                          M[a147] := 75;
                          #return-to: 1575
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a148 = (-1 + a147) in
                              M[a148] := 15;
                              let:16 a149 = (-1 + a148) in
                              M[a149] := 54;
                              A := M[200A];
                              B := a51;
                              H := a136[7:0];
                              L := 75;
                              SPH := a149[15:8];
                              SPL := a149[7:0];
                              FlagS := a136[7:0][7];
                              FlagZ := is_zero(a136[7:0]);
                              FlagA := a139[7:0][4];
                              FlagP := parity(a136[7:0]);
                              FlagCY := a136[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a150 = (-1 + a147) in
                              M[a150] := 15;
                              let:16 a151 = (-1 + a150) in
                              M[a151] := 54;
                              A := M[200A];
                              B := a51;
                              H := a136[7:0];
                              L := 75;
                              SPH := a151[15:8];
                              SPL := a151[7:0];
                              FlagS := a136[7:0][7];
                              FlagZ := is_zero(a136[7:0]);
                              FlagA := a139[7:0][4];
                              FlagP := parity(a136[7:0]);
                              FlagCY := a136[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a152 = addWithCarry(!false,M[200A],~a136[7:0]) in
                            let:8 a153 = (M[200A] & 0F) in
                            let:8 a154 = (~a136[7:0] & 0F) in
                            let:16 a155 = addWithCarry(!false,a153,a154) in
                            #1557
                            if (!!a152[15:8][0]) {
                              let:16 a156 = (-1 + a147) in
                              M[a156] := 15;
                              let:16 a157 = (-1 + a156) in
                              M[a157] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a158 = (-1 + a157) in
                                  M[a158] := 15;
                                  let:16 a159 = (-1 + a158) in
                                  M[a159] := 90;
                                  A := M[200A];
                                  B := a51;
                                  C := 00;
                                  H := a136[7:0];
                                  L := 75;
                                  SPH := a159[15:8];
                                  SPL := a159[7:0];
                                  FlagS := a152[7:0][7];
                                  FlagZ := is_zero(a152[7:0]);
                                  FlagA := a155[7:0][4];
                                  FlagP := parity(a152[7:0]);
                                  FlagCY := !a152[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a160 = (-1 + a157) in
                                  M[a160] := 15;
                                  let:16 a161 = (-1 + a160) in
                                  M[a161] := 90;
                                  A := M[200A];
                                  B := a51;
                                  C := 00;
                                  H := a136[7:0];
                                  L := 75;
                                  SPH := a161[15:8];
                                  SPL := a161[7:0];
                                  FlagS := a152[7:0][7];
                                  FlagZ := is_zero(a152[7:0]);
                                  FlagA := a155[7:0][4];
                                  FlagP := parity(a152[7:0]);
                                  FlagCY := !a152[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a162 = addWithCarry(true,00,00) in
                                let:8 a163 = (00 & 0F) in
                                let:8 a164 = (00 & 0F) in
                                let:16 a165 = addWithCarry(true,a163,a164) in
                                #1591
                                let:16 a166 = addWithCarry(false,10,M[200A]) in
                                let:8 a167 = (10 & 0F) in
                                let:8 a168 = (M[200A] & 0F) in
                                let:16 a169 = addWithCarry(false,a167,a168) in
                                #1593
                                if (a166[7:0][7]) {
                                  A := a166[7:0];
                                  B := a51;
                                  C := a162[7:0];
                                  H := a136[7:0];
                                  L := 75;
                                  SPH := a157[15:8];
                                  SPL := a157[7:0];
                                  FlagS := a166[7:0][7];
                                  FlagZ := is_zero(a166[7:0]);
                                  FlagA := a169[7:0][4];
                                  FlagP := parity(a166[7:0]);
                                  FlagCY := a166[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a170 = (1 + a157) in
                                  let:16 a171 = (1 + a170) in
                                  A := a166[7:0];
                                  B := a51;
                                  C := a162[7:0];
                                  H := a136[7:0];
                                  L := 75;
                                  SPH := a171[15:8];
                                  SPL := a171[7:0];
                                  FlagS := a166[7:0][7];
                                  FlagZ := is_zero(a166[7:0]);
                                  FlagA := a169[7:0][4];
                                  FlagP := parity(a166[7:0]);
                                  FlagCY := a166[15:8][0];
                                  jump ((M[a170],M[a157]));
                                }
                              }
                            } else {
                              A := M[200A];
                              B := a51;
                              C := 00;
                              H := a136[7:0];
                              L := 75;
                              SPH := a147[15:8];
                              SPL := a147[7:0];
                              FlagS := a152[7:0][7];
                              FlagZ := is_zero(a152[7:0]);
                              FlagA := a155[7:0][4];
                              FlagP := parity(a152[7:0]);
                              FlagCY := !a152[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #059C
                      #059F
                      #05A0
                      let:16 a172 = (1 + (M[2077],M[2076])) in
                      #05A1
                      #05A2
                      M[2076] := a172[7:0];
                      M[2077] := a172[15:8];
                      #05A5
                      let:16 a173 = (-1 + a2) in
                      M[a173] := 05;
                      let:16 a174 = (-1 + a173) in
                      M[a174] := A8;
                      #return-to: 05A8
                      #062F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a175 = (-1 + a174) in
                          M[a175] := 06;
                          let:16 a176 = (-1 + a175) in
                          M[a176] := 2F;
                          A := a130;
                          B := a51;
                          C := M[(M[2077],M[2076])];
                          H := a172[15:8];
                          L := a172[7:0];
                          SPH := a176[15:8];
                          SPL := a176[7:0];
                          FlagS := a130[7];
                          FlagZ := is_zero(a130);
                          FlagA := a131[3];
                          FlagP := parity(a130);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a177 = (-1 + a174) in
                          M[a177] := 06;
                          let:16 a178 = (-1 + a177) in
                          M[a178] := 2F;
                          A := a130;
                          B := a51;
                          C := M[(M[2077],M[2076])];
                          H := a172[15:8];
                          L := a172[7:0];
                          SPH := a178[15:8];
                          SPL := a178[7:0];
                          FlagS := a130[7];
                          FlagZ := is_zero(a130);
                          FlagA := a131[3];
                          FlagP := parity(a130);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a179 = addWithCarry(!true,M[(M[2077],M[2076])],~00) in
                        let:8 a180 = (M[(M[2077],M[2076])] & 0F) in
                        let:8 a181 = (~00 & 0F) in
                        let:16 a182 = addWithCarry(!true,a180,a181) in
                        #0630
                        #0633
                        #0634
                        #0635
                        #0637
                        #0638
                        let:8 a183 = (M[(M[2067],a179[7:0])] & M[(M[2067],a179[7:0])]) in
                        let:8 a184 = (M[(M[2067],a179[7:0])] | M[(M[2067],a179[7:0])]) in
                        #0639
                        #063A
                        if (!is_zero(a183)) {
                          let:16 a185 = (1 + a174) in
                          let:16 a186 = (1 + a185) in
                          A := a183;
                          B := a51;
                          C := a179[7:0];
                          D := 05;
                          H := M[2067];
                          L := a179[7:0];
                          SPH := a186[15:8];
                          SPL := a186[7:0];
                          FlagS := a183[7];
                          FlagZ := is_zero(a183);
                          FlagA := a184[3];
                          FlagP := parity(a183);
                          FlagCY := true;
                          jump ((M[a185],M[a174]));
                        } else {
                          #063B
                          #063C
                          let:16 a187 = addWithCarry(false,0B,a179[7:0]) in
                          let:8 a188 = (0B & 0F) in
                          let:8 a189 = (a179[7:0] & 0F) in
                          let:16 a190 = addWithCarry(false,a188,a189) in
                          #063E
                          #063F
                          let:16 a191 = addWithCarry(!true,05,~00) in
                          let:8 a192 = (05 & 0F) in
                          let:8 a193 = (~00 & 0F) in
                          let:16 a194 = addWithCarry(!true,a192,a193) in
                          #0640
                          if (!is_zero(a191[7:0])) {
                            A := a187[7:0];
                            B := a51;
                            C := a179[7:0];
                            D := a191[7:0];
                            H := M[2067];
                            L := a187[7:0];
                            SPH := a174[15:8];
                            SPL := a174[7:0];
                            FlagS := a191[7:0][7];
                            FlagZ := is_zero(a191[7:0]);
                            FlagA := a194[7:0][4];
                            FlagP := parity(a191[7:0]);
                            FlagCY := a187[15:8][0];
                            jump (0637);
                          } else {
                            #0643
                            let:16 a195 = (1 + a174) in
                            let:16 a196 = (1 + a195) in
                            A := a187[7:0];
                            B := a51;
                            C := a179[7:0];
                            D := a191[7:0];
                            H := M[2067];
                            L := a187[7:0];
                            SPH := a196[15:8];
                            SPL := a196[7:0];
                            FlagS := a191[7:0][7];
                            FlagZ := is_zero(a191[7:0]);
                            FlagA := a194[7:0][4];
                            FlagP := parity(a191[7:0]);
                            FlagCY := a187[15:8][0];
                            jump ((M[a195],M[a174]));
                          }
                        }
                      }
                    }
                  }
                }
              }
            } else {
              #0583
              #0584
              #0587
              let:16 a197 = addWithCarry(!false,M[20CF],~a45) in
              let:8 a198 = (M[20CF] & 0F) in
              let:8 a199 = (~a45 & 0F) in
              let:16 a200 = addWithCarry(!false,a198,a199) in
              #0588
              if (!!a197[15:8][0]) {
                let:16 a201 = (1 + a2) in
                let:16 a202 = (1 + a201) in
                A := M[20CF];
                B := a45;
                H := 20;
                L := 74;
                SPH := a202[15:8];
                SPL := a202[7:0];
                FlagS := a197[7:0][7];
                FlagZ := is_zero(a197[7:0]);
                FlagA := a200[7:0][4];
                FlagP := parity(a197[7:0]);
                FlagCY := !a197[15:8][0];
                jump ((M[a201],M[a2]));
              } else {
                #0589
                #058C
                let:8 a203 = (M[2071] & M[2071]) in
                let:8 a204 = (M[2071] | M[2071]) in
                #058D
                if (is_zero(a203)) {
                  #0596
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a205 = (-1 + a2) in
                      M[a205] := 05;
                      let:16 a206 = (-1 + a205) in
                      M[a206] := 96;
                      A := a203;
                      B := a45;
                      H := 20;
                      L := 74;
                      SPH := a206[15:8];
                      SPL := a206[7:0];
                      FlagS := a203[7];
                      FlagZ := is_zero(a203);
                      FlagA := a204[3];
                      FlagP := parity(a203);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a207 = (-1 + a2) in
                      M[a207] := 05;
                      let:16 a208 = (-1 + a207) in
                      M[a208] := 96;
                      A := a203;
                      B := a45;
                      H := 20;
                      L := 74;
                      SPH := a208[15:8];
                      SPL := a208[7:0];
                      FlagS := a203[7];
                      FlagZ := is_zero(a203);
                      FlagA := a204[3];
                      FlagP := parity(a203);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    #0597
                    #0598
                    let:8 a209 = (M[2075] & M[2075]) in
                    let:8 a210 = (M[2075] | M[2075]) in
                    #0599
                    if (is_zero(a209)) {
                      #061B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a211 = (-1 + a2) in
                          M[a211] := 06;
                          let:16 a212 = (-1 + a211) in
                          M[a212] := 1B;
                          A := a209;
                          B := a45;
                          H := 20;
                          L := 75;
                          SPH := a212[15:8];
                          SPL := a212[7:0];
                          FlagS := a209[7];
                          FlagZ := is_zero(a209);
                          FlagA := a210[3];
                          FlagP := parity(a209);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a213 = (-1 + a2) in
                          M[a213] := 06;
                          let:16 a214 = (-1 + a213) in
                          M[a214] := 1B;
                          A := a209;
                          B := a45;
                          H := 20;
                          L := 75;
                          SPH := a214[15:8];
                          SPL := a214[7:0];
                          FlagS := a209[7];
                          FlagZ := is_zero(a209);
                          FlagA := a210[3];
                          FlagP := parity(a209);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #061E
                        let:16 a215 = addWithCarry(false,08,M[201B]) in
                        let:8 a216 = (08 & 0F) in
                        let:8 a217 = (M[201B] & 0F) in
                        let:16 a218 = addWithCarry(false,a216,a217) in
                        #0620
                        #0621
                        let:16 a219 = (-1 + a2) in
                        M[a219] := 06;
                        let:16 a220 = (-1 + a219) in
                        M[a220] := 24;
                        #return-to: 0624
                        #156F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a221 = (-1 + a220) in
                            M[a221] := 15;
                            let:16 a222 = (-1 + a221) in
                            M[a222] := 6F;
                            A := a215[7:0];
                            B := a45;
                            H := a215[7:0];
                            L := 75;
                            SPH := a222[15:8];
                            SPL := a222[7:0];
                            FlagS := a215[7:0][7];
                            FlagZ := is_zero(a215[7:0]);
                            FlagA := a218[7:0][4];
                            FlagP := parity(a215[7:0]);
                            FlagCY := a215[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a223 = (-1 + a220) in
                            M[a223] := 15;
                            let:16 a224 = (-1 + a223) in
                            M[a224] := 6F;
                            A := a215[7:0];
                            B := a45;
                            H := a215[7:0];
                            L := 75;
                            SPH := a224[15:8];
                            SPL := a224[7:0];
                            FlagS := a215[7:0][7];
                            FlagZ := is_zero(a215[7:0]);
                            FlagA := a218[7:0][4];
                            FlagP := parity(a215[7:0]);
                            FlagCY := a215[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1572
                          let:16 a225 = (-1 + a220) in
                          M[a225] := 15;
                          let:16 a226 = (-1 + a225) in
                          M[a226] := 75;
                          #return-to: 1575
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a227 = (-1 + a226) in
                              M[a227] := 15;
                              let:16 a228 = (-1 + a227) in
                              M[a228] := 54;
                              A := M[200A];
                              B := a45;
                              H := a215[7:0];
                              L := 75;
                              SPH := a228[15:8];
                              SPL := a228[7:0];
                              FlagS := a215[7:0][7];
                              FlagZ := is_zero(a215[7:0]);
                              FlagA := a218[7:0][4];
                              FlagP := parity(a215[7:0]);
                              FlagCY := a215[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a229 = (-1 + a226) in
                              M[a229] := 15;
                              let:16 a230 = (-1 + a229) in
                              M[a230] := 54;
                              A := M[200A];
                              B := a45;
                              H := a215[7:0];
                              L := 75;
                              SPH := a230[15:8];
                              SPL := a230[7:0];
                              FlagS := a215[7:0][7];
                              FlagZ := is_zero(a215[7:0]);
                              FlagA := a218[7:0][4];
                              FlagP := parity(a215[7:0]);
                              FlagCY := a215[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a231 = addWithCarry(!false,M[200A],~a215[7:0]) in
                            let:8 a232 = (M[200A] & 0F) in
                            let:8 a233 = (~a215[7:0] & 0F) in
                            let:16 a234 = addWithCarry(!false,a232,a233) in
                            #1557
                            if (!!a231[15:8][0]) {
                              let:16 a235 = (-1 + a226) in
                              M[a235] := 15;
                              let:16 a236 = (-1 + a235) in
                              M[a236] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a237 = (-1 + a236) in
                                  M[a237] := 15;
                                  let:16 a238 = (-1 + a237) in
                                  M[a238] := 90;
                                  A := M[200A];
                                  B := a45;
                                  C := 00;
                                  H := a215[7:0];
                                  L := 75;
                                  SPH := a238[15:8];
                                  SPL := a238[7:0];
                                  FlagS := a231[7:0][7];
                                  FlagZ := is_zero(a231[7:0]);
                                  FlagA := a234[7:0][4];
                                  FlagP := parity(a231[7:0]);
                                  FlagCY := !a231[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a239 = (-1 + a236) in
                                  M[a239] := 15;
                                  let:16 a240 = (-1 + a239) in
                                  M[a240] := 90;
                                  A := M[200A];
                                  B := a45;
                                  C := 00;
                                  H := a215[7:0];
                                  L := 75;
                                  SPH := a240[15:8];
                                  SPL := a240[7:0];
                                  FlagS := a231[7:0][7];
                                  FlagZ := is_zero(a231[7:0]);
                                  FlagA := a234[7:0][4];
                                  FlagP := parity(a231[7:0]);
                                  FlagCY := !a231[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a241 = addWithCarry(true,00,00) in
                                let:8 a242 = (00 & 0F) in
                                let:8 a243 = (00 & 0F) in
                                let:16 a244 = addWithCarry(true,a242,a243) in
                                #1591
                                let:16 a245 = addWithCarry(false,10,M[200A]) in
                                let:8 a246 = (10 & 0F) in
                                let:8 a247 = (M[200A] & 0F) in
                                let:16 a248 = addWithCarry(false,a246,a247) in
                                #1593
                                if (a245[7:0][7]) {
                                  A := a245[7:0];
                                  B := a45;
                                  C := a241[7:0];
                                  H := a215[7:0];
                                  L := 75;
                                  SPH := a236[15:8];
                                  SPL := a236[7:0];
                                  FlagS := a245[7:0][7];
                                  FlagZ := is_zero(a245[7:0]);
                                  FlagA := a248[7:0][4];
                                  FlagP := parity(a245[7:0]);
                                  FlagCY := a245[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a249 = (1 + a236) in
                                  let:16 a250 = (1 + a249) in
                                  A := a245[7:0];
                                  B := a45;
                                  C := a241[7:0];
                                  H := a215[7:0];
                                  L := 75;
                                  SPH := a250[15:8];
                                  SPL := a250[7:0];
                                  FlagS := a245[7:0][7];
                                  FlagZ := is_zero(a245[7:0]);
                                  FlagA := a248[7:0][4];
                                  FlagP := parity(a245[7:0]);
                                  FlagCY := a245[15:8][0];
                                  jump ((M[a249],M[a236]));
                                }
                              }
                            } else {
                              A := M[200A];
                              B := a45;
                              C := 00;
                              H := a215[7:0];
                              L := 75;
                              SPH := a226[15:8];
                              SPL := a226[7:0];
                              FlagS := a231[7:0][7];
                              FlagZ := is_zero(a231[7:0]);
                              FlagA := a234[7:0][4];
                              FlagP := parity(a231[7:0]);
                              FlagCY := !a231[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #059C
                      #059F
                      #05A0
                      let:16 a251 = (1 + (M[2077],M[2076])) in
                      #05A1
                      #05A2
                      M[2076] := a251[7:0];
                      M[2077] := a251[15:8];
                      #05A5
                      let:16 a252 = (-1 + a2) in
                      M[a252] := 05;
                      let:16 a253 = (-1 + a252) in
                      M[a253] := A8;
                      #return-to: 05A8
                      #062F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a254 = (-1 + a253) in
                          M[a254] := 06;
                          let:16 a255 = (-1 + a254) in
                          M[a255] := 2F;
                          A := a209;
                          B := a45;
                          C := M[(M[2077],M[2076])];
                          H := a251[15:8];
                          L := a251[7:0];
                          SPH := a255[15:8];
                          SPL := a255[7:0];
                          FlagS := a209[7];
                          FlagZ := is_zero(a209);
                          FlagA := a210[3];
                          FlagP := parity(a209);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a256 = (-1 + a253) in
                          M[a256] := 06;
                          let:16 a257 = (-1 + a256) in
                          M[a257] := 2F;
                          A := a209;
                          B := a45;
                          C := M[(M[2077],M[2076])];
                          H := a251[15:8];
                          L := a251[7:0];
                          SPH := a257[15:8];
                          SPL := a257[7:0];
                          FlagS := a209[7];
                          FlagZ := is_zero(a209);
                          FlagA := a210[3];
                          FlagP := parity(a209);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a258 = addWithCarry(!true,M[(M[2077],M[2076])],~00) in
                        let:8 a259 = (M[(M[2077],M[2076])] & 0F) in
                        let:8 a260 = (~00 & 0F) in
                        let:16 a261 = addWithCarry(!true,a259,a260) in
                        #0630
                        #0633
                        #0634
                        #0635
                        #0637
                        #0638
                        let:8 a262 = (M[(M[2067],a258[7:0])] & M[(M[2067],a258[7:0])]) in
                        let:8 a263 = (M[(M[2067],a258[7:0])] | M[(M[2067],a258[7:0])]) in
                        #0639
                        #063A
                        if (!is_zero(a262)) {
                          let:16 a264 = (1 + a253) in
                          let:16 a265 = (1 + a264) in
                          A := a262;
                          B := a45;
                          C := a258[7:0];
                          D := 05;
                          H := M[2067];
                          L := a258[7:0];
                          SPH := a265[15:8];
                          SPL := a265[7:0];
                          FlagS := a262[7];
                          FlagZ := is_zero(a262);
                          FlagA := a263[3];
                          FlagP := parity(a262);
                          FlagCY := true;
                          jump ((M[a264],M[a253]));
                        } else {
                          #063B
                          #063C
                          let:16 a266 = addWithCarry(false,0B,a258[7:0]) in
                          let:8 a267 = (0B & 0F) in
                          let:8 a268 = (a258[7:0] & 0F) in
                          let:16 a269 = addWithCarry(false,a267,a268) in
                          #063E
                          #063F
                          let:16 a270 = addWithCarry(!true,05,~00) in
                          let:8 a271 = (05 & 0F) in
                          let:8 a272 = (~00 & 0F) in
                          let:16 a273 = addWithCarry(!true,a271,a272) in
                          #0640
                          if (!is_zero(a270[7:0])) {
                            A := a266[7:0];
                            B := a45;
                            C := a258[7:0];
                            D := a270[7:0];
                            H := M[2067];
                            L := a266[7:0];
                            SPH := a253[15:8];
                            SPL := a253[7:0];
                            FlagS := a270[7:0][7];
                            FlagZ := is_zero(a270[7:0]);
                            FlagA := a273[7:0][4];
                            FlagP := parity(a270[7:0]);
                            FlagCY := a266[15:8][0];
                            jump (0637);
                          } else {
                            #0643
                            let:16 a274 = (1 + a253) in
                            let:16 a275 = (1 + a274) in
                            A := a266[7:0];
                            B := a45;
                            C := a258[7:0];
                            D := a270[7:0];
                            H := M[2067];
                            L := a266[7:0];
                            SPH := a275[15:8];
                            SPL := a275[7:0];
                            FlagS := a270[7:0][7];
                            FlagZ := is_zero(a270[7:0]);
                            FlagA := a273[7:0][4];
                            FlagP := parity(a270[7:0]);
                            FlagCY := a266[15:8][0];
                            jump ((M[a274],M[a253]));
                          }
                        }
                      }
                    }
                  }
                } else {
                  #0590
                  #0591
                  #0594
                  let:16 a276 = addWithCarry(!false,M[20CF],~a203) in
                  let:8 a277 = (M[20CF] & 0F) in
                  let:8 a278 = (~a203 & 0F) in
                  let:16 a279 = addWithCarry(!false,a277,a278) in
                  #0595
                  if (!!a276[15:8][0]) {
                    let:16 a280 = (1 + a2) in
                    let:16 a281 = (1 + a280) in
                    A := M[20CF];
                    B := a203;
                    H := 20;
                    L := 74;
                    SPH := a281[15:8];
                    SPL := a281[7:0];
                    FlagS := a276[7:0][7];
                    FlagZ := is_zero(a276[7:0]);
                    FlagA := a279[7:0][4];
                    FlagP := parity(a276[7:0]);
                    FlagCY := !a276[15:8][0];
                    jump ((M[a280],M[a2]));
                  } else {
                    #0596
                    #0597
                    #0598
                    let:8 a282 = (M[2075] & M[2075]) in
                    let:8 a283 = (M[2075] | M[2075]) in
                    #0599
                    if (is_zero(a282)) {
                      #061B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a284 = (-1 + a2) in
                          M[a284] := 06;
                          let:16 a285 = (-1 + a284) in
                          M[a285] := 1B;
                          A := a282;
                          B := a203;
                          H := 20;
                          L := 75;
                          SPH := a285[15:8];
                          SPL := a285[7:0];
                          FlagS := a282[7];
                          FlagZ := is_zero(a282);
                          FlagA := a283[3];
                          FlagP := parity(a282);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a286 = (-1 + a2) in
                          M[a286] := 06;
                          let:16 a287 = (-1 + a286) in
                          M[a287] := 1B;
                          A := a282;
                          B := a203;
                          H := 20;
                          L := 75;
                          SPH := a287[15:8];
                          SPL := a287[7:0];
                          FlagS := a282[7];
                          FlagZ := is_zero(a282);
                          FlagA := a283[3];
                          FlagP := parity(a282);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #061E
                        let:16 a288 = addWithCarry(false,08,M[201B]) in
                        let:8 a289 = (08 & 0F) in
                        let:8 a290 = (M[201B] & 0F) in
                        let:16 a291 = addWithCarry(false,a289,a290) in
                        #0620
                        #0621
                        let:16 a292 = (-1 + a2) in
                        M[a292] := 06;
                        let:16 a293 = (-1 + a292) in
                        M[a293] := 24;
                        #return-to: 0624
                        #156F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a294 = (-1 + a293) in
                            M[a294] := 15;
                            let:16 a295 = (-1 + a294) in
                            M[a295] := 6F;
                            A := a288[7:0];
                            B := a203;
                            H := a288[7:0];
                            L := 75;
                            SPH := a295[15:8];
                            SPL := a295[7:0];
                            FlagS := a288[7:0][7];
                            FlagZ := is_zero(a288[7:0]);
                            FlagA := a291[7:0][4];
                            FlagP := parity(a288[7:0]);
                            FlagCY := a288[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a296 = (-1 + a293) in
                            M[a296] := 15;
                            let:16 a297 = (-1 + a296) in
                            M[a297] := 6F;
                            A := a288[7:0];
                            B := a203;
                            H := a288[7:0];
                            L := 75;
                            SPH := a297[15:8];
                            SPL := a297[7:0];
                            FlagS := a288[7:0][7];
                            FlagZ := is_zero(a288[7:0]);
                            FlagA := a291[7:0][4];
                            FlagP := parity(a288[7:0]);
                            FlagCY := a288[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1572
                          let:16 a298 = (-1 + a293) in
                          M[a298] := 15;
                          let:16 a299 = (-1 + a298) in
                          M[a299] := 75;
                          #return-to: 1575
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a300 = (-1 + a299) in
                              M[a300] := 15;
                              let:16 a301 = (-1 + a300) in
                              M[a301] := 54;
                              A := M[200A];
                              B := a203;
                              H := a288[7:0];
                              L := 75;
                              SPH := a301[15:8];
                              SPL := a301[7:0];
                              FlagS := a288[7:0][7];
                              FlagZ := is_zero(a288[7:0]);
                              FlagA := a291[7:0][4];
                              FlagP := parity(a288[7:0]);
                              FlagCY := a288[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a302 = (-1 + a299) in
                              M[a302] := 15;
                              let:16 a303 = (-1 + a302) in
                              M[a303] := 54;
                              A := M[200A];
                              B := a203;
                              H := a288[7:0];
                              L := 75;
                              SPH := a303[15:8];
                              SPL := a303[7:0];
                              FlagS := a288[7:0][7];
                              FlagZ := is_zero(a288[7:0]);
                              FlagA := a291[7:0][4];
                              FlagP := parity(a288[7:0]);
                              FlagCY := a288[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a304 = addWithCarry(!false,M[200A],~a288[7:0]) in
                            let:8 a305 = (M[200A] & 0F) in
                            let:8 a306 = (~a288[7:0] & 0F) in
                            let:16 a307 = addWithCarry(!false,a305,a306) in
                            #1557
                            if (!!a304[15:8][0]) {
                              let:16 a308 = (-1 + a299) in
                              M[a308] := 15;
                              let:16 a309 = (-1 + a308) in
                              M[a309] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a310 = (-1 + a309) in
                                  M[a310] := 15;
                                  let:16 a311 = (-1 + a310) in
                                  M[a311] := 90;
                                  A := M[200A];
                                  B := a203;
                                  C := 00;
                                  H := a288[7:0];
                                  L := 75;
                                  SPH := a311[15:8];
                                  SPL := a311[7:0];
                                  FlagS := a304[7:0][7];
                                  FlagZ := is_zero(a304[7:0]);
                                  FlagA := a307[7:0][4];
                                  FlagP := parity(a304[7:0]);
                                  FlagCY := !a304[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a312 = (-1 + a309) in
                                  M[a312] := 15;
                                  let:16 a313 = (-1 + a312) in
                                  M[a313] := 90;
                                  A := M[200A];
                                  B := a203;
                                  C := 00;
                                  H := a288[7:0];
                                  L := 75;
                                  SPH := a313[15:8];
                                  SPL := a313[7:0];
                                  FlagS := a304[7:0][7];
                                  FlagZ := is_zero(a304[7:0]);
                                  FlagA := a307[7:0][4];
                                  FlagP := parity(a304[7:0]);
                                  FlagCY := !a304[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a314 = addWithCarry(true,00,00) in
                                let:8 a315 = (00 & 0F) in
                                let:8 a316 = (00 & 0F) in
                                let:16 a317 = addWithCarry(true,a315,a316) in
                                #1591
                                let:16 a318 = addWithCarry(false,10,M[200A]) in
                                let:8 a319 = (10 & 0F) in
                                let:8 a320 = (M[200A] & 0F) in
                                let:16 a321 = addWithCarry(false,a319,a320) in
                                #1593
                                if (a318[7:0][7]) {
                                  A := a318[7:0];
                                  B := a203;
                                  C := a314[7:0];
                                  H := a288[7:0];
                                  L := 75;
                                  SPH := a309[15:8];
                                  SPL := a309[7:0];
                                  FlagS := a318[7:0][7];
                                  FlagZ := is_zero(a318[7:0]);
                                  FlagA := a321[7:0][4];
                                  FlagP := parity(a318[7:0]);
                                  FlagCY := a318[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a322 = (1 + a309) in
                                  let:16 a323 = (1 + a322) in
                                  A := a318[7:0];
                                  B := a203;
                                  C := a314[7:0];
                                  H := a288[7:0];
                                  L := 75;
                                  SPH := a323[15:8];
                                  SPL := a323[7:0];
                                  FlagS := a318[7:0][7];
                                  FlagZ := is_zero(a318[7:0]);
                                  FlagA := a321[7:0][4];
                                  FlagP := parity(a318[7:0]);
                                  FlagCY := a318[15:8][0];
                                  jump ((M[a322],M[a309]));
                                }
                              }
                            } else {
                              A := M[200A];
                              B := a203;
                              C := 00;
                              H := a288[7:0];
                              L := 75;
                              SPH := a299[15:8];
                              SPL := a299[7:0];
                              FlagS := a304[7:0][7];
                              FlagZ := is_zero(a304[7:0]);
                              FlagA := a307[7:0][4];
                              FlagP := parity(a304[7:0]);
                              FlagCY := !a304[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #059C
                      #059F
                      #05A0
                      let:16 a324 = (1 + (M[2077],M[2076])) in
                      #05A1
                      #05A2
                      M[2076] := a324[7:0];
                      M[2077] := a324[15:8];
                      #05A5
                      let:16 a325 = (-1 + a2) in
                      M[a325] := 05;
                      let:16 a326 = (-1 + a325) in
                      M[a326] := A8;
                      #return-to: 05A8
                      #062F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a327 = (-1 + a326) in
                          M[a327] := 06;
                          let:16 a328 = (-1 + a327) in
                          M[a328] := 2F;
                          A := a282;
                          B := a203;
                          C := M[(M[2077],M[2076])];
                          H := a324[15:8];
                          L := a324[7:0];
                          SPH := a328[15:8];
                          SPL := a328[7:0];
                          FlagS := a282[7];
                          FlagZ := is_zero(a282);
                          FlagA := a283[3];
                          FlagP := parity(a282);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a329 = (-1 + a326) in
                          M[a329] := 06;
                          let:16 a330 = (-1 + a329) in
                          M[a330] := 2F;
                          A := a282;
                          B := a203;
                          C := M[(M[2077],M[2076])];
                          H := a324[15:8];
                          L := a324[7:0];
                          SPH := a330[15:8];
                          SPL := a330[7:0];
                          FlagS := a282[7];
                          FlagZ := is_zero(a282);
                          FlagA := a283[3];
                          FlagP := parity(a282);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a331 = addWithCarry(!true,M[(M[2077],M[2076])],~00) in
                        let:8 a332 = (M[(M[2077],M[2076])] & 0F) in
                        let:8 a333 = (~00 & 0F) in
                        let:16 a334 = addWithCarry(!true,a332,a333) in
                        #0630
                        #0633
                        #0634
                        #0635
                        #0637
                        #0638
                        let:8 a335 = (M[(M[2067],a331[7:0])] & M[(M[2067],a331[7:0])]) in
                        let:8 a336 = (M[(M[2067],a331[7:0])] | M[(M[2067],a331[7:0])]) in
                        #0639
                        #063A
                        if (!is_zero(a335)) {
                          let:16 a337 = (1 + a326) in
                          let:16 a338 = (1 + a337) in
                          A := a335;
                          B := a203;
                          C := a331[7:0];
                          D := 05;
                          H := M[2067];
                          L := a331[7:0];
                          SPH := a338[15:8];
                          SPL := a338[7:0];
                          FlagS := a335[7];
                          FlagZ := is_zero(a335);
                          FlagA := a336[3];
                          FlagP := parity(a335);
                          FlagCY := true;
                          jump ((M[a337],M[a326]));
                        } else {
                          #063B
                          #063C
                          let:16 a339 = addWithCarry(false,0B,a331[7:0]) in
                          let:8 a340 = (0B & 0F) in
                          let:8 a341 = (a331[7:0] & 0F) in
                          let:16 a342 = addWithCarry(false,a340,a341) in
                          #063E
                          #063F
                          let:16 a343 = addWithCarry(!true,05,~00) in
                          let:8 a344 = (05 & 0F) in
                          let:8 a345 = (~00 & 0F) in
                          let:16 a346 = addWithCarry(!true,a344,a345) in
                          #0640
                          if (!is_zero(a343[7:0])) {
                            A := a339[7:0];
                            B := a203;
                            C := a331[7:0];
                            D := a343[7:0];
                            H := M[2067];
                            L := a339[7:0];
                            SPH := a326[15:8];
                            SPL := a326[7:0];
                            FlagS := a343[7:0][7];
                            FlagZ := is_zero(a343[7:0]);
                            FlagA := a346[7:0][4];
                            FlagP := parity(a343[7:0]);
                            FlagCY := a339[15:8][0];
                            jump (0637);
                          } else {
                            #0643
                            let:16 a347 = (1 + a326) in
                            let:16 a348 = (1 + a347) in
                            A := a339[7:0];
                            B := a203;
                            C := a331[7:0];
                            D := a343[7:0];
                            H := M[2067];
                            L := a339[7:0];
                            SPH := a348[15:8];
                            SPL := a348[7:0];
                            FlagS := a343[7:0][7];
                            FlagZ := is_zero(a343[7:0]);
                            FlagA := a346[7:0][4];
                            FlagP := parity(a343[7:0]);
                            FlagCY := a339[15:8][0];
                            jump ((M[a347],M[a326]));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

04D9:

    #04DC
    let:16 a1 = addWithCarry(!false,M[2076],~10) in
    let:8 a2 = (M[2076] & 0F) in
    let:8 a3 = (~10 & 0F) in
    let:16 a4 = addWithCarry(!false,a2,a3) in
    #04DE
    if (!a1[15:8][0]) {
      #04E7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 04;
          let:16 a6 = (-1 + a5) in
          M[a6] := E7;
          A := M[2076];
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 04;
          let:16 a8 = (-1 + a7) in
          M[a8] := E7;
          A := M[2076];
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0010);
        }
      } else {
        #04EA
        let:8 a9 = (M[2078] & M[2078]) in
        let:8 a10 = (M[2078] | M[2078]) in
        #04EB
        #04EE
        if (!is_zero(a9)) {
          #055B
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a11 = (-1 + (SPH,SPL)) in
              M[a11] := 05;
              let:16 a12 = (-1 + a11) in
              M[a12] := 5B;
              A := a9;
              H := 20;
              L := 45;
              SPH := a12[15:8];
              SPL := a12[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a13 = (-1 + (SPH,SPL)) in
              M[a13] := 05;
              let:16 a14 = (-1 + a13) in
              M[a14] := 5B;
              A := a9;
              H := 20;
              L := 45;
              SPH := a14[15:8];
              SPL := a14[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #055E
            #0560
            #1A32
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a15 = (-1 + (SPH,SPL)) in
                M[a15] := 1A;
                let:16 a16 = (-1 + a15) in
                M[a16] := 32;
                A := a9;
                B := 0B;
                D := 20;
                E := 73;
                H := 20;
                L := 45;
                SPH := a16[15:8];
                SPL := a16[7:0];
                FlagS := a9[7];
                FlagZ := is_zero(a9);
                FlagA := a10[3];
                FlagP := parity(a9);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a17 = (-1 + (SPH,SPL)) in
                M[a17] := 1A;
                let:16 a18 = (-1 + a17) in
                M[a18] := 32;
                A := a9;
                B := 0B;
                D := 20;
                E := 73;
                H := 20;
                L := 45;
                SPH := a18[15:8];
                SPL := a18[7:0];
                FlagS := a9[7];
                FlagZ := is_zero(a9);
                FlagA := a10[3];
                FlagP := parity(a9);
                FlagCY := false;
                jump (0010);
              }
            } else {
              #1A33
              M[2045] := M[2073];
              #1A34
              #1A35
              #1A36
              let:16 a19 = addWithCarry(!true,0B,~00) in
              let:8 a20 = (0B & 0F) in
              let:8 a21 = (~00 & 0F) in
              let:16 a22 = addWithCarry(!true,a20,a21) in
              #1A37
              if (!is_zero(a19[7:0])) {
                A := M[2073];
                B := a19[7:0];
                D := 20;
                E := 74;
                H := 20;
                L := 46;
                FlagS := a19[7:0][7];
                FlagZ := is_zero(a19[7:0]);
                FlagA := a22[7:0][4];
                FlagP := parity(a19[7:0]);
                FlagCY := false;
                jump (1A32);
              } else {
                #1A3A
                let:16 a23 = (1 + (SPH,SPL)) in
                let:16 a24 = (1 + a23) in
                A := M[2073];
                B := a19[7:0];
                D := 20;
                E := 74;
                H := 20;
                L := 46;
                SPH := a24[15:8];
                SPL := a24[7:0];
                FlagS := a19[7:0][7];
                FlagZ := is_zero(a19[7:0]);
                FlagA := a22[7:0][4];
                FlagP := parity(a19[7:0]);
                FlagCY := false;
                jump ((M[a23],M[(SPH,SPL)]));
              }
            }
          }
        } else {
          #04F1
          #04F4
          #04F7
          #04F9
          let:16 a25 = (-1 + (SPH,SPL)) in
          M[a25] := 04;
          let:16 a26 = (-1 + a25) in
          M[a26] := FC;
          #return-to: 04FC
          #1A32
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a27 = (-1 + a26) in
              M[a27] := 1A;
              let:16 a28 = (-1 + a27) in
              M[a28] := 32;
              A := a9;
              B := 10;
              D := 1B;
              E := 40;
              H := 20;
              L := 40;
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a29 = (-1 + a26) in
              M[a29] := 1A;
              let:16 a30 = (-1 + a29) in
              M[a30] := 32;
              A := a9;
              B := 10;
              D := 1B;
              E := 40;
              H := 20;
              L := 40;
              SPH := a30[15:8];
              SPL := a30[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #1A33
            M[2040] := 00;
            #1A34
            #1A35
            #1A36
            let:16 a31 = addWithCarry(!true,10,~00) in
            let:8 a32 = (10 & 0F) in
            let:8 a33 = (~00 & 0F) in
            let:16 a34 = addWithCarry(!true,a32,a33) in
            #1A37
            if (!is_zero(a31[7:0])) {
              A := 00;
              B := a31[7:0];
              D := 1B;
              E := 41;
              H := 20;
              L := 41;
              SPH := a26[15:8];
              SPL := a26[7:0];
              FlagS := a31[7:0][7];
              FlagZ := is_zero(a31[7:0]);
              FlagA := a34[7:0][4];
              FlagP := parity(a31[7:0]);
              FlagCY := false;
              jump (1A32);
            } else {
              #1A3A
              let:16 a35 = (1 + a26) in
              let:16 a36 = (1 + a35) in
              A := 00;
              B := a31[7:0];
              D := 1B;
              E := 41;
              H := 20;
              L := 41;
              SPH := a36[15:8];
              SPL := a36[7:0];
              FlagS := a31[7:0][7];
              FlagZ := is_zero(a31[7:0]);
              FlagA := a34[7:0][4];
              FlagP := parity(a31[7:0]);
              FlagCY := false;
              jump ((M[a35],M[a26]));
            }
          }
        }
      }
    } else {
      #04E1
      #04E4
      M[2076] := 00;
      #04E7
      #04EA
      let:8 a37 = (M[2078] & M[2078]) in
      let:8 a38 = (M[2078] | M[2078]) in
      #04EB
      #04EE
      if (!is_zero(a37)) {
        #055B
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a39 = (-1 + (SPH,SPL)) in
            M[a39] := 05;
            let:16 a40 = (-1 + a39) in
            M[a40] := 5B;
            A := a37;
            H := 20;
            L := 45;
            SPH := a40[15:8];
            SPL := a40[7:0];
            FlagS := a37[7];
            FlagZ := is_zero(a37);
            FlagA := a38[3];
            FlagP := parity(a37);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a41 = (-1 + (SPH,SPL)) in
            M[a41] := 05;
            let:16 a42 = (-1 + a41) in
            M[a42] := 5B;
            A := a37;
            H := 20;
            L := 45;
            SPH := a42[15:8];
            SPL := a42[7:0];
            FlagS := a37[7];
            FlagZ := is_zero(a37);
            FlagA := a38[3];
            FlagP := parity(a37);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #055E
          #0560
          #1A32
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a43 = (-1 + (SPH,SPL)) in
              M[a43] := 1A;
              let:16 a44 = (-1 + a43) in
              M[a44] := 32;
              A := a37;
              B := 0B;
              D := 20;
              E := 73;
              H := 20;
              L := 45;
              SPH := a44[15:8];
              SPL := a44[7:0];
              FlagS := a37[7];
              FlagZ := is_zero(a37);
              FlagA := a38[3];
              FlagP := parity(a37);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a45 = (-1 + (SPH,SPL)) in
              M[a45] := 1A;
              let:16 a46 = (-1 + a45) in
              M[a46] := 32;
              A := a37;
              B := 0B;
              D := 20;
              E := 73;
              H := 20;
              L := 45;
              SPH := a46[15:8];
              SPL := a46[7:0];
              FlagS := a37[7];
              FlagZ := is_zero(a37);
              FlagA := a38[3];
              FlagP := parity(a37);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #1A33
            M[2045] := M[2073];
            #1A34
            #1A35
            #1A36
            let:16 a47 = addWithCarry(!true,0B,~00) in
            let:8 a48 = (0B & 0F) in
            let:8 a49 = (~00 & 0F) in
            let:16 a50 = addWithCarry(!true,a48,a49) in
            #1A37
            if (!is_zero(a47[7:0])) {
              A := M[2073];
              B := a47[7:0];
              D := 20;
              E := 74;
              H := 20;
              L := 46;
              FlagS := a47[7:0][7];
              FlagZ := is_zero(a47[7:0]);
              FlagA := a50[7:0][4];
              FlagP := parity(a47[7:0]);
              FlagCY := false;
              jump (1A32);
            } else {
              #1A3A
              let:16 a51 = (1 + (SPH,SPL)) in
              let:16 a52 = (1 + a51) in
              A := M[2073];
              B := a47[7:0];
              D := 20;
              E := 74;
              H := 20;
              L := 46;
              SPH := a52[15:8];
              SPL := a52[7:0];
              FlagS := a47[7:0][7];
              FlagZ := is_zero(a47[7:0]);
              FlagA := a50[7:0][4];
              FlagP := parity(a47[7:0]);
              FlagCY := false;
              jump ((M[a51],M[(SPH,SPL)]));
            }
          }
        }
      } else {
        #04F1
        #04F4
        #04F7
        #04F9
        let:16 a53 = (-1 + (SPH,SPL)) in
        M[a53] := 04;
        let:16 a54 = (-1 + a53) in
        M[a54] := FC;
        #return-to: 04FC
        #1A32
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a55 = (-1 + a54) in
            M[a55] := 1A;
            let:16 a56 = (-1 + a55) in
            M[a56] := 32;
            A := a37;
            B := 10;
            D := 1B;
            E := 40;
            H := 20;
            L := 40;
            SPH := a56[15:8];
            SPL := a56[7:0];
            FlagS := a37[7];
            FlagZ := is_zero(a37);
            FlagA := a38[3];
            FlagP := parity(a37);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a57 = (-1 + a54) in
            M[a57] := 1A;
            let:16 a58 = (-1 + a57) in
            M[a58] := 32;
            A := a37;
            B := 10;
            D := 1B;
            E := 40;
            H := 20;
            L := 40;
            SPH := a58[15:8];
            SPL := a58[7:0];
            FlagS := a37[7];
            FlagZ := is_zero(a37);
            FlagA := a38[3];
            FlagP := parity(a37);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #1A33
          M[2040] := 00;
          #1A34
          #1A35
          #1A36
          let:16 a59 = addWithCarry(!true,10,~00) in
          let:8 a60 = (10 & 0F) in
          let:8 a61 = (~00 & 0F) in
          let:16 a62 = addWithCarry(!true,a60,a61) in
          #1A37
          if (!is_zero(a59[7:0])) {
            A := 00;
            B := a59[7:0];
            D := 1B;
            E := 41;
            H := 20;
            L := 41;
            SPH := a54[15:8];
            SPL := a54[7:0];
            FlagS := a59[7:0][7];
            FlagZ := is_zero(a59[7:0]);
            FlagA := a62[7:0][4];
            FlagP := parity(a59[7:0]);
            FlagCY := false;
            jump (1A32);
          } else {
            #1A3A
            let:16 a63 = (1 + a54) in
            let:16 a64 = (1 + a63) in
            A := 00;
            B := a59[7:0];
            D := 1B;
            E := 41;
            H := 20;
            L := 41;
            SPH := a64[15:8];
            SPL := a64[7:0];
            FlagS := a59[7:0][7];
            FlagZ := is_zero(a59[7:0]);
            FlagA := a62[7:0][4];
            FlagP := parity(a59[7:0]);
            FlagCY := false;
            jump ((M[a63],M[a54]));
          }
        }
      }
    }

04FC:

    #04FF
    let:16 a1 = addWithCarry(!true,M[2082],~00) in
    let:8 a2 = (M[2082] & 0F) in
    let:8 a3 = (~00 & 0F) in
    let:16 a4 = addWithCarry(!true,a2,a3) in
    #0500
    if (!is_zero(a1[7:0])) {
      #0508
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 05;
          let:16 a6 = (-1 + a5) in
          M[a6] := 08;
          A := a1[7:0];
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 05;
          let:16 a8 = (-1 + a7) in
          M[a8] := 08;
          A := a1[7:0];
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0010);
        }
      } else {
        #050B
        #067E
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + (SPH,SPL)) in
            M[a9] := 06;
            let:16 a10 = (-1 + a9) in
            M[a10] := 7E;
            A := a1[7:0];
            H := M[2077];
            L := M[2076];
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            jump (0008);
          } else {
            let:16 a11 = (-1 + (SPH,SPL)) in
            M[a11] := 06;
            let:16 a12 = (-1 + a11) in
            M[a12] := 7E;
            A := a1[7:0];
            H := M[2077];
            L := M[2076];
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            jump (0010);
          }
        } else {
          M[2048] := M[2076];
          M[2049] := M[2077];
          #0681
          let:16 a13 = (1 + (SPH,SPL)) in
          let:16 a14 = (1 + a13) in
          A := a1[7:0];
          H := M[2077];
          L := M[2076];
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump ((M[a13],M[(SPH,SPL)]));
        }
      }
    } else {
      #0503
      #0505
      M[206E] := 01;
      #0508
      #050B
      #067E
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a15 = (-1 + (SPH,SPL)) in
          M[a15] := 06;
          let:16 a16 = (-1 + a15) in
          M[a16] := 7E;
          A := 01;
          H := M[2077];
          L := M[2076];
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0008);
        } else {
          let:16 a17 = (-1 + (SPH,SPL)) in
          M[a17] := 06;
          let:16 a18 = (-1 + a17) in
          M[a18] := 7E;
          A := 01;
          H := M[2077];
          L := M[2076];
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0010);
        }
      } else {
        M[2048] := M[2076];
        M[2049] := M[2077];
        #0681
        let:16 a19 = (1 + (SPH,SPL)) in
        let:16 a20 = (1 + a19) in
        A := 01;
        H := M[2077];
        L := M[2076];
        SPH := a20[15:8];
        SPL := a20[7:0];
        FlagS := a1[7:0][7];
        FlagZ := is_zero(a1[7:0]);
        FlagA := a4[7:0][4];
        FlagP := parity(a1[7:0]);
        jump ((M[a19],M[(SPH,SPL)]));
      }
    }

050E:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #050F
    #0512
    #0514
    let:16 a3 = (-1 + a2) in
    M[a3] := 05;
    let:16 a4 = (-1 + a3) in
    M[a4] := 17;
    #return-to: 0517
    #0550
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a5 = (-1 + a4) in
        M[a5] := 05;
        let:16 a6 = (-1 + a5) in
        M[a6] := 50;
        A := DB;
        D := 20;
        E := 55;
        H := M[a1];
        L := M[(SPH,SPL)];
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0008);
      } else {
        let:16 a7 = (-1 + a4) in
        M[a7] := 05;
        let:16 a8 = (-1 + a7) in
        M[a8] := 50;
        A := DB;
        D := 20;
        E := 55;
        H := M[a1];
        L := M[(SPH,SPL)];
        SPH := a8[15:8];
        SPL := a8[7:0];
        jump (0010);
      }
    } else {
      M[207F] := DB;
      #0553
      #0556
      #0558
      #1A32
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a4) in
          M[a9] := 1A;
          let:16 a10 = (-1 + a9) in
          M[a10] := 32;
          A := DB;
          B := 0B;
          D := 20;
          E := 55;
          H := 20;
          L := 73;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a4) in
          M[a11] := 1A;
          let:16 a12 = (-1 + a11) in
          M[a12] := 32;
          A := DB;
          B := 0B;
          D := 20;
          E := 55;
          H := 20;
          L := 73;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1A33
        M[2073] := M[2055];
        #1A34
        #1A35
        #1A36
        let:16 a13 = addWithCarry(!true,0B,~00) in
        let:8 a14 = (0B & 0F) in
        let:8 a15 = (~00 & 0F) in
        let:16 a16 = addWithCarry(!true,a14,a15) in
        #1A37
        if (!is_zero(a13[7:0])) {
          A := M[2055];
          B := a13[7:0];
          D := 20;
          E := 56;
          H := 20;
          L := 74;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          jump (1A32);
        } else {
          #1A3A
          let:16 a17 = (1 + a4) in
          let:16 a18 = (1 + a17) in
          A := M[2055];
          B := a13[7:0];
          D := 20;
          E := 56;
          H := 20;
          L := 74;
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          jump ((M[a17],M[a4]));
        }
      }
    }

0517:

    #051A
    M[2070] := M[2046];
    #051D
    #0520
    M[2071] := M[2036];
    #0523
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 05;
    let:16 a2 = (-1 + a1) in
    M[a2] := 26;
    #return-to: 0526
    #0563
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 05;
        let:16 a4 = (-1 + a3) in
        M[a4] := 63;
        A := M[2036];
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 05;
        let:16 a6 = (-1 + a5) in
        M[a6] := 63;
        A := M[2036];
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0566
      #0567
      let:8 a7 = (80 & M[2073]) in
      let:8 a8 = (80 | M[2073]) in
      #0569
      if (!is_zero(a7)) {
        #05C1
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a2) in
            M[a9] := 05;
            let:16 a10 = (-1 + a9) in
            M[a10] := C1;
            A := a7;
            H := 20;
            L := 73;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a11 = (-1 + a2) in
            M[a11] := 05;
            let:16 a12 = (-1 + a11) in
            M[a12] := C1;
            A := a7;
            H := 20;
            L := 73;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #05C4
          let:16 a13 = (-1 + a2) in
          M[a13] := 05;
          let:16 a14 = (-1 + a13) in
          M[a14] := C7;
          #return-to: 05C7
          #1A06
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a15 = (-1 + a14) in
              M[a15] := 1A;
              let:16 a16 = (-1 + a15) in
              M[a16] := 06;
              A := a7;
              D := 20;
              E := 7C;
              H := 20;
              L := 73;
              SPH := a16[15:8];
              SPL := a16[7:0];
              FlagS := a7[7];
              FlagZ := is_zero(a7);
              FlagA := a8[3];
              FlagP := parity(a7);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a17 = (-1 + a14) in
              M[a17] := 1A;
              let:16 a18 = (-1 + a17) in
              M[a18] := 06;
              A := a7;
              D := 20;
              E := 7C;
              H := 20;
              L := 73;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a7[7];
              FlagZ := is_zero(a7);
              FlagA := a8[3];
              FlagP := parity(a7);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #1A09
            #1A0A
            #1A0B
            let:8 a19 = (80 & M[207C]) in
            let:8 a20 = (80 | M[207C]) in
            #1A0D
            let:8 a21 = (M[2072] ^ a19) in
            #1A0E
            if (!is_zero(a21)) {
              let:16 a22 = (1 + a14) in
              let:16 a23 = (1 + a22) in
              A := a21;
              B := M[2072];
              D := 20;
              E := 7C;
              H := 20;
              L := 72;
              SPH := a23[15:8];
              SPL := a23[7:0];
              FlagS := a21[7];
              FlagZ := is_zero(a21);
              FlagA := false;
              FlagP := parity(a21);
              FlagCY := false;
              jump ((M[a22],M[a14]));
            } else {
              #1A0F
              #1A10
              let:16 a24 = (1 + a14) in
              let:16 a25 = (1 + a24) in
              A := a21;
              B := M[2072];
              D := 20;
              E := 7C;
              H := 20;
              L := 72;
              SPH := a25[15:8];
              SPL := a25[7:0];
              FlagS := a21[7];
              FlagZ := is_zero(a21);
              FlagA := false;
              FlagP := parity(a21);
              FlagCY := true;
              jump ((M[a24],M[a14]));
            }
          }
        }
      } else {
        #056C
        #056F
        let:16 a26 = addWithCarry(!false,M[20C1],~04) in
        let:8 a27 = (M[20C1] & 0F) in
        let:8 a28 = (~04 & 0F) in
        let:16 a29 = addWithCarry(!false,a27,a28) in
        #0571
        #0574
        if (is_zero(a26[7:0])) {
          #05B7
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a30 = (-1 + a2) in
              M[a30] := 05;
              let:16 a31 = (-1 + a30) in
              M[a31] := B7;
              A := M[2069];
              H := 20;
              L := 73;
              SPH := a31[15:8];
              SPL := a31[7:0];
              FlagS := a26[7:0][7];
              FlagZ := is_zero(a26[7:0]);
              FlagA := a29[7:0][4];
              FlagP := parity(a26[7:0]);
              FlagCY := !a26[15:8][0];
              jump (0008);
            } else {
              let:16 a32 = (-1 + a2) in
              M[a32] := 05;
              let:16 a33 = (-1 + a32) in
              M[a33] := B7;
              A := M[2069];
              H := 20;
              L := 73;
              SPH := a33[15:8];
              SPL := a33[7:0];
              FlagS := a26[7:0][7];
              FlagZ := is_zero(a26[7:0]);
              FlagA := a29[7:0][4];
              FlagP := parity(a26[7:0]);
              FlagCY := !a26[15:8][0];
              jump (0010);
            }
          } else {
            #05BA
            #05BB
            let:8 a34 = (80 | M[2073]) in
            #05BD
            M[2073] := a34;
            #05BE
            #05BF
            let:16 a35 = addWithCarry(true,M[2074],00) in
            let:8 a36 = (M[2074] & 0F) in
            let:8 a37 = (00 & 0F) in
            let:16 a38 = addWithCarry(true,a36,a37) in
            M[2074] := a35[7:0];
            #05C0
            let:16 a39 = (1 + a2) in
            let:16 a40 = (1 + a39) in
            A := a34;
            H := 20;
            L := 74;
            SPH := a40[15:8];
            SPL := a40[7:0];
            FlagS := a35[7:0][7];
            FlagZ := is_zero(a35[7:0]);
            FlagA := a38[7:0][4];
            FlagP := parity(a35[7:0]);
            FlagCY := false;
            jump ((M[a39],M[a2]));
          }
        } else {
          #0577
          let:8 a41 = (M[2069] & M[2069]) in
          let:8 a42 = (M[2069] | M[2069]) in
          #0578
          if (is_zero(a41)) {
            let:16 a43 = (1 + a2) in
            let:16 a44 = (1 + a43) in
            A := a41;
            H := 20;
            L := 73;
            SPH := a44[15:8];
            SPL := a44[7:0];
            FlagS := a41[7];
            FlagZ := is_zero(a41);
            FlagA := a42[3];
            FlagP := parity(a41);
            FlagCY := false;
            jump ((M[a43],M[a2]));
          } else {
            #0579
            #057A
            M[2074] := 00;
            #057C
            #057F
            let:8 a45 = (M[2070] & M[2070]) in
            let:8 a46 = (M[2070] | M[2070]) in
            #0580
            if (is_zero(a45)) {
              #0589
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a47 = (-1 + a2) in
                  M[a47] := 05;
                  let:16 a48 = (-1 + a47) in
                  M[a48] := 89;
                  A := a45;
                  H := 20;
                  L := 74;
                  SPH := a48[15:8];
                  SPL := a48[7:0];
                  FlagS := a45[7];
                  FlagZ := is_zero(a45);
                  FlagA := a46[3];
                  FlagP := parity(a45);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a49 = (-1 + a2) in
                  M[a49] := 05;
                  let:16 a50 = (-1 + a49) in
                  M[a50] := 89;
                  A := a45;
                  H := 20;
                  L := 74;
                  SPH := a50[15:8];
                  SPL := a50[7:0];
                  FlagS := a45[7];
                  FlagZ := is_zero(a45);
                  FlagA := a46[3];
                  FlagP := parity(a45);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #058C
                let:8 a51 = (M[2071] & M[2071]) in
                let:8 a52 = (M[2071] | M[2071]) in
                #058D
                if (is_zero(a51)) {
                  #0596
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a53 = (-1 + a2) in
                      M[a53] := 05;
                      let:16 a54 = (-1 + a53) in
                      M[a54] := 96;
                      A := a51;
                      H := 20;
                      L := 74;
                      SPH := a54[15:8];
                      SPL := a54[7:0];
                      FlagS := a51[7];
                      FlagZ := is_zero(a51);
                      FlagA := a52[3];
                      FlagP := parity(a51);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a55 = (-1 + a2) in
                      M[a55] := 05;
                      let:16 a56 = (-1 + a55) in
                      M[a56] := 96;
                      A := a51;
                      H := 20;
                      L := 74;
                      SPH := a56[15:8];
                      SPL := a56[7:0];
                      FlagS := a51[7];
                      FlagZ := is_zero(a51);
                      FlagA := a52[3];
                      FlagP := parity(a51);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    #0597
                    #0598
                    let:8 a57 = (M[2075] & M[2075]) in
                    let:8 a58 = (M[2075] | M[2075]) in
                    #0599
                    if (is_zero(a57)) {
                      #061B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a59 = (-1 + a2) in
                          M[a59] := 06;
                          let:16 a60 = (-1 + a59) in
                          M[a60] := 1B;
                          A := a57;
                          H := 20;
                          L := 75;
                          SPH := a60[15:8];
                          SPL := a60[7:0];
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a61 = (-1 + a2) in
                          M[a61] := 06;
                          let:16 a62 = (-1 + a61) in
                          M[a62] := 1B;
                          A := a57;
                          H := 20;
                          L := 75;
                          SPH := a62[15:8];
                          SPL := a62[7:0];
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #061E
                        let:16 a63 = addWithCarry(false,08,M[201B]) in
                        let:8 a64 = (08 & 0F) in
                        let:8 a65 = (M[201B] & 0F) in
                        let:16 a66 = addWithCarry(false,a64,a65) in
                        #0620
                        #0621
                        let:16 a67 = (-1 + a2) in
                        M[a67] := 06;
                        let:16 a68 = (-1 + a67) in
                        M[a68] := 24;
                        #return-to: 0624
                        #156F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a69 = (-1 + a68) in
                            M[a69] := 15;
                            let:16 a70 = (-1 + a69) in
                            M[a70] := 6F;
                            A := a63[7:0];
                            H := a63[7:0];
                            L := 75;
                            SPH := a70[15:8];
                            SPL := a70[7:0];
                            FlagS := a63[7:0][7];
                            FlagZ := is_zero(a63[7:0]);
                            FlagA := a66[7:0][4];
                            FlagP := parity(a63[7:0]);
                            FlagCY := a63[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a71 = (-1 + a68) in
                            M[a71] := 15;
                            let:16 a72 = (-1 + a71) in
                            M[a72] := 6F;
                            A := a63[7:0];
                            H := a63[7:0];
                            L := 75;
                            SPH := a72[15:8];
                            SPL := a72[7:0];
                            FlagS := a63[7:0][7];
                            FlagZ := is_zero(a63[7:0]);
                            FlagA := a66[7:0][4];
                            FlagP := parity(a63[7:0]);
                            FlagCY := a63[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1572
                          let:16 a73 = (-1 + a68) in
                          M[a73] := 15;
                          let:16 a74 = (-1 + a73) in
                          M[a74] := 75;
                          #return-to: 1575
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a75 = (-1 + a74) in
                              M[a75] := 15;
                              let:16 a76 = (-1 + a75) in
                              M[a76] := 54;
                              A := M[200A];
                              H := a63[7:0];
                              L := 75;
                              SPH := a76[15:8];
                              SPL := a76[7:0];
                              FlagS := a63[7:0][7];
                              FlagZ := is_zero(a63[7:0]);
                              FlagA := a66[7:0][4];
                              FlagP := parity(a63[7:0]);
                              FlagCY := a63[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a77 = (-1 + a74) in
                              M[a77] := 15;
                              let:16 a78 = (-1 + a77) in
                              M[a78] := 54;
                              A := M[200A];
                              H := a63[7:0];
                              L := 75;
                              SPH := a78[15:8];
                              SPL := a78[7:0];
                              FlagS := a63[7:0][7];
                              FlagZ := is_zero(a63[7:0]);
                              FlagA := a66[7:0][4];
                              FlagP := parity(a63[7:0]);
                              FlagCY := a63[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a79 = addWithCarry(!false,M[200A],~a63[7:0]) in
                            let:8 a80 = (M[200A] & 0F) in
                            let:8 a81 = (~a63[7:0] & 0F) in
                            let:16 a82 = addWithCarry(!false,a80,a81) in
                            #1557
                            if (!!a79[15:8][0]) {
                              let:16 a83 = (-1 + a74) in
                              M[a83] := 15;
                              let:16 a84 = (-1 + a83) in
                              M[a84] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a85 = (-1 + a84) in
                                  M[a85] := 15;
                                  let:16 a86 = (-1 + a85) in
                                  M[a86] := 90;
                                  A := M[200A];
                                  C := 00;
                                  H := a63[7:0];
                                  L := 75;
                                  SPH := a86[15:8];
                                  SPL := a86[7:0];
                                  FlagS := a79[7:0][7];
                                  FlagZ := is_zero(a79[7:0]);
                                  FlagA := a82[7:0][4];
                                  FlagP := parity(a79[7:0]);
                                  FlagCY := !a79[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a87 = (-1 + a84) in
                                  M[a87] := 15;
                                  let:16 a88 = (-1 + a87) in
                                  M[a88] := 90;
                                  A := M[200A];
                                  C := 00;
                                  H := a63[7:0];
                                  L := 75;
                                  SPH := a88[15:8];
                                  SPL := a88[7:0];
                                  FlagS := a79[7:0][7];
                                  FlagZ := is_zero(a79[7:0]);
                                  FlagA := a82[7:0][4];
                                  FlagP := parity(a79[7:0]);
                                  FlagCY := !a79[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a89 = addWithCarry(true,00,00) in
                                let:8 a90 = (00 & 0F) in
                                let:8 a91 = (00 & 0F) in
                                let:16 a92 = addWithCarry(true,a90,a91) in
                                #1591
                                let:16 a93 = addWithCarry(false,10,M[200A]) in
                                let:8 a94 = (10 & 0F) in
                                let:8 a95 = (M[200A] & 0F) in
                                let:16 a96 = addWithCarry(false,a94,a95) in
                                #1593
                                if (a93[7:0][7]) {
                                  A := a93[7:0];
                                  C := a89[7:0];
                                  H := a63[7:0];
                                  L := 75;
                                  SPH := a84[15:8];
                                  SPL := a84[7:0];
                                  FlagS := a93[7:0][7];
                                  FlagZ := is_zero(a93[7:0]);
                                  FlagA := a96[7:0][4];
                                  FlagP := parity(a93[7:0]);
                                  FlagCY := a93[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a97 = (1 + a84) in
                                  let:16 a98 = (1 + a97) in
                                  A := a93[7:0];
                                  C := a89[7:0];
                                  H := a63[7:0];
                                  L := 75;
                                  SPH := a98[15:8];
                                  SPL := a98[7:0];
                                  FlagS := a93[7:0][7];
                                  FlagZ := is_zero(a93[7:0]);
                                  FlagA := a96[7:0][4];
                                  FlagP := parity(a93[7:0]);
                                  FlagCY := a93[15:8][0];
                                  jump ((M[a97],M[a84]));
                                }
                              }
                            } else {
                              A := M[200A];
                              C := 00;
                              H := a63[7:0];
                              L := 75;
                              SPH := a74[15:8];
                              SPL := a74[7:0];
                              FlagS := a79[7:0][7];
                              FlagZ := is_zero(a79[7:0]);
                              FlagA := a82[7:0][4];
                              FlagP := parity(a79[7:0]);
                              FlagCY := !a79[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #059C
                      #059F
                      #05A0
                      let:16 a99 = (1 + (M[2077],M[2076])) in
                      #05A1
                      #05A2
                      M[2076] := a99[7:0];
                      M[2077] := a99[15:8];
                      #05A5
                      let:16 a100 = (-1 + a2) in
                      M[a100] := 05;
                      let:16 a101 = (-1 + a100) in
                      M[a101] := A8;
                      #return-to: 05A8
                      #062F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a102 = (-1 + a101) in
                          M[a102] := 06;
                          let:16 a103 = (-1 + a102) in
                          M[a103] := 2F;
                          A := a57;
                          C := M[(M[2077],M[2076])];
                          H := a99[15:8];
                          L := a99[7:0];
                          SPH := a103[15:8];
                          SPL := a103[7:0];
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a104 = (-1 + a101) in
                          M[a104] := 06;
                          let:16 a105 = (-1 + a104) in
                          M[a105] := 2F;
                          A := a57;
                          C := M[(M[2077],M[2076])];
                          H := a99[15:8];
                          L := a99[7:0];
                          SPH := a105[15:8];
                          SPL := a105[7:0];
                          FlagS := a57[7];
                          FlagZ := is_zero(a57);
                          FlagA := a58[3];
                          FlagP := parity(a57);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a106 = addWithCarry(!true,M[(M[2077],M[2076])],~00) in
                        let:8 a107 = (M[(M[2077],M[2076])] & 0F) in
                        let:8 a108 = (~00 & 0F) in
                        let:16 a109 = addWithCarry(!true,a107,a108) in
                        #0630
                        #0633
                        #0634
                        #0635
                        #0637
                        #0638
                        let:8 a110 = (M[(M[2067],a106[7:0])] & M[(M[2067],a106[7:0])]) in
                        let:8 a111 = (M[(M[2067],a106[7:0])] | M[(M[2067],a106[7:0])]) in
                        #0639
                        #063A
                        if (!is_zero(a110)) {
                          let:16 a112 = (1 + a101) in
                          let:16 a113 = (1 + a112) in
                          A := a110;
                          C := a106[7:0];
                          D := 05;
                          H := M[2067];
                          L := a106[7:0];
                          SPH := a113[15:8];
                          SPL := a113[7:0];
                          FlagS := a110[7];
                          FlagZ := is_zero(a110);
                          FlagA := a111[3];
                          FlagP := parity(a110);
                          FlagCY := true;
                          jump ((M[a112],M[a101]));
                        } else {
                          #063B
                          #063C
                          let:16 a114 = addWithCarry(false,0B,a106[7:0]) in
                          let:8 a115 = (0B & 0F) in
                          let:8 a116 = (a106[7:0] & 0F) in
                          let:16 a117 = addWithCarry(false,a115,a116) in
                          #063E
                          #063F
                          let:16 a118 = addWithCarry(!true,05,~00) in
                          let:8 a119 = (05 & 0F) in
                          let:8 a120 = (~00 & 0F) in
                          let:16 a121 = addWithCarry(!true,a119,a120) in
                          #0640
                          if (!is_zero(a118[7:0])) {
                            A := a114[7:0];
                            C := a106[7:0];
                            D := a118[7:0];
                            H := M[2067];
                            L := a114[7:0];
                            SPH := a101[15:8];
                            SPL := a101[7:0];
                            FlagS := a118[7:0][7];
                            FlagZ := is_zero(a118[7:0]);
                            FlagA := a121[7:0][4];
                            FlagP := parity(a118[7:0]);
                            FlagCY := a114[15:8][0];
                            jump (0637);
                          } else {
                            #0643
                            let:16 a122 = (1 + a101) in
                            let:16 a123 = (1 + a122) in
                            A := a114[7:0];
                            C := a106[7:0];
                            D := a118[7:0];
                            H := M[2067];
                            L := a114[7:0];
                            SPH := a123[15:8];
                            SPL := a123[7:0];
                            FlagS := a118[7:0][7];
                            FlagZ := is_zero(a118[7:0]);
                            FlagA := a121[7:0][4];
                            FlagP := parity(a118[7:0]);
                            FlagCY := a114[15:8][0];
                            jump ((M[a122],M[a101]));
                          }
                        }
                      }
                    }
                  }
                } else {
                  #0590
                  #0591
                  #0594
                  let:16 a124 = addWithCarry(!false,M[20CF],~a51) in
                  let:8 a125 = (M[20CF] & 0F) in
                  let:8 a126 = (~a51 & 0F) in
                  let:16 a127 = addWithCarry(!false,a125,a126) in
                  #0595
                  if (!!a124[15:8][0]) {
                    let:16 a128 = (1 + a2) in
                    let:16 a129 = (1 + a128) in
                    A := M[20CF];
                    B := a51;
                    H := 20;
                    L := 74;
                    SPH := a129[15:8];
                    SPL := a129[7:0];
                    FlagS := a124[7:0][7];
                    FlagZ := is_zero(a124[7:0]);
                    FlagA := a127[7:0][4];
                    FlagP := parity(a124[7:0]);
                    FlagCY := !a124[15:8][0];
                    jump ((M[a128],M[a2]));
                  } else {
                    #0596
                    #0597
                    #0598
                    let:8 a130 = (M[2075] & M[2075]) in
                    let:8 a131 = (M[2075] | M[2075]) in
                    #0599
                    if (is_zero(a130)) {
                      #061B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a132 = (-1 + a2) in
                          M[a132] := 06;
                          let:16 a133 = (-1 + a132) in
                          M[a133] := 1B;
                          A := a130;
                          B := a51;
                          H := 20;
                          L := 75;
                          SPH := a133[15:8];
                          SPL := a133[7:0];
                          FlagS := a130[7];
                          FlagZ := is_zero(a130);
                          FlagA := a131[3];
                          FlagP := parity(a130);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a134 = (-1 + a2) in
                          M[a134] := 06;
                          let:16 a135 = (-1 + a134) in
                          M[a135] := 1B;
                          A := a130;
                          B := a51;
                          H := 20;
                          L := 75;
                          SPH := a135[15:8];
                          SPL := a135[7:0];
                          FlagS := a130[7];
                          FlagZ := is_zero(a130);
                          FlagA := a131[3];
                          FlagP := parity(a130);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #061E
                        let:16 a136 = addWithCarry(false,08,M[201B]) in
                        let:8 a137 = (08 & 0F) in
                        let:8 a138 = (M[201B] & 0F) in
                        let:16 a139 = addWithCarry(false,a137,a138) in
                        #0620
                        #0621
                        let:16 a140 = (-1 + a2) in
                        M[a140] := 06;
                        let:16 a141 = (-1 + a140) in
                        M[a141] := 24;
                        #return-to: 0624
                        #156F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a142 = (-1 + a141) in
                            M[a142] := 15;
                            let:16 a143 = (-1 + a142) in
                            M[a143] := 6F;
                            A := a136[7:0];
                            B := a51;
                            H := a136[7:0];
                            L := 75;
                            SPH := a143[15:8];
                            SPL := a143[7:0];
                            FlagS := a136[7:0][7];
                            FlagZ := is_zero(a136[7:0]);
                            FlagA := a139[7:0][4];
                            FlagP := parity(a136[7:0]);
                            FlagCY := a136[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a144 = (-1 + a141) in
                            M[a144] := 15;
                            let:16 a145 = (-1 + a144) in
                            M[a145] := 6F;
                            A := a136[7:0];
                            B := a51;
                            H := a136[7:0];
                            L := 75;
                            SPH := a145[15:8];
                            SPL := a145[7:0];
                            FlagS := a136[7:0][7];
                            FlagZ := is_zero(a136[7:0]);
                            FlagA := a139[7:0][4];
                            FlagP := parity(a136[7:0]);
                            FlagCY := a136[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1572
                          let:16 a146 = (-1 + a141) in
                          M[a146] := 15;
                          let:16 a147 = (-1 + a146) in
                          M[a147] := 75;
                          #return-to: 1575
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a148 = (-1 + a147) in
                              M[a148] := 15;
                              let:16 a149 = (-1 + a148) in
                              M[a149] := 54;
                              A := M[200A];
                              B := a51;
                              H := a136[7:0];
                              L := 75;
                              SPH := a149[15:8];
                              SPL := a149[7:0];
                              FlagS := a136[7:0][7];
                              FlagZ := is_zero(a136[7:0]);
                              FlagA := a139[7:0][4];
                              FlagP := parity(a136[7:0]);
                              FlagCY := a136[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a150 = (-1 + a147) in
                              M[a150] := 15;
                              let:16 a151 = (-1 + a150) in
                              M[a151] := 54;
                              A := M[200A];
                              B := a51;
                              H := a136[7:0];
                              L := 75;
                              SPH := a151[15:8];
                              SPL := a151[7:0];
                              FlagS := a136[7:0][7];
                              FlagZ := is_zero(a136[7:0]);
                              FlagA := a139[7:0][4];
                              FlagP := parity(a136[7:0]);
                              FlagCY := a136[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a152 = addWithCarry(!false,M[200A],~a136[7:0]) in
                            let:8 a153 = (M[200A] & 0F) in
                            let:8 a154 = (~a136[7:0] & 0F) in
                            let:16 a155 = addWithCarry(!false,a153,a154) in
                            #1557
                            if (!!a152[15:8][0]) {
                              let:16 a156 = (-1 + a147) in
                              M[a156] := 15;
                              let:16 a157 = (-1 + a156) in
                              M[a157] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a158 = (-1 + a157) in
                                  M[a158] := 15;
                                  let:16 a159 = (-1 + a158) in
                                  M[a159] := 90;
                                  A := M[200A];
                                  B := a51;
                                  C := 00;
                                  H := a136[7:0];
                                  L := 75;
                                  SPH := a159[15:8];
                                  SPL := a159[7:0];
                                  FlagS := a152[7:0][7];
                                  FlagZ := is_zero(a152[7:0]);
                                  FlagA := a155[7:0][4];
                                  FlagP := parity(a152[7:0]);
                                  FlagCY := !a152[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a160 = (-1 + a157) in
                                  M[a160] := 15;
                                  let:16 a161 = (-1 + a160) in
                                  M[a161] := 90;
                                  A := M[200A];
                                  B := a51;
                                  C := 00;
                                  H := a136[7:0];
                                  L := 75;
                                  SPH := a161[15:8];
                                  SPL := a161[7:0];
                                  FlagS := a152[7:0][7];
                                  FlagZ := is_zero(a152[7:0]);
                                  FlagA := a155[7:0][4];
                                  FlagP := parity(a152[7:0]);
                                  FlagCY := !a152[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a162 = addWithCarry(true,00,00) in
                                let:8 a163 = (00 & 0F) in
                                let:8 a164 = (00 & 0F) in
                                let:16 a165 = addWithCarry(true,a163,a164) in
                                #1591
                                let:16 a166 = addWithCarry(false,10,M[200A]) in
                                let:8 a167 = (10 & 0F) in
                                let:8 a168 = (M[200A] & 0F) in
                                let:16 a169 = addWithCarry(false,a167,a168) in
                                #1593
                                if (a166[7:0][7]) {
                                  A := a166[7:0];
                                  B := a51;
                                  C := a162[7:0];
                                  H := a136[7:0];
                                  L := 75;
                                  SPH := a157[15:8];
                                  SPL := a157[7:0];
                                  FlagS := a166[7:0][7];
                                  FlagZ := is_zero(a166[7:0]);
                                  FlagA := a169[7:0][4];
                                  FlagP := parity(a166[7:0]);
                                  FlagCY := a166[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a170 = (1 + a157) in
                                  let:16 a171 = (1 + a170) in
                                  A := a166[7:0];
                                  B := a51;
                                  C := a162[7:0];
                                  H := a136[7:0];
                                  L := 75;
                                  SPH := a171[15:8];
                                  SPL := a171[7:0];
                                  FlagS := a166[7:0][7];
                                  FlagZ := is_zero(a166[7:0]);
                                  FlagA := a169[7:0][4];
                                  FlagP := parity(a166[7:0]);
                                  FlagCY := a166[15:8][0];
                                  jump ((M[a170],M[a157]));
                                }
                              }
                            } else {
                              A := M[200A];
                              B := a51;
                              C := 00;
                              H := a136[7:0];
                              L := 75;
                              SPH := a147[15:8];
                              SPL := a147[7:0];
                              FlagS := a152[7:0][7];
                              FlagZ := is_zero(a152[7:0]);
                              FlagA := a155[7:0][4];
                              FlagP := parity(a152[7:0]);
                              FlagCY := !a152[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #059C
                      #059F
                      #05A0
                      let:16 a172 = (1 + (M[2077],M[2076])) in
                      #05A1
                      #05A2
                      M[2076] := a172[7:0];
                      M[2077] := a172[15:8];
                      #05A5
                      let:16 a173 = (-1 + a2) in
                      M[a173] := 05;
                      let:16 a174 = (-1 + a173) in
                      M[a174] := A8;
                      #return-to: 05A8
                      #062F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a175 = (-1 + a174) in
                          M[a175] := 06;
                          let:16 a176 = (-1 + a175) in
                          M[a176] := 2F;
                          A := a130;
                          B := a51;
                          C := M[(M[2077],M[2076])];
                          H := a172[15:8];
                          L := a172[7:0];
                          SPH := a176[15:8];
                          SPL := a176[7:0];
                          FlagS := a130[7];
                          FlagZ := is_zero(a130);
                          FlagA := a131[3];
                          FlagP := parity(a130);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a177 = (-1 + a174) in
                          M[a177] := 06;
                          let:16 a178 = (-1 + a177) in
                          M[a178] := 2F;
                          A := a130;
                          B := a51;
                          C := M[(M[2077],M[2076])];
                          H := a172[15:8];
                          L := a172[7:0];
                          SPH := a178[15:8];
                          SPL := a178[7:0];
                          FlagS := a130[7];
                          FlagZ := is_zero(a130);
                          FlagA := a131[3];
                          FlagP := parity(a130);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a179 = addWithCarry(!true,M[(M[2077],M[2076])],~00) in
                        let:8 a180 = (M[(M[2077],M[2076])] & 0F) in
                        let:8 a181 = (~00 & 0F) in
                        let:16 a182 = addWithCarry(!true,a180,a181) in
                        #0630
                        #0633
                        #0634
                        #0635
                        #0637
                        #0638
                        let:8 a183 = (M[(M[2067],a179[7:0])] & M[(M[2067],a179[7:0])]) in
                        let:8 a184 = (M[(M[2067],a179[7:0])] | M[(M[2067],a179[7:0])]) in
                        #0639
                        #063A
                        if (!is_zero(a183)) {
                          let:16 a185 = (1 + a174) in
                          let:16 a186 = (1 + a185) in
                          A := a183;
                          B := a51;
                          C := a179[7:0];
                          D := 05;
                          H := M[2067];
                          L := a179[7:0];
                          SPH := a186[15:8];
                          SPL := a186[7:0];
                          FlagS := a183[7];
                          FlagZ := is_zero(a183);
                          FlagA := a184[3];
                          FlagP := parity(a183);
                          FlagCY := true;
                          jump ((M[a185],M[a174]));
                        } else {
                          #063B
                          #063C
                          let:16 a187 = addWithCarry(false,0B,a179[7:0]) in
                          let:8 a188 = (0B & 0F) in
                          let:8 a189 = (a179[7:0] & 0F) in
                          let:16 a190 = addWithCarry(false,a188,a189) in
                          #063E
                          #063F
                          let:16 a191 = addWithCarry(!true,05,~00) in
                          let:8 a192 = (05 & 0F) in
                          let:8 a193 = (~00 & 0F) in
                          let:16 a194 = addWithCarry(!true,a192,a193) in
                          #0640
                          if (!is_zero(a191[7:0])) {
                            A := a187[7:0];
                            B := a51;
                            C := a179[7:0];
                            D := a191[7:0];
                            H := M[2067];
                            L := a187[7:0];
                            SPH := a174[15:8];
                            SPL := a174[7:0];
                            FlagS := a191[7:0][7];
                            FlagZ := is_zero(a191[7:0]);
                            FlagA := a194[7:0][4];
                            FlagP := parity(a191[7:0]);
                            FlagCY := a187[15:8][0];
                            jump (0637);
                          } else {
                            #0643
                            let:16 a195 = (1 + a174) in
                            let:16 a196 = (1 + a195) in
                            A := a187[7:0];
                            B := a51;
                            C := a179[7:0];
                            D := a191[7:0];
                            H := M[2067];
                            L := a187[7:0];
                            SPH := a196[15:8];
                            SPL := a196[7:0];
                            FlagS := a191[7:0][7];
                            FlagZ := is_zero(a191[7:0]);
                            FlagA := a194[7:0][4];
                            FlagP := parity(a191[7:0]);
                            FlagCY := a187[15:8][0];
                            jump ((M[a195],M[a174]));
                          }
                        }
                      }
                    }
                  }
                }
              }
            } else {
              #0583
              #0584
              #0587
              let:16 a197 = addWithCarry(!false,M[20CF],~a45) in
              let:8 a198 = (M[20CF] & 0F) in
              let:8 a199 = (~a45 & 0F) in
              let:16 a200 = addWithCarry(!false,a198,a199) in
              #0588
              if (!!a197[15:8][0]) {
                let:16 a201 = (1 + a2) in
                let:16 a202 = (1 + a201) in
                A := M[20CF];
                B := a45;
                H := 20;
                L := 74;
                SPH := a202[15:8];
                SPL := a202[7:0];
                FlagS := a197[7:0][7];
                FlagZ := is_zero(a197[7:0]);
                FlagA := a200[7:0][4];
                FlagP := parity(a197[7:0]);
                FlagCY := !a197[15:8][0];
                jump ((M[a201],M[a2]));
              } else {
                #0589
                #058C
                let:8 a203 = (M[2071] & M[2071]) in
                let:8 a204 = (M[2071] | M[2071]) in
                #058D
                if (is_zero(a203)) {
                  #0596
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a205 = (-1 + a2) in
                      M[a205] := 05;
                      let:16 a206 = (-1 + a205) in
                      M[a206] := 96;
                      A := a203;
                      B := a45;
                      H := 20;
                      L := 74;
                      SPH := a206[15:8];
                      SPL := a206[7:0];
                      FlagS := a203[7];
                      FlagZ := is_zero(a203);
                      FlagA := a204[3];
                      FlagP := parity(a203);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a207 = (-1 + a2) in
                      M[a207] := 05;
                      let:16 a208 = (-1 + a207) in
                      M[a208] := 96;
                      A := a203;
                      B := a45;
                      H := 20;
                      L := 74;
                      SPH := a208[15:8];
                      SPL := a208[7:0];
                      FlagS := a203[7];
                      FlagZ := is_zero(a203);
                      FlagA := a204[3];
                      FlagP := parity(a203);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    #0597
                    #0598
                    let:8 a209 = (M[2075] & M[2075]) in
                    let:8 a210 = (M[2075] | M[2075]) in
                    #0599
                    if (is_zero(a209)) {
                      #061B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a211 = (-1 + a2) in
                          M[a211] := 06;
                          let:16 a212 = (-1 + a211) in
                          M[a212] := 1B;
                          A := a209;
                          B := a45;
                          H := 20;
                          L := 75;
                          SPH := a212[15:8];
                          SPL := a212[7:0];
                          FlagS := a209[7];
                          FlagZ := is_zero(a209);
                          FlagA := a210[3];
                          FlagP := parity(a209);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a213 = (-1 + a2) in
                          M[a213] := 06;
                          let:16 a214 = (-1 + a213) in
                          M[a214] := 1B;
                          A := a209;
                          B := a45;
                          H := 20;
                          L := 75;
                          SPH := a214[15:8];
                          SPL := a214[7:0];
                          FlagS := a209[7];
                          FlagZ := is_zero(a209);
                          FlagA := a210[3];
                          FlagP := parity(a209);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #061E
                        let:16 a215 = addWithCarry(false,08,M[201B]) in
                        let:8 a216 = (08 & 0F) in
                        let:8 a217 = (M[201B] & 0F) in
                        let:16 a218 = addWithCarry(false,a216,a217) in
                        #0620
                        #0621
                        let:16 a219 = (-1 + a2) in
                        M[a219] := 06;
                        let:16 a220 = (-1 + a219) in
                        M[a220] := 24;
                        #return-to: 0624
                        #156F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a221 = (-1 + a220) in
                            M[a221] := 15;
                            let:16 a222 = (-1 + a221) in
                            M[a222] := 6F;
                            A := a215[7:0];
                            B := a45;
                            H := a215[7:0];
                            L := 75;
                            SPH := a222[15:8];
                            SPL := a222[7:0];
                            FlagS := a215[7:0][7];
                            FlagZ := is_zero(a215[7:0]);
                            FlagA := a218[7:0][4];
                            FlagP := parity(a215[7:0]);
                            FlagCY := a215[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a223 = (-1 + a220) in
                            M[a223] := 15;
                            let:16 a224 = (-1 + a223) in
                            M[a224] := 6F;
                            A := a215[7:0];
                            B := a45;
                            H := a215[7:0];
                            L := 75;
                            SPH := a224[15:8];
                            SPL := a224[7:0];
                            FlagS := a215[7:0][7];
                            FlagZ := is_zero(a215[7:0]);
                            FlagA := a218[7:0][4];
                            FlagP := parity(a215[7:0]);
                            FlagCY := a215[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1572
                          let:16 a225 = (-1 + a220) in
                          M[a225] := 15;
                          let:16 a226 = (-1 + a225) in
                          M[a226] := 75;
                          #return-to: 1575
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a227 = (-1 + a226) in
                              M[a227] := 15;
                              let:16 a228 = (-1 + a227) in
                              M[a228] := 54;
                              A := M[200A];
                              B := a45;
                              H := a215[7:0];
                              L := 75;
                              SPH := a228[15:8];
                              SPL := a228[7:0];
                              FlagS := a215[7:0][7];
                              FlagZ := is_zero(a215[7:0]);
                              FlagA := a218[7:0][4];
                              FlagP := parity(a215[7:0]);
                              FlagCY := a215[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a229 = (-1 + a226) in
                              M[a229] := 15;
                              let:16 a230 = (-1 + a229) in
                              M[a230] := 54;
                              A := M[200A];
                              B := a45;
                              H := a215[7:0];
                              L := 75;
                              SPH := a230[15:8];
                              SPL := a230[7:0];
                              FlagS := a215[7:0][7];
                              FlagZ := is_zero(a215[7:0]);
                              FlagA := a218[7:0][4];
                              FlagP := parity(a215[7:0]);
                              FlagCY := a215[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a231 = addWithCarry(!false,M[200A],~a215[7:0]) in
                            let:8 a232 = (M[200A] & 0F) in
                            let:8 a233 = (~a215[7:0] & 0F) in
                            let:16 a234 = addWithCarry(!false,a232,a233) in
                            #1557
                            if (!!a231[15:8][0]) {
                              let:16 a235 = (-1 + a226) in
                              M[a235] := 15;
                              let:16 a236 = (-1 + a235) in
                              M[a236] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a237 = (-1 + a236) in
                                  M[a237] := 15;
                                  let:16 a238 = (-1 + a237) in
                                  M[a238] := 90;
                                  A := M[200A];
                                  B := a45;
                                  C := 00;
                                  H := a215[7:0];
                                  L := 75;
                                  SPH := a238[15:8];
                                  SPL := a238[7:0];
                                  FlagS := a231[7:0][7];
                                  FlagZ := is_zero(a231[7:0]);
                                  FlagA := a234[7:0][4];
                                  FlagP := parity(a231[7:0]);
                                  FlagCY := !a231[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a239 = (-1 + a236) in
                                  M[a239] := 15;
                                  let:16 a240 = (-1 + a239) in
                                  M[a240] := 90;
                                  A := M[200A];
                                  B := a45;
                                  C := 00;
                                  H := a215[7:0];
                                  L := 75;
                                  SPH := a240[15:8];
                                  SPL := a240[7:0];
                                  FlagS := a231[7:0][7];
                                  FlagZ := is_zero(a231[7:0]);
                                  FlagA := a234[7:0][4];
                                  FlagP := parity(a231[7:0]);
                                  FlagCY := !a231[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a241 = addWithCarry(true,00,00) in
                                let:8 a242 = (00 & 0F) in
                                let:8 a243 = (00 & 0F) in
                                let:16 a244 = addWithCarry(true,a242,a243) in
                                #1591
                                let:16 a245 = addWithCarry(false,10,M[200A]) in
                                let:8 a246 = (10 & 0F) in
                                let:8 a247 = (M[200A] & 0F) in
                                let:16 a248 = addWithCarry(false,a246,a247) in
                                #1593
                                if (a245[7:0][7]) {
                                  A := a245[7:0];
                                  B := a45;
                                  C := a241[7:0];
                                  H := a215[7:0];
                                  L := 75;
                                  SPH := a236[15:8];
                                  SPL := a236[7:0];
                                  FlagS := a245[7:0][7];
                                  FlagZ := is_zero(a245[7:0]);
                                  FlagA := a248[7:0][4];
                                  FlagP := parity(a245[7:0]);
                                  FlagCY := a245[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a249 = (1 + a236) in
                                  let:16 a250 = (1 + a249) in
                                  A := a245[7:0];
                                  B := a45;
                                  C := a241[7:0];
                                  H := a215[7:0];
                                  L := 75;
                                  SPH := a250[15:8];
                                  SPL := a250[7:0];
                                  FlagS := a245[7:0][7];
                                  FlagZ := is_zero(a245[7:0]);
                                  FlagA := a248[7:0][4];
                                  FlagP := parity(a245[7:0]);
                                  FlagCY := a245[15:8][0];
                                  jump ((M[a249],M[a236]));
                                }
                              }
                            } else {
                              A := M[200A];
                              B := a45;
                              C := 00;
                              H := a215[7:0];
                              L := 75;
                              SPH := a226[15:8];
                              SPL := a226[7:0];
                              FlagS := a231[7:0][7];
                              FlagZ := is_zero(a231[7:0]);
                              FlagA := a234[7:0][4];
                              FlagP := parity(a231[7:0]);
                              FlagCY := !a231[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #059C
                      #059F
                      #05A0
                      let:16 a251 = (1 + (M[2077],M[2076])) in
                      #05A1
                      #05A2
                      M[2076] := a251[7:0];
                      M[2077] := a251[15:8];
                      #05A5
                      let:16 a252 = (-1 + a2) in
                      M[a252] := 05;
                      let:16 a253 = (-1 + a252) in
                      M[a253] := A8;
                      #return-to: 05A8
                      #062F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a254 = (-1 + a253) in
                          M[a254] := 06;
                          let:16 a255 = (-1 + a254) in
                          M[a255] := 2F;
                          A := a209;
                          B := a45;
                          C := M[(M[2077],M[2076])];
                          H := a251[15:8];
                          L := a251[7:0];
                          SPH := a255[15:8];
                          SPL := a255[7:0];
                          FlagS := a209[7];
                          FlagZ := is_zero(a209);
                          FlagA := a210[3];
                          FlagP := parity(a209);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a256 = (-1 + a253) in
                          M[a256] := 06;
                          let:16 a257 = (-1 + a256) in
                          M[a257] := 2F;
                          A := a209;
                          B := a45;
                          C := M[(M[2077],M[2076])];
                          H := a251[15:8];
                          L := a251[7:0];
                          SPH := a257[15:8];
                          SPL := a257[7:0];
                          FlagS := a209[7];
                          FlagZ := is_zero(a209);
                          FlagA := a210[3];
                          FlagP := parity(a209);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a258 = addWithCarry(!true,M[(M[2077],M[2076])],~00) in
                        let:8 a259 = (M[(M[2077],M[2076])] & 0F) in
                        let:8 a260 = (~00 & 0F) in
                        let:16 a261 = addWithCarry(!true,a259,a260) in
                        #0630
                        #0633
                        #0634
                        #0635
                        #0637
                        #0638
                        let:8 a262 = (M[(M[2067],a258[7:0])] & M[(M[2067],a258[7:0])]) in
                        let:8 a263 = (M[(M[2067],a258[7:0])] | M[(M[2067],a258[7:0])]) in
                        #0639
                        #063A
                        if (!is_zero(a262)) {
                          let:16 a264 = (1 + a253) in
                          let:16 a265 = (1 + a264) in
                          A := a262;
                          B := a45;
                          C := a258[7:0];
                          D := 05;
                          H := M[2067];
                          L := a258[7:0];
                          SPH := a265[15:8];
                          SPL := a265[7:0];
                          FlagS := a262[7];
                          FlagZ := is_zero(a262);
                          FlagA := a263[3];
                          FlagP := parity(a262);
                          FlagCY := true;
                          jump ((M[a264],M[a253]));
                        } else {
                          #063B
                          #063C
                          let:16 a266 = addWithCarry(false,0B,a258[7:0]) in
                          let:8 a267 = (0B & 0F) in
                          let:8 a268 = (a258[7:0] & 0F) in
                          let:16 a269 = addWithCarry(false,a267,a268) in
                          #063E
                          #063F
                          let:16 a270 = addWithCarry(!true,05,~00) in
                          let:8 a271 = (05 & 0F) in
                          let:8 a272 = (~00 & 0F) in
                          let:16 a273 = addWithCarry(!true,a271,a272) in
                          #0640
                          if (!is_zero(a270[7:0])) {
                            A := a266[7:0];
                            B := a45;
                            C := a258[7:0];
                            D := a270[7:0];
                            H := M[2067];
                            L := a266[7:0];
                            SPH := a253[15:8];
                            SPL := a253[7:0];
                            FlagS := a270[7:0][7];
                            FlagZ := is_zero(a270[7:0]);
                            FlagA := a273[7:0][4];
                            FlagP := parity(a270[7:0]);
                            FlagCY := a266[15:8][0];
                            jump (0637);
                          } else {
                            #0643
                            let:16 a274 = (1 + a253) in
                            let:16 a275 = (1 + a274) in
                            A := a266[7:0];
                            B := a45;
                            C := a258[7:0];
                            D := a270[7:0];
                            H := M[2067];
                            L := a266[7:0];
                            SPH := a275[15:8];
                            SPL := a275[7:0];
                            FlagS := a270[7:0][7];
                            FlagZ := is_zero(a270[7:0]);
                            FlagA := a273[7:0][4];
                            FlagP := parity(a270[7:0]);
                            FlagCY := a266[15:8][0];
                            jump ((M[a274],M[a253]));
                          }
                        }
                      }
                    }
                  }
                } else {
                  #0590
                  #0591
                  #0594
                  let:16 a276 = addWithCarry(!false,M[20CF],~a203) in
                  let:8 a277 = (M[20CF] & 0F) in
                  let:8 a278 = (~a203 & 0F) in
                  let:16 a279 = addWithCarry(!false,a277,a278) in
                  #0595
                  if (!!a276[15:8][0]) {
                    let:16 a280 = (1 + a2) in
                    let:16 a281 = (1 + a280) in
                    A := M[20CF];
                    B := a203;
                    H := 20;
                    L := 74;
                    SPH := a281[15:8];
                    SPL := a281[7:0];
                    FlagS := a276[7:0][7];
                    FlagZ := is_zero(a276[7:0]);
                    FlagA := a279[7:0][4];
                    FlagP := parity(a276[7:0]);
                    FlagCY := !a276[15:8][0];
                    jump ((M[a280],M[a2]));
                  } else {
                    #0596
                    #0597
                    #0598
                    let:8 a282 = (M[2075] & M[2075]) in
                    let:8 a283 = (M[2075] | M[2075]) in
                    #0599
                    if (is_zero(a282)) {
                      #061B
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a284 = (-1 + a2) in
                          M[a284] := 06;
                          let:16 a285 = (-1 + a284) in
                          M[a285] := 1B;
                          A := a282;
                          B := a203;
                          H := 20;
                          L := 75;
                          SPH := a285[15:8];
                          SPL := a285[7:0];
                          FlagS := a282[7];
                          FlagZ := is_zero(a282);
                          FlagA := a283[3];
                          FlagP := parity(a282);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a286 = (-1 + a2) in
                          M[a286] := 06;
                          let:16 a287 = (-1 + a286) in
                          M[a287] := 1B;
                          A := a282;
                          B := a203;
                          H := 20;
                          L := 75;
                          SPH := a287[15:8];
                          SPL := a287[7:0];
                          FlagS := a282[7];
                          FlagZ := is_zero(a282);
                          FlagA := a283[3];
                          FlagP := parity(a282);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        #061E
                        let:16 a288 = addWithCarry(false,08,M[201B]) in
                        let:8 a289 = (08 & 0F) in
                        let:8 a290 = (M[201B] & 0F) in
                        let:16 a291 = addWithCarry(false,a289,a290) in
                        #0620
                        #0621
                        let:16 a292 = (-1 + a2) in
                        M[a292] := 06;
                        let:16 a293 = (-1 + a292) in
                        M[a293] := 24;
                        #return-to: 0624
                        #156F
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a294 = (-1 + a293) in
                            M[a294] := 15;
                            let:16 a295 = (-1 + a294) in
                            M[a295] := 6F;
                            A := a288[7:0];
                            B := a203;
                            H := a288[7:0];
                            L := 75;
                            SPH := a295[15:8];
                            SPL := a295[7:0];
                            FlagS := a288[7:0][7];
                            FlagZ := is_zero(a288[7:0]);
                            FlagA := a291[7:0][4];
                            FlagP := parity(a288[7:0]);
                            FlagCY := a288[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a296 = (-1 + a293) in
                            M[a296] := 15;
                            let:16 a297 = (-1 + a296) in
                            M[a297] := 6F;
                            A := a288[7:0];
                            B := a203;
                            H := a288[7:0];
                            L := 75;
                            SPH := a297[15:8];
                            SPL := a297[7:0];
                            FlagS := a288[7:0][7];
                            FlagZ := is_zero(a288[7:0]);
                            FlagA := a291[7:0][4];
                            FlagP := parity(a288[7:0]);
                            FlagCY := a288[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1572
                          let:16 a298 = (-1 + a293) in
                          M[a298] := 15;
                          let:16 a299 = (-1 + a298) in
                          M[a299] := 75;
                          #return-to: 1575
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a300 = (-1 + a299) in
                              M[a300] := 15;
                              let:16 a301 = (-1 + a300) in
                              M[a301] := 54;
                              A := M[200A];
                              B := a203;
                              H := a288[7:0];
                              L := 75;
                              SPH := a301[15:8];
                              SPL := a301[7:0];
                              FlagS := a288[7:0][7];
                              FlagZ := is_zero(a288[7:0]);
                              FlagA := a291[7:0][4];
                              FlagP := parity(a288[7:0]);
                              FlagCY := a288[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a302 = (-1 + a299) in
                              M[a302] := 15;
                              let:16 a303 = (-1 + a302) in
                              M[a303] := 54;
                              A := M[200A];
                              B := a203;
                              H := a288[7:0];
                              L := 75;
                              SPH := a303[15:8];
                              SPL := a303[7:0];
                              FlagS := a288[7:0][7];
                              FlagZ := is_zero(a288[7:0]);
                              FlagA := a291[7:0][4];
                              FlagP := parity(a288[7:0]);
                              FlagCY := a288[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a304 = addWithCarry(!false,M[200A],~a288[7:0]) in
                            let:8 a305 = (M[200A] & 0F) in
                            let:8 a306 = (~a288[7:0] & 0F) in
                            let:16 a307 = addWithCarry(!false,a305,a306) in
                            #1557
                            if (!!a304[15:8][0]) {
                              let:16 a308 = (-1 + a299) in
                              M[a308] := 15;
                              let:16 a309 = (-1 + a308) in
                              M[a309] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a310 = (-1 + a309) in
                                  M[a310] := 15;
                                  let:16 a311 = (-1 + a310) in
                                  M[a311] := 90;
                                  A := M[200A];
                                  B := a203;
                                  C := 00;
                                  H := a288[7:0];
                                  L := 75;
                                  SPH := a311[15:8];
                                  SPL := a311[7:0];
                                  FlagS := a304[7:0][7];
                                  FlagZ := is_zero(a304[7:0]);
                                  FlagA := a307[7:0][4];
                                  FlagP := parity(a304[7:0]);
                                  FlagCY := !a304[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a312 = (-1 + a309) in
                                  M[a312] := 15;
                                  let:16 a313 = (-1 + a312) in
                                  M[a313] := 90;
                                  A := M[200A];
                                  B := a203;
                                  C := 00;
                                  H := a288[7:0];
                                  L := 75;
                                  SPH := a313[15:8];
                                  SPL := a313[7:0];
                                  FlagS := a304[7:0][7];
                                  FlagZ := is_zero(a304[7:0]);
                                  FlagA := a307[7:0][4];
                                  FlagP := parity(a304[7:0]);
                                  FlagCY := !a304[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a314 = addWithCarry(true,00,00) in
                                let:8 a315 = (00 & 0F) in
                                let:8 a316 = (00 & 0F) in
                                let:16 a317 = addWithCarry(true,a315,a316) in
                                #1591
                                let:16 a318 = addWithCarry(false,10,M[200A]) in
                                let:8 a319 = (10 & 0F) in
                                let:8 a320 = (M[200A] & 0F) in
                                let:16 a321 = addWithCarry(false,a319,a320) in
                                #1593
                                if (a318[7:0][7]) {
                                  A := a318[7:0];
                                  B := a203;
                                  C := a314[7:0];
                                  H := a288[7:0];
                                  L := 75;
                                  SPH := a309[15:8];
                                  SPL := a309[7:0];
                                  FlagS := a318[7:0][7];
                                  FlagZ := is_zero(a318[7:0]);
                                  FlagA := a321[7:0][4];
                                  FlagP := parity(a318[7:0]);
                                  FlagCY := a318[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a322 = (1 + a309) in
                                  let:16 a323 = (1 + a322) in
                                  A := a318[7:0];
                                  B := a203;
                                  C := a314[7:0];
                                  H := a288[7:0];
                                  L := 75;
                                  SPH := a323[15:8];
                                  SPL := a323[7:0];
                                  FlagS := a318[7:0][7];
                                  FlagZ := is_zero(a318[7:0]);
                                  FlagA := a321[7:0][4];
                                  FlagP := parity(a318[7:0]);
                                  FlagCY := a318[15:8][0];
                                  jump ((M[a322],M[a309]));
                                }
                              }
                            } else {
                              A := M[200A];
                              B := a203;
                              C := 00;
                              H := a288[7:0];
                              L := 75;
                              SPH := a299[15:8];
                              SPL := a299[7:0];
                              FlagS := a304[7:0][7];
                              FlagZ := is_zero(a304[7:0]);
                              FlagA := a307[7:0][4];
                              FlagP := parity(a304[7:0]);
                              FlagCY := !a304[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #059C
                      #059F
                      #05A0
                      let:16 a324 = (1 + (M[2077],M[2076])) in
                      #05A1
                      #05A2
                      M[2076] := a324[7:0];
                      M[2077] := a324[15:8];
                      #05A5
                      let:16 a325 = (-1 + a2) in
                      M[a325] := 05;
                      let:16 a326 = (-1 + a325) in
                      M[a326] := A8;
                      #return-to: 05A8
                      #062F
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a327 = (-1 + a326) in
                          M[a327] := 06;
                          let:16 a328 = (-1 + a327) in
                          M[a328] := 2F;
                          A := a282;
                          B := a203;
                          C := M[(M[2077],M[2076])];
                          H := a324[15:8];
                          L := a324[7:0];
                          SPH := a328[15:8];
                          SPL := a328[7:0];
                          FlagS := a282[7];
                          FlagZ := is_zero(a282);
                          FlagA := a283[3];
                          FlagP := parity(a282);
                          FlagCY := false;
                          jump (0008);
                        } else {
                          let:16 a329 = (-1 + a326) in
                          M[a329] := 06;
                          let:16 a330 = (-1 + a329) in
                          M[a330] := 2F;
                          A := a282;
                          B := a203;
                          C := M[(M[2077],M[2076])];
                          H := a324[15:8];
                          L := a324[7:0];
                          SPH := a330[15:8];
                          SPL := a330[7:0];
                          FlagS := a282[7];
                          FlagZ := is_zero(a282);
                          FlagA := a283[3];
                          FlagP := parity(a282);
                          FlagCY := false;
                          jump (0010);
                        }
                      } else {
                        let:16 a331 = addWithCarry(!true,M[(M[2077],M[2076])],~00) in
                        let:8 a332 = (M[(M[2077],M[2076])] & 0F) in
                        let:8 a333 = (~00 & 0F) in
                        let:16 a334 = addWithCarry(!true,a332,a333) in
                        #0630
                        #0633
                        #0634
                        #0635
                        #0637
                        #0638
                        let:8 a335 = (M[(M[2067],a331[7:0])] & M[(M[2067],a331[7:0])]) in
                        let:8 a336 = (M[(M[2067],a331[7:0])] | M[(M[2067],a331[7:0])]) in
                        #0639
                        #063A
                        if (!is_zero(a335)) {
                          let:16 a337 = (1 + a326) in
                          let:16 a338 = (1 + a337) in
                          A := a335;
                          B := a203;
                          C := a331[7:0];
                          D := 05;
                          H := M[2067];
                          L := a331[7:0];
                          SPH := a338[15:8];
                          SPL := a338[7:0];
                          FlagS := a335[7];
                          FlagZ := is_zero(a335);
                          FlagA := a336[3];
                          FlagP := parity(a335);
                          FlagCY := true;
                          jump ((M[a337],M[a326]));
                        } else {
                          #063B
                          #063C
                          let:16 a339 = addWithCarry(false,0B,a331[7:0]) in
                          let:8 a340 = (0B & 0F) in
                          let:8 a341 = (a331[7:0] & 0F) in
                          let:16 a342 = addWithCarry(false,a340,a341) in
                          #063E
                          #063F
                          let:16 a343 = addWithCarry(!true,05,~00) in
                          let:8 a344 = (05 & 0F) in
                          let:8 a345 = (~00 & 0F) in
                          let:16 a346 = addWithCarry(!true,a344,a345) in
                          #0640
                          if (!is_zero(a343[7:0])) {
                            A := a339[7:0];
                            B := a203;
                            C := a331[7:0];
                            D := a343[7:0];
                            H := M[2067];
                            L := a339[7:0];
                            SPH := a326[15:8];
                            SPL := a326[7:0];
                            FlagS := a343[7:0][7];
                            FlagZ := is_zero(a343[7:0]);
                            FlagA := a346[7:0][4];
                            FlagP := parity(a343[7:0]);
                            FlagCY := a339[15:8][0];
                            jump (0637);
                          } else {
                            #0643
                            let:16 a347 = (1 + a326) in
                            let:16 a348 = (1 + a347) in
                            A := a339[7:0];
                            B := a203;
                            C := a331[7:0];
                            D := a343[7:0];
                            H := M[2067];
                            L := a339[7:0];
                            SPH := a348[15:8];
                            SPL := a348[7:0];
                            FlagS := a343[7:0][7];
                            FlagZ := is_zero(a343[7:0]);
                            FlagA := a346[7:0][4];
                            FlagP := parity(a343[7:0]);
                            FlagCY := a339[15:8][0];
                            jump ((M[a347],M[a326]));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

0526:

    #0529
    let:16 a1 = addWithCarry(!false,M[2076],~15) in
    let:8 a2 = (M[2076] & 0F) in
    let:8 a3 = (~15 & 0F) in
    let:16 a4 = addWithCarry(!false,a2,a3) in
    #052B
    if (!a1[15:8][0]) {
      #0534
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 05;
          let:16 a6 = (-1 + a5) in
          M[a6] := 34;
          A := M[2076];
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 05;
          let:16 a8 = (-1 + a7) in
          M[a8] := 34;
          A := M[2076];
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0010);
        }
      } else {
        #0537
        let:8 a9 = (M[2078] & M[2078]) in
        let:8 a10 = (M[2078] | M[2078]) in
        #0538
        #053B
        if (!is_zero(a9)) {
          #055B
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a11 = (-1 + (SPH,SPL)) in
              M[a11] := 05;
              let:16 a12 = (-1 + a11) in
              M[a12] := 5B;
              A := a9;
              H := 20;
              L := 55;
              SPH := a12[15:8];
              SPL := a12[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a13 = (-1 + (SPH,SPL)) in
              M[a13] := 05;
              let:16 a14 = (-1 + a13) in
              M[a14] := 5B;
              A := a9;
              H := 20;
              L := 55;
              SPH := a14[15:8];
              SPL := a14[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #055E
            #0560
            #1A32
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a15 = (-1 + (SPH,SPL)) in
                M[a15] := 1A;
                let:16 a16 = (-1 + a15) in
                M[a16] := 32;
                A := a9;
                B := 0B;
                D := 20;
                E := 73;
                H := 20;
                L := 55;
                SPH := a16[15:8];
                SPL := a16[7:0];
                FlagS := a9[7];
                FlagZ := is_zero(a9);
                FlagA := a10[3];
                FlagP := parity(a9);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a17 = (-1 + (SPH,SPL)) in
                M[a17] := 1A;
                let:16 a18 = (-1 + a17) in
                M[a18] := 32;
                A := a9;
                B := 0B;
                D := 20;
                E := 73;
                H := 20;
                L := 55;
                SPH := a18[15:8];
                SPL := a18[7:0];
                FlagS := a9[7];
                FlagZ := is_zero(a9);
                FlagA := a10[3];
                FlagP := parity(a9);
                FlagCY := false;
                jump (0010);
              }
            } else {
              #1A33
              M[2055] := M[2073];
              #1A34
              #1A35
              #1A36
              let:16 a19 = addWithCarry(!true,0B,~00) in
              let:8 a20 = (0B & 0F) in
              let:8 a21 = (~00 & 0F) in
              let:16 a22 = addWithCarry(!true,a20,a21) in
              #1A37
              if (!is_zero(a19[7:0])) {
                A := M[2073];
                B := a19[7:0];
                D := 20;
                E := 74;
                H := 20;
                L := 56;
                FlagS := a19[7:0][7];
                FlagZ := is_zero(a19[7:0]);
                FlagA := a22[7:0][4];
                FlagP := parity(a19[7:0]);
                FlagCY := false;
                jump (1A32);
              } else {
                #1A3A
                let:16 a23 = (1 + (SPH,SPL)) in
                let:16 a24 = (1 + a23) in
                A := M[2073];
                B := a19[7:0];
                D := 20;
                E := 74;
                H := 20;
                L := 56;
                SPH := a24[15:8];
                SPL := a24[7:0];
                FlagS := a19[7:0][7];
                FlagZ := is_zero(a19[7:0]);
                FlagA := a22[7:0][4];
                FlagP := parity(a19[7:0]);
                FlagCY := false;
                jump ((M[a23],M[(SPH,SPL)]));
              }
            }
          }
        } else {
          #053E
          #0541
          #0544
          #0546
          let:16 a25 = (-1 + (SPH,SPL)) in
          M[a25] := 05;
          let:16 a26 = (-1 + a25) in
          M[a26] := 49;
          #return-to: 0549
          #1A32
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a27 = (-1 + a26) in
              M[a27] := 1A;
              let:16 a28 = (-1 + a27) in
              M[a28] := 32;
              A := a9;
              B := 10;
              D := 1B;
              E := 50;
              H := 20;
              L := 50;
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a29 = (-1 + a26) in
              M[a29] := 1A;
              let:16 a30 = (-1 + a29) in
              M[a30] := 32;
              A := a9;
              B := 10;
              D := 1B;
              E := 50;
              H := 20;
              L := 50;
              SPH := a30[15:8];
              SPL := a30[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #1A33
            M[2050] := 00;
            #1A34
            #1A35
            #1A36
            let:16 a31 = addWithCarry(!true,10,~00) in
            let:8 a32 = (10 & 0F) in
            let:8 a33 = (~00 & 0F) in
            let:16 a34 = addWithCarry(!true,a32,a33) in
            #1A37
            if (!is_zero(a31[7:0])) {
              A := 00;
              B := a31[7:0];
              D := 1B;
              E := 51;
              H := 20;
              L := 51;
              SPH := a26[15:8];
              SPL := a26[7:0];
              FlagS := a31[7:0][7];
              FlagZ := is_zero(a31[7:0]);
              FlagA := a34[7:0][4];
              FlagP := parity(a31[7:0]);
              FlagCY := false;
              jump (1A32);
            } else {
              #1A3A
              let:16 a35 = (1 + a26) in
              let:16 a36 = (1 + a35) in
              A := 00;
              B := a31[7:0];
              D := 1B;
              E := 51;
              H := 20;
              L := 51;
              SPH := a36[15:8];
              SPL := a36[7:0];
              FlagS := a31[7:0][7];
              FlagZ := is_zero(a31[7:0]);
              FlagA := a34[7:0][4];
              FlagP := parity(a31[7:0]);
              FlagCY := false;
              jump ((M[a35],M[a26]));
            }
          }
        }
      }
    } else {
      #052E
      #0531
      M[2076] := 06;
      #0534
      #0537
      let:8 a37 = (M[2078] & M[2078]) in
      let:8 a38 = (M[2078] | M[2078]) in
      #0538
      #053B
      if (!is_zero(a37)) {
        #055B
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a39 = (-1 + (SPH,SPL)) in
            M[a39] := 05;
            let:16 a40 = (-1 + a39) in
            M[a40] := 5B;
            A := a37;
            H := 20;
            L := 55;
            SPH := a40[15:8];
            SPL := a40[7:0];
            FlagS := a37[7];
            FlagZ := is_zero(a37);
            FlagA := a38[3];
            FlagP := parity(a37);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a41 = (-1 + (SPH,SPL)) in
            M[a41] := 05;
            let:16 a42 = (-1 + a41) in
            M[a42] := 5B;
            A := a37;
            H := 20;
            L := 55;
            SPH := a42[15:8];
            SPL := a42[7:0];
            FlagS := a37[7];
            FlagZ := is_zero(a37);
            FlagA := a38[3];
            FlagP := parity(a37);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #055E
          #0560
          #1A32
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a43 = (-1 + (SPH,SPL)) in
              M[a43] := 1A;
              let:16 a44 = (-1 + a43) in
              M[a44] := 32;
              A := a37;
              B := 0B;
              D := 20;
              E := 73;
              H := 20;
              L := 55;
              SPH := a44[15:8];
              SPL := a44[7:0];
              FlagS := a37[7];
              FlagZ := is_zero(a37);
              FlagA := a38[3];
              FlagP := parity(a37);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a45 = (-1 + (SPH,SPL)) in
              M[a45] := 1A;
              let:16 a46 = (-1 + a45) in
              M[a46] := 32;
              A := a37;
              B := 0B;
              D := 20;
              E := 73;
              H := 20;
              L := 55;
              SPH := a46[15:8];
              SPL := a46[7:0];
              FlagS := a37[7];
              FlagZ := is_zero(a37);
              FlagA := a38[3];
              FlagP := parity(a37);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #1A33
            M[2055] := M[2073];
            #1A34
            #1A35
            #1A36
            let:16 a47 = addWithCarry(!true,0B,~00) in
            let:8 a48 = (0B & 0F) in
            let:8 a49 = (~00 & 0F) in
            let:16 a50 = addWithCarry(!true,a48,a49) in
            #1A37
            if (!is_zero(a47[7:0])) {
              A := M[2073];
              B := a47[7:0];
              D := 20;
              E := 74;
              H := 20;
              L := 56;
              FlagS := a47[7:0][7];
              FlagZ := is_zero(a47[7:0]);
              FlagA := a50[7:0][4];
              FlagP := parity(a47[7:0]);
              FlagCY := false;
              jump (1A32);
            } else {
              #1A3A
              let:16 a51 = (1 + (SPH,SPL)) in
              let:16 a52 = (1 + a51) in
              A := M[2073];
              B := a47[7:0];
              D := 20;
              E := 74;
              H := 20;
              L := 56;
              SPH := a52[15:8];
              SPL := a52[7:0];
              FlagS := a47[7:0][7];
              FlagZ := is_zero(a47[7:0]);
              FlagA := a50[7:0][4];
              FlagP := parity(a47[7:0]);
              FlagCY := false;
              jump ((M[a51],M[(SPH,SPL)]));
            }
          }
        }
      } else {
        #053E
        #0541
        #0544
        #0546
        let:16 a53 = (-1 + (SPH,SPL)) in
        M[a53] := 05;
        let:16 a54 = (-1 + a53) in
        M[a54] := 49;
        #return-to: 0549
        #1A32
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a55 = (-1 + a54) in
            M[a55] := 1A;
            let:16 a56 = (-1 + a55) in
            M[a56] := 32;
            A := a37;
            B := 10;
            D := 1B;
            E := 50;
            H := 20;
            L := 50;
            SPH := a56[15:8];
            SPL := a56[7:0];
            FlagS := a37[7];
            FlagZ := is_zero(a37);
            FlagA := a38[3];
            FlagP := parity(a37);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a57 = (-1 + a54) in
            M[a57] := 1A;
            let:16 a58 = (-1 + a57) in
            M[a58] := 32;
            A := a37;
            B := 10;
            D := 1B;
            E := 50;
            H := 20;
            L := 50;
            SPH := a58[15:8];
            SPL := a58[7:0];
            FlagS := a37[7];
            FlagZ := is_zero(a37);
            FlagA := a38[3];
            FlagP := parity(a37);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #1A33
          M[2050] := 00;
          #1A34
          #1A35
          #1A36
          let:16 a59 = addWithCarry(!true,10,~00) in
          let:8 a60 = (10 & 0F) in
          let:8 a61 = (~00 & 0F) in
          let:16 a62 = addWithCarry(!true,a60,a61) in
          #1A37
          if (!is_zero(a59[7:0])) {
            A := 00;
            B := a59[7:0];
            D := 1B;
            E := 51;
            H := 20;
            L := 51;
            SPH := a54[15:8];
            SPL := a54[7:0];
            FlagS := a59[7:0][7];
            FlagZ := is_zero(a59[7:0]);
            FlagA := a62[7:0][4];
            FlagP := parity(a59[7:0]);
            FlagCY := false;
            jump (1A32);
          } else {
            #1A3A
            let:16 a63 = (1 + a54) in
            let:16 a64 = (1 + a63) in
            A := 00;
            B := a59[7:0];
            D := 1B;
            E := 51;
            H := 20;
            L := 51;
            SPH := a64[15:8];
            SPL := a64[7:0];
            FlagS := a59[7:0][7];
            FlagZ := is_zero(a59[7:0]);
            FlagA := a62[7:0][4];
            FlagP := parity(a59[7:0]);
            FlagCY := false;
            jump ((M[a63],M[a54]));
          }
        }
      }
    }

0549:

    #054C
    M[2058] := M[2076];
    M[2059] := M[2077];
    #054F
    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    H := M[2077];
    L := M[2076];
    SPH := a2[15:8];
    SPL := a2[7:0];
    jump ((M[a1],M[(SPH,SPL)]));

05A8:

    if (!FlagCY) {
      let:16 a1 = (1 + (SPH,SPL)) in
      let:16 a2 = (1 + a1) in
      SPH := a2[15:8];
      SPL := a2[7:0];
      jump ((M[a1],M[(SPH,SPL)]));
    } else {
      #05A9
      let:16 a3 = (-1 + (SPH,SPL)) in
      M[a3] := 05;
      let:16 a4 = (-1 + a3) in
      M[a4] := AC;
      #return-to: 05AC
      #017A
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + a4) in
          M[a5] := 01;
          let:16 a6 = (-1 + a5) in
          M[a6] := 7A;
          SPH := a6[15:8];
          SPL := a6[7:0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + a4) in
          M[a7] := 01;
          let:16 a8 = (-1 + a7) in
          M[a8] := 7A;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0010);
        }
      } else {
        #017C
        #017D
        #0180
        #0181
        #0182
        #0183
        let:16 a9 = addWithCarry(!false,L,~0B) in
        let:8 a10 = (L & 0F) in
        let:8 a11 = (~0B & 0F) in
        let:16 a12 = addWithCarry(!false,a10,a11) in
        #0185
        if (a9[7:0][7]) {
          #0194
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a13 = (-1 + a4) in
              M[a13] := 01;
              let:16 a14 = (-1 + a13) in
              M[a14] := 94;
              A := L;
              B := M[2009];
              C := M[200A];
              D := 00;
              H := 20;
              L := 0A;
              SPH := a14[15:8];
              SPL := a14[7:0];
              FlagS := a9[7:0][7];
              FlagZ := is_zero(a9[7:0]);
              FlagA := a12[7:0][4];
              FlagP := parity(a9[7:0]);
              FlagCY := !a9[15:8][0];
              jump (0008);
            } else {
              let:16 a15 = (-1 + a4) in
              M[a15] := 01;
              let:16 a16 = (-1 + a15) in
              M[a16] := 94;
              A := L;
              B := M[2009];
              C := M[200A];
              D := 00;
              H := 20;
              L := 0A;
              SPH := a16[15:8];
              SPL := a16[7:0];
              FlagS := a9[7:0][7];
              FlagZ := is_zero(a9[7:0]);
              FlagA := a12[7:0][4];
              FlagP := parity(a9[7:0]);
              FlagCY := !a9[15:8][0];
              jump (0010);
            }
          } else {
            #0195
            let:8 a17 = (L & L) in
            let:8 a18 = (L | L) in
            #0196
            if (is_zero(a17)) {
              let:16 a19 = (1 + a4) in
              let:16 a20 = (1 + a19) in
              A := a17;
              B := M[2009];
              C := M[200A];
              D := 00;
              H := 20;
              L := M[2009];
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a17[7];
              FlagZ := is_zero(a17);
              FlagA := a18[3];
              FlagP := parity(a17);
              FlagCY := false;
              jump ((M[a19],M[a4]));
            } else {
              #0197
              #0198
              #0199
              let:16 a21 = addWithCarry(false,10,M[200A]) in
              let:8 a22 = (10 & 0F) in
              let:8 a23 = (M[200A] & 0F) in
              let:16 a24 = addWithCarry(false,a22,a23) in
              #019B
              #019C
              #019D
              let:16 a25 = addWithCarry(!true,a17,~00) in
              let:8 a26 = (a17 & 0F) in
              let:8 a27 = (~00 & 0F) in
              let:16 a28 = addWithCarry(!true,a26,a27) in
              #019E
              A := a25[7:0];
              B := M[2009];
              C := a21[7:0];
              D := 00;
              E := a17;
              H := 20;
              L := M[2009];
              SPH := a4[15:8];
              SPL := a4[7:0];
              FlagS := a25[7:0][7];
              FlagZ := is_zero(a25[7:0]);
              FlagA := a28[7:0][4];
              FlagP := parity(a25[7:0]);
              FlagCY := a21[15:8][0];
              jump (0195);
            }
          }
        } else {
          #0188
          let:16 a29 = addWithCarry(!!a9[15:8][0],L,~0B) in
          let:8 a30 = (L & 0F) in
          let:8 a31 = (~0B & 0F) in
          let:16 a32 = addWithCarry(!!a9[15:8][0],a30,a31) in
          #018A
          #018B
          #018C
          let:16 a33 = addWithCarry(false,10,M[2009]) in
          let:8 a34 = (10 & 0F) in
          let:8 a35 = (M[2009] & 0F) in
          let:16 a36 = addWithCarry(false,a34,a35) in
          #018E
          #018F
          #0190
          let:16 a37 = addWithCarry(true,00,00) in
          let:8 a38 = (00 & 0F) in
          let:8 a39 = (00 & 0F) in
          let:16 a40 = addWithCarry(true,a38,a39) in
          #0191
          A := a29[7:0];
          B := a33[7:0];
          C := M[200A];
          D := a37[7:0];
          E := a29[7:0];
          H := 20;
          L := 0A;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a37[7:0][7];
          FlagZ := is_zero(a37[7:0]);
          FlagA := a40[7:0][4];
          FlagP := parity(a37[7:0]);
          FlagCY := a33[15:8][0];
          jump (0183);
        }
      }
    }

05AC:

    #05AD
    let:16 a1 = addWithCarry(false,07,C) in
    let:8 a2 = (07 & 0F) in
    let:8 a3 = (C & 0F) in
    let:16 a4 = addWithCarry(false,a2,a3) in
    #05AF
    #05B0
    #05B1
    let:16 a5 = addWithCarry(!false,L,~0A) in
    let:8 a6 = (L & 0F) in
    let:8 a7 = (~0A & 0F) in
    let:16 a8 = addWithCarry(!false,a6,a7) in
    #05B3
    #05B4
    M[207B] := a5[7:0];
    M[207C] := a1[7:0];
    #05B7
    #05BA
    #05BB
    let:8 a9 = (80 | M[2073]) in
    #05BD
    M[2073] := a9;
    #05BE
    #05BF
    let:16 a10 = addWithCarry(true,M[2074],00) in
    let:8 a11 = (M[2074] & 0F) in
    let:8 a12 = (00 & 0F) in
    let:16 a13 = addWithCarry(true,a11,a12) in
    M[2074] := a10[7:0];
    #05C0
    let:16 a14 = (1 + (SPH,SPL)) in
    let:16 a15 = (1 + a14) in
    A := a9;
    H := 20;
    L := 74;
    SPH := a15[15:8];
    SPL := a15[7:0];
    FlagS := a10[7:0][7];
    FlagZ := is_zero(a10[7:0]);
    FlagA := a13[7:0][4];
    FlagP := parity(a10[7:0]);
    FlagCY := false;
    jump ((M[a14],M[(SPH,SPL)]));

05C7:

    if (!FlagCY) {
      let:16 a1 = (1 + (SPH,SPL)) in
      let:16 a2 = (1 + a1) in
      SPH := a2[15:8];
      SPL := a2[7:0];
      jump ((M[a1],M[(SPH,SPL)]));
    } else {
      #05C8
      let:16 a3 = (1 + (H,L)) in
      #05C9
      #05CA
      let:8 a4 = (01 & M[a3]) in
      let:8 a5 = (01 | M[a3]) in
      #05CC
      if (!is_zero(a4)) {
        #0644
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a6 = (-1 + (SPH,SPL)) in
            M[a6] := 06;
            let:16 a7 = (-1 + a6) in
            M[a7] := 44;
            A := a4;
            H := a3[15:8];
            L := a3[7:0];
            SPH := a7[15:8];
            SPL := a7[7:0];
            FlagS := a4[7];
            FlagZ := is_zero(a4);
            FlagA := a5[3];
            FlagP := parity(a4);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a8 = (-1 + (SPH,SPL)) in
            M[a8] := 06;
            let:16 a9 = (-1 + a8) in
            M[a9] := 44;
            A := a4;
            H := a3[15:8];
            L := a3[7:0];
            SPH := a9[15:8];
            SPL := a9[7:0];
            FlagS := a4[7];
            FlagZ := is_zero(a4);
            FlagA := a5[3];
            FlagP := parity(a4);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #0647
          let:16 a10 = addWithCarry(!true,M[2078],~00) in
          let:8 a11 = (M[2078] & 0F) in
          let:8 a12 = (~00 & 0F) in
          let:16 a13 = addWithCarry(!true,a11,a12) in
          M[2078] := a10[7:0];
          #0648
          #0649
          let:16 a14 = addWithCarry(!false,M[2078],~03) in
          let:8 a15 = (M[2078] & 0F) in
          let:8 a16 = (~03 & 0F) in
          let:16 a17 = addWithCarry(!false,a15,a16) in
          #064B
          if (!is_zero(a14[7:0])) {
            #0667
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a18 = (-1 + (SPH,SPL)) in
                M[a18] := 06;
                let:16 a19 = (-1 + a18) in
                M[a19] := 67;
                A := M[2078];
                H := 20;
                L := 78;
                SPH := a19[15:8];
                SPL := a19[7:0];
                FlagS := a14[7:0][7];
                FlagZ := is_zero(a14[7:0]);
                FlagA := a17[7:0][4];
                FlagP := parity(a14[7:0]);
                FlagCY := !a14[15:8][0];
                jump (0008);
              } else {
                let:16 a20 = (-1 + (SPH,SPL)) in
                M[a20] := 06;
                let:16 a21 = (-1 + a20) in
                M[a21] := 67;
                A := M[2078];
                H := 20;
                L := 78;
                SPH := a21[15:8];
                SPL := a21[7:0];
                FlagS := a14[7:0][7];
                FlagZ := is_zero(a14[7:0]);
                FlagA := a17[7:0][4];
                FlagP := parity(a14[7:0]);
                FlagCY := !a14[15:8][0];
                jump (0010);
              }
            } else {
              let:8 a22 = (M[2078] & M[2078]) in
              let:8 a23 = (M[2078] | M[2078]) in
              #0668
              if (!is_zero(a22)) {
                let:16 a24 = (1 + (SPH,SPL)) in
                let:16 a25 = (1 + a24) in
                A := a22;
                H := 20;
                L := 78;
                SPH := a25[15:8];
                SPL := a25[7:0];
                FlagS := a22[7];
                FlagZ := is_zero(a22);
                FlagA := a23[3];
                FlagP := parity(a22);
                FlagCY := false;
                jump ((M[a24],M[(SPH,SPL)]));
              } else {
                #0669
                #0675
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a26 = (-1 + (SPH,SPL)) in
                    M[a26] := 06;
                    let:16 a27 = (-1 + a26) in
                    M[a27] := 75;
                    A := a22;
                    H := 20;
                    L := 78;
                    SPH := a27[15:8];
                    SPL := a27[7:0];
                    FlagS := a22[7];
                    FlagZ := is_zero(a22);
                    FlagA := a23[3];
                    FlagP := parity(a22);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a28 = (-1 + (SPH,SPL)) in
                    M[a28] := 06;
                    let:16 a29 = (-1 + a28) in
                    M[a29] := 75;
                    A := a22;
                    H := 20;
                    L := 78;
                    SPH := a29[15:8];
                    SPL := a29[7:0];
                    FlagS := a22[7];
                    FlagZ := is_zero(a22);
                    FlagA := a23[3];
                    FlagP := parity(a22);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  #0678
                  let:16 a30 = (-1 + (SPH,SPL)) in
                  M[a30] := 06;
                  let:16 a31 = (-1 + a30) in
                  M[a31] := 7B;
                  #return-to: 067B
                  #1A3B
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a32 = (-1 + a31) in
                      M[a32] := 1A;
                      let:16 a33 = (-1 + a32) in
                      M[a33] := 3B;
                      A := a22;
                      H := 20;
                      L := 79;
                      SPH := a33[15:8];
                      SPL := a33[7:0];
                      FlagS := a22[7];
                      FlagZ := is_zero(a22);
                      FlagA := a23[3];
                      FlagP := parity(a22);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a34 = (-1 + a31) in
                      M[a34] := 1A;
                      let:16 a35 = (-1 + a34) in
                      M[a35] := 3B;
                      A := a22;
                      H := 20;
                      L := 79;
                      SPH := a35[15:8];
                      SPL := a35[7:0];
                      FlagS := a22[7];
                      FlagZ := is_zero(a22);
                      FlagA := a23[3];
                      FlagP := parity(a22);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    #1A3C
                    #1A3D
                    #1A3E
                    #1A3F
                    #1A40
                    #1A41
                    #1A42
                    #1A43
                    #1A44
                    #1A45
                    #1A46
                    let:16 a36 = (1 + a31) in
                    let:16 a37 = (1 + a36) in
                    A := M[207B];
                    B := M[207D];
                    C := M[207C];
                    D := M[207A];
                    E := M[2079];
                    H := M[207C];
                    L := M[207B];
                    SPH := a37[15:8];
                    SPL := a37[7:0];
                    FlagS := a22[7];
                    FlagZ := is_zero(a22);
                    FlagA := a23[3];
                    FlagP := parity(a22);
                    FlagCY := false;
                    jump ((M[a36],M[a31]));
                  }
                }
              }
            }
          } else {
            #064E
            let:16 a38 = (-1 + (SPH,SPL)) in
            M[a38] := 06;
            let:16 a39 = (-1 + a38) in
            M[a39] := 51;
            #return-to: 0651
            #0675
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a40 = (-1 + a39) in
                M[a40] := 06;
                let:16 a41 = (-1 + a40) in
                M[a41] := 75;
                A := M[2078];
                H := 20;
                L := 78;
                SPH := a41[15:8];
                SPL := a41[7:0];
                FlagS := a14[7:0][7];
                FlagZ := is_zero(a14[7:0]);
                FlagA := a17[7:0][4];
                FlagP := parity(a14[7:0]);
                FlagCY := !a14[15:8][0];
                jump (0008);
              } else {
                let:16 a42 = (-1 + a39) in
                M[a42] := 06;
                let:16 a43 = (-1 + a42) in
                M[a43] := 75;
                A := M[2078];
                H := 20;
                L := 78;
                SPH := a43[15:8];
                SPL := a43[7:0];
                FlagS := a14[7:0][7];
                FlagZ := is_zero(a14[7:0]);
                FlagA := a17[7:0][4];
                FlagP := parity(a14[7:0]);
                FlagCY := !a14[15:8][0];
                jump (0010);
              }
            } else {
              #0678
              let:16 a44 = (-1 + a39) in
              M[a44] := 06;
              let:16 a45 = (-1 + a44) in
              M[a45] := 7B;
              #return-to: 067B
              #1A3B
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a46 = (-1 + a45) in
                  M[a46] := 1A;
                  let:16 a47 = (-1 + a46) in
                  M[a47] := 3B;
                  A := M[2078];
                  H := 20;
                  L := 79;
                  SPH := a47[15:8];
                  SPL := a47[7:0];
                  FlagS := a14[7:0][7];
                  FlagZ := is_zero(a14[7:0]);
                  FlagA := a17[7:0][4];
                  FlagP := parity(a14[7:0]);
                  FlagCY := !a14[15:8][0];
                  jump (0008);
                } else {
                  let:16 a48 = (-1 + a45) in
                  M[a48] := 1A;
                  let:16 a49 = (-1 + a48) in
                  M[a49] := 3B;
                  A := M[2078];
                  H := 20;
                  L := 79;
                  SPH := a49[15:8];
                  SPL := a49[7:0];
                  FlagS := a14[7:0][7];
                  FlagZ := is_zero(a14[7:0]);
                  FlagA := a17[7:0][4];
                  FlagP := parity(a14[7:0]);
                  FlagCY := !a14[15:8][0];
                  jump (0010);
                }
              } else {
                #1A3C
                #1A3D
                #1A3E
                #1A3F
                #1A40
                #1A41
                #1A42
                #1A43
                #1A44
                #1A45
                #1A46
                let:16 a50 = (1 + a45) in
                let:16 a51 = (1 + a50) in
                A := M[207B];
                B := M[207D];
                C := M[207C];
                D := M[207A];
                E := M[2079];
                H := M[207C];
                L := M[207B];
                SPH := a51[15:8];
                SPL := a51[7:0];
                FlagS := a14[7:0][7];
                FlagZ := is_zero(a14[7:0]);
                FlagA := a17[7:0][4];
                FlagP := parity(a14[7:0]);
                FlagCY := !a14[15:8][0];
                jump ((M[a50],M[a45]));
              }
            }
          }
        }
      } else {
        #05CF
        let:16 a52 = (1 + a3) in
        #05D0
        let:16 a53 = addWithCarry(true,M[a52],00) in
        let:8 a54 = (M[a52] & 0F) in
        let:8 a55 = (00 & 0F) in
        let:16 a56 = addWithCarry(true,a54,a55) in
        M[a52] := a53[7:0];
        #05D1
        let:16 a57 = (-1 + (SPH,SPL)) in
        M[a57] := 05;
        let:16 a58 = (-1 + a57) in
        M[a58] := D4;
        #return-to: 05D4
        #0675
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a59 = (-1 + a58) in
            M[a59] := 06;
            let:16 a60 = (-1 + a59) in
            M[a60] := 75;
            A := a4;
            H := a52[15:8];
            L := a52[7:0];
            SPH := a60[15:8];
            SPL := a60[7:0];
            FlagS := a53[7:0][7];
            FlagZ := is_zero(a53[7:0]);
            FlagA := a56[7:0][4];
            FlagP := parity(a53[7:0]);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a61 = (-1 + a58) in
            M[a61] := 06;
            let:16 a62 = (-1 + a61) in
            M[a62] := 75;
            A := a4;
            H := a52[15:8];
            L := a52[7:0];
            SPH := a62[15:8];
            SPL := a62[7:0];
            FlagS := a53[7:0][7];
            FlagZ := is_zero(a53[7:0]);
            FlagA := a56[7:0][4];
            FlagP := parity(a53[7:0]);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #0678
          let:16 a63 = (-1 + a58) in
          M[a63] := 06;
          let:16 a64 = (-1 + a63) in
          M[a64] := 7B;
          #return-to: 067B
          #1A3B
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a65 = (-1 + a64) in
              M[a65] := 1A;
              let:16 a66 = (-1 + a65) in
              M[a66] := 3B;
              A := a4;
              H := 20;
              L := 79;
              SPH := a66[15:8];
              SPL := a66[7:0];
              FlagS := a53[7:0][7];
              FlagZ := is_zero(a53[7:0]);
              FlagA := a56[7:0][4];
              FlagP := parity(a53[7:0]);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a67 = (-1 + a64) in
              M[a67] := 1A;
              let:16 a68 = (-1 + a67) in
              M[a68] := 3B;
              A := a4;
              H := 20;
              L := 79;
              SPH := a68[15:8];
              SPL := a68[7:0];
              FlagS := a53[7:0][7];
              FlagZ := is_zero(a53[7:0]);
              FlagA := a56[7:0][4];
              FlagP := parity(a53[7:0]);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #1A3C
            #1A3D
            #1A3E
            #1A3F
            #1A40
            #1A41
            #1A42
            #1A43
            #1A44
            #1A45
            #1A46
            let:16 a69 = (1 + a64) in
            let:16 a70 = (1 + a69) in
            A := M[207B];
            B := M[207D];
            C := M[207C];
            D := M[207A];
            E := M[2079];
            H := M[207C];
            L := M[207B];
            SPH := a70[15:8];
            SPL := a70[7:0];
            FlagS := a53[7:0][7];
            FlagZ := is_zero(a53[7:0]);
            FlagA := a56[7:0][4];
            FlagP := parity(a53[7:0]);
            FlagCY := false;
            jump ((M[a69],M[a64]));
          }
        }
      }
    }

05D4:

    #05D7
    let:16 a1 = addWithCarry(false,03,M[2079]) in
    let:8 a2 = (03 & 0F) in
    let:8 a3 = (M[2079] & 0F) in
    let:16 a4 = addWithCarry(false,a2,a3) in
    #05D9
    #05DC
    let:16 a5 = addWithCarry(!false,a1[7:0],~M[207F]) in
    let:8 a6 = (a1[7:0] & 0F) in
    let:8 a7 = (~M[207F] & 0F) in
    let:16 a8 = addWithCarry(!false,a6,a7) in
    #05DD
    if (!a5[15:8][0]) {
      #05E2
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + (SPH,SPL)) in
          M[a9] := 05;
          let:16 a10 = (-1 + a9) in
          M[a10] := E2;
          A := a1[7:0];
          H := 20;
          L := 7F;
          SPH := a10[15:8];
          SPL := a10[7:0];
          FlagS := a5[7:0][7];
          FlagZ := is_zero(a5[7:0]);
          FlagA := a8[7:0][4];
          FlagP := parity(a5[7:0]);
          FlagCY := !a5[15:8][0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + (SPH,SPL)) in
          M[a11] := 05;
          let:16 a12 = (-1 + a11) in
          M[a12] := E2;
          A := a1[7:0];
          H := 20;
          L := 7F;
          SPH := a12[15:8];
          SPL := a12[7:0];
          FlagS := a5[7:0][7];
          FlagZ := is_zero(a5[7:0]);
          FlagA := a8[7:0][4];
          FlagP := parity(a5[7:0]);
          FlagCY := !a5[15:8][0];
          jump (0010);
        }
      } else {
        M[2079] := a1[7:0];
        #05E5
        #05E8
        #05E9
        #05EC
        let:16 a13 = addWithCarry(false,M[207B],M[207E]) in
        let:8 a14 = (M[207B] & 0F) in
        let:8 a15 = (M[207E] & 0F) in
        let:16 a16 = addWithCarry(false,a14,a15) in
        #05ED
        M[207B] := a13[7:0];
        #05F0
        let:16 a17 = (-1 + (SPH,SPL)) in
        M[a17] := 05;
        let:16 a18 = (-1 + a17) in
        M[a18] := F3;
        #return-to: 05F3
        #066C
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a19 = (-1 + a18) in
            M[a19] := 06;
            let:16 a20 = (-1 + a19) in
            M[a20] := 6C;
            A := a13[7:0];
            B := M[207B];
            H := 20;
            L := 7F;
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a13[7:0][7];
            FlagZ := is_zero(a13[7:0]);
            FlagA := a16[7:0][4];
            FlagP := parity(a13[7:0]);
            FlagCY := a13[15:8][0];
            jump (0008);
          } else {
            let:16 a21 = (-1 + a18) in
            M[a21] := 06;
            let:16 a22 = (-1 + a21) in
            M[a22] := 6C;
            A := a13[7:0];
            B := M[207B];
            H := 20;
            L := 7F;
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a13[7:0][7];
            FlagZ := is_zero(a13[7:0]);
            FlagA := a16[7:0][4];
            FlagP := parity(a13[7:0]);
            FlagCY := a13[15:8][0];
            jump (0010);
          }
        } else {
          #066F
          let:16 a23 = (-1 + a18) in
          M[a23] := 06;
          let:16 a24 = (-1 + a23) in
          M[a24] := 72;
          #return-to: 0672
          #1A3B
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a25 = (-1 + a24) in
              M[a25] := 1A;
              let:16 a26 = (-1 + a25) in
              M[a26] := 3B;
              A := a13[7:0];
              B := M[207B];
              H := 20;
              L := 79;
              SPH := a26[15:8];
              SPL := a26[7:0];
              FlagS := a13[7:0][7];
              FlagZ := is_zero(a13[7:0]);
              FlagA := a16[7:0][4];
              FlagP := parity(a13[7:0]);
              FlagCY := a13[15:8][0];
              jump (0008);
            } else {
              let:16 a27 = (-1 + a24) in
              M[a27] := 1A;
              let:16 a28 = (-1 + a27) in
              M[a28] := 3B;
              A := a13[7:0];
              B := M[207B];
              H := 20;
              L := 79;
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagS := a13[7:0][7];
              FlagZ := is_zero(a13[7:0]);
              FlagA := a16[7:0][4];
              FlagP := parity(a13[7:0]);
              FlagCY := a13[15:8][0];
              jump (0010);
            }
          } else {
            #1A3C
            #1A3D
            #1A3E
            #1A3F
            #1A40
            #1A41
            #1A42
            #1A43
            #1A44
            #1A45
            #1A46
            let:16 a29 = (1 + a24) in
            let:16 a30 = (1 + a29) in
            A := M[207B];
            B := M[207D];
            C := M[207C];
            D := M[207A];
            E := M[2079];
            H := M[207C];
            L := M[207B];
            SPH := a30[15:8];
            SPL := a30[7:0];
            FlagS := a13[7:0][7];
            FlagZ := is_zero(a13[7:0]);
            FlagA := a16[7:0][4];
            FlagP := parity(a13[7:0]);
            FlagCY := a13[15:8][0];
            jump ((M[a29],M[a24]));
          }
        }
      }
    } else {
      #05E0
      let:16 a31 = addWithCarry(!false,a1[7:0],~0C) in
      let:8 a32 = (a1[7:0] & 0F) in
      let:8 a33 = (~0C & 0F) in
      let:16 a34 = addWithCarry(!false,a32,a33) in
      #05E2
      M[2079] := a31[7:0];
      #05E5
      #05E8
      #05E9
      #05EC
      let:16 a35 = addWithCarry(false,M[207B],M[207E]) in
      let:8 a36 = (M[207B] & 0F) in
      let:8 a37 = (M[207E] & 0F) in
      let:16 a38 = addWithCarry(false,a36,a37) in
      #05ED
      M[207B] := a35[7:0];
      #05F0
      let:16 a39 = (-1 + (SPH,SPL)) in
      M[a39] := 05;
      let:16 a40 = (-1 + a39) in
      M[a40] := F3;
      #return-to: 05F3
      #066C
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a41 = (-1 + a40) in
          M[a41] := 06;
          let:16 a42 = (-1 + a41) in
          M[a42] := 6C;
          A := a35[7:0];
          B := M[207B];
          H := 20;
          L := 7F;
          SPH := a42[15:8];
          SPL := a42[7:0];
          FlagS := a35[7:0][7];
          FlagZ := is_zero(a35[7:0]);
          FlagA := a38[7:0][4];
          FlagP := parity(a35[7:0]);
          FlagCY := a35[15:8][0];
          jump (0008);
        } else {
          let:16 a43 = (-1 + a40) in
          M[a43] := 06;
          let:16 a44 = (-1 + a43) in
          M[a44] := 6C;
          A := a35[7:0];
          B := M[207B];
          H := 20;
          L := 7F;
          SPH := a44[15:8];
          SPL := a44[7:0];
          FlagS := a35[7:0][7];
          FlagZ := is_zero(a35[7:0]);
          FlagA := a38[7:0][4];
          FlagP := parity(a35[7:0]);
          FlagCY := a35[15:8][0];
          jump (0010);
        }
      } else {
        #066F
        let:16 a45 = (-1 + a40) in
        M[a45] := 06;
        let:16 a46 = (-1 + a45) in
        M[a46] := 72;
        #return-to: 0672
        #1A3B
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a47 = (-1 + a46) in
            M[a47] := 1A;
            let:16 a48 = (-1 + a47) in
            M[a48] := 3B;
            A := a35[7:0];
            B := M[207B];
            H := 20;
            L := 79;
            SPH := a48[15:8];
            SPL := a48[7:0];
            FlagS := a35[7:0][7];
            FlagZ := is_zero(a35[7:0]);
            FlagA := a38[7:0][4];
            FlagP := parity(a35[7:0]);
            FlagCY := a35[15:8][0];
            jump (0008);
          } else {
            let:16 a49 = (-1 + a46) in
            M[a49] := 1A;
            let:16 a50 = (-1 + a49) in
            M[a50] := 3B;
            A := a35[7:0];
            B := M[207B];
            H := 20;
            L := 79;
            SPH := a50[15:8];
            SPL := a50[7:0];
            FlagS := a35[7:0][7];
            FlagZ := is_zero(a35[7:0]);
            FlagA := a38[7:0][4];
            FlagP := parity(a35[7:0]);
            FlagCY := a35[15:8][0];
            jump (0010);
          }
        } else {
          #1A3C
          #1A3D
          #1A3E
          #1A3F
          #1A40
          #1A41
          #1A42
          #1A43
          #1A44
          #1A45
          #1A46
          let:16 a51 = (1 + a46) in
          let:16 a52 = (1 + a51) in
          A := M[207B];
          B := M[207D];
          C := M[207C];
          D := M[207A];
          E := M[2079];
          H := M[207C];
          L := M[207B];
          SPH := a52[15:8];
          SPL := a52[7:0];
          FlagS := a35[7:0][7];
          FlagZ := is_zero(a35[7:0]);
          FlagA := a38[7:0][4];
          FlagP := parity(a35[7:0]);
          FlagCY := a35[15:8][0];
          jump ((M[a51],M[a46]));
        }
      }
    }

05F3:

    #05F6
    let:16 a1 = addWithCarry(!false,M[207B],~15) in
    let:8 a2 = (M[207B] & 0F) in
    let:8 a3 = (~15 & 0F) in
    let:16 a4 = addWithCarry(!false,a2,a3) in
    #05F8
    if (!a1[15:8][0]) {
      #0612
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 06;
          let:16 a6 = (-1 + a5) in
          M[a6] := 12;
          A := M[207B];
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 06;
          let:16 a8 = (-1 + a7) in
          M[a8] := 12;
          A := M[207B];
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0010);
        }
      } else {
        #0615
        let:8 a9 = (01 | M[2073]) in
        #0617
        M[2073] := a9;
        #061A
        let:16 a10 = (1 + (SPH,SPL)) in
        let:16 a11 = (1 + a10) in
        A := a9;
        SPH := a11[15:8];
        SPL := a11[7:0];
        FlagS := a9[7];
        FlagZ := is_zero(a9);
        FlagA := false;
        FlagP := parity(a9);
        FlagCY := false;
        jump ((M[a10],M[(SPH,SPL)]));
      }
    } else {
      #05FB
      #05FE
      let:8 a12 = (M[2061] & M[2061]) in
      let:8 a13 = (M[2061] | M[2061]) in
      #05FF
      if (is_zero(a12)) {
        let:16 a14 = (1 + (SPH,SPL)) in
        let:16 a15 = (1 + a14) in
        A := a12;
        SPH := a15[15:8];
        SPL := a15[7:0];
        FlagS := a12[7];
        FlagZ := is_zero(a12);
        FlagA := a13[3];
        FlagP := parity(a12);
        FlagCY := false;
        jump ((M[a14],M[(SPH,SPL)]));
      } else {
        #0600
        #0603
        let:16 a16 = addWithCarry(!false,M[207B],~1E) in
        let:8 a17 = (M[207B] & 0F) in
        let:8 a18 = (~1E & 0F) in
        let:16 a19 = addWithCarry(!false,a17,a18) in
        #0605
        if (!a16[15:8][0]) {
          #0612
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a20 = (-1 + (SPH,SPL)) in
              M[a20] := 06;
              let:16 a21 = (-1 + a20) in
              M[a21] := 12;
              A := M[207B];
              SPH := a21[15:8];
              SPL := a21[7:0];
              FlagS := a16[7:0][7];
              FlagZ := is_zero(a16[7:0]);
              FlagA := a19[7:0][4];
              FlagP := parity(a16[7:0]);
              FlagCY := !a16[15:8][0];
              jump (0008);
            } else {
              let:16 a22 = (-1 + (SPH,SPL)) in
              M[a22] := 06;
              let:16 a23 = (-1 + a22) in
              M[a23] := 12;
              A := M[207B];
              SPH := a23[15:8];
              SPL := a23[7:0];
              FlagS := a16[7:0][7];
              FlagZ := is_zero(a16[7:0]);
              FlagA := a19[7:0][4];
              FlagP := parity(a16[7:0]);
              FlagCY := !a16[15:8][0];
              jump (0010);
            }
          } else {
            #0615
            let:8 a24 = (01 | M[2073]) in
            #0617
            M[2073] := a24;
            #061A
            let:16 a25 = (1 + (SPH,SPL)) in
            let:16 a26 = (1 + a25) in
            A := a24;
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagS := a24[7];
            FlagZ := is_zero(a24);
            FlagA := false;
            FlagP := parity(a24);
            FlagCY := false;
            jump ((M[a25],M[(SPH,SPL)]));
          }
        } else {
          #0608
          let:16 a27 = addWithCarry(!false,M[207B],~27) in
          let:8 a28 = (M[207B] & 0F) in
          let:8 a29 = (~27 & 0F) in
          let:16 a30 = addWithCarry(!false,a28,a29) in
          #060A
          #060B
          if (!!a27[15:8][0]) {
            #0612
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a31 = (-1 + (SPH,SPL)) in
                M[a31] := 06;
                let:16 a32 = (-1 + a31) in
                M[a32] := 12;
                A := M[207B];
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagS := a27[7:0][7];
                FlagZ := is_zero(a27[7:0]);
                FlagA := a30[7:0][4];
                FlagP := parity(a27[7:0]);
                FlagCY := !a27[15:8][0];
                jump (0008);
              } else {
                let:16 a33 = (-1 + (SPH,SPL)) in
                M[a33] := 06;
                let:16 a34 = (-1 + a33) in
                M[a34] := 12;
                A := M[207B];
                SPH := a34[15:8];
                SPL := a34[7:0];
                FlagS := a27[7:0][7];
                FlagZ := is_zero(a27[7:0]);
                FlagA := a30[7:0][4];
                FlagP := parity(a27[7:0]);
                FlagCY := !a27[15:8][0];
                jump (0010);
              }
            } else {
              #0615
              let:8 a35 = (01 | M[2073]) in
              #0617
              M[2073] := a35;
              #061A
              let:16 a36 = (1 + (SPH,SPL)) in
              let:16 a37 = (1 + a36) in
              A := a35;
              SPH := a37[15:8];
              SPL := a37[7:0];
              FlagS := a35[7];
              FlagZ := is_zero(a35);
              FlagA := false;
              FlagP := parity(a35);
              FlagCY := false;
              jump ((M[a36],M[(SPH,SPL)]));
            }
          } else {
            #060E
            let:16 a38 = addWithCarry(!false,M[207B],~M[207B]) in
            let:8 a39 = (M[207B] & 0F) in
            let:8 a40 = (~M[207B] & 0F) in
            let:16 a41 = addWithCarry(!false,a39,a40) in
            #060F
            M[2015] := a38[7:0];
            #0612
            #0615
            let:8 a42 = (01 | M[2073]) in
            #0617
            M[2073] := a42;
            #061A
            let:16 a43 = (1 + (SPH,SPL)) in
            let:16 a44 = (1 + a43) in
            A := a42;
            SPH := a44[15:8];
            SPL := a44[7:0];
            FlagS := a42[7];
            FlagZ := is_zero(a42);
            FlagA := false;
            FlagP := parity(a42);
            FlagCY := false;
            jump ((M[a43],M[(SPH,SPL)]));
          }
        }
      }
    }

0624:

    #0625
    let:16 a1 = addWithCarry(!false,C,~0C) in
    let:8 a2 = (C & 0F) in
    let:8 a3 = (~0C & 0F) in
    let:16 a4 = addWithCarry(!false,a2,a3) in
    #0627
    if (!a1[15:8][0]) {
      #05A5
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 05;
          let:16 a6 = (-1 + a5) in
          M[a6] := A5;
          A := C;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 05;
          let:16 a8 = (-1 + a7) in
          M[a8] := A5;
          A := C;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0010);
        }
      } else {
        let:16 a9 = (-1 + (SPH,SPL)) in
        M[a9] := 05;
        let:16 a10 = (-1 + a9) in
        M[a10] := A8;
        #return-to: 05A8
        #062F
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a10) in
            M[a11] := 06;
            let:16 a12 = (-1 + a11) in
            M[a12] := 2F;
            A := C;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a10) in
            M[a13] := 06;
            let:16 a14 = (-1 + a13) in
            M[a14] := 2F;
            A := C;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump (0010);
          }
        } else {
          let:16 a15 = addWithCarry(!true,C,~00) in
          let:8 a16 = (C & 0F) in
          let:8 a17 = (~00 & 0F) in
          let:16 a18 = addWithCarry(!true,a16,a17) in
          #0630
          #0633
          #0634
          #0635
          #0637
          #0638
          let:8 a19 = (M[(M[2067],a15[7:0])] & M[(M[2067],a15[7:0])]) in
          let:8 a20 = (M[(M[2067],a15[7:0])] | M[(M[2067],a15[7:0])]) in
          #0639
          #063A
          if (!is_zero(a19)) {
            let:16 a21 = (1 + a10) in
            let:16 a22 = (1 + a21) in
            A := a19;
            C := a15[7:0];
            D := 05;
            H := M[2067];
            L := a15[7:0];
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a19[7];
            FlagZ := is_zero(a19);
            FlagA := a20[3];
            FlagP := parity(a19);
            FlagCY := true;
            jump ((M[a21],M[a10]));
          } else {
            #063B
            #063C
            let:16 a23 = addWithCarry(false,0B,a15[7:0]) in
            let:8 a24 = (0B & 0F) in
            let:8 a25 = (a15[7:0] & 0F) in
            let:16 a26 = addWithCarry(false,a24,a25) in
            #063E
            #063F
            let:16 a27 = addWithCarry(!true,05,~00) in
            let:8 a28 = (05 & 0F) in
            let:8 a29 = (~00 & 0F) in
            let:16 a30 = addWithCarry(!true,a28,a29) in
            #0640
            if (!is_zero(a27[7:0])) {
              A := a23[7:0];
              C := a15[7:0];
              D := a27[7:0];
              H := M[2067];
              L := a23[7:0];
              SPH := a10[15:8];
              SPL := a10[7:0];
              FlagS := a27[7:0][7];
              FlagZ := is_zero(a27[7:0]);
              FlagA := a30[7:0][4];
              FlagP := parity(a27[7:0]);
              FlagCY := a23[15:8][0];
              jump (0637);
            } else {
              #0643
              let:16 a31 = (1 + a10) in
              let:16 a32 = (1 + a31) in
              A := a23[7:0];
              C := a15[7:0];
              D := a27[7:0];
              H := M[2067];
              L := a23[7:0];
              SPH := a32[15:8];
              SPL := a32[7:0];
              FlagS := a27[7:0][7];
              FlagZ := is_zero(a27[7:0]);
              FlagA := a30[7:0][4];
              FlagP := parity(a27[7:0]);
              FlagCY := a23[15:8][0];
              jump ((M[a31],M[a10]));
            }
          }
        }
      }
    } else {
      #062A
      #062C
      #05A5
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a33 = (-1 + (SPH,SPL)) in
          M[a33] := 05;
          let:16 a34 = (-1 + a33) in
          M[a34] := A5;
          A := C;
          C := 0B;
          SPH := a34[15:8];
          SPL := a34[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0008);
        } else {
          let:16 a35 = (-1 + (SPH,SPL)) in
          M[a35] := 05;
          let:16 a36 = (-1 + a35) in
          M[a36] := A5;
          A := C;
          C := 0B;
          SPH := a36[15:8];
          SPL := a36[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0010);
        }
      } else {
        let:16 a37 = (-1 + (SPH,SPL)) in
        M[a37] := 05;
        let:16 a38 = (-1 + a37) in
        M[a38] := A8;
        #return-to: 05A8
        #062F
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a39 = (-1 + a38) in
            M[a39] := 06;
            let:16 a40 = (-1 + a39) in
            M[a40] := 2F;
            A := C;
            C := 0B;
            SPH := a40[15:8];
            SPL := a40[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump (0008);
          } else {
            let:16 a41 = (-1 + a38) in
            M[a41] := 06;
            let:16 a42 = (-1 + a41) in
            M[a42] := 2F;
            A := C;
            C := 0B;
            SPH := a42[15:8];
            SPL := a42[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump (0010);
          }
        } else {
          let:16 a43 = addWithCarry(!true,0B,~00) in
          let:8 a44 = (0B & 0F) in
          let:8 a45 = (~00 & 0F) in
          let:16 a46 = addWithCarry(!true,a44,a45) in
          #0630
          #0633
          #0634
          #0635
          #0637
          #0638
          let:8 a47 = (M[(M[2067],a43[7:0])] & M[(M[2067],a43[7:0])]) in
          let:8 a48 = (M[(M[2067],a43[7:0])] | M[(M[2067],a43[7:0])]) in
          #0639
          #063A
          if (!is_zero(a47)) {
            let:16 a49 = (1 + a38) in
            let:16 a50 = (1 + a49) in
            A := a47;
            C := a43[7:0];
            D := 05;
            H := M[2067];
            L := a43[7:0];
            SPH := a50[15:8];
            SPL := a50[7:0];
            FlagS := a47[7];
            FlagZ := is_zero(a47);
            FlagA := a48[3];
            FlagP := parity(a47);
            FlagCY := true;
            jump ((M[a49],M[a38]));
          } else {
            #063B
            #063C
            let:16 a51 = addWithCarry(false,0B,a43[7:0]) in
            let:8 a52 = (0B & 0F) in
            let:8 a53 = (a43[7:0] & 0F) in
            let:16 a54 = addWithCarry(false,a52,a53) in
            #063E
            #063F
            let:16 a55 = addWithCarry(!true,05,~00) in
            let:8 a56 = (05 & 0F) in
            let:8 a57 = (~00 & 0F) in
            let:16 a58 = addWithCarry(!true,a56,a57) in
            #0640
            if (!is_zero(a55[7:0])) {
              A := a51[7:0];
              C := a43[7:0];
              D := a55[7:0];
              H := M[2067];
              L := a51[7:0];
              SPH := a38[15:8];
              SPL := a38[7:0];
              FlagS := a55[7:0][7];
              FlagZ := is_zero(a55[7:0]);
              FlagA := a58[7:0][4];
              FlagP := parity(a55[7:0]);
              FlagCY := a51[15:8][0];
              jump (0637);
            } else {
              #0643
              let:16 a59 = (1 + a38) in
              let:16 a60 = (1 + a59) in
              A := a51[7:0];
              C := a43[7:0];
              D := a55[7:0];
              H := M[2067];
              L := a51[7:0];
              SPH := a60[15:8];
              SPL := a60[7:0];
              FlagS := a55[7:0][7];
              FlagZ := is_zero(a55[7:0]);
              FlagA := a58[7:0][4];
              FlagP := parity(a55[7:0]);
              FlagCY := a51[15:8][0];
              jump ((M[a59],M[a38]));
            }
          }
        }
      }
    }

0651:

    #0654
    M[2079] := DC;
    M[207A] := 1C;
    #0657
    #065A
    let:16 a1 = addWithCarry(!true,M[207C],~00) in
    let:8 a2 = (M[207C] & 0F) in
    let:8 a3 = (~00 & 0F) in
    let:16 a4 = addWithCarry(!true,a2,a3) in
    M[207C] := a1[7:0];
    #065B
    let:16 a5 = addWithCarry(!true,M[207C],~00) in
    let:8 a6 = (M[207C] & 0F) in
    let:8 a7 = (~00 & 0F) in
    let:16 a8 = addWithCarry(!true,a6,a7) in
    M[207C] := a5[7:0];
    #065C
    #065D
    let:16 a9 = addWithCarry(!true,M[207B],~00) in
    let:8 a10 = (M[207B] & 0F) in
    let:8 a11 = (~00 & 0F) in
    let:16 a12 = addWithCarry(!true,a10,a11) in
    M[207B] := a9[7:0];
    #065E
    let:16 a13 = addWithCarry(!true,M[207B],~00) in
    let:8 a14 = (M[207B] & 0F) in
    let:8 a15 = (~00 & 0F) in
    let:16 a16 = addWithCarry(!true,a14,a15) in
    M[207B] := a13[7:0];
    #065F
    #0661
    M[207D] := 06;
    #0664
    #066C
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a17 = (-1 + (SPH,SPL)) in
        M[a17] := 06;
        let:16 a18 = (-1 + a17) in
        M[a18] := 6C;
        A := 06;
        H := 20;
        L := 7B;
        SPH := a18[15:8];
        SPL := a18[7:0];
        FlagS := a13[7:0][7];
        FlagZ := is_zero(a13[7:0]);
        FlagA := a16[7:0][4];
        FlagP := parity(a13[7:0]);
        jump (0008);
      } else {
        let:16 a19 = (-1 + (SPH,SPL)) in
        M[a19] := 06;
        let:16 a20 = (-1 + a19) in
        M[a20] := 6C;
        A := 06;
        H := 20;
        L := 7B;
        SPH := a20[15:8];
        SPL := a20[7:0];
        FlagS := a13[7:0][7];
        FlagZ := is_zero(a13[7:0]);
        FlagA := a16[7:0][4];
        FlagP := parity(a13[7:0]);
        jump (0010);
      }
    } else {
      #066F
      let:16 a21 = (-1 + (SPH,SPL)) in
      M[a21] := 06;
      let:16 a22 = (-1 + a21) in
      M[a22] := 72;
      #return-to: 0672
      #1A3B
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a23 = (-1 + a22) in
          M[a23] := 1A;
          let:16 a24 = (-1 + a23) in
          M[a24] := 3B;
          A := 06;
          H := 20;
          L := 79;
          SPH := a24[15:8];
          SPL := a24[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          jump (0008);
        } else {
          let:16 a25 = (-1 + a22) in
          M[a25] := 1A;
          let:16 a26 = (-1 + a25) in
          M[a26] := 3B;
          A := 06;
          H := 20;
          L := 79;
          SPH := a26[15:8];
          SPL := a26[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          jump (0010);
        }
      } else {
        #1A3C
        #1A3D
        #1A3E
        #1A3F
        #1A40
        #1A41
        #1A42
        #1A43
        #1A44
        #1A45
        #1A46
        let:16 a27 = (1 + a22) in
        let:16 a28 = (1 + a27) in
        A := M[207B];
        B := M[207D];
        C := M[207C];
        D := M[207A];
        E := M[2079];
        H := M[207C];
        L := M[207B];
        SPH := a28[15:8];
        SPL := a28[7:0];
        FlagS := a13[7:0][7];
        FlagZ := is_zero(a13[7:0]);
        FlagA := a16[7:0][4];
        FlagP := parity(a13[7:0]);
        jump ((M[a27],M[a22]));
      }
    }

0672:

    #1491
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 14;
        let:16 a2 = (-1 + a1) in
        M[a2] := 91;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 14;
        let:16 a4 = (-1 + a3) in
        M[a4] := 91;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 14;
      let:16 a6 = (-1 + a5) in
      M[a6] := 94;
      #return-to: 1494
      #1474
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 14;
          let:16 a8 = (-1 + a7) in
          M[a8] := 74;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := 74;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1475
        let:8 a11 = (07 & L) in
        let:8 a12 = (07 | L) in
        #1477
        #1479
        #1A47
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + a6) in
            M[a13] := 1A;
            let:16 a14 = (-1 + a13) in
            M[a14] := 47;
            A := a11;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            Shifter_OFF := a11;
            jump (0008);
          } else {
            let:16 a15 = (-1 + a6) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 47;
            A := a11;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            Shifter_OFF := a11;
            jump (0010);
          }
        } else {
          let:16 a17 = (-1 + a6) in
          M[a17] := B;
          let:16 a18 = (-1 + a17) in
          M[a18] := C;
          #1A48
          #1A4A
          #1A4B
          #1A4C
          #1A4D
          #1A4E
          #1A4F
          #1A50
          let:16 a19 = addWithCarry(!true,03,~00) in
          let:8 a20 = (03 & 0F) in
          let:8 a21 = (~00 & 0F) in
          let:16 a22 = addWithCarry(!true,a20,a21) in
          #1A51
          if (!is_zero(a19[7:0])) {
            A := updateBit((L >> 01),7,H[0]);
            B := a19[7:0];
            H := updateBit((H >> 01),7,false);
            L := updateBit((L >> 01),7,H[0]);
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := L[0];
            Shifter_OFF := a11;
            jump (1A4A);
          } else {
            #1A54
            #1A55
            let:8 a23 = (3F & updateBit((H >> 01),7,false)) in
            let:8 a24 = (3F | updateBit((H >> 01),7,false)) in
            #1A57
            let:8 a25 = (20 | a23) in
            #1A59
            #1A5A
            let:16 a26 = (1 + a18) in
            let:16 a27 = (1 + a26) in
            #1A5B
            let:16 a28 = (1 + a27) in
            let:16 a29 = (1 + a28) in
            A := a25;
            B := M[a26];
            C := M[a18];
            H := a25;
            L := updateBit((L >> 01),7,H[0]);
            SPH := a29[15:8];
            SPL := a29[7:0];
            FlagS := a25[7];
            FlagZ := is_zero(a25);
            FlagA := false;
            FlagP := parity(a25);
            FlagCY := false;
            Shifter_OFF := a11;
            jump ((M[a28],M[a27]));
          }
        }
      }
    }

067B:

    #1452
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 14;
        let:16 a2 = (-1 + a1) in
        M[a2] := 52;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 14;
        let:16 a4 = (-1 + a3) in
        M[a4] := 52;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 14;
      let:16 a6 = (-1 + a5) in
      M[a6] := 55;
      #return-to: 1455
      #1474
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 14;
          let:16 a8 = (-1 + a7) in
          M[a8] := 74;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := 74;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1475
        let:8 a11 = (07 & L) in
        let:8 a12 = (07 | L) in
        #1477
        #1479
        #1A47
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + a6) in
            M[a13] := 1A;
            let:16 a14 = (-1 + a13) in
            M[a14] := 47;
            A := a11;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            Shifter_OFF := a11;
            jump (0008);
          } else {
            let:16 a15 = (-1 + a6) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 47;
            A := a11;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            Shifter_OFF := a11;
            jump (0010);
          }
        } else {
          let:16 a17 = (-1 + a6) in
          M[a17] := B;
          let:16 a18 = (-1 + a17) in
          M[a18] := C;
          #1A48
          #1A4A
          #1A4B
          #1A4C
          #1A4D
          #1A4E
          #1A4F
          #1A50
          let:16 a19 = addWithCarry(!true,03,~00) in
          let:8 a20 = (03 & 0F) in
          let:8 a21 = (~00 & 0F) in
          let:16 a22 = addWithCarry(!true,a20,a21) in
          #1A51
          if (!is_zero(a19[7:0])) {
            A := updateBit((L >> 01),7,H[0]);
            B := a19[7:0];
            H := updateBit((H >> 01),7,false);
            L := updateBit((L >> 01),7,H[0]);
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := L[0];
            Shifter_OFF := a11;
            jump (1A4A);
          } else {
            #1A54
            #1A55
            let:8 a23 = (3F & updateBit((H >> 01),7,false)) in
            let:8 a24 = (3F | updateBit((H >> 01),7,false)) in
            #1A57
            let:8 a25 = (20 | a23) in
            #1A59
            #1A5A
            let:16 a26 = (1 + a18) in
            let:16 a27 = (1 + a26) in
            #1A5B
            let:16 a28 = (1 + a27) in
            let:16 a29 = (1 + a28) in
            A := a25;
            B := M[a26];
            C := M[a18];
            H := a25;
            L := updateBit((L >> 01),7,H[0]);
            SPH := a29[15:8];
            SPL := a29[7:0];
            FlagS := a25[7];
            FlagZ := is_zero(a25);
            FlagA := false;
            FlagP := parity(a25);
            FlagCY := false;
            Shifter_OFF := a11;
            jump ((M[a28],M[a27]));
          }
        }
      }
    }

0682:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #0683
    #0686
    let:16 a3 = addWithCarry(!false,M[2080],~02) in
    let:8 a4 = (M[2080] & 0F) in
    let:8 a5 = (~02 & 0F) in
    let:16 a6 = addWithCarry(!false,a4,a5) in
    #0688
    if (!is_zero(a3[7:0])) {
      let:16 a7 = (1 + a2) in
      let:16 a8 = (1 + a7) in
      A := M[2080];
      H := M[a1];
      L := M[(SPH,SPL)];
      SPH := a8[15:8];
      SPL := a8[7:0];
      FlagS := a3[7:0][7];
      FlagZ := is_zero(a3[7:0]);
      FlagA := a6[7:0][4];
      FlagP := parity(a3[7:0]);
      FlagCY := !a3[15:8][0];
      jump ((M[a7],M[a2]));
    } else {
      #0689
      #068C
      #068D
      let:8 a9 = (M[2083] & M[2083]) in
      let:8 a10 = (M[2083] | M[2083]) in
      #068E
      if (is_zero(a9)) {
        #050F
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a2) in
            M[a11] := 05;
            let:16 a12 = (-1 + a11) in
            M[a12] := 0F;
            A := a9;
            H := 20;
            L := 83;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a9[7];
            FlagZ := is_zero(a9);
            FlagA := a10[3];
            FlagP := parity(a9);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a13 = (-1 + a2) in
            M[a13] := 05;
            let:16 a14 = (-1 + a13) in
            M[a14] := 0F;
            A := a9;
            H := 20;
            L := 83;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a9[7];
            FlagZ := is_zero(a9);
            FlagA := a10[3];
            FlagP := parity(a9);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #0512
          #0514
          let:16 a15 = (-1 + a2) in
          M[a15] := 05;
          let:16 a16 = (-1 + a15) in
          M[a16] := 17;
          #return-to: 0517
          #0550
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a16) in
              M[a17] := 05;
              let:16 a18 = (-1 + a17) in
              M[a18] := 50;
              A := DB;
              D := 20;
              E := 55;
              H := 20;
              L := 83;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a19 = (-1 + a16) in
              M[a19] := 05;
              let:16 a20 = (-1 + a19) in
              M[a20] := 50;
              A := DB;
              D := 20;
              E := 55;
              H := 20;
              L := 83;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0010);
            }
          } else {
            M[207F] := DB;
            #0553
            #0556
            #0558
            #1A32
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a21 = (-1 + a16) in
                M[a21] := 1A;
                let:16 a22 = (-1 + a21) in
                M[a22] := 32;
                A := DB;
                B := 0B;
                D := 20;
                E := 55;
                H := 20;
                L := 73;
                SPH := a22[15:8];
                SPL := a22[7:0];
                FlagS := a9[7];
                FlagZ := is_zero(a9);
                FlagA := a10[3];
                FlagP := parity(a9);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a23 = (-1 + a16) in
                M[a23] := 1A;
                let:16 a24 = (-1 + a23) in
                M[a24] := 32;
                A := DB;
                B := 0B;
                D := 20;
                E := 55;
                H := 20;
                L := 73;
                SPH := a24[15:8];
                SPL := a24[7:0];
                FlagS := a9[7];
                FlagZ := is_zero(a9);
                FlagA := a10[3];
                FlagP := parity(a9);
                FlagCY := false;
                jump (0010);
              }
            } else {
              #1A33
              M[2073] := M[2055];
              #1A34
              #1A35
              #1A36
              let:16 a25 = addWithCarry(!true,0B,~00) in
              let:8 a26 = (0B & 0F) in
              let:8 a27 = (~00 & 0F) in
              let:16 a28 = addWithCarry(!true,a26,a27) in
              #1A37
              if (!is_zero(a25[7:0])) {
                A := M[2055];
                B := a25[7:0];
                D := 20;
                E := 56;
                H := 20;
                L := 74;
                SPH := a16[15:8];
                SPL := a16[7:0];
                FlagS := a25[7:0][7];
                FlagZ := is_zero(a25[7:0]);
                FlagA := a28[7:0][4];
                FlagP := parity(a25[7:0]);
                FlagCY := false;
                jump (1A32);
              } else {
                #1A3A
                let:16 a29 = (1 + a16) in
                let:16 a30 = (1 + a29) in
                A := M[2055];
                B := a25[7:0];
                D := 20;
                E := 56;
                H := 20;
                L := 74;
                SPH := a30[15:8];
                SPL := a30[7:0];
                FlagS := a25[7:0][7];
                FlagZ := is_zero(a25[7:0]);
                FlagA := a28[7:0][4];
                FlagP := parity(a25[7:0]);
                FlagCY := false;
                jump ((M[a29],M[a16]));
              }
            }
          }
        }
      } else {
        #0691
        #0694
        let:8 a31 = (M[2056] & M[2056]) in
        let:8 a32 = (M[2056] | M[2056]) in
        #0695
        if (!is_zero(a31)) {
          #050F
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a33 = (-1 + a2) in
              M[a33] := 05;
              let:16 a34 = (-1 + a33) in
              M[a34] := 0F;
              A := a31;
              H := 20;
              L := 83;
              SPH := a34[15:8];
              SPL := a34[7:0];
              FlagS := a31[7];
              FlagZ := is_zero(a31);
              FlagA := a32[3];
              FlagP := parity(a31);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a35 = (-1 + a2) in
              M[a35] := 05;
              let:16 a36 = (-1 + a35) in
              M[a36] := 0F;
              A := a31;
              H := 20;
              L := 83;
              SPH := a36[15:8];
              SPL := a36[7:0];
              FlagS := a31[7];
              FlagZ := is_zero(a31);
              FlagA := a32[3];
              FlagP := parity(a31);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #0512
            #0514
            let:16 a37 = (-1 + a2) in
            M[a37] := 05;
            let:16 a38 = (-1 + a37) in
            M[a38] := 17;
            #return-to: 0517
            #0550
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a39 = (-1 + a38) in
                M[a39] := 05;
                let:16 a40 = (-1 + a39) in
                M[a40] := 50;
                A := DB;
                D := 20;
                E := 55;
                H := 20;
                L := 83;
                SPH := a40[15:8];
                SPL := a40[7:0];
                FlagS := a31[7];
                FlagZ := is_zero(a31);
                FlagA := a32[3];
                FlagP := parity(a31);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a41 = (-1 + a38) in
                M[a41] := 05;
                let:16 a42 = (-1 + a41) in
                M[a42] := 50;
                A := DB;
                D := 20;
                E := 55;
                H := 20;
                L := 83;
                SPH := a42[15:8];
                SPL := a42[7:0];
                FlagS := a31[7];
                FlagZ := is_zero(a31);
                FlagA := a32[3];
                FlagP := parity(a31);
                FlagCY := false;
                jump (0010);
              }
            } else {
              M[207F] := DB;
              #0553
              #0556
              #0558
              #1A32
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a43 = (-1 + a38) in
                  M[a43] := 1A;
                  let:16 a44 = (-1 + a43) in
                  M[a44] := 32;
                  A := DB;
                  B := 0B;
                  D := 20;
                  E := 55;
                  H := 20;
                  L := 73;
                  SPH := a44[15:8];
                  SPL := a44[7:0];
                  FlagS := a31[7];
                  FlagZ := is_zero(a31);
                  FlagA := a32[3];
                  FlagP := parity(a31);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a45 = (-1 + a38) in
                  M[a45] := 1A;
                  let:16 a46 = (-1 + a45) in
                  M[a46] := 32;
                  A := DB;
                  B := 0B;
                  D := 20;
                  E := 55;
                  H := 20;
                  L := 73;
                  SPH := a46[15:8];
                  SPL := a46[7:0];
                  FlagS := a31[7];
                  FlagZ := is_zero(a31);
                  FlagA := a32[3];
                  FlagP := parity(a31);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #1A33
                M[2073] := M[2055];
                #1A34
                #1A35
                #1A36
                let:16 a47 = addWithCarry(!true,0B,~00) in
                let:8 a48 = (0B & 0F) in
                let:8 a49 = (~00 & 0F) in
                let:16 a50 = addWithCarry(!true,a48,a49) in
                #1A37
                if (!is_zero(a47[7:0])) {
                  A := M[2055];
                  B := a47[7:0];
                  D := 20;
                  E := 56;
                  H := 20;
                  L := 74;
                  SPH := a38[15:8];
                  SPL := a38[7:0];
                  FlagS := a47[7:0][7];
                  FlagZ := is_zero(a47[7:0]);
                  FlagA := a50[7:0][4];
                  FlagP := parity(a47[7:0]);
                  FlagCY := false;
                  jump (1A32);
                } else {
                  #1A3A
                  let:16 a51 = (1 + a38) in
                  let:16 a52 = (1 + a51) in
                  A := M[2055];
                  B := a47[7:0];
                  D := 20;
                  E := 56;
                  H := 20;
                  L := 74;
                  SPH := a52[15:8];
                  SPL := a52[7:0];
                  FlagS := a47[7:0][7];
                  FlagZ := is_zero(a47[7:0]);
                  FlagA := a50[7:0][4];
                  FlagP := parity(a47[7:0]);
                  FlagCY := false;
                  jump ((M[a51],M[a38]));
                }
              }
            }
          }
        } else {
          #0698
          #0699
          #069A
          let:8 a53 = (M[2084] & M[2084]) in
          let:8 a54 = (M[2084] | M[2084]) in
          #069B
          if (!is_zero(a53)) {
            A := a53;
            H := 20;
            L := 84;
            SPH := a2[15:8];
            SPL := a2[7:0];
            FlagS := a53[7];
            FlagZ := is_zero(a53);
            FlagA := a54[3];
            FlagP := parity(a53);
            FlagCY := false;
            jump (06AB);
          } else {
            #069E
            #06A1
            let:16 a55 = addWithCarry(!false,M[2082],~08) in
            let:8 a56 = (M[2082] & 0F) in
            let:8 a57 = (~08 & 0F) in
            let:16 a58 = addWithCarry(!false,a56,a57) in
            #06A3
            if (!a55[15:8][0]) {
              #050F
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a59 = (-1 + a2) in
                  M[a59] := 05;
                  let:16 a60 = (-1 + a59) in
                  M[a60] := 0F;
                  A := M[2082];
                  H := 20;
                  L := 84;
                  SPH := a60[15:8];
                  SPL := a60[7:0];
                  FlagS := a55[7:0][7];
                  FlagZ := is_zero(a55[7:0]);
                  FlagA := a58[7:0][4];
                  FlagP := parity(a55[7:0]);
                  FlagCY := !a55[15:8][0];
                  jump (0008);
                } else {
                  let:16 a61 = (-1 + a2) in
                  M[a61] := 05;
                  let:16 a62 = (-1 + a61) in
                  M[a62] := 0F;
                  A := M[2082];
                  H := 20;
                  L := 84;
                  SPH := a62[15:8];
                  SPL := a62[7:0];
                  FlagS := a55[7:0][7];
                  FlagZ := is_zero(a55[7:0]);
                  FlagA := a58[7:0][4];
                  FlagP := parity(a55[7:0]);
                  FlagCY := !a55[15:8][0];
                  jump (0010);
                }
              } else {
                #0512
                #0514
                let:16 a63 = (-1 + a2) in
                M[a63] := 05;
                let:16 a64 = (-1 + a63) in
                M[a64] := 17;
                #return-to: 0517
                #0550
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a65 = (-1 + a64) in
                    M[a65] := 05;
                    let:16 a66 = (-1 + a65) in
                    M[a66] := 50;
                    A := DB;
                    D := 20;
                    E := 55;
                    H := 20;
                    L := 84;
                    SPH := a66[15:8];
                    SPL := a66[7:0];
                    FlagS := a55[7:0][7];
                    FlagZ := is_zero(a55[7:0]);
                    FlagA := a58[7:0][4];
                    FlagP := parity(a55[7:0]);
                    FlagCY := !a55[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a67 = (-1 + a64) in
                    M[a67] := 05;
                    let:16 a68 = (-1 + a67) in
                    M[a68] := 50;
                    A := DB;
                    D := 20;
                    E := 55;
                    H := 20;
                    L := 84;
                    SPH := a68[15:8];
                    SPL := a68[7:0];
                    FlagS := a55[7:0][7];
                    FlagZ := is_zero(a55[7:0]);
                    FlagA := a58[7:0][4];
                    FlagP := parity(a55[7:0]);
                    FlagCY := !a55[15:8][0];
                    jump (0010);
                  }
                } else {
                  M[207F] := DB;
                  #0553
                  #0556
                  #0558
                  #1A32
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a69 = (-1 + a64) in
                      M[a69] := 1A;
                      let:16 a70 = (-1 + a69) in
                      M[a70] := 32;
                      A := DB;
                      B := 0B;
                      D := 20;
                      E := 55;
                      H := 20;
                      L := 73;
                      SPH := a70[15:8];
                      SPL := a70[7:0];
                      FlagS := a55[7:0][7];
                      FlagZ := is_zero(a55[7:0]);
                      FlagA := a58[7:0][4];
                      FlagP := parity(a55[7:0]);
                      FlagCY := !a55[15:8][0];
                      jump (0008);
                    } else {
                      let:16 a71 = (-1 + a64) in
                      M[a71] := 1A;
                      let:16 a72 = (-1 + a71) in
                      M[a72] := 32;
                      A := DB;
                      B := 0B;
                      D := 20;
                      E := 55;
                      H := 20;
                      L := 73;
                      SPH := a72[15:8];
                      SPL := a72[7:0];
                      FlagS := a55[7:0][7];
                      FlagZ := is_zero(a55[7:0]);
                      FlagA := a58[7:0][4];
                      FlagP := parity(a55[7:0]);
                      FlagCY := !a55[15:8][0];
                      jump (0010);
                    }
                  } else {
                    #1A33
                    M[2073] := M[2055];
                    #1A34
                    #1A35
                    #1A36
                    let:16 a73 = addWithCarry(!true,0B,~00) in
                    let:8 a74 = (0B & 0F) in
                    let:8 a75 = (~00 & 0F) in
                    let:16 a76 = addWithCarry(!true,a74,a75) in
                    #1A37
                    if (!is_zero(a73[7:0])) {
                      A := M[2055];
                      B := a73[7:0];
                      D := 20;
                      E := 56;
                      H := 20;
                      L := 74;
                      SPH := a64[15:8];
                      SPL := a64[7:0];
                      FlagS := a73[7:0][7];
                      FlagZ := is_zero(a73[7:0]);
                      FlagA := a76[7:0][4];
                      FlagP := parity(a73[7:0]);
                      FlagCY := !a55[15:8][0];
                      jump (1A32);
                    } else {
                      #1A3A
                      let:16 a77 = (1 + a64) in
                      let:16 a78 = (1 + a77) in
                      A := M[2055];
                      B := a73[7:0];
                      D := 20;
                      E := 56;
                      H := 20;
                      L := 74;
                      SPH := a78[15:8];
                      SPL := a78[7:0];
                      FlagS := a73[7:0][7];
                      FlagZ := is_zero(a73[7:0]);
                      FlagA := a76[7:0][4];
                      FlagP := parity(a73[7:0]);
                      FlagCY := !a55[15:8][0];
                      jump ((M[a77],M[a64]));
                    }
                  }
                }
              }
            } else {
              #06A6
              M[2084] := 01;
              #06A8
              let:16 a79 = (-1 + a2) in
              M[a79] := 06;
              let:16 a80 = (-1 + a79) in
              M[a80] := AB;
              #return-to: 06AB
              #073C
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a81 = (-1 + a80) in
                  M[a81] := 07;
                  let:16 a82 = (-1 + a81) in
                  M[a82] := 3C;
                  A := M[2082];
                  H := 20;
                  L := 84;
                  SPH := a82[15:8];
                  SPL := a82[7:0];
                  FlagS := a55[7:0][7];
                  FlagZ := is_zero(a55[7:0]);
                  FlagA := a58[7:0][4];
                  FlagP := parity(a55[7:0]);
                  FlagCY := !a55[15:8][0];
                  jump (0008);
                } else {
                  let:16 a83 = (-1 + a80) in
                  M[a83] := 07;
                  let:16 a84 = (-1 + a83) in
                  M[a84] := 3C;
                  A := M[2082];
                  H := 20;
                  L := 84;
                  SPH := a84[15:8];
                  SPL := a84[7:0];
                  FlagS := a55[7:0][7];
                  FlagZ := is_zero(a55[7:0]);
                  FlagA := a58[7:0][4];
                  FlagP := parity(a55[7:0]);
                  FlagCY := !a55[15:8][0];
                  jump (0010);
                }
              } else {
                let:16 a85 = (-1 + a80) in
                M[a85] := 07;
                let:16 a86 = (-1 + a85) in
                M[a86] := 3F;
                #return-to: 073F
                #0742
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a87 = (-1 + a86) in
                    M[a87] := 07;
                    let:16 a88 = (-1 + a87) in
                    M[a88] := 42;
                    A := M[2082];
                    H := 20;
                    L := 84;
                    SPH := a88[15:8];
                    SPL := a88[7:0];
                    FlagS := a55[7:0][7];
                    FlagZ := is_zero(a55[7:0]);
                    FlagA := a58[7:0][4];
                    FlagP := parity(a55[7:0]);
                    FlagCY := !a55[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a89 = (-1 + a86) in
                    M[a89] := 07;
                    let:16 a90 = (-1 + a89) in
                    M[a90] := 42;
                    A := M[2082];
                    H := 20;
                    L := 84;
                    SPH := a90[15:8];
                    SPL := a90[7:0];
                    FlagS := a55[7:0][7];
                    FlagZ := is_zero(a55[7:0]);
                    FlagA := a58[7:0][4];
                    FlagP := parity(a55[7:0]);
                    FlagCY := !a55[15:8][0];
                    jump (0010);
                  }
                } else {
                  #0745
                  let:16 a91 = (-1 + a86) in
                  M[a91] := 07;
                  let:16 a92 = (-1 + a91) in
                  M[a92] := 48;
                  #return-to: 0748
                  #1A3B
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a93 = (-1 + a92) in
                      M[a93] := 1A;
                      let:16 a94 = (-1 + a93) in
                      M[a94] := 3B;
                      A := M[2082];
                      H := 20;
                      L := 87;
                      SPH := a94[15:8];
                      SPL := a94[7:0];
                      FlagS := a55[7:0][7];
                      FlagZ := is_zero(a55[7:0]);
                      FlagA := a58[7:0][4];
                      FlagP := parity(a55[7:0]);
                      FlagCY := !a55[15:8][0];
                      jump (0008);
                    } else {
                      let:16 a95 = (-1 + a92) in
                      M[a95] := 1A;
                      let:16 a96 = (-1 + a95) in
                      M[a96] := 3B;
                      A := M[2082];
                      H := 20;
                      L := 87;
                      SPH := a96[15:8];
                      SPL := a96[7:0];
                      FlagS := a55[7:0][7];
                      FlagZ := is_zero(a55[7:0]);
                      FlagA := a58[7:0][4];
                      FlagP := parity(a55[7:0]);
                      FlagCY := !a55[15:8][0];
                      jump (0010);
                    }
                  } else {
                    #1A3C
                    #1A3D
                    #1A3E
                    #1A3F
                    #1A40
                    #1A41
                    #1A42
                    #1A43
                    #1A44
                    #1A45
                    #1A46
                    let:16 a97 = (1 + a92) in
                    let:16 a98 = (1 + a97) in
                    A := M[2089];
                    B := M[208B];
                    C := M[208A];
                    D := M[2088];
                    E := M[2087];
                    H := M[208A];
                    L := M[2089];
                    SPH := a98[15:8];
                    SPL := a98[7:0];
                    FlagS := a55[7:0][7];
                    FlagZ := is_zero(a55[7:0]);
                    FlagA := a58[7:0][4];
                    FlagP := parity(a55[7:0]);
                    FlagCY := !a55[15:8][0];
                    jump ((M[a97],M[a92]));
                  }
                }
              }
            }
          }
        }
      }
    }

06AB:

    #06AE
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 06;
    let:16 a2 = (-1 + a1) in
    M[a2] := B1;
    #return-to: 06B1
    #1A06
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 1A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 06;
        D := 20;
        E := 8A;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 1A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 06;
        D := 20;
        E := 8A;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1A09
      #1A0A
      #1A0B
      let:8 a7 = (80 & M[208A]) in
      let:8 a8 = (80 | M[208A]) in
      #1A0D
      let:8 a9 = (M[2072] ^ a7) in
      #1A0E
      if (!is_zero(a9)) {
        let:16 a10 = (1 + a2) in
        let:16 a11 = (1 + a10) in
        A := a9;
        B := M[2072];
        D := 20;
        E := 8A;
        H := 20;
        L := 72;
        SPH := a11[15:8];
        SPL := a11[7:0];
        FlagS := a9[7];
        FlagZ := is_zero(a9);
        FlagA := false;
        FlagP := parity(a9);
        FlagCY := false;
        jump ((M[a10],M[a2]));
      } else {
        #1A0F
        #1A10
        let:16 a12 = (1 + a2) in
        let:16 a13 = (1 + a12) in
        A := a9;
        B := M[2072];
        D := 20;
        E := 8A;
        H := 20;
        L := 72;
        SPH := a13[15:8];
        SPL := a13[7:0];
        FlagS := a9[7];
        FlagZ := is_zero(a9);
        FlagA := false;
        FlagP := parity(a9);
        FlagCY := true;
        jump ((M[a12],M[a2]));
      }
    }

06B1:

    if (!FlagCY) {
      let:16 a1 = (1 + (SPH,SPL)) in
      let:16 a2 = (1 + a1) in
      SPH := a2[15:8];
      SPL := a2[7:0];
      jump ((M[a1],M[(SPH,SPL)]));
    } else {
      #06B2
      #06B5
      #06B6
      let:8 a3 = (M[2085] & M[2085]) in
      let:8 a4 = (M[2085] | M[2085]) in
      #06B7
      if (!is_zero(a3)) {
        #06D6
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a5 = (-1 + (SPH,SPL)) in
            M[a5] := 06;
            let:16 a6 = (-1 + a5) in
            M[a6] := D6;
            A := a3;
            H := 20;
            L := 85;
            SPH := a6[15:8];
            SPL := a6[7:0];
            FlagS := a3[7];
            FlagZ := is_zero(a3);
            FlagA := a4[3];
            FlagP := parity(a3);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a7 = (-1 + (SPH,SPL)) in
            M[a7] := 06;
            let:16 a8 = (-1 + a7) in
            M[a8] := D6;
            A := a3;
            H := 20;
            L := 85;
            SPH := a8[15:8];
            SPL := a8[7:0];
            FlagS := a3[7];
            FlagZ := is_zero(a3);
            FlagA := a4[3];
            FlagP := parity(a3);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #06D8
          let:16 a9 = (-1 + (SPH,SPL)) in
          M[a9] := 06;
          let:16 a10 = (-1 + a9) in
          M[a10] := DB;
          #return-to: 06DB
          #19DC
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a11 = (-1 + a10) in
              M[a11] := 19;
              let:16 a12 = (-1 + a11) in
              M[a12] := DC;
              A := a3;
              B := FE;
              H := 20;
              L := 85;
              SPH := a12[15:8];
              SPL := a12[7:0];
              FlagS := a3[7];
              FlagZ := is_zero(a3);
              FlagA := a4[3];
              FlagP := parity(a3);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a13 = (-1 + a10) in
              M[a13] := 19;
              let:16 a14 = (-1 + a13) in
              M[a14] := DC;
              A := a3;
              B := FE;
              H := 20;
              L := 85;
              SPH := a14[15:8];
              SPL := a14[7:0];
              FlagS := a3[7];
              FlagZ := is_zero(a3);
              FlagA := a4[3];
              FlagP := parity(a3);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #19DF
            let:8 a15 = (FE & M[2094]) in
            let:8 a16 = (FE | M[2094]) in
            #19E0
            M[2094] := a15;
            #19E3
            sound_control(Ufo,a15[0]);
            sound_control(Shot,a15[1]);
            sound_control(PlayerDie,a15[2]);
            sound_control(InvaderDie,a15[3]);
            sound_control(ExtraLife,a15[4]);
            #19E5
            let:16 a17 = (1 + a10) in
            let:16 a18 = (1 + a17) in
            A := a15;
            B := FE;
            H := 20;
            L := 85;
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a15[7];
            FlagZ := is_zero(a15);
            FlagA := a16[3];
            FlagP := parity(a15);
            FlagCY := false;
            jump ((M[a17],M[a10]));
          }
        }
      } else {
        #06BA
        #06BD
        #06BE
        #06BF
        #06C0
        let:16 a19 = addWithCarry(false,M[208C],M[208A]) in
        let:8 a20 = (M[208C] & 0F) in
        let:8 a21 = (M[208A] & 0F) in
        let:16 a22 = addWithCarry(false,a20,a21) in
        #06C1
        M[208A] := a19[7:0];
        #06C4
        let:16 a23 = (-1 + (SPH,SPL)) in
        M[a23] := 06;
        let:16 a24 = (-1 + a23) in
        M[a24] := C7;
        #return-to: 06C7
        #073C
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a25 = (-1 + a24) in
            M[a25] := 07;
            let:16 a26 = (-1 + a25) in
            M[a26] := 3C;
            A := a19[7:0];
            H := 20;
            L := 8C;
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := a19[15:8][0];
            jump (0008);
          } else {
            let:16 a27 = (-1 + a24) in
            M[a27] := 07;
            let:16 a28 = (-1 + a27) in
            M[a28] := 3C;
            A := a19[7:0];
            H := 20;
            L := 8C;
            SPH := a28[15:8];
            SPL := a28[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := a19[15:8][0];
            jump (0010);
          }
        } else {
          let:16 a29 = (-1 + a24) in
          M[a29] := 07;
          let:16 a30 = (-1 + a29) in
          M[a30] := 3F;
          #return-to: 073F
          #0742
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a31 = (-1 + a30) in
              M[a31] := 07;
              let:16 a32 = (-1 + a31) in
              M[a32] := 42;
              A := a19[7:0];
              H := 20;
              L := 8C;
              SPH := a32[15:8];
              SPL := a32[7:0];
              FlagS := a19[7:0][7];
              FlagZ := is_zero(a19[7:0]);
              FlagA := a22[7:0][4];
              FlagP := parity(a19[7:0]);
              FlagCY := a19[15:8][0];
              jump (0008);
            } else {
              let:16 a33 = (-1 + a30) in
              M[a33] := 07;
              let:16 a34 = (-1 + a33) in
              M[a34] := 42;
              A := a19[7:0];
              H := 20;
              L := 8C;
              SPH := a34[15:8];
              SPL := a34[7:0];
              FlagS := a19[7:0][7];
              FlagZ := is_zero(a19[7:0]);
              FlagA := a22[7:0][4];
              FlagP := parity(a19[7:0]);
              FlagCY := a19[15:8][0];
              jump (0010);
            }
          } else {
            #0745
            let:16 a35 = (-1 + a30) in
            M[a35] := 07;
            let:16 a36 = (-1 + a35) in
            M[a36] := 48;
            #return-to: 0748
            #1A3B
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a37 = (-1 + a36) in
                M[a37] := 1A;
                let:16 a38 = (-1 + a37) in
                M[a38] := 3B;
                A := a19[7:0];
                H := 20;
                L := 87;
                SPH := a38[15:8];
                SPL := a38[7:0];
                FlagS := a19[7:0][7];
                FlagZ := is_zero(a19[7:0]);
                FlagA := a22[7:0][4];
                FlagP := parity(a19[7:0]);
                FlagCY := a19[15:8][0];
                jump (0008);
              } else {
                let:16 a39 = (-1 + a36) in
                M[a39] := 1A;
                let:16 a40 = (-1 + a39) in
                M[a40] := 3B;
                A := a19[7:0];
                H := 20;
                L := 87;
                SPH := a40[15:8];
                SPL := a40[7:0];
                FlagS := a19[7:0][7];
                FlagZ := is_zero(a19[7:0]);
                FlagA := a22[7:0][4];
                FlagP := parity(a19[7:0]);
                FlagCY := a19[15:8][0];
                jump (0010);
              }
            } else {
              #1A3C
              #1A3D
              #1A3E
              #1A3F
              #1A40
              #1A41
              #1A42
              #1A43
              #1A44
              #1A45
              #1A46
              let:16 a41 = (1 + a36) in
              let:16 a42 = (1 + a41) in
              A := M[2089];
              B := M[208B];
              C := M[208A];
              D := M[2088];
              E := M[2087];
              H := M[208A];
              L := M[2089];
              SPH := a42[15:8];
              SPL := a42[7:0];
              FlagS := a19[7:0][7];
              FlagZ := is_zero(a19[7:0]);
              FlagA := a22[7:0][4];
              FlagP := parity(a19[7:0]);
              FlagCY := a19[15:8][0];
              jump ((M[a41],M[a36]));
            }
          }
        }
      }
    }

06C7:

    #06CA
    #06CB
    let:16 a1 = addWithCarry(!false,M[208A],~28) in
    let:8 a2 = (M[208A] & 0F) in
    let:8 a3 = (~28 & 0F) in
    let:16 a4 = addWithCarry(!false,a2,a3) in
    #06CD
    if (!a1[15:8][0]) {
      #06F9
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 06;
          let:16 a6 = (-1 + a5) in
          M[a6] := F9;
          A := M[208A];
          H := 20;
          L := 8A;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 06;
          let:16 a8 = (-1 + a7) in
          M[a8] := F9;
          A := M[208A];
          H := 20;
          L := 8A;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0010);
        }
      } else {
        let:16 a9 = (-1 + (SPH,SPL)) in
        M[a9] := 06;
        let:16 a10 = (-1 + a9) in
        M[a10] := FC;
        #return-to: 06FC
        #0742
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a10) in
            M[a11] := 07;
            let:16 a12 = (-1 + a11) in
            M[a12] := 42;
            A := M[208A];
            H := 20;
            L := 8A;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a10) in
            M[a13] := 07;
            let:16 a14 = (-1 + a13) in
            M[a14] := 42;
            A := M[208A];
            H := 20;
            L := 8A;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump (0010);
          }
        } else {
          #0745
          let:16 a15 = (-1 + a10) in
          M[a15] := 07;
          let:16 a16 = (-1 + a15) in
          M[a16] := 48;
          #return-to: 0748
          #1A3B
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a16) in
              M[a17] := 1A;
              let:16 a18 = (-1 + a17) in
              M[a18] := 3B;
              A := M[208A];
              H := 20;
              L := 87;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a1[7:0][7];
              FlagZ := is_zero(a1[7:0]);
              FlagA := a4[7:0][4];
              FlagP := parity(a1[7:0]);
              FlagCY := !a1[15:8][0];
              jump (0008);
            } else {
              let:16 a19 = (-1 + a16) in
              M[a19] := 1A;
              let:16 a20 = (-1 + a19) in
              M[a20] := 3B;
              A := M[208A];
              H := 20;
              L := 87;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a1[7:0][7];
              FlagZ := is_zero(a1[7:0]);
              FlagA := a4[7:0][4];
              FlagP := parity(a1[7:0]);
              FlagCY := !a1[15:8][0];
              jump (0010);
            }
          } else {
            #1A3C
            #1A3D
            #1A3E
            #1A3F
            #1A40
            #1A41
            #1A42
            #1A43
            #1A44
            #1A45
            #1A46
            let:16 a21 = (1 + a16) in
            let:16 a22 = (1 + a21) in
            A := M[2089];
            B := M[208B];
            C := M[208A];
            D := M[2088];
            E := M[2087];
            H := M[208A];
            L := M[2089];
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump ((M[a21],M[a16]));
          }
        }
      }
    } else {
      #06D0
      let:16 a23 = addWithCarry(!false,M[208A],~E1) in
      let:8 a24 = (M[208A] & 0F) in
      let:8 a25 = (~E1 & 0F) in
      let:16 a26 = addWithCarry(!false,a24,a25) in
      #06D2
      if (!!a23[15:8][0]) {
        #06F9
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a27 = (-1 + (SPH,SPL)) in
            M[a27] := 06;
            let:16 a28 = (-1 + a27) in
            M[a28] := F9;
            A := M[208A];
            H := 20;
            L := 8A;
            SPH := a28[15:8];
            SPL := a28[7:0];
            FlagS := a23[7:0][7];
            FlagZ := is_zero(a23[7:0]);
            FlagA := a26[7:0][4];
            FlagP := parity(a23[7:0]);
            FlagCY := !a23[15:8][0];
            jump (0008);
          } else {
            let:16 a29 = (-1 + (SPH,SPL)) in
            M[a29] := 06;
            let:16 a30 = (-1 + a29) in
            M[a30] := F9;
            A := M[208A];
            H := 20;
            L := 8A;
            SPH := a30[15:8];
            SPL := a30[7:0];
            FlagS := a23[7:0][7];
            FlagZ := is_zero(a23[7:0]);
            FlagA := a26[7:0][4];
            FlagP := parity(a23[7:0]);
            FlagCY := !a23[15:8][0];
            jump (0010);
          }
        } else {
          let:16 a31 = (-1 + (SPH,SPL)) in
          M[a31] := 06;
          let:16 a32 = (-1 + a31) in
          M[a32] := FC;
          #return-to: 06FC
          #0742
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a33 = (-1 + a32) in
              M[a33] := 07;
              let:16 a34 = (-1 + a33) in
              M[a34] := 42;
              A := M[208A];
              H := 20;
              L := 8A;
              SPH := a34[15:8];
              SPL := a34[7:0];
              FlagS := a23[7:0][7];
              FlagZ := is_zero(a23[7:0]);
              FlagA := a26[7:0][4];
              FlagP := parity(a23[7:0]);
              FlagCY := !a23[15:8][0];
              jump (0008);
            } else {
              let:16 a35 = (-1 + a32) in
              M[a35] := 07;
              let:16 a36 = (-1 + a35) in
              M[a36] := 42;
              A := M[208A];
              H := 20;
              L := 8A;
              SPH := a36[15:8];
              SPL := a36[7:0];
              FlagS := a23[7:0][7];
              FlagZ := is_zero(a23[7:0]);
              FlagA := a26[7:0][4];
              FlagP := parity(a23[7:0]);
              FlagCY := !a23[15:8][0];
              jump (0010);
            }
          } else {
            #0745
            let:16 a37 = (-1 + a32) in
            M[a37] := 07;
            let:16 a38 = (-1 + a37) in
            M[a38] := 48;
            #return-to: 0748
            #1A3B
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a39 = (-1 + a38) in
                M[a39] := 1A;
                let:16 a40 = (-1 + a39) in
                M[a40] := 3B;
                A := M[208A];
                H := 20;
                L := 87;
                SPH := a40[15:8];
                SPL := a40[7:0];
                FlagS := a23[7:0][7];
                FlagZ := is_zero(a23[7:0]);
                FlagA := a26[7:0][4];
                FlagP := parity(a23[7:0]);
                FlagCY := !a23[15:8][0];
                jump (0008);
              } else {
                let:16 a41 = (-1 + a38) in
                M[a41] := 1A;
                let:16 a42 = (-1 + a41) in
                M[a42] := 3B;
                A := M[208A];
                H := 20;
                L := 87;
                SPH := a42[15:8];
                SPL := a42[7:0];
                FlagS := a23[7:0][7];
                FlagZ := is_zero(a23[7:0]);
                FlagA := a26[7:0][4];
                FlagP := parity(a23[7:0]);
                FlagCY := !a23[15:8][0];
                jump (0010);
              }
            } else {
              #1A3C
              #1A3D
              #1A3E
              #1A3F
              #1A40
              #1A41
              #1A42
              #1A43
              #1A44
              #1A45
              #1A46
              let:16 a43 = (1 + a38) in
              let:16 a44 = (1 + a43) in
              A := M[2089];
              B := M[208B];
              C := M[208A];
              D := M[2088];
              E := M[2087];
              H := M[208A];
              L := M[2089];
              SPH := a44[15:8];
              SPL := a44[7:0];
              FlagS := a23[7:0][7];
              FlagZ := is_zero(a23[7:0]);
              FlagA := a26[7:0][4];
              FlagP := parity(a23[7:0]);
              FlagCY := !a23[15:8][0];
              jump ((M[a43],M[a38]));
            }
          }
        }
      } else {
        #06D5
        let:16 a45 = (1 + (SPH,SPL)) in
        let:16 a46 = (1 + a45) in
        A := M[208A];
        H := 20;
        L := 8A;
        SPH := a46[15:8];
        SPL := a46[7:0];
        FlagS := a23[7:0][7];
        FlagZ := is_zero(a23[7:0]);
        FlagA := a26[7:0][4];
        FlagP := parity(a23[7:0]);
        FlagCY := !a23[15:8][0];
        jump ((M[a45],M[(SPH,SPL)]));
      }
    }

06DB:

    let:16 a1 = (1 + (H,L)) in
    #06DC
    let:16 a2 = addWithCarry(!true,M[a1],~00) in
    let:8 a3 = (M[a1] & 0F) in
    let:8 a4 = (~00 & 0F) in
    let:16 a5 = addWithCarry(!true,a3,a4) in
    M[a1] := a2[7:0];
    #06DD
    #06DE
    let:16 a6 = addWithCarry(!false,M[a1],~1F) in
    let:8 a7 = (M[a1] & 0F) in
    let:8 a8 = (~1F & 0F) in
    let:16 a9 = addWithCarry(!false,a7,a8) in
    #06E0
    if (is_zero(a6[7:0])) {
      #074B
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a10 = (-1 + (SPH,SPL)) in
          M[a10] := 07;
          let:16 a11 = (-1 + a10) in
          M[a11] := 4B;
          A := M[a1];
          H := a1[15:8];
          L := a1[7:0];
          SPH := a11[15:8];
          SPL := a11[7:0];
          FlagS := a6[7:0][7];
          FlagZ := is_zero(a6[7:0]);
          FlagA := a9[7:0][4];
          FlagP := parity(a6[7:0]);
          FlagCY := !a6[15:8][0];
          jump (0008);
        } else {
          let:16 a12 = (-1 + (SPH,SPL)) in
          M[a12] := 07;
          let:16 a13 = (-1 + a12) in
          M[a13] := 4B;
          A := M[a1];
          H := a1[15:8];
          L := a1[7:0];
          SPH := a13[15:8];
          SPL := a13[7:0];
          FlagS := a6[7:0][7];
          FlagZ := is_zero(a6[7:0]);
          FlagA := a9[7:0][4];
          FlagP := parity(a6[7:0]);
          FlagCY := !a6[15:8][0];
          jump (0010);
        }
      } else {
        #074D
        #0750
        #0751
        let:8 a14 = (10 | M[2098]) in
        #0752
        M[2098] := a14;
        #0753
        let:16 a15 = (-1 + (SPH,SPL)) in
        M[a15] := 07;
        let:16 a16 = (-1 + a15) in
        M[a16] := 56;
        #return-to: 0756
        #1770
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a17 = (-1 + a16) in
            M[a17] := 17;
            let:16 a18 = (-1 + a17) in
            M[a18] := 70;
            A := a14;
            B := 10;
            H := 20;
            L := 98;
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a14[7];
            FlagZ := is_zero(a14);
            FlagA := false;
            FlagP := parity(a14);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a19 = (-1 + a16) in
            M[a19] := 17;
            let:16 a20 = (-1 + a19) in
            M[a20] := 70;
            A := a14;
            B := 10;
            H := 20;
            L := 98;
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a14[7];
            FlagZ := is_zero(a14);
            FlagA := false;
            FlagP := parity(a14);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:8 a21 = (30 & a14) in
          let:8 a22 = (30 | a14) in
          #1772
          sound_control(FleetMovement1,a21[0]);
          sound_control(FleetMovement2,a21[1]);
          sound_control(FleetMovement3,a21[2]);
          sound_control(FleetMovement4,a21[3]);
          sound_control(UfoHit,a21[4]);
          #1774
          let:16 a23 = (1 + a16) in
          let:16 a24 = (1 + a23) in
          A := a21;
          B := 10;
          H := 20;
          L := 98;
          SPH := a24[15:8];
          SPL := a24[7:0];
          FlagS := a21[7];
          FlagZ := is_zero(a21);
          FlagA := a22[3];
          FlagP := parity(a21);
          FlagCY := false;
          jump ((M[a23],M[a16]));
        }
      }
    } else {
      #06E3
      let:16 a25 = addWithCarry(!false,M[a1],~18) in
      let:8 a26 = (M[a1] & 0F) in
      let:8 a27 = (~18 & 0F) in
      let:16 a28 = addWithCarry(!false,a26,a27) in
      #06E5
      if (is_zero(a25[7:0])) {
        #070C
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a29 = (-1 + (SPH,SPL)) in
            M[a29] := 07;
            let:16 a30 = (-1 + a29) in
            M[a30] := 0C;
            A := M[a1];
            H := a1[15:8];
            L := a1[7:0];
            SPH := a30[15:8];
            SPL := a30[7:0];
            FlagS := a25[7:0][7];
            FlagZ := is_zero(a25[7:0]);
            FlagA := a28[7:0][4];
            FlagP := parity(a25[7:0]);
            FlagCY := !a25[15:8][0];
            jump (0008);
          } else {
            let:16 a31 = (-1 + (SPH,SPL)) in
            M[a31] := 07;
            let:16 a32 = (-1 + a31) in
            M[a32] := 0C;
            A := M[a1];
            H := a1[15:8];
            L := a1[7:0];
            SPH := a32[15:8];
            SPL := a32[7:0];
            FlagS := a25[7:0][7];
            FlagZ := is_zero(a25[7:0]);
            FlagA := a28[7:0][4];
            FlagP := parity(a25[7:0]);
            FlagCY := !a25[15:8][0];
            jump (0010);
          }
        } else {
          #070E
          M[20F1] := 01;
          #0711
          #0714
          #0715
          #0717
          #071A
          #071D
          #071E
          let:16 a33 = addWithCarry(!false,05,~M[(M[208E],M[208D])]) in
          let:8 a34 = (05 & 0F) in
          let:8 a35 = (~M[(M[208E],M[208D])] & 0F) in
          let:16 a36 = addWithCarry(!false,a34,a35) in
          #071F
          if (is_zero(a33[7:0])) {
            #0728
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a37 = (-1 + (SPH,SPL)) in
                M[a37] := 07;
                let:16 a38 = (-1 + a37) in
                M[a38] := 28;
                A := 05;
                B := M[(M[208E],M[208D])];
                C := 04;
                D := 1D;
                E := 4C;
                H := 1D;
                L := 50;
                SPH := a38[15:8];
                SPL := a38[7:0];
                FlagS := a33[7:0][7];
                FlagZ := is_zero(a33[7:0]);
                FlagA := a36[7:0][4];
                FlagP := parity(a33[7:0]);
                FlagCY := !a33[15:8][0];
                jump (0008);
              } else {
                let:16 a39 = (-1 + (SPH,SPL)) in
                M[a39] := 07;
                let:16 a40 = (-1 + a39) in
                M[a40] := 28;
                A := 05;
                B := M[(M[208E],M[208D])];
                C := 04;
                D := 1D;
                E := 4C;
                H := 1D;
                L := 50;
                SPH := a40[15:8];
                SPL := a40[7:0];
                FlagS := a33[7:0][7];
                FlagZ := is_zero(a33[7:0]);
                FlagA := a36[7:0][4];
                FlagP := parity(a33[7:0]);
                FlagCY := !a33[15:8][0];
                jump (0010);
              }
            } else {
              #0729
              M[2087] := 94;
              #072C
              #072E
              #072F
              let:17 a41 = add17((00,M[(M[208E],M[208D])]),(00,M[(M[208E],M[208D])])) in
              #0730
              let:17 a42 = add17(a41[15:0],a41[15:0]) in
              #0731
              let:17 a43 = add17(a42[15:0],a42[15:0]) in
              #0732
              let:17 a44 = add17(a43[15:0],a43[15:0]) in
              #0733
              M[20F2] := a44[15:0][7:0];
              M[20F3] := a44[15:0][15:8];
              #0736
              let:16 a45 = (-1 + (SPH,SPL)) in
              M[a45] := 07;
              let:16 a46 = (-1 + a45) in
              M[a46] := 39;
              #return-to: 0739
              #0742
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a47 = (-1 + a46) in
                  M[a47] := 07;
                  let:16 a48 = (-1 + a47) in
                  M[a48] := 42;
                  A := 94;
                  B := M[(M[208E],M[208D])];
                  C := 04;
                  D := 1D;
                  E := 4C;
                  H := a44[15:0][15:8];
                  L := a44[15:0][7:0];
                  SPH := a48[15:8];
                  SPL := a48[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a44[16];
                  jump (0008);
                } else {
                  let:16 a49 = (-1 + a46) in
                  M[a49] := 07;
                  let:16 a50 = (-1 + a49) in
                  M[a50] := 42;
                  A := 94;
                  B := M[(M[208E],M[208D])];
                  C := 04;
                  D := 1D;
                  E := 4C;
                  H := a44[15:0][15:8];
                  L := a44[15:0][7:0];
                  SPH := a50[15:8];
                  SPL := a50[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a44[16];
                  jump (0010);
                }
              } else {
                #0745
                let:16 a51 = (-1 + a46) in
                M[a51] := 07;
                let:16 a52 = (-1 + a51) in
                M[a52] := 48;
                #return-to: 0748
                #1A3B
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a53 = (-1 + a52) in
                    M[a53] := 1A;
                    let:16 a54 = (-1 + a53) in
                    M[a54] := 3B;
                    A := 94;
                    B := M[(M[208E],M[208D])];
                    C := 04;
                    D := 1D;
                    E := 4C;
                    H := 20;
                    L := 87;
                    SPH := a54[15:8];
                    SPL := a54[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := a44[16];
                    jump (0008);
                  } else {
                    let:16 a55 = (-1 + a52) in
                    M[a55] := 1A;
                    let:16 a56 = (-1 + a55) in
                    M[a56] := 3B;
                    A := 94;
                    B := M[(M[208E],M[208D])];
                    C := 04;
                    D := 1D;
                    E := 4C;
                    H := 20;
                    L := 87;
                    SPH := a56[15:8];
                    SPL := a56[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := a44[16];
                    jump (0010);
                  }
                } else {
                  #1A3C
                  #1A3D
                  #1A3E
                  #1A3F
                  #1A40
                  #1A41
                  #1A42
                  #1A43
                  #1A44
                  #1A45
                  #1A46
                  let:16 a57 = (1 + a52) in
                  let:16 a58 = (1 + a57) in
                  A := M[2089];
                  B := M[208B];
                  C := M[208A];
                  D := M[2088];
                  E := M[2087];
                  H := M[208A];
                  L := M[2089];
                  SPH := a58[15:8];
                  SPL := a58[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a44[16];
                  jump ((M[a57],M[a52]));
                }
              }
            }
          } else {
            #0722
            #0723
            #0724
            let:16 a59 = addWithCarry(!true,04,~00) in
            let:8 a60 = (04 & 0F) in
            let:8 a61 = (~00 & 0F) in
            let:16 a62 = addWithCarry(!true,a60,a61) in
            #0725
            if (!is_zero(a59[7:0])) {
              A := 05;
              B := M[(M[208E],M[208D])];
              C := a59[7:0];
              D := 1D;
              E := 4D;
              H := 1D;
              L := 51;
              FlagS := a59[7:0][7];
              FlagZ := is_zero(a59[7:0]);
              FlagA := a62[7:0][4];
              FlagP := parity(a59[7:0]);
              FlagCY := !a33[15:8][0];
              jump (071D);
            } else {
              #0728
              #0729
              M[2087] := 97;
              #072C
              #072E
              #072F
              let:17 a63 = add17((00,M[(M[208E],M[208D])]),(00,M[(M[208E],M[208D])])) in
              #0730
              let:17 a64 = add17(a63[15:0],a63[15:0]) in
              #0731
              let:17 a65 = add17(a64[15:0],a64[15:0]) in
              #0732
              let:17 a66 = add17(a65[15:0],a65[15:0]) in
              #0733
              M[20F2] := a66[15:0][7:0];
              M[20F3] := a66[15:0][15:8];
              #0736
              let:16 a67 = (-1 + (SPH,SPL)) in
              M[a67] := 07;
              let:16 a68 = (-1 + a67) in
              M[a68] := 39;
              #return-to: 0739
              #0742
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a69 = (-1 + a68) in
                  M[a69] := 07;
                  let:16 a70 = (-1 + a69) in
                  M[a70] := 42;
                  A := 97;
                  B := M[(M[208E],M[208D])];
                  C := a59[7:0];
                  D := 1D;
                  E := 4D;
                  H := a66[15:0][15:8];
                  L := a66[15:0][7:0];
                  SPH := a70[15:8];
                  SPL := a70[7:0];
                  FlagS := a59[7:0][7];
                  FlagZ := is_zero(a59[7:0]);
                  FlagA := a62[7:0][4];
                  FlagP := parity(a59[7:0]);
                  FlagCY := a66[16];
                  jump (0008);
                } else {
                  let:16 a71 = (-1 + a68) in
                  M[a71] := 07;
                  let:16 a72 = (-1 + a71) in
                  M[a72] := 42;
                  A := 97;
                  B := M[(M[208E],M[208D])];
                  C := a59[7:0];
                  D := 1D;
                  E := 4D;
                  H := a66[15:0][15:8];
                  L := a66[15:0][7:0];
                  SPH := a72[15:8];
                  SPL := a72[7:0];
                  FlagS := a59[7:0][7];
                  FlagZ := is_zero(a59[7:0]);
                  FlagA := a62[7:0][4];
                  FlagP := parity(a59[7:0]);
                  FlagCY := a66[16];
                  jump (0010);
                }
              } else {
                #0745
                let:16 a73 = (-1 + a68) in
                M[a73] := 07;
                let:16 a74 = (-1 + a73) in
                M[a74] := 48;
                #return-to: 0748
                #1A3B
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a75 = (-1 + a74) in
                    M[a75] := 1A;
                    let:16 a76 = (-1 + a75) in
                    M[a76] := 3B;
                    A := 97;
                    B := M[(M[208E],M[208D])];
                    C := a59[7:0];
                    D := 1D;
                    E := 4D;
                    H := 20;
                    L := 87;
                    SPH := a76[15:8];
                    SPL := a76[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := a66[16];
                    jump (0008);
                  } else {
                    let:16 a77 = (-1 + a74) in
                    M[a77] := 1A;
                    let:16 a78 = (-1 + a77) in
                    M[a78] := 3B;
                    A := 97;
                    B := M[(M[208E],M[208D])];
                    C := a59[7:0];
                    D := 1D;
                    E := 4D;
                    H := 20;
                    L := 87;
                    SPH := a78[15:8];
                    SPL := a78[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := a66[16];
                    jump (0010);
                  }
                } else {
                  #1A3C
                  #1A3D
                  #1A3E
                  #1A3F
                  #1A40
                  #1A41
                  #1A42
                  #1A43
                  #1A44
                  #1A45
                  #1A46
                  let:16 a79 = (1 + a74) in
                  let:16 a80 = (1 + a79) in
                  A := M[2089];
                  B := M[208B];
                  C := M[208A];
                  D := M[2088];
                  E := M[2087];
                  H := M[208A];
                  L := M[2089];
                  SPH := a80[15:8];
                  SPL := a80[7:0];
                  FlagS := a59[7:0][7];
                  FlagZ := is_zero(a59[7:0]);
                  FlagA := a62[7:0][4];
                  FlagP := parity(a59[7:0]);
                  FlagCY := a66[16];
                  jump ((M[a79],M[a74]));
                }
              }
            }
          }
        }
      } else {
        #06E8
        let:8 a81 = (M[a1] & M[a1]) in
        let:8 a82 = (M[a1] | M[a1]) in
        #06E9
        if (!is_zero(a81)) {
          let:16 a83 = (1 + (SPH,SPL)) in
          let:16 a84 = (1 + a83) in
          A := a81;
          H := a1[15:8];
          L := a1[7:0];
          SPH := a84[15:8];
          SPL := a84[7:0];
          FlagS := a81[7];
          FlagZ := is_zero(a81);
          FlagA := a82[3];
          FlagP := parity(a81);
          FlagCY := false;
          jump ((M[a83],M[(SPH,SPL)]));
        } else {
          #06EA
          #06EC
          #06EF
          #06F0
          let:8 a85 = (EF & M[2098]) in
          let:8 a86 = (EF | M[2098]) in
          #06F1
          M[2098] := a85;
          #06F2
          let:8 a87 = (20 & a85) in
          let:8 a88 = (20 | a85) in
          #06F4
          sound_control(FleetMovement1,a87[0]);
          sound_control(FleetMovement2,a87[1]);
          sound_control(FleetMovement3,a87[2]);
          sound_control(FleetMovement4,a87[3]);
          sound_control(UfoHit,a87[4]);
          #06F6
          #06F7
          #06F8
          #06F9
          let:16 a89 = (-1 + (SPH,SPL)) in
          M[a89] := 06;
          let:16 a90 = (-1 + a89) in
          M[a90] := FC;
          #return-to: 06FC
          #0742
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a91 = (-1 + a90) in
              M[a91] := 07;
              let:16 a92 = (-1 + a91) in
              M[a92] := 42;
              A := a87;
              B := EF;
              H := 20;
              L := 98;
              SPH := a92[15:8];
              SPL := a92[7:0];
              FlagS := a87[7];
              FlagZ := is_zero(a87);
              FlagA := a88[3];
              FlagP := parity(a87);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a93 = (-1 + a90) in
              M[a93] := 07;
              let:16 a94 = (-1 + a93) in
              M[a94] := 42;
              A := a87;
              B := EF;
              H := 20;
              L := 98;
              SPH := a94[15:8];
              SPL := a94[7:0];
              FlagS := a87[7];
              FlagZ := is_zero(a87);
              FlagA := a88[3];
              FlagP := parity(a87);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #0745
            let:16 a95 = (-1 + a90) in
            M[a95] := 07;
            let:16 a96 = (-1 + a95) in
            M[a96] := 48;
            #return-to: 0748
            #1A3B
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a97 = (-1 + a96) in
                M[a97] := 1A;
                let:16 a98 = (-1 + a97) in
                M[a98] := 3B;
                A := a87;
                B := EF;
                H := 20;
                L := 87;
                SPH := a98[15:8];
                SPL := a98[7:0];
                FlagS := a87[7];
                FlagZ := is_zero(a87);
                FlagA := a88[3];
                FlagP := parity(a87);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a99 = (-1 + a96) in
                M[a99] := 1A;
                let:16 a100 = (-1 + a99) in
                M[a100] := 3B;
                A := a87;
                B := EF;
                H := 20;
                L := 87;
                SPH := a100[15:8];
                SPL := a100[7:0];
                FlagS := a87[7];
                FlagZ := is_zero(a87);
                FlagA := a88[3];
                FlagP := parity(a87);
                FlagCY := false;
                jump (0010);
              }
            } else {
              #1A3C
              #1A3D
              #1A3E
              #1A3F
              #1A40
              #1A41
              #1A42
              #1A43
              #1A44
              #1A45
              #1A46
              let:16 a101 = (1 + a96) in
              let:16 a102 = (1 + a101) in
              A := M[2089];
              B := M[208B];
              C := M[208A];
              D := M[2088];
              E := M[2087];
              H := M[208A];
              L := M[2089];
              SPH := a102[15:8];
              SPL := a102[7:0];
              FlagS := a87[7];
              FlagZ := is_zero(a87);
              FlagA := a88[3];
              FlagP := parity(a87);
              FlagCY := false;
              jump ((M[a101],M[a96]));
            }
          }
        }
      }
    }

06FC:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 06;
    let:16 a2 = (-1 + a1) in
    M[a2] := FF;
    #return-to: 06FF
    #14CB
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 14;
        let:16 a4 = (-1 + a3) in
        M[a4] := CB;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 14;
        let:16 a6 = (-1 + a5) in
        M[a6] := CB;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:8 a7 = (A ^ A) in
      #14CC
      let:16 a8 = (-1 + a2) in
      M[a8] := B;
      let:16 a9 = (-1 + a8) in
      M[a9] := C;
      #14CD
      M[(H,L)] := a7;
      #14CE
      #14D1
      let:17 a10 = add17(0020,(H,L)) in
      #14D2
      let:16 a11 = (1 + a9) in
      let:16 a12 = (1 + a11) in
      #14D3
      let:16 a13 = addWithCarry(!true,M[a11],~00) in
      let:8 a14 = (M[a11] & 0F) in
      let:8 a15 = (~00 & 0F) in
      let:16 a16 = addWithCarry(!true,a14,a15) in
      #14D4
      if (!is_zero(a13[7:0])) {
        A := a7;
        B := a13[7:0];
        C := M[a9];
        H := a10[15:0][15:8];
        L := a10[15:0][7:0];
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a13[7:0][7];
        FlagZ := is_zero(a13[7:0]);
        FlagA := a16[7:0][4];
        FlagP := parity(a13[7:0]);
        FlagCY := a10[16];
        jump (14CC);
      } else {
        #14D7
        let:16 a17 = (1 + a12) in
        let:16 a18 = (1 + a17) in
        A := a7;
        B := a13[7:0];
        C := M[a9];
        H := a10[15:0][15:8];
        L := a10[15:0][7:0];
        SPH := a18[15:8];
        SPL := a18[7:0];
        FlagS := a13[7:0][7];
        FlagZ := is_zero(a13[7:0]);
        FlagA := a16[7:0][4];
        FlagP := parity(a13[7:0]);
        FlagCY := a10[16];
        jump ((M[a17],M[a12]));
      }
    }

06FF:

    #0702
    #0704
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := 07;
    #return-to: 0707
    #075F
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 07;
        let:16 a4 = (-1 + a3) in
        M[a4] := 5F;
        B := 0A;
        H := 20;
        L := 83;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 07;
        let:16 a6 = (-1 + a5) in
        M[a6] := 5F;
        B := 0A;
        H := 20;
        L := 83;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0762
      #1A32
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 1A;
          let:16 a8 = (-1 + a7) in
          M[a8] := 32;
          B := 0A;
          D := 1B;
          E := 83;
          H := 20;
          L := 83;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 1A;
          let:16 a10 = (-1 + a9) in
          M[a10] := 32;
          B := 0A;
          D := 1B;
          E := 83;
          H := 20;
          L := 83;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1A33
        M[2083] := 00;
        #1A34
        #1A35
        #1A36
        let:16 a11 = addWithCarry(!true,0A,~00) in
        let:8 a12 = (0A & 0F) in
        let:8 a13 = (~00 & 0F) in
        let:16 a14 = addWithCarry(!true,a12,a13) in
        #1A37
        if (!is_zero(a11[7:0])) {
          A := 00;
          B := a11[7:0];
          D := 1B;
          E := 84;
          H := 20;
          L := 84;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump (1A32);
        } else {
          #1A3A
          let:16 a15 = (1 + a2) in
          let:16 a16 = (1 + a15) in
          A := 00;
          B := a11[7:0];
          D := 1B;
          E := 84;
          H := 20;
          L := 84;
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump ((M[a15],M[a2]));
        }
      }
    }

0707:

    #0709
    #19DC
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 19;
        let:16 a2 = (-1 + a1) in
        M[a2] := DC;
        B := FE;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := DC;
        B := FE;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      #19DF
      let:8 a5 = (FE & M[2094]) in
      let:8 a6 = (FE | M[2094]) in
      #19E0
      M[2094] := a5;
      #19E3
      sound_control(Ufo,a5[0]);
      sound_control(Shot,a5[1]);
      sound_control(PlayerDie,a5[2]);
      sound_control(InvaderDie,a5[3]);
      sound_control(ExtraLife,a5[4]);
      #19E5
      let:16 a7 = (1 + (SPH,SPL)) in
      let:16 a8 = (1 + a7) in
      A := a5;
      B := FE;
      SPH := a8[15:8];
      SPL := a8[7:0];
      FlagS := a5[7];
      FlagZ := is_zero(a5);
      FlagA := a6[3];
      FlagP := parity(a5);
      FlagCY := false;
      jump ((M[a7],M[(SPH,SPL)]));
    }

0739:

    #08F1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 08;
        let:16 a2 = (-1 + a1) in
        M[a2] := F1;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 08;
        let:16 a4 = (-1 + a3) in
        M[a4] := F1;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      #08F3
      #08F4
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := D;
      let:16 a6 = (-1 + a5) in
      M[a6] := E;
      #08F5
      let:16 a7 = (-1 + a6) in
      M[a7] := 08;
      let:16 a8 = (-1 + a7) in
      M[a8] := F8;
      #return-to: 08F8
      #08FF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 08;
          let:16 a10 = (-1 + a9) in
          M[a10] := FF;
          A := M[(D,E)];
          C := 03;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 08;
          let:16 a12 = (-1 + a11) in
          M[a12] := FF;
          A := M[(D,E)];
          C := 03;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #0902
        let:16 a13 = (-1 + a8) in
        M[a13] := H;
        let:16 a14 = (-1 + a13) in
        M[a14] := L;
        #0903
        #0905
        #0906
        let:17 a15 = add17((00,M[(D,E)]),(00,M[(D,E)])) in
        #0907
        let:17 a16 = add17(a15[15:0],a15[15:0]) in
        #0908
        let:17 a17 = add17(a16[15:0],a16[15:0]) in
        #0909
        let:17 a18 = add17(1E00,a17[15:0]) in
        #090A
        #090B
        let:16 a19 = (1 + a14) in
        let:16 a20 = (1 + a19) in
        #090C
        #090E
        #0910
        #1439
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a21 = (-1 + a20) in
            M[a21] := 14;
            let:16 a22 = (-1 + a21) in
            M[a22] := 39;
            A := M[(D,E)];
            B := 08;
            C := 03;
            D := a18[15:0][15:8];
            E := a18[15:0][7:0];
            H := M[a19];
            L := M[a14];
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagCY := a18[16];
            jump (0008);
          } else {
            let:16 a23 = (-1 + a20) in
            M[a23] := 14;
            let:16 a24 = (-1 + a23) in
            M[a24] := 39;
            A := M[(D,E)];
            B := 08;
            C := 03;
            D := a18[15:0][15:8];
            E := a18[15:0][7:0];
            H := M[a19];
            L := M[a14];
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagCY := a18[16];
            jump (0010);
          }
        } else {
          let:16 a25 = (-1 + a20) in
          M[a25] := 08;
          let:16 a26 = (-1 + a25) in
          M[a26] := 03;
          #143A
          #143B
          M[(M[a19],M[a14])] := M[a18[15:0]];
          #143C
          let:16 a27 = (1 + a18[15:0]) in
          #143D
          #1440
          let:17 a28 = add17(0020,(M[a19],M[a14])) in
          #1441
          let:16 a29 = (1 + a26) in
          let:16 a30 = (1 + a29) in
          #1442
          let:16 a31 = addWithCarry(!true,M[a29],~00) in
          let:8 a32 = (M[a29] & 0F) in
          let:8 a33 = (~00 & 0F) in
          let:16 a34 = addWithCarry(!true,a32,a33) in
          #1443
          if (!is_zero(a31[7:0])) {
            A := M[a18[15:0]];
            B := a31[7:0];
            C := M[a26];
            D := a27[15:8];
            E := a27[7:0];
            H := a28[15:0][15:8];
            L := a28[15:0][7:0];
            SPH := a30[15:8];
            SPL := a30[7:0];
            FlagS := a31[7:0][7];
            FlagZ := is_zero(a31[7:0]);
            FlagA := a34[7:0][4];
            FlagP := parity(a31[7:0]);
            FlagCY := a28[16];
            jump (1439);
          } else {
            #1446
            let:16 a35 = (1 + a30) in
            let:16 a36 = (1 + a35) in
            A := M[a18[15:0]];
            B := a31[7:0];
            C := M[a26];
            D := a27[15:8];
            E := a27[7:0];
            H := a28[15:0][15:8];
            L := a28[15:0][7:0];
            SPH := a36[15:8];
            SPL := a36[7:0];
            FlagS := a31[7:0][7];
            FlagZ := is_zero(a31[7:0]);
            FlagA := a34[7:0][4];
            FlagP := parity(a31[7:0]);
            FlagCY := a28[16];
            jump ((M[a35],M[a30]));
          }
        }
      }
    }

073F:

    #1439
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 14;
        let:16 a2 = (-1 + a1) in
        M[a2] := 39;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 14;
        let:16 a4 = (-1 + a3) in
        M[a4] := 39;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := B;
      let:16 a6 = (-1 + a5) in
      M[a6] := C;
      #143A
      #143B
      M[(H,L)] := M[(D,E)];
      #143C
      let:16 a7 = (1 + (D,E)) in
      #143D
      #1440
      let:17 a8 = add17(0020,(H,L)) in
      #1441
      let:16 a9 = (1 + a6) in
      let:16 a10 = (1 + a9) in
      #1442
      let:16 a11 = addWithCarry(!true,M[a9],~00) in
      let:8 a12 = (M[a9] & 0F) in
      let:8 a13 = (~00 & 0F) in
      let:16 a14 = addWithCarry(!true,a12,a13) in
      #1443
      if (!is_zero(a11[7:0])) {
        A := M[(D,E)];
        B := a11[7:0];
        C := M[a6];
        D := a7[15:8];
        E := a7[7:0];
        H := a8[15:0][15:8];
        L := a8[15:0][7:0];
        SPH := a10[15:8];
        SPL := a10[7:0];
        FlagS := a11[7:0][7];
        FlagZ := is_zero(a11[7:0]);
        FlagA := a14[7:0][4];
        FlagP := parity(a11[7:0]);
        FlagCY := a8[16];
        jump (1439);
      } else {
        #1446
        let:16 a15 = (1 + a10) in
        let:16 a16 = (1 + a15) in
        A := M[(D,E)];
        B := a11[7:0];
        C := M[a6];
        D := a7[15:8];
        E := a7[7:0];
        H := a8[15:0][15:8];
        L := a8[15:0][7:0];
        SPH := a16[15:8];
        SPL := a16[7:0];
        FlagS := a11[7:0][7];
        FlagZ := is_zero(a11[7:0]);
        FlagA := a14[7:0][4];
        FlagP := parity(a11[7:0]);
        FlagCY := a8[16];
        jump ((M[a15],M[a10]));
      }
    }

0748:

    #1A47
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 1A;
        let:16 a2 = (-1 + a1) in
        M[a2] := 47;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 1A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 47;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := B;
      let:16 a6 = (-1 + a5) in
      M[a6] := C;
      #1A48
      #1A4A
      #1A4B
      #1A4C
      #1A4D
      #1A4E
      #1A4F
      #1A50
      let:16 a7 = addWithCarry(!true,03,~00) in
      let:8 a8 = (03 & 0F) in
      let:8 a9 = (~00 & 0F) in
      let:16 a10 = addWithCarry(!true,a8,a9) in
      #1A51
      if (!is_zero(a7[7:0])) {
        A := updateBit((L >> 01),7,H[0]);
        B := a7[7:0];
        H := updateBit((H >> 01),7,FlagCY);
        L := updateBit((L >> 01),7,H[0]);
        SPH := a6[15:8];
        SPL := a6[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := L[0];
        jump (1A4A);
      } else {
        #1A54
        #1A55
        let:8 a11 = (3F & updateBit((H >> 01),7,FlagCY)) in
        let:8 a12 = (3F | updateBit((H >> 01),7,FlagCY)) in
        #1A57
        let:8 a13 = (20 | a11) in
        #1A59
        #1A5A
        let:16 a14 = (1 + a6) in
        let:16 a15 = (1 + a14) in
        #1A5B
        let:16 a16 = (1 + a15) in
        let:16 a17 = (1 + a16) in
        A := a13;
        B := M[a14];
        C := M[a6];
        H := a13;
        L := updateBit((L >> 01),7,H[0]);
        SPH := a17[15:8];
        SPL := a17[7:0];
        FlagS := a13[7];
        FlagZ := is_zero(a13);
        FlagA := false;
        FlagP := parity(a13);
        FlagCY := false;
        jump ((M[a16],M[a15]));
      }
    }

0756:

    #0759
    M[2087] := 7C;
    M[2088] := 1D;
    #075C
    #073C
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 07;
        let:16 a2 = (-1 + a1) in
        M[a2] := 3C;
        H := 1D;
        L := 7C;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 07;
        let:16 a4 = (-1 + a3) in
        M[a4] := 3C;
        H := 1D;
        L := 7C;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 07;
      let:16 a6 = (-1 + a5) in
      M[a6] := 3F;
      #return-to: 073F
      #0742
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 07;
          let:16 a8 = (-1 + a7) in
          M[a8] := 42;
          H := 1D;
          L := 7C;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 07;
          let:16 a10 = (-1 + a9) in
          M[a10] := 42;
          H := 1D;
          L := 7C;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #0745
        let:16 a11 = (-1 + a6) in
        M[a11] := 07;
        let:16 a12 = (-1 + a11) in
        M[a12] := 48;
        #return-to: 0748
        #1A3B
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + a12) in
            M[a13] := 1A;
            let:16 a14 = (-1 + a13) in
            M[a14] := 3B;
            H := 20;
            L := 87;
            SPH := a14[15:8];
            SPL := a14[7:0];
            jump (0008);
          } else {
            let:16 a15 = (-1 + a12) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 3B;
            H := 20;
            L := 87;
            SPH := a16[15:8];
            SPL := a16[7:0];
            jump (0010);
          }
        } else {
          #1A3C
          #1A3D
          #1A3E
          #1A3F
          #1A40
          #1A41
          #1A42
          #1A43
          #1A44
          #1A45
          #1A46
          let:16 a17 = (1 + a12) in
          let:16 a18 = (1 + a17) in
          A := M[2089];
          B := M[208B];
          C := M[208A];
          D := M[2088];
          E := M[2087];
          H := M[208A];
          L := M[2089];
          SPH := a18[15:8];
          SPL := a18[7:0];
          jump ((M[a17],M[a12]));
        }
      }
    }

0771:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := 74;
    #return-to: 0774
    #09D6
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 09;
        let:16 a4 = (-1 + a3) in
        M[a4] := D6;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 09;
        let:16 a6 = (-1 + a5) in
        M[a6] := D6;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #09D9
      M[2402] := 00;
      #09DB
      #09DC
      #09DD
      let:8 a7 = (1F & 03) in
      let:8 a8 = (1F | 03) in
      #09DF
      let:16 a9 = addWithCarry(!false,a7,~1C) in
      let:8 a10 = (a7 & 0F) in
      let:8 a11 = (~1C & 0F) in
      let:16 a12 = addWithCarry(!false,a10,a11) in
      #09E1
      if (!a9[15:8][0]) {
        #09E8
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + a2) in
            M[a13] := 09;
            let:16 a14 = (-1 + a13) in
            M[a14] := E8;
            A := a7;
            H := 24;
            L := 03;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a9[7:0][7];
            FlagZ := is_zero(a9[7:0]);
            FlagA := a12[7:0][4];
            FlagP := parity(a9[7:0]);
            FlagCY := !a9[15:8][0];
            jump (0008);
          } else {
            let:16 a15 = (-1 + a2) in
            M[a15] := 09;
            let:16 a16 = (-1 + a15) in
            M[a16] := E8;
            A := a7;
            H := 24;
            L := 03;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a9[7:0][7];
            FlagZ := is_zero(a9[7:0]);
            FlagA := a12[7:0][4];
            FlagP := parity(a9[7:0]);
            FlagCY := !a9[15:8][0];
            jump (0010);
          }
        } else {
          #09E9
          let:16 a17 = addWithCarry(!false,24,~40) in
          let:8 a18 = (24 & 0F) in
          let:8 a19 = (~40 & 0F) in
          let:16 a20 = addWithCarry(!false,a18,a19) in
          #09EB
          if (!a17[15:8][0]) {
            A := 24;
            H := 24;
            L := 03;
            SPH := a2[15:8];
            SPL := a2[7:0];
            FlagS := a17[7:0][7];
            FlagZ := is_zero(a17[7:0]);
            FlagA := a20[7:0][4];
            FlagP := parity(a17[7:0]);
            FlagCY := !a17[15:8][0];
            jump (09D9);
          } else {
            #09EE
            let:16 a21 = (1 + a2) in
            let:16 a22 = (1 + a21) in
            A := 24;
            H := 24;
            L := 03;
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a17[7:0][7];
            FlagZ := is_zero(a17[7:0]);
            FlagA := a20[7:0][4];
            FlagP := parity(a17[7:0]);
            FlagCY := !a17[15:8][0];
            jump ((M[a21],M[a2]));
          }
        }
      } else {
        #09E4
        #09E7
        let:17 a23 = add17(0006,2403) in
        #09E8
        #09E9
        let:16 a24 = addWithCarry(!false,a23[15:0][15:8],~40) in
        let:8 a25 = (a23[15:0][15:8] & 0F) in
        let:8 a26 = (~40 & 0F) in
        let:16 a27 = addWithCarry(!false,a25,a26) in
        #09EB
        if (!a24[15:8][0]) {
          A := a23[15:0][15:8];
          D := 00;
          E := 06;
          H := a23[15:0][15:8];
          L := a23[15:0][7:0];
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a24[7:0][7];
          FlagZ := is_zero(a24[7:0]);
          FlagA := a27[7:0][4];
          FlagP := parity(a24[7:0]);
          FlagCY := !a24[15:8][0];
          jump (09D9);
        } else {
          #09EE
          let:16 a28 = (1 + a2) in
          let:16 a29 = (1 + a28) in
          A := a23[15:0][15:8];
          D := 00;
          E := 06;
          H := a23[15:0][15:8];
          L := a23[15:0][7:0];
          SPH := a29[15:8];
          SPL := a29[7:0];
          FlagS := a24[7:0][7];
          FlagZ := is_zero(a24[7:0]);
          FlagA := a27[7:0][4];
          FlagP := parity(a24[7:0]);
          FlagCY := !a24[15:8][0];
          jump ((M[a28],M[a2]));
        }
      }
    }

0774:

    #0777
    #077A
    #077C
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := 7F;
    #return-to: 077F
    #08F3
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 08;
        let:16 a4 = (-1 + a3) in
        M[a4] := F3;
        C := 04;
        D := 1F;
        E := F3;
        H := 30;
        L := 13;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 08;
        let:16 a6 = (-1 + a5) in
        M[a6] := F3;
        C := 04;
        D := 1F;
        E := F3;
        H := 30;
        L := 13;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #08F4
      let:16 a7 = (-1 + a2) in
      M[a7] := 1F;
      let:16 a8 = (-1 + a7) in
      M[a8] := F3;
      #08F5
      let:16 a9 = (-1 + a8) in
      M[a9] := 08;
      let:16 a10 = (-1 + a9) in
      M[a10] := F8;
      #return-to: 08F8
      #08FF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a11 = (-1 + a10) in
          M[a11] := 08;
          let:16 a12 = (-1 + a11) in
          M[a12] := FF;
          A := 0F;
          C := 04;
          D := 1F;
          E := F3;
          H := 30;
          L := 13;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0008);
        } else {
          let:16 a13 = (-1 + a10) in
          M[a13] := 08;
          let:16 a14 = (-1 + a13) in
          M[a14] := FF;
          A := 0F;
          C := 04;
          D := 1F;
          E := F3;
          H := 30;
          L := 13;
          SPH := a14[15:8];
          SPL := a14[7:0];
          jump (0010);
        }
      } else {
        #0902
        let:16 a15 = (-1 + a10) in
        M[a15] := 30;
        let:16 a16 = (-1 + a15) in
        M[a16] := 13;
        #0903
        #0905
        #0906
        let:17 a17 = add17(000F,000F) in
        #0907
        let:17 a18 = add17(a17[15:0],a17[15:0]) in
        #0908
        let:17 a19 = add17(a18[15:0],a18[15:0]) in
        #0909
        let:17 a20 = add17(1E00,a19[15:0]) in
        #090A
        #090B
        let:16 a21 = (1 + a16) in
        let:16 a22 = (1 + a21) in
        #090C
        #090E
        #0910
        #1439
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a23 = (-1 + a22) in
            M[a23] := 14;
            let:16 a24 = (-1 + a23) in
            M[a24] := 39;
            A := 0F;
            B := 08;
            C := 04;
            D := a20[15:0][15:8];
            E := a20[15:0][7:0];
            H := M[a21];
            L := M[a16];
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagCY := a20[16];
            jump (0008);
          } else {
            let:16 a25 = (-1 + a22) in
            M[a25] := 14;
            let:16 a26 = (-1 + a25) in
            M[a26] := 39;
            A := 0F;
            B := 08;
            C := 04;
            D := a20[15:0][15:8];
            E := a20[15:0][7:0];
            H := M[a21];
            L := M[a16];
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagCY := a20[16];
            jump (0010);
          }
        } else {
          let:16 a27 = (-1 + a22) in
          M[a27] := 08;
          let:16 a28 = (-1 + a27) in
          M[a28] := 04;
          #143A
          #143B
          M[(M[a21],M[a16])] := M[a20[15:0]];
          #143C
          let:16 a29 = (1 + a20[15:0]) in
          #143D
          #1440
          let:17 a30 = add17(0020,(M[a21],M[a16])) in
          #1441
          let:16 a31 = (1 + a28) in
          let:16 a32 = (1 + a31) in
          #1442
          let:16 a33 = addWithCarry(!true,M[a31],~00) in
          let:8 a34 = (M[a31] & 0F) in
          let:8 a35 = (~00 & 0F) in
          let:16 a36 = addWithCarry(!true,a34,a35) in
          #1443
          if (!is_zero(a33[7:0])) {
            A := M[a20[15:0]];
            B := a33[7:0];
            C := M[a28];
            D := a29[15:8];
            E := a29[7:0];
            H := a30[15:0][15:8];
            L := a30[15:0][7:0];
            SPH := a32[15:8];
            SPL := a32[7:0];
            FlagS := a33[7:0][7];
            FlagZ := is_zero(a33[7:0]);
            FlagA := a36[7:0][4];
            FlagP := parity(a33[7:0]);
            FlagCY := a30[16];
            jump (1439);
          } else {
            #1446
            let:16 a37 = (1 + a32) in
            let:16 a38 = (1 + a37) in
            A := M[a20[15:0]];
            B := a33[7:0];
            C := M[a28];
            D := a29[15:8];
            E := a29[7:0];
            H := a30[15:0][15:8];
            L := a30[15:0][7:0];
            SPH := a38[15:8];
            SPL := a38[7:0];
            FlagS := a33[7:0][7];
            FlagZ := is_zero(a33[7:0]);
            FlagA := a36[7:0][4];
            FlagP := parity(a33[7:0]);
            FlagCY := a30[16];
            jump ((M[a37],M[a32]));
          }
        }
      }
    }

077F:

    #0782
    let:16 a1 = addWithCarry(!true,M[20EB],~00) in
    let:8 a2 = (M[20EB] & 0F) in
    let:8 a3 = (~00 & 0F) in
    let:16 a4 = addWithCarry(!true,a2,a3) in
    #0783
    #0786
    #0788
    if (!is_zero(a1[7:0])) {
      #0857
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 08;
          let:16 a6 = (-1 + a5) in
          M[a6] := 57;
          A := a1[7:0];
          C := 14;
          H := 28;
          L := 10;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 08;
          let:16 a8 = (-1 + a7) in
          M[a8] := 57;
          A := a1[7:0];
          C := 14;
          H := 28;
          L := 10;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0010);
        }
      } else {
        #085A
        let:16 a9 = (-1 + (SPH,SPL)) in
        M[a9] := 08;
        let:16 a10 = (-1 + a9) in
        M[a10] := 5D;
        #return-to: 085D
        #08F3
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a10) in
            M[a11] := 08;
            let:16 a12 = (-1 + a11) in
            M[a12] := F3;
            A := a1[7:0];
            C := 14;
            D := 1A;
            E := BA;
            H := 28;
            L := 10;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            jump (0008);
          } else {
            let:16 a13 = (-1 + a10) in
            M[a13] := 08;
            let:16 a14 = (-1 + a13) in
            M[a14] := F3;
            A := a1[7:0];
            C := 14;
            D := 1A;
            E := BA;
            H := 28;
            L := 10;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            jump (0010);
          }
        } else {
          #08F4
          let:16 a15 = (-1 + a10) in
          M[a15] := 1A;
          let:16 a16 = (-1 + a15) in
          M[a16] := BA;
          #08F5
          let:16 a17 = (-1 + a16) in
          M[a17] := 08;
          let:16 a18 = (-1 + a17) in
          M[a18] := F8;
          #return-to: 08F8
          #08FF
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a19 = (-1 + a18) in
              M[a19] := 08;
              let:16 a20 = (-1 + a19) in
              M[a20] := FF;
              A := 1B;
              C := 14;
              D := 1A;
              E := BA;
              H := 28;
              L := 10;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a1[7:0][7];
              FlagZ := is_zero(a1[7:0]);
              FlagA := a4[7:0][4];
              FlagP := parity(a1[7:0]);
              jump (0008);
            } else {
              let:16 a21 = (-1 + a18) in
              M[a21] := 08;
              let:16 a22 = (-1 + a21) in
              M[a22] := FF;
              A := 1B;
              C := 14;
              D := 1A;
              E := BA;
              H := 28;
              L := 10;
              SPH := a22[15:8];
              SPL := a22[7:0];
              FlagS := a1[7:0][7];
              FlagZ := is_zero(a1[7:0]);
              FlagA := a4[7:0][4];
              FlagP := parity(a1[7:0]);
              jump (0010);
            }
          } else {
            #0902
            let:16 a23 = (-1 + a18) in
            M[a23] := 28;
            let:16 a24 = (-1 + a23) in
            M[a24] := 10;
            #0903
            #0905
            #0906
            let:17 a25 = add17(001B,001B) in
            #0907
            let:17 a26 = add17(a25[15:0],a25[15:0]) in
            #0908
            let:17 a27 = add17(a26[15:0],a26[15:0]) in
            #0909
            let:17 a28 = add17(1E00,a27[15:0]) in
            #090A
            #090B
            let:16 a29 = (1 + a24) in
            let:16 a30 = (1 + a29) in
            #090C
            #090E
            #0910
            #1439
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a31 = (-1 + a30) in
                M[a31] := 14;
                let:16 a32 = (-1 + a31) in
                M[a32] := 39;
                A := 1B;
                B := 08;
                C := 14;
                D := a28[15:0][15:8];
                E := a28[15:0][7:0];
                H := M[a29];
                L := M[a24];
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagS := a1[7:0][7];
                FlagZ := is_zero(a1[7:0]);
                FlagA := a4[7:0][4];
                FlagP := parity(a1[7:0]);
                FlagCY := a28[16];
                jump (0008);
              } else {
                let:16 a33 = (-1 + a30) in
                M[a33] := 14;
                let:16 a34 = (-1 + a33) in
                M[a34] := 39;
                A := 1B;
                B := 08;
                C := 14;
                D := a28[15:0][15:8];
                E := a28[15:0][7:0];
                H := M[a29];
                L := M[a24];
                SPH := a34[15:8];
                SPL := a34[7:0];
                FlagS := a1[7:0][7];
                FlagZ := is_zero(a1[7:0]);
                FlagA := a4[7:0][4];
                FlagP := parity(a1[7:0]);
                FlagCY := a28[16];
                jump (0010);
              }
            } else {
              let:16 a35 = (-1 + a30) in
              M[a35] := 08;
              let:16 a36 = (-1 + a35) in
              M[a36] := 14;
              #143A
              #143B
              M[(M[a29],M[a24])] := M[a28[15:0]];
              #143C
              let:16 a37 = (1 + a28[15:0]) in
              #143D
              #1440
              let:17 a38 = add17(0020,(M[a29],M[a24])) in
              #1441
              let:16 a39 = (1 + a36) in
              let:16 a40 = (1 + a39) in
              #1442
              let:16 a41 = addWithCarry(!true,M[a39],~00) in
              let:8 a42 = (M[a39] & 0F) in
              let:8 a43 = (~00 & 0F) in
              let:16 a44 = addWithCarry(!true,a42,a43) in
              #1443
              if (!is_zero(a41[7:0])) {
                A := M[a28[15:0]];
                B := a41[7:0];
                C := M[a36];
                D := a37[15:8];
                E := a37[7:0];
                H := a38[15:0][15:8];
                L := a38[15:0][7:0];
                SPH := a40[15:8];
                SPL := a40[7:0];
                FlagS := a41[7:0][7];
                FlagZ := is_zero(a41[7:0]);
                FlagA := a44[7:0][4];
                FlagP := parity(a41[7:0]);
                FlagCY := a38[16];
                jump (1439);
              } else {
                #1446
                let:16 a45 = (1 + a40) in
                let:16 a46 = (1 + a45) in
                A := M[a28[15:0]];
                B := a41[7:0];
                C := M[a36];
                D := a37[15:8];
                E := a37[7:0];
                H := a38[15:0][15:8];
                L := a38[15:0][7:0];
                SPH := a46[15:8];
                SPL := a46[7:0];
                FlagS := a41[7:0][7];
                FlagZ := is_zero(a41[7:0]);
                FlagA := a44[7:0][4];
                FlagP := parity(a41[7:0]);
                FlagCY := a38[16];
                jump ((M[a45],M[a40]));
              }
            }
          }
        }
      }
    } else {
      #078B
      #078E
      let:16 a47 = (-1 + (SPH,SPL)) in
      M[a47] := 07;
      let:16 a48 = (-1 + a47) in
      M[a48] := 91;
      #return-to: 0791
      #08F3
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a49 = (-1 + a48) in
          M[a49] := 08;
          let:16 a50 = (-1 + a49) in
          M[a50] := F3;
          A := a1[7:0];
          C := 14;
          D := 1A;
          E := CF;
          H := 28;
          L := 10;
          SPH := a50[15:8];
          SPL := a50[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0008);
        } else {
          let:16 a51 = (-1 + a48) in
          M[a51] := 08;
          let:16 a52 = (-1 + a51) in
          M[a52] := F3;
          A := a1[7:0];
          C := 14;
          D := 1A;
          E := CF;
          H := 28;
          L := 10;
          SPH := a52[15:8];
          SPL := a52[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0010);
        }
      } else {
        #08F4
        let:16 a53 = (-1 + a48) in
        M[a53] := 1A;
        let:16 a54 = (-1 + a53) in
        M[a54] := CF;
        #08F5
        let:16 a55 = (-1 + a54) in
        M[a55] := 08;
        let:16 a56 = (-1 + a55) in
        M[a56] := F8;
        #return-to: 08F8
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a57 = (-1 + a56) in
            M[a57] := 08;
            let:16 a58 = (-1 + a57) in
            M[a58] := FF;
            A := 0E;
            C := 14;
            D := 1A;
            E := CF;
            H := 28;
            L := 10;
            SPH := a58[15:8];
            SPL := a58[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            jump (0008);
          } else {
            let:16 a59 = (-1 + a56) in
            M[a59] := 08;
            let:16 a60 = (-1 + a59) in
            M[a60] := FF;
            A := 0E;
            C := 14;
            D := 1A;
            E := CF;
            H := 28;
            L := 10;
            SPH := a60[15:8];
            SPL := a60[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            jump (0010);
          }
        } else {
          #0902
          let:16 a61 = (-1 + a56) in
          M[a61] := 28;
          let:16 a62 = (-1 + a61) in
          M[a62] := 10;
          #0903
          #0905
          #0906
          let:17 a63 = add17(000E,000E) in
          #0907
          let:17 a64 = add17(a63[15:0],a63[15:0]) in
          #0908
          let:17 a65 = add17(a64[15:0],a64[15:0]) in
          #0909
          let:17 a66 = add17(1E00,a65[15:0]) in
          #090A
          #090B
          let:16 a67 = (1 + a62) in
          let:16 a68 = (1 + a67) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a69 = (-1 + a68) in
              M[a69] := 14;
              let:16 a70 = (-1 + a69) in
              M[a70] := 39;
              A := 0E;
              B := 08;
              C := 14;
              D := a66[15:0][15:8];
              E := a66[15:0][7:0];
              H := M[a67];
              L := M[a62];
              SPH := a70[15:8];
              SPL := a70[7:0];
              FlagS := a1[7:0][7];
              FlagZ := is_zero(a1[7:0]);
              FlagA := a4[7:0][4];
              FlagP := parity(a1[7:0]);
              FlagCY := a66[16];
              jump (0008);
            } else {
              let:16 a71 = (-1 + a68) in
              M[a71] := 14;
              let:16 a72 = (-1 + a71) in
              M[a72] := 39;
              A := 0E;
              B := 08;
              C := 14;
              D := a66[15:0][15:8];
              E := a66[15:0][7:0];
              H := M[a67];
              L := M[a62];
              SPH := a72[15:8];
              SPL := a72[7:0];
              FlagS := a1[7:0][7];
              FlagZ := is_zero(a1[7:0]);
              FlagA := a4[7:0][4];
              FlagP := parity(a1[7:0]);
              FlagCY := a66[16];
              jump (0010);
            }
          } else {
            let:16 a73 = (-1 + a68) in
            M[a73] := 08;
            let:16 a74 = (-1 + a73) in
            M[a74] := 14;
            #143A
            #143B
            M[(M[a67],M[a62])] := M[a66[15:0]];
            #143C
            let:16 a75 = (1 + a66[15:0]) in
            #143D
            #1440
            let:17 a76 = add17(0020,(M[a67],M[a62])) in
            #1441
            let:16 a77 = (1 + a74) in
            let:16 a78 = (1 + a77) in
            #1442
            let:16 a79 = addWithCarry(!true,M[a77],~00) in
            let:8 a80 = (M[a77] & 0F) in
            let:8 a81 = (~00 & 0F) in
            let:16 a82 = addWithCarry(!true,a80,a81) in
            #1443
            if (!is_zero(a79[7:0])) {
              A := M[a66[15:0]];
              B := a79[7:0];
              C := M[a74];
              D := a75[15:8];
              E := a75[7:0];
              H := a76[15:0][15:8];
              L := a76[15:0][7:0];
              SPH := a78[15:8];
              SPL := a78[7:0];
              FlagS := a79[7:0][7];
              FlagZ := is_zero(a79[7:0]);
              FlagA := a82[7:0][4];
              FlagP := parity(a79[7:0]);
              FlagCY := a76[16];
              jump (1439);
            } else {
              #1446
              let:16 a83 = (1 + a78) in
              let:16 a84 = (1 + a83) in
              A := M[a66[15:0]];
              B := a79[7:0];
              C := M[a74];
              D := a75[15:8];
              E := a75[7:0];
              H := a76[15:0][15:8];
              L := a76[15:0][7:0];
              SPH := a84[15:8];
              SPL := a84[7:0];
              FlagS := a79[7:0][7];
              FlagZ := is_zero(a79[7:0]);
              FlagA := a82[7:0][4];
              FlagP := parity(a79[7:0]);
              FlagCY := a76[16];
              jump ((M[a83],M[a78]));
            }
          }
        }
      }
    }

0791:

    #0793
    let:8 a1 = (04 & updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))) in
    let:8 a2 = (04 | updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))) in
    #0795
    if (is_zero(a1)) {
      A := a1;
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump (077F);
    } else {
      #0798
      #079A
      let:8 a3 = (a1 ^ a1) in
      #079B
      M[20CE] := a3;
      #079E
      #07A1
      let:16 a4 = addWithCarry(false,99,M[20EB]) in
      let:8 a5 = (99 & 0F) in
      let:8 a6 = (M[20EB] & 0F) in
      let:16 a7 = addWithCarry(false,a5,a6) in
      #07A2
      let:8 a8 = (a4[7:0] & 0F) in
      let:16 a9 = addWithCarry(false,a8,06) in
      let:16 a10 = addWithCarry(((((a8[1] || a8[2]) && a8[3]) || a7[7:0][4]) ? a9[7:0] : a8)[4],(a4[7:0] >> 04),00) in
      let:16 a11 = addWithCarry(false,a10[7:0],06) in
      let:8 a12 = (((((a8[1] || a8[2]) && a8[3]) || a7[7:0][4]) ? a9[7:0] : a8) & 0F) in
      let:8 a13 = ((((((a10[7:0][1] || a10[7:0][2]) && a10[7:0][3]) || a4[15:8][0]) ? a11[7:0] : a10[7:0]) << 04) | a12) in
      #07A3
      M[20EB] := a13;
      #07A6
      let:16 a14 = (-1 + (SPH,SPL)) in
      M[a14] := 07;
      let:16 a15 = (-1 + a14) in
      M[a15] := A9;
      #return-to: 07A9
      #1947
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a16 = (-1 + a15) in
          M[a16] := 19;
          let:16 a17 = (-1 + a16) in
          M[a17] := 47;
          A := a13;
          B := 99;
          SPH := a17[15:8];
          SPL := a17[7:0];
          FlagS := a13[7];
          FlagZ := is_zero(a13);
          FlagA := ((((a8[1] || a8[2]) && a8[3]) || a7[7:0][4]) ? a9[7:0] : a8)[4];
          FlagP := parity(a13);
          FlagCY := (((((a10[7:0][1] || a10[7:0][2]) && a10[7:0][3]) || a4[15:8][0]) ? a11[7:0] : a10[7:0])[4] || a4[15:8][0]);
          jump (0008);
        } else {
          let:16 a18 = (-1 + a15) in
          M[a18] := 19;
          let:16 a19 = (-1 + a18) in
          M[a19] := 47;
          A := a13;
          B := 99;
          SPH := a19[15:8];
          SPL := a19[7:0];
          FlagS := a13[7];
          FlagZ := is_zero(a13);
          FlagA := ((((a8[1] || a8[2]) && a8[3]) || a7[7:0][4]) ? a9[7:0] : a8)[4];
          FlagP := parity(a13);
          FlagCY := (((((a10[7:0][1] || a10[7:0][2]) && a10[7:0][3]) || a4[15:8][0]) ? a11[7:0] : a10[7:0])[4] || a4[15:8][0]);
          jump (0010);
        }
      } else {
        #194A
        #194D
        #09B2
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a20 = (-1 + a15) in
            M[a20] := 09;
            let:16 a21 = (-1 + a20) in
            M[a21] := B2;
            A := M[20EB];
            B := 99;
            H := 3C;
            L := 01;
            SPH := a21[15:8];
            SPL := a21[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := ((((a8[1] || a8[2]) && a8[3]) || a7[7:0][4]) ? a9[7:0] : a8)[4];
            FlagP := parity(a13);
            FlagCY := (((((a10[7:0][1] || a10[7:0][2]) && a10[7:0][3]) || a4[15:8][0]) ? a11[7:0] : a10[7:0])[4] || a4[15:8][0]);
            jump (0008);
          } else {
            let:16 a22 = (-1 + a15) in
            M[a22] := 09;
            let:16 a23 = (-1 + a22) in
            M[a23] := B2;
            A := M[20EB];
            B := 99;
            H := 3C;
            L := 01;
            SPH := a23[15:8];
            SPL := a23[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := ((((a8[1] || a8[2]) && a8[3]) || a7[7:0][4]) ? a9[7:0] : a8)[4];
            FlagP := parity(a13);
            FlagCY := (((((a10[7:0][1] || a10[7:0][2]) && a10[7:0][3]) || a4[15:8][0]) ? a11[7:0] : a10[7:0])[4] || a4[15:8][0]);
            jump (0010);
          }
        } else {
          let:16 a24 = (-1 + a15) in
          M[a24] := D;
          let:16 a25 = (-1 + a24) in
          M[a25] := E;
          #09B3
          let:16 a26 = (-1 + a25) in
          M[a26] := M[20EB];
          let:16 a27 = (-1 + a26) in
          M[a27] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a13[7]),6,is_zero(a13)),4,((((a8[1] || a8[2]) && a8[3]) || a7[7:0][4]) ? a9[7:0] : a8)[4]),2,parity(a13)),0,(((((a10[7:0][1] || a10[7:0][2]) && a10[7:0][3]) || a4[15:8][0]) ? a11[7:0] : a10[7:0])[4] || a4[15:8][0]));
          #09B4
          #09B5
          #09B6
          #09B7
          #09B8
          let:8 a28 = (0F & updateBit((updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0])[0])) in
          let:8 a29 = (0F | updateBit((updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0])[0])) in
          #09BA
          let:16 a30 = (-1 + a27) in
          M[a30] := 09;
          let:16 a31 = (-1 + a30) in
          M[a31] := BD;
          #return-to: 09BD
          #09C5
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a32 = (-1 + a31) in
              M[a32] := 09;
              let:16 a33 = (-1 + a32) in
              M[a33] := C5;
              A := a28;
              B := 99;
              H := 3C;
              L := 01;
              SPH := a33[15:8];
              SPL := a33[7:0];
              FlagS := a28[7];
              FlagZ := is_zero(a28);
              FlagA := a29[3];
              FlagP := parity(a28);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a34 = (-1 + a31) in
              M[a34] := 09;
              let:16 a35 = (-1 + a34) in
              M[a35] := C5;
              A := a28;
              B := 99;
              H := 3C;
              L := 01;
              SPH := a35[15:8];
              SPL := a35[7:0];
              FlagS := a28[7];
              FlagZ := is_zero(a28);
              FlagA := a29[3];
              FlagP := parity(a28);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a36 = addWithCarry(false,1A,a28) in
            let:8 a37 = (1A & 0F) in
            let:8 a38 = (a28 & 0F) in
            let:16 a39 = addWithCarry(false,a37,a38) in
            #09C7
            #08FF
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a40 = (-1 + a31) in
                M[a40] := 08;
                let:16 a41 = (-1 + a40) in
                M[a41] := FF;
                A := a36[7:0];
                B := 99;
                H := 3C;
                L := 01;
                SPH := a41[15:8];
                SPL := a41[7:0];
                FlagS := a36[7:0][7];
                FlagZ := is_zero(a36[7:0]);
                FlagA := a39[7:0][4];
                FlagP := parity(a36[7:0]);
                FlagCY := a36[15:8][0];
                jump (0008);
              } else {
                let:16 a42 = (-1 + a31) in
                M[a42] := 08;
                let:16 a43 = (-1 + a42) in
                M[a43] := FF;
                A := a36[7:0];
                B := 99;
                H := 3C;
                L := 01;
                SPH := a43[15:8];
                SPL := a43[7:0];
                FlagS := a36[7:0][7];
                FlagZ := is_zero(a36[7:0]);
                FlagA := a39[7:0][4];
                FlagP := parity(a36[7:0]);
                FlagCY := a36[15:8][0];
                jump (0010);
              }
            } else {
              #0902
              let:16 a44 = (-1 + a31) in
              M[a44] := 3C;
              let:16 a45 = (-1 + a44) in
              M[a45] := 01;
              #0903
              #0905
              #0906
              let:17 a46 = add17((00,a36[7:0]),(00,a36[7:0])) in
              #0907
              let:17 a47 = add17(a46[15:0],a46[15:0]) in
              #0908
              let:17 a48 = add17(a47[15:0],a47[15:0]) in
              #0909
              let:17 a49 = add17(1E00,a48[15:0]) in
              #090A
              #090B
              let:16 a50 = (1 + a45) in
              let:16 a51 = (1 + a50) in
              #090C
              #090E
              #0910
              #1439
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a52 = (-1 + a51) in
                  M[a52] := 14;
                  let:16 a53 = (-1 + a52) in
                  M[a53] := 39;
                  A := a36[7:0];
                  B := 08;
                  D := a49[15:0][15:8];
                  E := a49[15:0][7:0];
                  H := M[a50];
                  L := M[a45];
                  SPH := a53[15:8];
                  SPL := a53[7:0];
                  FlagS := a36[7:0][7];
                  FlagZ := is_zero(a36[7:0]);
                  FlagA := a39[7:0][4];
                  FlagP := parity(a36[7:0]);
                  FlagCY := a49[16];
                  jump (0008);
                } else {
                  let:16 a54 = (-1 + a51) in
                  M[a54] := 14;
                  let:16 a55 = (-1 + a54) in
                  M[a55] := 39;
                  A := a36[7:0];
                  B := 08;
                  D := a49[15:0][15:8];
                  E := a49[15:0][7:0];
                  H := M[a50];
                  L := M[a45];
                  SPH := a55[15:8];
                  SPL := a55[7:0];
                  FlagS := a36[7:0][7];
                  FlagZ := is_zero(a36[7:0]);
                  FlagA := a39[7:0][4];
                  FlagP := parity(a36[7:0]);
                  FlagCY := a49[16];
                  jump (0010);
                }
              } else {
                let:16 a56 = (-1 + a51) in
                M[a56] := 08;
                let:16 a57 = (-1 + a56) in
                M[a57] := C;
                #143A
                #143B
                M[(M[a50],M[a45])] := M[a49[15:0]];
                #143C
                let:16 a58 = (1 + a49[15:0]) in
                #143D
                #1440
                let:17 a59 = add17(0020,(M[a50],M[a45])) in
                #1441
                let:16 a60 = (1 + a57) in
                let:16 a61 = (1 + a60) in
                #1442
                let:16 a62 = addWithCarry(!true,M[a60],~00) in
                let:8 a63 = (M[a60] & 0F) in
                let:8 a64 = (~00 & 0F) in
                let:16 a65 = addWithCarry(!true,a63,a64) in
                #1443
                if (!is_zero(a62[7:0])) {
                  A := M[a49[15:0]];
                  B := a62[7:0];
                  C := M[a57];
                  D := a58[15:8];
                  E := a58[7:0];
                  H := a59[15:0][15:8];
                  L := a59[15:0][7:0];
                  SPH := a61[15:8];
                  SPL := a61[7:0];
                  FlagS := a62[7:0][7];
                  FlagZ := is_zero(a62[7:0]);
                  FlagA := a65[7:0][4];
                  FlagP := parity(a62[7:0]);
                  FlagCY := a59[16];
                  jump (1439);
                } else {
                  #1446
                  let:16 a66 = (1 + a61) in
                  let:16 a67 = (1 + a66) in
                  A := M[a49[15:0]];
                  B := a62[7:0];
                  C := M[a57];
                  D := a58[15:8];
                  E := a58[7:0];
                  H := a59[15:0][15:8];
                  L := a59[15:0][7:0];
                  SPH := a67[15:8];
                  SPL := a67[7:0];
                  FlagS := a62[7:0][7];
                  FlagZ := is_zero(a62[7:0]);
                  FlagA := a65[7:0][4];
                  FlagP := parity(a62[7:0]);
                  FlagCY := a59[16];
                  jump ((M[a66],M[a61]));
                }
              }
            }
          }
        }
      }
    }

07A9:

    #07AC
    M[20F8] := 00;
    M[20F9] := 00;
    #07AF
    M[20FC] := 00;
    M[20FD] := 00;
    #07B2
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := B5;
    #return-to: 07B5
    #1925
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 25;
        H := 00;
        L := 00;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 25;
        H := 00;
        L := 00;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1928
      #1931
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 19;
          let:16 a8 = (-1 + a7) in
          M[a8] := 31;
          H := 20;
          L := F8;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 19;
          let:16 a10 = (-1 + a9) in
          M[a10] := 31;
          H := 20;
          L := F8;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1932
        #1933
        #1934
        #1935
        #1936
        #1937
        #1938
        #1939
        #09AD
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a2) in
            M[a11] := 09;
            let:16 a12 = (-1 + a11) in
            M[a12] := AD;
            A := M[20FA];
            D := M[20F9];
            E := M[20F8];
            H := M[20FB];
            L := M[20FA];
            SPH := a12[15:8];
            SPL := a12[7:0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a2) in
            M[a13] := 09;
            let:16 a14 = (-1 + a13) in
            M[a14] := AD;
            A := M[20FA];
            D := M[20F9];
            E := M[20F8];
            H := M[20FB];
            L := M[20FA];
            SPH := a14[15:8];
            SPL := a14[7:0];
            jump (0010);
          }
        } else {
          #09AE
          let:16 a15 = (-1 + a2) in
          M[a15] := 09;
          let:16 a16 = (-1 + a15) in
          M[a16] := B1;
          #return-to: 09B1
          #09B2
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a16) in
              M[a17] := 09;
              let:16 a18 = (-1 + a17) in
              M[a18] := B2;
              A := M[20F9];
              D := M[20F9];
              E := M[20F8];
              H := M[20FB];
              L := M[20FA];
              SPH := a18[15:8];
              SPL := a18[7:0];
              jump (0008);
            } else {
              let:16 a19 = (-1 + a16) in
              M[a19] := 09;
              let:16 a20 = (-1 + a19) in
              M[a20] := B2;
              A := M[20F9];
              D := M[20F9];
              E := M[20F8];
              H := M[20FB];
              L := M[20FA];
              SPH := a20[15:8];
              SPL := a20[7:0];
              jump (0010);
            }
          } else {
            let:16 a21 = (-1 + a16) in
            M[a21] := M[20F9];
            let:16 a22 = (-1 + a21) in
            M[a22] := M[20F8];
            #09B3
            let:16 a23 = (-1 + a22) in
            M[a23] := M[20F9];
            let:16 a24 = (-1 + a23) in
            M[a24] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,FlagS),6,FlagZ),4,FlagA),2,FlagP),0,FlagCY);
            #09B4
            #09B5
            #09B6
            #09B7
            #09B8
            let:8 a25 = (0F & updateBit((updateBit((updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0]) >> 01),7,updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0]) >> 01),7,updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0])[0])[0])) in
            let:8 a26 = (0F | updateBit((updateBit((updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0]) >> 01),7,updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0]) >> 01),7,updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0])[0])[0])) in
            #09BA
            let:16 a27 = (-1 + a24) in
            M[a27] := 09;
            let:16 a28 = (-1 + a27) in
            M[a28] := BD;
            #return-to: 09BD
            #09C5
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a29 = (-1 + a28) in
                M[a29] := 09;
                let:16 a30 = (-1 + a29) in
                M[a30] := C5;
                A := a25;
                D := M[20F9];
                E := M[20F8];
                H := M[20FB];
                L := M[20FA];
                SPH := a30[15:8];
                SPL := a30[7:0];
                FlagS := a25[7];
                FlagZ := is_zero(a25);
                FlagA := a26[3];
                FlagP := parity(a25);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a31 = (-1 + a28) in
                M[a31] := 09;
                let:16 a32 = (-1 + a31) in
                M[a32] := C5;
                A := a25;
                D := M[20F9];
                E := M[20F8];
                H := M[20FB];
                L := M[20FA];
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagS := a25[7];
                FlagZ := is_zero(a25);
                FlagA := a26[3];
                FlagP := parity(a25);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a33 = addWithCarry(false,1A,a25) in
              let:8 a34 = (1A & 0F) in
              let:8 a35 = (a25 & 0F) in
              let:16 a36 = addWithCarry(false,a34,a35) in
              #09C7
              #08FF
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a37 = (-1 + a28) in
                  M[a37] := 08;
                  let:16 a38 = (-1 + a37) in
                  M[a38] := FF;
                  A := a33[7:0];
                  D := M[20F9];
                  E := M[20F8];
                  H := M[20FB];
                  L := M[20FA];
                  SPH := a38[15:8];
                  SPL := a38[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a33[15:8][0];
                  jump (0008);
                } else {
                  let:16 a39 = (-1 + a28) in
                  M[a39] := 08;
                  let:16 a40 = (-1 + a39) in
                  M[a40] := FF;
                  A := a33[7:0];
                  D := M[20F9];
                  E := M[20F8];
                  H := M[20FB];
                  L := M[20FA];
                  SPH := a40[15:8];
                  SPL := a40[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a33[15:8][0];
                  jump (0010);
                }
              } else {
                #0902
                let:16 a41 = (-1 + a28) in
                M[a41] := M[20FB];
                let:16 a42 = (-1 + a41) in
                M[a42] := M[20FA];
                #0903
                #0905
                #0906
                let:17 a43 = add17((00,a33[7:0]),(00,a33[7:0])) in
                #0907
                let:17 a44 = add17(a43[15:0],a43[15:0]) in
                #0908
                let:17 a45 = add17(a44[15:0],a44[15:0]) in
                #0909
                let:17 a46 = add17(1E00,a45[15:0]) in
                #090A
                #090B
                let:16 a47 = (1 + a42) in
                let:16 a48 = (1 + a47) in
                #090C
                #090E
                #0910
                #1439
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a49 = (-1 + a48) in
                    M[a49] := 14;
                    let:16 a50 = (-1 + a49) in
                    M[a50] := 39;
                    A := a33[7:0];
                    B := 08;
                    D := a46[15:0][15:8];
                    E := a46[15:0][7:0];
                    H := M[a47];
                    L := M[a42];
                    SPH := a50[15:8];
                    SPL := a50[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := a46[16];
                    jump (0008);
                  } else {
                    let:16 a51 = (-1 + a48) in
                    M[a51] := 14;
                    let:16 a52 = (-1 + a51) in
                    M[a52] := 39;
                    A := a33[7:0];
                    B := 08;
                    D := a46[15:0][15:8];
                    E := a46[15:0][7:0];
                    H := M[a47];
                    L := M[a42];
                    SPH := a52[15:8];
                    SPL := a52[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := a46[16];
                    jump (0010);
                  }
                } else {
                  let:16 a53 = (-1 + a48) in
                  M[a53] := 08;
                  let:16 a54 = (-1 + a53) in
                  M[a54] := C;
                  #143A
                  #143B
                  M[(M[a47],M[a42])] := M[a46[15:0]];
                  #143C
                  let:16 a55 = (1 + a46[15:0]) in
                  #143D
                  #1440
                  let:17 a56 = add17(0020,(M[a47],M[a42])) in
                  #1441
                  let:16 a57 = (1 + a54) in
                  let:16 a58 = (1 + a57) in
                  #1442
                  let:16 a59 = addWithCarry(!true,M[a57],~00) in
                  let:8 a60 = (M[a57] & 0F) in
                  let:8 a61 = (~00 & 0F) in
                  let:16 a62 = addWithCarry(!true,a60,a61) in
                  #1443
                  if (!is_zero(a59[7:0])) {
                    A := M[a46[15:0]];
                    B := a59[7:0];
                    C := M[a54];
                    D := a55[15:8];
                    E := a55[7:0];
                    H := a56[15:0][15:8];
                    L := a56[15:0][7:0];
                    SPH := a58[15:8];
                    SPL := a58[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := a56[16];
                    jump (1439);
                  } else {
                    #1446
                    let:16 a63 = (1 + a58) in
                    let:16 a64 = (1 + a63) in
                    A := M[a46[15:0]];
                    B := a59[7:0];
                    C := M[a54];
                    D := a55[15:8];
                    E := a55[7:0];
                    H := a56[15:0][15:8];
                    L := a56[15:0][7:0];
                    SPH := a64[15:8];
                    SPL := a64[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := a56[16];
                    jump ((M[a63],M[a58]));
                  }
                }
              }
            }
          }
        }
      }
    }

07B5:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := B8;
    #return-to: 07B8
    #192B
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 2B;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 2B;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #192E
      #1931
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 19;
          let:16 a8 = (-1 + a7) in
          M[a8] := 31;
          H := 20;
          L := FC;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 19;
          let:16 a10 = (-1 + a9) in
          M[a10] := 31;
          H := 20;
          L := FC;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1932
        #1933
        #1934
        #1935
        #1936
        #1937
        #1938
        #1939
        #09AD
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a2) in
            M[a11] := 09;
            let:16 a12 = (-1 + a11) in
            M[a12] := AD;
            A := M[20FE];
            D := M[20FD];
            E := M[20FC];
            H := M[20FF];
            L := M[20FE];
            SPH := a12[15:8];
            SPL := a12[7:0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a2) in
            M[a13] := 09;
            let:16 a14 = (-1 + a13) in
            M[a14] := AD;
            A := M[20FE];
            D := M[20FD];
            E := M[20FC];
            H := M[20FF];
            L := M[20FE];
            SPH := a14[15:8];
            SPL := a14[7:0];
            jump (0010);
          }
        } else {
          #09AE
          let:16 a15 = (-1 + a2) in
          M[a15] := 09;
          let:16 a16 = (-1 + a15) in
          M[a16] := B1;
          #return-to: 09B1
          #09B2
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a16) in
              M[a17] := 09;
              let:16 a18 = (-1 + a17) in
              M[a18] := B2;
              A := M[20FD];
              D := M[20FD];
              E := M[20FC];
              H := M[20FF];
              L := M[20FE];
              SPH := a18[15:8];
              SPL := a18[7:0];
              jump (0008);
            } else {
              let:16 a19 = (-1 + a16) in
              M[a19] := 09;
              let:16 a20 = (-1 + a19) in
              M[a20] := B2;
              A := M[20FD];
              D := M[20FD];
              E := M[20FC];
              H := M[20FF];
              L := M[20FE];
              SPH := a20[15:8];
              SPL := a20[7:0];
              jump (0010);
            }
          } else {
            let:16 a21 = (-1 + a16) in
            M[a21] := M[20FD];
            let:16 a22 = (-1 + a21) in
            M[a22] := M[20FC];
            #09B3
            let:16 a23 = (-1 + a22) in
            M[a23] := M[20FD];
            let:16 a24 = (-1 + a23) in
            M[a24] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,FlagS),6,FlagZ),4,FlagA),2,FlagP),0,FlagCY);
            #09B4
            #09B5
            #09B6
            #09B7
            #09B8
            let:8 a25 = (0F & updateBit((updateBit((updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0]) >> 01),7,updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0]) >> 01),7,updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0])[0])[0])) in
            let:8 a26 = (0F | updateBit((updateBit((updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0]) >> 01),7,updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0]) >> 01),7,updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0])[0])[0])) in
            #09BA
            let:16 a27 = (-1 + a24) in
            M[a27] := 09;
            let:16 a28 = (-1 + a27) in
            M[a28] := BD;
            #return-to: 09BD
            #09C5
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a29 = (-1 + a28) in
                M[a29] := 09;
                let:16 a30 = (-1 + a29) in
                M[a30] := C5;
                A := a25;
                D := M[20FD];
                E := M[20FC];
                H := M[20FF];
                L := M[20FE];
                SPH := a30[15:8];
                SPL := a30[7:0];
                FlagS := a25[7];
                FlagZ := is_zero(a25);
                FlagA := a26[3];
                FlagP := parity(a25);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a31 = (-1 + a28) in
                M[a31] := 09;
                let:16 a32 = (-1 + a31) in
                M[a32] := C5;
                A := a25;
                D := M[20FD];
                E := M[20FC];
                H := M[20FF];
                L := M[20FE];
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagS := a25[7];
                FlagZ := is_zero(a25);
                FlagA := a26[3];
                FlagP := parity(a25);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a33 = addWithCarry(false,1A,a25) in
              let:8 a34 = (1A & 0F) in
              let:8 a35 = (a25 & 0F) in
              let:16 a36 = addWithCarry(false,a34,a35) in
              #09C7
              #08FF
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a37 = (-1 + a28) in
                  M[a37] := 08;
                  let:16 a38 = (-1 + a37) in
                  M[a38] := FF;
                  A := a33[7:0];
                  D := M[20FD];
                  E := M[20FC];
                  H := M[20FF];
                  L := M[20FE];
                  SPH := a38[15:8];
                  SPL := a38[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a33[15:8][0];
                  jump (0008);
                } else {
                  let:16 a39 = (-1 + a28) in
                  M[a39] := 08;
                  let:16 a40 = (-1 + a39) in
                  M[a40] := FF;
                  A := a33[7:0];
                  D := M[20FD];
                  E := M[20FC];
                  H := M[20FF];
                  L := M[20FE];
                  SPH := a40[15:8];
                  SPL := a40[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a33[15:8][0];
                  jump (0010);
                }
              } else {
                #0902
                let:16 a41 = (-1 + a28) in
                M[a41] := M[20FF];
                let:16 a42 = (-1 + a41) in
                M[a42] := M[20FE];
                #0903
                #0905
                #0906
                let:17 a43 = add17((00,a33[7:0]),(00,a33[7:0])) in
                #0907
                let:17 a44 = add17(a43[15:0],a43[15:0]) in
                #0908
                let:17 a45 = add17(a44[15:0],a44[15:0]) in
                #0909
                let:17 a46 = add17(1E00,a45[15:0]) in
                #090A
                #090B
                let:16 a47 = (1 + a42) in
                let:16 a48 = (1 + a47) in
                #090C
                #090E
                #0910
                #1439
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a49 = (-1 + a48) in
                    M[a49] := 14;
                    let:16 a50 = (-1 + a49) in
                    M[a50] := 39;
                    A := a33[7:0];
                    B := 08;
                    D := a46[15:0][15:8];
                    E := a46[15:0][7:0];
                    H := M[a47];
                    L := M[a42];
                    SPH := a50[15:8];
                    SPL := a50[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := a46[16];
                    jump (0008);
                  } else {
                    let:16 a51 = (-1 + a48) in
                    M[a51] := 14;
                    let:16 a52 = (-1 + a51) in
                    M[a52] := 39;
                    A := a33[7:0];
                    B := 08;
                    D := a46[15:0][15:8];
                    E := a46[15:0][7:0];
                    H := M[a47];
                    L := M[a42];
                    SPH := a52[15:8];
                    SPL := a52[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := a46[16];
                    jump (0010);
                  }
                } else {
                  let:16 a53 = (-1 + a48) in
                  M[a53] := 08;
                  let:16 a54 = (-1 + a53) in
                  M[a54] := C;
                  #143A
                  #143B
                  M[(M[a47],M[a42])] := M[a46[15:0]];
                  #143C
                  let:16 a55 = (1 + a46[15:0]) in
                  #143D
                  #1440
                  let:17 a56 = add17(0020,(M[a47],M[a42])) in
                  #1441
                  let:16 a57 = (1 + a54) in
                  let:16 a58 = (1 + a57) in
                  #1442
                  let:16 a59 = addWithCarry(!true,M[a57],~00) in
                  let:8 a60 = (M[a57] & 0F) in
                  let:8 a61 = (~00 & 0F) in
                  let:16 a62 = addWithCarry(!true,a60,a61) in
                  #1443
                  if (!is_zero(a59[7:0])) {
                    A := M[a46[15:0]];
                    B := a59[7:0];
                    C := M[a54];
                    D := a55[15:8];
                    E := a55[7:0];
                    H := a56[15:0][15:8];
                    L := a56[15:0][7:0];
                    SPH := a58[15:8];
                    SPL := a58[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := a56[16];
                    jump (1439);
                  } else {
                    #1446
                    let:16 a63 = (1 + a58) in
                    let:16 a64 = (1 + a63) in
                    A := M[a46[15:0]];
                    B := a59[7:0];
                    C := M[a54];
                    D := a55[15:8];
                    E := a55[7:0];
                    H := a56[15:0][15:8];
                    L := a56[15:0][7:0];
                    SPH := a64[15:8];
                    SPL := a64[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := a56[16];
                    jump ((M[a63],M[a58]));
                  }
                }
              }
            }
          }
        }
      }
    }

07B8:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := BB;
    #return-to: 07BB
    #19D7
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := D7;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := D7;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:8 a7 = (A ^ A) in
      #19D8
      #19D3
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a8 = (-1 + a2) in
          M[a8] := 19;
          let:16 a9 = (-1 + a8) in
          M[a9] := D3;
          A := a7;
          SPH := a9[15:8];
          SPL := a9[7:0];
          FlagS := a7[7];
          FlagZ := is_zero(a7);
          FlagA := false;
          FlagP := parity(a7);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a10 = (-1 + a2) in
          M[a10] := 19;
          let:16 a11 = (-1 + a10) in
          M[a11] := D3;
          A := a7;
          SPH := a11[15:8];
          SPL := a11[7:0];
          FlagS := a7[7];
          FlagZ := is_zero(a7);
          FlagA := false;
          FlagP := parity(a7);
          FlagCY := false;
          jump (0010);
        }
      } else {
        M[20E9] := a7;
        #19D6
        let:16 a12 = (1 + a2) in
        let:16 a13 = (1 + a12) in
        A := a7;
        SPH := a13[15:8];
        SPL := a13[7:0];
        FlagS := a7[7];
        FlagZ := is_zero(a7);
        FlagA := false;
        FlagP := parity(a7);
        FlagCY := false;
        jump ((M[a12],M[a2]));
      }
    }

07BB:

    #07BE
    #07BF
    M[20EF] := 01;
    #07C2
    M[20E7] := 01;
    M[20E8] := 01;
    #07C5
    M[20E5] := 01;
    M[20E6] := 01;
    #07C8
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := CB;
    #return-to: 07CB
    #1956
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 56;
        A := 01;
        H := 01;
        L := 01;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 56;
        A := 01;
        H := 01;
        L := 01;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 19;
      let:16 a8 = (-1 + a7) in
      M[a8] := 59;
      #return-to: 1959
      #1A5C
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 1A;
          let:16 a10 = (-1 + a9) in
          M[a10] := 5C;
          A := 01;
          H := 01;
          L := 01;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 1A;
          let:16 a12 = (-1 + a11) in
          M[a12] := 5C;
          A := 01;
          H := 01;
          L := 01;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1A5F
        M[2400] := 00;
        #1A61
        #1A62
        #1A63
        let:16 a13 = addWithCarry(!false,24,~40) in
        let:8 a14 = (24 & 0F) in
        let:8 a15 = (~40 & 0F) in
        let:16 a16 = addWithCarry(!false,a14,a15) in
        #1A65
        if (!is_zero(a13[7:0])) {
          A := 24;
          H := 24;
          L := 01;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          FlagCY := !a13[15:8][0];
          jump (1A5F);
        } else {
          #1A68
          let:16 a17 = (1 + a8) in
          let:16 a18 = (1 + a17) in
          A := 24;
          H := 24;
          L := 01;
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          FlagCY := !a13[15:8][0];
          jump ((M[a17],M[a8]));
        }
      }
    }

07CB:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := CE;
    #return-to: 07CE
    #01EF
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 01;
        let:16 a4 = (-1 + a3) in
        M[a4] := EF;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 01;
        let:16 a6 = (-1 + a5) in
        M[a6] := EF;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #01F2
      #01F8
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 01;
          let:16 a8 = (-1 + a7) in
          M[a8] := F8;
          H := 21;
          L := 42;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 01;
          let:16 a10 = (-1 + a9) in
          M[a10] := F8;
          H := 21;
          L := 42;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #01FA
        #01FD
        let:16 a11 = (-1 + a2) in
        M[a11] := 1D;
        let:16 a12 = (-1 + a11) in
        M[a12] := 20;
        #01FE
        #0200
        let:16 a13 = (-1 + a12) in
        M[a13] := 02;
        let:16 a14 = (-1 + a13) in
        M[a14] := 03;
        #return-to: 0203
        #1A32
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 32;
            B := 2C;
            C := 04;
            D := 1D;
            E := 20;
            H := 21;
            L := 42;
            SPH := a16[15:8];
            SPL := a16[7:0];
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 1A;
            let:16 a18 = (-1 + a17) in
            M[a18] := 32;
            B := 2C;
            C := 04;
            D := 1D;
            E := 20;
            H := 21;
            L := 42;
            SPH := a18[15:8];
            SPL := a18[7:0];
            jump (0010);
          }
        } else {
          #1A33
          M[2142] := FF;
          #1A34
          #1A35
          #1A36
          let:16 a19 = addWithCarry(!true,2C,~00) in
          let:8 a20 = (2C & 0F) in
          let:8 a21 = (~00 & 0F) in
          let:16 a22 = addWithCarry(!true,a20,a21) in
          #1A37
          if (!is_zero(a19[7:0])) {
            A := FF;
            B := a19[7:0];
            C := 04;
            D := 1D;
            E := 21;
            H := 21;
            L := 43;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            jump (1A32);
          } else {
            #1A3A
            let:16 a23 = (1 + a14) in
            let:16 a24 = (1 + a23) in
            A := FF;
            B := a19[7:0];
            C := 04;
            D := 1D;
            E := 21;
            H := 21;
            L := 43;
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            jump ((M[a23],M[a14]));
          }
        }
      }
    }

07CE:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := D1;
    #return-to: 07D1
    #01F5
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 01;
        let:16 a4 = (-1 + a3) in
        M[a4] := F5;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 01;
        let:16 a6 = (-1 + a5) in
        M[a6] := F5;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #01F8
      #01FA
      #01FD
      let:16 a7 = (-1 + a2) in
      M[a7] := 1D;
      let:16 a8 = (-1 + a7) in
      M[a8] := 20;
      #01FE
      #0200
      let:16 a9 = (-1 + a8) in
      M[a9] := 02;
      let:16 a10 = (-1 + a9) in
      M[a10] := 03;
      #return-to: 0203
      #1A32
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a11 = (-1 + a10) in
          M[a11] := 1A;
          let:16 a12 = (-1 + a11) in
          M[a12] := 32;
          B := 2C;
          C := 04;
          D := 1D;
          E := 20;
          H := 22;
          L := 42;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0008);
        } else {
          let:16 a13 = (-1 + a10) in
          M[a13] := 1A;
          let:16 a14 = (-1 + a13) in
          M[a14] := 32;
          B := 2C;
          C := 04;
          D := 1D;
          E := 20;
          H := 22;
          L := 42;
          SPH := a14[15:8];
          SPL := a14[7:0];
          jump (0010);
        }
      } else {
        #1A33
        M[2242] := FF;
        #1A34
        #1A35
        #1A36
        let:16 a15 = addWithCarry(!true,2C,~00) in
        let:8 a16 = (2C & 0F) in
        let:8 a17 = (~00 & 0F) in
        let:16 a18 = addWithCarry(!true,a16,a17) in
        #1A37
        if (!is_zero(a15[7:0])) {
          A := FF;
          B := a15[7:0];
          C := 04;
          D := 1D;
          E := 21;
          H := 22;
          L := 43;
          SPH := a10[15:8];
          SPL := a10[7:0];
          FlagS := a15[7:0][7];
          FlagZ := is_zero(a15[7:0]);
          FlagA := a18[7:0][4];
          FlagP := parity(a15[7:0]);
          jump (1A32);
        } else {
          #1A3A
          let:16 a19 = (1 + a10) in
          let:16 a20 = (1 + a19) in
          A := FF;
          B := a15[7:0];
          C := 04;
          D := 1D;
          E := 21;
          H := 22;
          L := 43;
          SPH := a20[15:8];
          SPL := a20[7:0];
          FlagS := a15[7:0][7];
          FlagZ := is_zero(a15[7:0]);
          FlagA := a18[7:0][4];
          FlagP := parity(a15[7:0]);
          jump ((M[a19],M[a10]));
        }
      }
    }

07D1:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := D4;
    #return-to: 07D4
    #08D1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 08;
        let:16 a4 = (-1 + a3) in
        M[a4] := D1;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 08;
        let:16 a6 = (-1 + a5) in
        M[a6] := D1;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #08D3
      let:8 a7 = (03 & updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))) in
      let:8 a8 = (03 | updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))) in
      #08D5
      let:16 a9 = addWithCarry(false,03,a7) in
      let:8 a10 = (03 & 0F) in
      let:8 a11 = (a7 & 0F) in
      let:16 a12 = addWithCarry(false,a10,a11) in
      #08D7
      let:16 a13 = (1 + a2) in
      let:16 a14 = (1 + a13) in
      A := a9[7:0];
      SPH := a14[15:8];
      SPL := a14[7:0];
      FlagS := a9[7:0][7];
      FlagZ := is_zero(a9[7:0]);
      FlagA := a12[7:0][4];
      FlagP := parity(a9[7:0]);
      FlagCY := a9[15:8][0];
      jump ((M[a13],M[a2]));
    }

07D4:

    M[21FF] := A;
    #07D7
    M[22FF] := A;
    #07DA
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := DD;
    #return-to: 07DD
    #00D7
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 00;
        let:16 a4 = (-1 + a3) in
        M[a4] := D7;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 00;
        let:16 a6 = (-1 + a5) in
        M[a6] := D7;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #00D9
      M[21FB] := 02;
      #00DC
      M[22FB] := 02;
      #00DF
      #08E4
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 08;
          let:16 a8 = (-1 + a7) in
          M[a8] := E4;
          A := 02;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 08;
          let:16 a10 = (-1 + a9) in
          M[a10] := E4;
          A := 02;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #08E7
        let:8 a11 = (M[20CE] & M[20CE]) in
        let:8 a12 = (M[20CE] | M[20CE]) in
        #08E8
        if (!is_zero(a11)) {
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        } else {
          #08E9
          #08EC
          #08EE
          #14CB
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a15 = (-1 + a2) in
              M[a15] := 14;
              let:16 a16 = (-1 + a15) in
              M[a16] := CB;
              A := a11;
              B := 20;
              H := 39;
              L := 1C;
              SPH := a16[15:8];
              SPL := a16[7:0];
              FlagS := a11[7];
              FlagZ := is_zero(a11);
              FlagA := a12[3];
              FlagP := parity(a11);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a17 = (-1 + a2) in
              M[a17] := 14;
              let:16 a18 = (-1 + a17) in
              M[a18] := CB;
              A := a11;
              B := 20;
              H := 39;
              L := 1C;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a11[7];
              FlagZ := is_zero(a11);
              FlagA := a12[3];
              FlagP := parity(a11);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:8 a19 = (a11 ^ a11) in
            #14CC
            let:16 a20 = (-1 + a2) in
            M[a20] := 20;
            let:16 a21 = (-1 + a20) in
            M[a21] := C;
            #14CD
            M[391C] := a19;
            #14CE
            #14D1
            let:17 a22 = add17(0020,391C) in
            #14D2
            let:16 a23 = (1 + a21) in
            let:16 a24 = (1 + a23) in
            #14D3
            let:16 a25 = addWithCarry(!true,M[a23],~00) in
            let:8 a26 = (M[a23] & 0F) in
            let:8 a27 = (~00 & 0F) in
            let:16 a28 = addWithCarry(!true,a26,a27) in
            #14D4
            if (!is_zero(a25[7:0])) {
              A := a19;
              B := a25[7:0];
              C := M[a21];
              H := a22[15:0][15:8];
              L := a22[15:0][7:0];
              SPH := a24[15:8];
              SPL := a24[7:0];
              FlagS := a25[7:0][7];
              FlagZ := is_zero(a25[7:0]);
              FlagA := a28[7:0][4];
              FlagP := parity(a25[7:0]);
              FlagCY := a22[16];
              jump (14CC);
            } else {
              #14D7
              let:16 a29 = (1 + a24) in
              let:16 a30 = (1 + a29) in
              A := a19;
              B := a25[7:0];
              C := M[a21];
              H := a22[15:0][15:8];
              L := a22[15:0][7:0];
              SPH := a30[15:8];
              SPL := a30[7:0];
              FlagS := a25[7:0][7];
              FlagZ := is_zero(a25[7:0]);
              FlagA := a28[7:0][4];
              FlagP := parity(a25[7:0]);
              FlagCY := a22[16];
              jump ((M[a29],M[a24]));
            }
          }
        }
      }
    }

07DD:

    let:8 a1 = (A ^ A) in
    #07DE
    M[21FE] := a1;
    #07E1
    M[22FE] := a1;
    #07E4
    let:16 a2 = (-1 + (SPH,SPL)) in
    M[a2] := 07;
    let:16 a3 = (-1 + a2) in
    M[a3] := E7;
    #return-to: 07E7
    #01C0
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a4 = (-1 + a3) in
        M[a4] := 01;
        let:16 a5 = (-1 + a4) in
        M[a5] := C0;
        A := a1;
        SPH := a5[15:8];
        SPL := a5[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a6 = (-1 + a3) in
        M[a6] := 01;
        let:16 a7 = (-1 + a6) in
        M[a7] := C0;
        A := a1;
        SPH := a7[15:8];
        SPL := a7[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0010);
      }
    } else {
      #01C3
      #01C5
      M[2100] := 01;
      #01C7
      #01C8
      let:16 a8 = addWithCarry(!true,37,~00) in
      let:8 a9 = (37 & 0F) in
      let:8 a10 = (~00 & 0F) in
      let:16 a11 = addWithCarry(!true,a9,a10) in
      #01C9
      if (!is_zero(a8[7:0])) {
        A := a1;
        B := a8[7:0];
        H := 21;
        L := 01;
        SPH := a3[15:8];
        SPL := a3[7:0];
        FlagS := a8[7:0][7];
        FlagZ := is_zero(a8[7:0]);
        FlagA := a11[7:0][4];
        FlagP := parity(a8[7:0]);
        FlagCY := false;
        jump (01C5);
      } else {
        #01CC
        let:16 a12 = (1 + a3) in
        let:16 a13 = (1 + a12) in
        A := a1;
        B := a8[7:0];
        H := 21;
        L := 01;
        SPH := a13[15:8];
        SPL := a13[7:0];
        FlagS := a8[7:0][7];
        FlagZ := is_zero(a8[7:0]);
        FlagA := a11[7:0][4];
        FlagP := parity(a8[7:0]);
        FlagCY := false;
        jump ((M[a12],M[a3]));
      }
    }

07E7:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := EA;
    #return-to: 07EA
    #1904
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 04;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 04;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1907
      #01C3
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 01;
          let:16 a8 = (-1 + a7) in
          M[a8] := C3;
          H := 22;
          L := 00;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 01;
          let:16 a10 = (-1 + a9) in
          M[a10] := C3;
          H := 22;
          L := 00;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #01C5
        M[2200] := 01;
        #01C7
        #01C8
        let:16 a11 = addWithCarry(!true,37,~00) in
        let:8 a12 = (37 & 0F) in
        let:8 a13 = (~00 & 0F) in
        let:16 a14 = addWithCarry(!true,a12,a13) in
        #01C9
        if (!is_zero(a11[7:0])) {
          B := a11[7:0];
          H := 22;
          L := 01;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump (01C5);
        } else {
          #01CC
          let:16 a15 = (1 + a2) in
          let:16 a16 = (1 + a15) in
          B := a11[7:0];
          H := 22;
          L := 01;
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump ((M[a15],M[a2]));
        }
      }
    }

07EA:

    #07ED
    M[21FC] := 78;
    M[21FD] := 38;
    #07F0
    M[22FC] := 78;
    M[22FD] := 38;
    #07F3
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := F6;
    #return-to: 07F6
    #01E4
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 01;
        let:16 a4 = (-1 + a3) in
        M[a4] := E4;
        H := 38;
        L := 78;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 01;
        let:16 a6 = (-1 + a5) in
        M[a6] := E4;
        H := 38;
        L := 78;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #01E6
      #01E9
      #01EC
      #1A32
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 1A;
          let:16 a8 = (-1 + a7) in
          M[a8] := 32;
          B := C0;
          D := 1B;
          E := 00;
          H := 20;
          L := 00;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 1A;
          let:16 a10 = (-1 + a9) in
          M[a10] := 32;
          B := C0;
          D := 1B;
          E := 00;
          H := 20;
          L := 00;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1A33
        M[2000] := 01;
        #1A34
        #1A35
        #1A36
        let:16 a11 = addWithCarry(!true,C0,~00) in
        let:8 a12 = (C0 & 0F) in
        let:8 a13 = (~00 & 0F) in
        let:16 a14 = addWithCarry(!true,a12,a13) in
        #1A37
        if (!is_zero(a11[7:0])) {
          A := 01;
          B := a11[7:0];
          D := 1B;
          E := 01;
          H := 20;
          L := 01;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump (1A32);
        } else {
          #1A3A
          let:16 a15 = (1 + a2) in
          let:16 a16 = (1 + a15) in
          A := 01;
          B := a11[7:0];
          D := 1B;
          E := 01;
          H := 20;
          L := 01;
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump ((M[a15],M[a2]));
        }
      }
    }

07F6:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := F9;
    #return-to: 07F9
    #1A7F
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 1A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 7F;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 1A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 7F;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 1A;
      let:16 a8 = (-1 + a7) in
      M[a8] := 82;
      #return-to: 1A82
      #092E
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 09;
          let:16 a10 = (-1 + a9) in
          M[a10] := 2E;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 09;
          let:16 a12 = (-1 + a11) in
          M[a12] := 2E;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        let:16 a13 = (-1 + a8) in
        M[a13] := 09;
        let:16 a14 = (-1 + a13) in
        M[a14] := 31;
        #return-to: 0931
        #1611
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 16;
            let:16 a16 = (-1 + a15) in
            M[a16] := 11;
            SPH := a16[15:8];
            SPL := a16[7:0];
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 16;
            let:16 a18 = (-1 + a17) in
            M[a18] := 11;
            SPH := a18[15:8];
            SPL := a18[7:0];
            jump (0010);
          }
        } else {
          #1613
          #1616
          #1617
          let:16 a19 = (1 + a14) in
          let:16 a20 = (1 + a19) in
          A := M[2067];
          H := M[2067];
          L := 00;
          SPH := a20[15:8];
          SPL := a20[7:0];
          jump ((M[a19],M[a14]));
        }
      }
    }

07F9:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := FC;
    #return-to: 07FC
    #088D
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 08;
        let:16 a4 = (-1 + a3) in
        M[a4] := 8D;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 08;
        let:16 a6 = (-1 + a5) in
        M[a6] := 8D;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0890
      #0893
      #0895
      let:16 a7 = (-1 + a2) in
      M[a7] := 08;
      let:16 a8 = (-1 + a7) in
      M[a8] := 98;
      #return-to: 0898
      #08F3
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 08;
          let:16 a10 = (-1 + a9) in
          M[a10] := F3;
          C := 0E;
          D := 1B;
          E := 70;
          H := 2B;
          L := 11;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 08;
          let:16 a12 = (-1 + a11) in
          M[a12] := F3;
          C := 0E;
          D := 1B;
          E := 70;
          H := 2B;
          L := 11;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #08F4
        let:16 a13 = (-1 + a8) in
        M[a13] := 1B;
        let:16 a14 = (-1 + a13) in
        M[a14] := 70;
        #08F5
        let:16 a15 = (-1 + a14) in
        M[a15] := 08;
        let:16 a16 = (-1 + a15) in
        M[a16] := F8;
        #return-to: 08F8
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a17 = (-1 + a16) in
            M[a17] := 08;
            let:16 a18 = (-1 + a17) in
            M[a18] := FF;
            A := 0F;
            C := 0E;
            D := 1B;
            E := 70;
            H := 2B;
            L := 11;
            SPH := a18[15:8];
            SPL := a18[7:0];
            jump (0008);
          } else {
            let:16 a19 = (-1 + a16) in
            M[a19] := 08;
            let:16 a20 = (-1 + a19) in
            M[a20] := FF;
            A := 0F;
            C := 0E;
            D := 1B;
            E := 70;
            H := 2B;
            L := 11;
            SPH := a20[15:8];
            SPL := a20[7:0];
            jump (0010);
          }
        } else {
          #0902
          let:16 a21 = (-1 + a16) in
          M[a21] := 2B;
          let:16 a22 = (-1 + a21) in
          M[a22] := 11;
          #0903
          #0905
          #0906
          let:17 a23 = add17(000F,000F) in
          #0907
          let:17 a24 = add17(a23[15:0],a23[15:0]) in
          #0908
          let:17 a25 = add17(a24[15:0],a24[15:0]) in
          #0909
          let:17 a26 = add17(1E00,a25[15:0]) in
          #090A
          #090B
          let:16 a27 = (1 + a22) in
          let:16 a28 = (1 + a27) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a29 = (-1 + a28) in
              M[a29] := 14;
              let:16 a30 = (-1 + a29) in
              M[a30] := 39;
              A := 0F;
              B := 08;
              C := 0E;
              D := a26[15:0][15:8];
              E := a26[15:0][7:0];
              H := M[a27];
              L := M[a22];
              SPH := a30[15:8];
              SPL := a30[7:0];
              FlagCY := a26[16];
              jump (0008);
            } else {
              let:16 a31 = (-1 + a28) in
              M[a31] := 14;
              let:16 a32 = (-1 + a31) in
              M[a32] := 39;
              A := 0F;
              B := 08;
              C := 0E;
              D := a26[15:0][15:8];
              E := a26[15:0][7:0];
              H := M[a27];
              L := M[a22];
              SPH := a32[15:8];
              SPL := a32[7:0];
              FlagCY := a26[16];
              jump (0010);
            }
          } else {
            let:16 a33 = (-1 + a28) in
            M[a33] := 08;
            let:16 a34 = (-1 + a33) in
            M[a34] := 0E;
            #143A
            #143B
            M[(M[a27],M[a22])] := M[a26[15:0]];
            #143C
            let:16 a35 = (1 + a26[15:0]) in
            #143D
            #1440
            let:17 a36 = add17(0020,(M[a27],M[a22])) in
            #1441
            let:16 a37 = (1 + a34) in
            let:16 a38 = (1 + a37) in
            #1442
            let:16 a39 = addWithCarry(!true,M[a37],~00) in
            let:8 a40 = (M[a37] & 0F) in
            let:8 a41 = (~00 & 0F) in
            let:16 a42 = addWithCarry(!true,a40,a41) in
            #1443
            if (!is_zero(a39[7:0])) {
              A := M[a26[15:0]];
              B := a39[7:0];
              C := M[a34];
              D := a35[15:8];
              E := a35[7:0];
              H := a36[15:0][15:8];
              L := a36[15:0][7:0];
              SPH := a38[15:8];
              SPL := a38[7:0];
              FlagS := a39[7:0][7];
              FlagZ := is_zero(a39[7:0]);
              FlagA := a42[7:0][4];
              FlagP := parity(a39[7:0]);
              FlagCY := a36[16];
              jump (1439);
            } else {
              #1446
              let:16 a43 = (1 + a38) in
              let:16 a44 = (1 + a43) in
              A := M[a26[15:0]];
              B := a39[7:0];
              C := M[a34];
              D := a35[15:8];
              E := a35[7:0];
              H := a36[15:0][15:8];
              L := a36[15:0][7:0];
              SPH := a44[15:8];
              SPL := a44[7:0];
              FlagS := a39[7:0][7];
              FlagZ := is_zero(a39[7:0]);
              FlagA := a42[7:0][4];
              FlagP := parity(a39[7:0]);
              FlagCY := a36[16];
              jump ((M[a43],M[a38]));
            }
          }
        }
      }
    }

07FC:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 07;
    let:16 a2 = (-1 + a1) in
    M[a2] := FF;
    #return-to: 07FF
    #09D6
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 09;
        let:16 a4 = (-1 + a3) in
        M[a4] := D6;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 09;
        let:16 a6 = (-1 + a5) in
        M[a6] := D6;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #09D9
      M[2402] := 00;
      #09DB
      #09DC
      #09DD
      let:8 a7 = (1F & 03) in
      let:8 a8 = (1F | 03) in
      #09DF
      let:16 a9 = addWithCarry(!false,a7,~1C) in
      let:8 a10 = (a7 & 0F) in
      let:8 a11 = (~1C & 0F) in
      let:16 a12 = addWithCarry(!false,a10,a11) in
      #09E1
      if (!a9[15:8][0]) {
        #09E8
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + a2) in
            M[a13] := 09;
            let:16 a14 = (-1 + a13) in
            M[a14] := E8;
            A := a7;
            H := 24;
            L := 03;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a9[7:0][7];
            FlagZ := is_zero(a9[7:0]);
            FlagA := a12[7:0][4];
            FlagP := parity(a9[7:0]);
            FlagCY := !a9[15:8][0];
            jump (0008);
          } else {
            let:16 a15 = (-1 + a2) in
            M[a15] := 09;
            let:16 a16 = (-1 + a15) in
            M[a16] := E8;
            A := a7;
            H := 24;
            L := 03;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a9[7:0][7];
            FlagZ := is_zero(a9[7:0]);
            FlagA := a12[7:0][4];
            FlagP := parity(a9[7:0]);
            FlagCY := !a9[15:8][0];
            jump (0010);
          }
        } else {
          #09E9
          let:16 a17 = addWithCarry(!false,24,~40) in
          let:8 a18 = (24 & 0F) in
          let:8 a19 = (~40 & 0F) in
          let:16 a20 = addWithCarry(!false,a18,a19) in
          #09EB
          if (!a17[15:8][0]) {
            A := 24;
            H := 24;
            L := 03;
            SPH := a2[15:8];
            SPL := a2[7:0];
            FlagS := a17[7:0][7];
            FlagZ := is_zero(a17[7:0]);
            FlagA := a20[7:0][4];
            FlagP := parity(a17[7:0]);
            FlagCY := !a17[15:8][0];
            jump (09D9);
          } else {
            #09EE
            let:16 a21 = (1 + a2) in
            let:16 a22 = (1 + a21) in
            A := 24;
            H := 24;
            L := 03;
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a17[7:0][7];
            FlagZ := is_zero(a17[7:0]);
            FlagA := a20[7:0][4];
            FlagP := parity(a17[7:0]);
            FlagCY := !a17[15:8][0];
            jump ((M[a21],M[a2]));
          }
        }
      } else {
        #09E4
        #09E7
        let:17 a23 = add17(0006,2403) in
        #09E8
        #09E9
        let:16 a24 = addWithCarry(!false,a23[15:0][15:8],~40) in
        let:8 a25 = (a23[15:0][15:8] & 0F) in
        let:8 a26 = (~40 & 0F) in
        let:16 a27 = addWithCarry(!false,a25,a26) in
        #09EB
        if (!a24[15:8][0]) {
          A := a23[15:0][15:8];
          D := 00;
          E := 06;
          H := a23[15:0][15:8];
          L := a23[15:0][7:0];
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a24[7:0][7];
          FlagZ := is_zero(a24[7:0]);
          FlagA := a27[7:0][4];
          FlagP := parity(a24[7:0]);
          FlagCY := !a24[15:8][0];
          jump (09D9);
        } else {
          #09EE
          let:16 a28 = (1 + a2) in
          let:16 a29 = (1 + a28) in
          A := a23[15:0][15:8];
          D := 00;
          E := 06;
          H := a23[15:0][15:8];
          L := a23[15:0][7:0];
          SPH := a29[15:8];
          SPL := a29[7:0];
          FlagS := a24[7:0][7];
          FlagZ := is_zero(a24[7:0]);
          FlagA := a27[7:0][4];
          FlagP := parity(a24[7:0]);
          FlagCY := !a24[15:8][0];
          jump ((M[a28],M[a2]));
        }
      }
    }

07FF:

    #0800
    let:8 a1 = (A ^ A) in
    #0801
    M[20C1] := a1;
    #0804
    let:16 a2 = (-1 + (SPH,SPL)) in
    M[a2] := 08;
    let:16 a3 = (-1 + a2) in
    M[a3] := 07;
    #return-to: 0807
    #01CF
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a4 = (-1 + a3) in
        M[a4] := 01;
        let:16 a5 = (-1 + a4) in
        M[a5] := CF;
        A := a1;
        SPH := a5[15:8];
        SPL := a5[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a6 = (-1 + a3) in
        M[a6] := 01;
        let:16 a7 = (-1 + a6) in
        M[a7] := CF;
        A := a1;
        SPH := a7[15:8];
        SPL := a7[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0010);
      }
    } else {
      #01D1
      #01D3
      #01D6
      #14CC
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a8 = (-1 + a3) in
          M[a8] := 14;
          let:16 a9 = (-1 + a8) in
          M[a9] := CC;
          A := 01;
          B := E0;
          H := 24;
          L := 02;
          SPH := a9[15:8];
          SPL := a9[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := false;
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a10 = (-1 + a3) in
          M[a10] := 14;
          let:16 a11 = (-1 + a10) in
          M[a11] := CC;
          A := 01;
          B := E0;
          H := 24;
          L := 02;
          SPH := a11[15:8];
          SPL := a11[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := false;
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        let:16 a12 = (-1 + a3) in
        M[a12] := E0;
        let:16 a13 = (-1 + a12) in
        M[a13] := C;
        #14CD
        M[2402] := 01;
        #14CE
        #14D1
        let:17 a14 = add17(0020,2402) in
        #14D2
        let:16 a15 = (1 + a13) in
        let:16 a16 = (1 + a15) in
        #14D3
        let:16 a17 = addWithCarry(!true,M[a15],~00) in
        let:8 a18 = (M[a15] & 0F) in
        let:8 a19 = (~00 & 0F) in
        let:16 a20 = addWithCarry(!true,a18,a19) in
        #14D4
        if (!is_zero(a17[7:0])) {
          A := 01;
          B := a17[7:0];
          C := M[a13];
          H := a14[15:0][15:8];
          L := a14[15:0][7:0];
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a17[7:0][7];
          FlagZ := is_zero(a17[7:0]);
          FlagA := a20[7:0][4];
          FlagP := parity(a17[7:0]);
          FlagCY := a14[16];
          jump (14CC);
        } else {
          #14D7
          let:16 a21 = (1 + a16) in
          let:16 a22 = (1 + a21) in
          A := 01;
          B := a17[7:0];
          C := M[a13];
          H := a14[15:0][15:8];
          L := a14[15:0][7:0];
          SPH := a22[15:8];
          SPL := a22[7:0];
          FlagS := a17[7:0][7];
          FlagZ := is_zero(a17[7:0]);
          FlagA := a20[7:0][4];
          FlagP := parity(a17[7:0]);
          FlagCY := a14[16];
          jump ((M[a21],M[a16]));
        }
      }
    }

0807:

    #080A
    #080B
    if (M[2067][0]) {
      #0872
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a1 = (-1 + (SPH,SPL)) in
          M[a1] := 08;
          let:16 a2 = (-1 + a1) in
          M[a2] := 72;
          A := updateBit((M[2067] >> 01),7,M[2067][0]);
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagCY := M[2067][0];
          jump (0008);
        } else {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 08;
          let:16 a4 = (-1 + a3) in
          M[a4] := 72;
          A := updateBit((M[2067] >> 01),7,M[2067][0]);
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagCY := M[2067][0];
          jump (0010);
        }
      } else {
        let:16 a5 = (-1 + (SPH,SPL)) in
        M[a5] := 08;
        let:16 a6 = (-1 + a5) in
        M[a6] := 75;
        #return-to: 0875
        #021A
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a7 = (-1 + a6) in
            M[a7] := 02;
            let:16 a8 = (-1 + a7) in
            M[a8] := 1A;
            A := updateBit((M[2067] >> 01),7,M[2067][0]);
            SPH := a8[15:8];
            SPL := a8[7:0];
            FlagCY := M[2067][0];
            jump (0008);
          } else {
            let:16 a9 = (-1 + a6) in
            M[a9] := 02;
            let:16 a10 = (-1 + a9) in
            M[a10] := 1A;
            A := updateBit((M[2067] >> 01),7,M[2067][0]);
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagCY := M[2067][0];
            jump (0010);
          }
        } else {
          let:8 a11 = (updateBit((M[2067] >> 01),7,M[2067][0]) ^ updateBit((M[2067] >> 01),7,M[2067][0])) in
          #021B
          #021E
          M[2081] := a11;
          #0221
          #0224
          #0227
          #0229
          let:16 a12 = (-1 + a6) in
          M[a12] := 04;
          let:16 a13 = (-1 + a12) in
          M[a13] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a11[7]),6,is_zero(a11)),4,false),2,parity(a11)),0,false);
          #022A
          let:16 a14 = (-1 + a13) in
          M[a14] := 16;
          let:16 a15 = (-1 + a14) in
          M[a15] := 02;
          #022B
          #022E
          let:8 a16 = (M[2081] & M[2081]) in
          let:8 a17 = (M[2081] | M[2081]) in
          #022F
          if (!is_zero(a16)) {
            #0242
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a18 = (-1 + a15) in
                M[a18] := 02;
                let:16 a19 = (-1 + a18) in
                M[a19] := 42;
                A := a16;
                B := 16;
                C := 02;
                D := 21;
                E := 42;
                H := 28;
                L := 06;
                SPH := a19[15:8];
                SPL := a19[7:0];
                FlagS := a16[7];
                FlagZ := is_zero(a16);
                FlagA := a17[3];
                FlagP := parity(a16);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a20 = (-1 + a15) in
                M[a20] := 02;
                let:16 a21 = (-1 + a20) in
                M[a21] := 42;
                A := a16;
                B := 16;
                C := 02;
                D := 21;
                E := 42;
                H := 28;
                L := 06;
                SPH := a21[15:8];
                SPL := a21[7:0];
                FlagS := a16[7];
                FlagZ := is_zero(a16);
                FlagA := a17[3];
                FlagP := parity(a16);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a22 = (-1 + a15) in
              M[a22] := 02;
              let:16 a23 = (-1 + a22) in
              M[a23] := 45;
              #return-to: 0245
              #147C
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a24 = (-1 + a23) in
                  M[a24] := 14;
                  let:16 a25 = (-1 + a24) in
                  M[a25] := 7C;
                  A := a16;
                  B := 16;
                  C := 02;
                  D := 21;
                  E := 42;
                  H := 28;
                  L := 06;
                  SPH := a25[15:8];
                  SPL := a25[7:0];
                  FlagS := a16[7];
                  FlagZ := is_zero(a16);
                  FlagA := a17[3];
                  FlagP := parity(a16);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a26 = (-1 + a23) in
                  M[a26] := 14;
                  let:16 a27 = (-1 + a26) in
                  M[a27] := 7C;
                  A := a16;
                  B := 16;
                  C := 02;
                  D := 21;
                  E := 42;
                  H := 28;
                  L := 06;
                  SPH := a27[15:8];
                  SPL := a27[7:0];
                  FlagS := a16[7];
                  FlagZ := is_zero(a16);
                  FlagA := a17[3];
                  FlagP := parity(a16);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                let:16 a28 = (-1 + a23) in
                M[a28] := 16;
                let:16 a29 = (-1 + a28) in
                M[a29] := 02;
                #147D
                let:16 a30 = (-1 + a29) in
                M[a30] := 28;
                let:16 a31 = (-1 + a30) in
                M[a31] := 06;
                #147E
                #147F
                M[2142] := M[2806];
                #1480
                #1481
                #1482
                let:16 a32 = addWithCarry(!true,02,~00) in
                let:8 a33 = (02 & 0F) in
                let:8 a34 = (~00 & 0F) in
                let:16 a35 = addWithCarry(!true,a33,a34) in
                #1483
                if (!is_zero(a32[7:0])) {
                  A := M[2806];
                  B := 16;
                  C := a32[7:0];
                  D := 21;
                  E := 43;
                  H := 28;
                  L := 07;
                  SPH := a31[15:8];
                  SPL := a31[7:0];
                  FlagS := a32[7:0][7];
                  FlagZ := is_zero(a32[7:0]);
                  FlagA := a35[7:0][4];
                  FlagP := parity(a32[7:0]);
                  FlagCY := false;
                  jump (147E);
                } else {
                  #1486
                  let:16 a36 = (1 + a31) in
                  let:16 a37 = (1 + a36) in
                  #1487
                  #148A
                  let:17 a38 = add17(0020,(M[a36],M[a31])) in
                  #148B
                  let:16 a39 = (1 + a37) in
                  let:16 a40 = (1 + a39) in
                  #148C
                  let:16 a41 = addWithCarry(!true,M[a39],~00) in
                  let:8 a42 = (M[a39] & 0F) in
                  let:8 a43 = (~00 & 0F) in
                  let:16 a44 = addWithCarry(!true,a42,a43) in
                  #148D
                  if (!is_zero(a41[7:0])) {
                    A := M[2806];
                    B := a41[7:0];
                    C := M[a37];
                    D := 21;
                    E := 43;
                    H := a38[15:0][15:8];
                    L := a38[15:0][7:0];
                    SPH := a40[15:8];
                    SPL := a40[7:0];
                    FlagS := a41[7:0][7];
                    FlagZ := is_zero(a41[7:0]);
                    FlagA := a44[7:0][4];
                    FlagP := parity(a41[7:0]);
                    FlagCY := a38[16];
                    jump (147C);
                  } else {
                    #1490
                    let:16 a45 = (1 + a40) in
                    let:16 a46 = (1 + a45) in
                    A := M[2806];
                    B := a41[7:0];
                    C := M[a37];
                    D := 21;
                    E := 43;
                    H := a38[15:0][15:8];
                    L := a38[15:0][7:0];
                    SPH := a46[15:8];
                    SPL := a46[7:0];
                    FlagS := a41[7:0][7];
                    FlagZ := is_zero(a41[7:0]);
                    FlagA := a44[7:0][4];
                    FlagP := parity(a41[7:0]);
                    FlagCY := a38[16];
                    jump ((M[a45],M[a40]));
                  }
                }
              }
            }
          } else {
            #0232
            let:16 a47 = (-1 + a15) in
            M[a47] := 02;
            let:16 a48 = (-1 + a47) in
            M[a48] := 35;
            #return-to: 0235
            #1A69
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a49 = (-1 + a48) in
                M[a49] := 1A;
                let:16 a50 = (-1 + a49) in
                M[a50] := 69;
                A := a16;
                B := 16;
                C := 02;
                D := 21;
                E := 42;
                H := 28;
                L := 06;
                SPH := a50[15:8];
                SPL := a50[7:0];
                FlagS := a16[7];
                FlagZ := is_zero(a16);
                FlagA := a17[3];
                FlagP := parity(a16);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a51 = (-1 + a48) in
                M[a51] := 1A;
                let:16 a52 = (-1 + a51) in
                M[a52] := 69;
                A := a16;
                B := 16;
                C := 02;
                D := 21;
                E := 42;
                H := 28;
                L := 06;
                SPH := a52[15:8];
                SPL := a52[7:0];
                FlagS := a16[7];
                FlagZ := is_zero(a16);
                FlagA := a17[3];
                FlagP := parity(a16);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a53 = (-1 + a48) in
              M[a53] := 16;
              let:16 a54 = (-1 + a53) in
              M[a54] := 02;
              #1A6A
              let:16 a55 = (-1 + a54) in
              M[a55] := 28;
              let:16 a56 = (-1 + a55) in
              M[a56] := 06;
              #1A6B
              #1A6C
              let:8 a57 = (M[2806] | M[2142]) in
              #1A6D
              M[2806] := a57;
              #1A6E
              #1A6F
              #1A70
              let:16 a58 = addWithCarry(!true,02,~00) in
              let:8 a59 = (02 & 0F) in
              let:8 a60 = (~00 & 0F) in
              let:16 a61 = addWithCarry(!true,a59,a60) in
              #1A71
              if (!is_zero(a58[7:0])) {
                A := a57;
                B := 16;
                C := a58[7:0];
                D := 21;
                E := 43;
                H := 28;
                L := 07;
                SPH := a56[15:8];
                SPL := a56[7:0];
                FlagS := a58[7:0][7];
                FlagZ := is_zero(a58[7:0]);
                FlagA := a61[7:0][4];
                FlagP := parity(a58[7:0]);
                FlagCY := false;
                jump (1A6B);
              } else {
                #1A74
                let:16 a62 = (1 + a56) in
                let:16 a63 = (1 + a62) in
                #1A75
                #1A78
                let:17 a64 = add17(0020,(M[a62],M[a56])) in
                #1A79
                let:16 a65 = (1 + a63) in
                let:16 a66 = (1 + a65) in
                #1A7A
                let:16 a67 = addWithCarry(!true,M[a65],~00) in
                let:8 a68 = (M[a65] & 0F) in
                let:8 a69 = (~00 & 0F) in
                let:16 a70 = addWithCarry(!true,a68,a69) in
                #1A7B
                if (!is_zero(a67[7:0])) {
                  A := a57;
                  B := a67[7:0];
                  C := M[a63];
                  D := 21;
                  E := 43;
                  H := a64[15:0][15:8];
                  L := a64[15:0][7:0];
                  SPH := a66[15:8];
                  SPL := a66[7:0];
                  FlagS := a67[7:0][7];
                  FlagZ := is_zero(a67[7:0]);
                  FlagA := a70[7:0][4];
                  FlagP := parity(a67[7:0]);
                  FlagCY := a64[16];
                  jump (1A69);
                } else {
                  #1A7E
                  let:16 a71 = (1 + a66) in
                  let:16 a72 = (1 + a71) in
                  A := a57;
                  B := a67[7:0];
                  C := M[a63];
                  D := 21;
                  E := 43;
                  H := a64[15:0][15:8];
                  L := a64[15:0][7:0];
                  SPH := a72[15:8];
                  SPL := a72[7:0];
                  FlagS := a67[7:0][7];
                  FlagZ := is_zero(a67[7:0]);
                  FlagA := a70[7:0][4];
                  FlagP := parity(a67[7:0]);
                  FlagCY := a64[16];
                  jump ((M[a71],M[a66]));
                }
              }
            }
          }
        }
      }
    } else {
      #080E
      let:16 a73 = (-1 + (SPH,SPL)) in
      M[a73] := 08;
      let:16 a74 = (-1 + a73) in
      M[a74] := 11;
      #return-to: 0811
      #0213
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a75 = (-1 + a74) in
          M[a75] := 02;
          let:16 a76 = (-1 + a75) in
          M[a76] := 13;
          A := updateBit((M[2067] >> 01),7,M[2067][0]);
          SPH := a76[15:8];
          SPL := a76[7:0];
          FlagCY := M[2067][0];
          jump (0008);
        } else {
          let:16 a77 = (-1 + a74) in
          M[a77] := 02;
          let:16 a78 = (-1 + a77) in
          M[a78] := 13;
          A := updateBit((M[2067] >> 01),7,M[2067][0]);
          SPH := a78[15:8];
          SPL := a78[7:0];
          FlagCY := M[2067][0];
          jump (0010);
        }
      } else {
        let:8 a79 = (updateBit((M[2067] >> 01),7,M[2067][0]) ^ updateBit((M[2067] >> 01),7,M[2067][0])) in
        #0214
        #0217
        #021E
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a80 = (-1 + a74) in
            M[a80] := 02;
            let:16 a81 = (-1 + a80) in
            M[a81] := 1E;
            A := a79;
            D := 22;
            E := 42;
            SPH := a81[15:8];
            SPL := a81[7:0];
            FlagS := a79[7];
            FlagZ := is_zero(a79);
            FlagA := false;
            FlagP := parity(a79);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a82 = (-1 + a74) in
            M[a82] := 02;
            let:16 a83 = (-1 + a82) in
            M[a83] := 1E;
            A := a79;
            D := 22;
            E := 42;
            SPH := a83[15:8];
            SPL := a83[7:0];
            FlagS := a79[7];
            FlagZ := is_zero(a79);
            FlagA := false;
            FlagP := parity(a79);
            FlagCY := false;
            jump (0010);
          }
        } else {
          M[2081] := a79;
          #0221
          #0224
          #0227
          #0229
          let:16 a84 = (-1 + a74) in
          M[a84] := 04;
          let:16 a85 = (-1 + a84) in
          M[a85] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a79[7]),6,is_zero(a79)),4,false),2,parity(a79)),0,false);
          #022A
          let:16 a86 = (-1 + a85) in
          M[a86] := 16;
          let:16 a87 = (-1 + a86) in
          M[a87] := 02;
          #022B
          #022E
          let:8 a88 = (M[2081] & M[2081]) in
          let:8 a89 = (M[2081] | M[2081]) in
          #022F
          if (!is_zero(a88)) {
            #0242
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a90 = (-1 + a87) in
                M[a90] := 02;
                let:16 a91 = (-1 + a90) in
                M[a91] := 42;
                A := a88;
                B := 16;
                C := 02;
                D := 22;
                E := 42;
                H := 28;
                L := 06;
                SPH := a91[15:8];
                SPL := a91[7:0];
                FlagS := a88[7];
                FlagZ := is_zero(a88);
                FlagA := a89[3];
                FlagP := parity(a88);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a92 = (-1 + a87) in
                M[a92] := 02;
                let:16 a93 = (-1 + a92) in
                M[a93] := 42;
                A := a88;
                B := 16;
                C := 02;
                D := 22;
                E := 42;
                H := 28;
                L := 06;
                SPH := a93[15:8];
                SPL := a93[7:0];
                FlagS := a88[7];
                FlagZ := is_zero(a88);
                FlagA := a89[3];
                FlagP := parity(a88);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a94 = (-1 + a87) in
              M[a94] := 02;
              let:16 a95 = (-1 + a94) in
              M[a95] := 45;
              #return-to: 0245
              #147C
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a96 = (-1 + a95) in
                  M[a96] := 14;
                  let:16 a97 = (-1 + a96) in
                  M[a97] := 7C;
                  A := a88;
                  B := 16;
                  C := 02;
                  D := 22;
                  E := 42;
                  H := 28;
                  L := 06;
                  SPH := a97[15:8];
                  SPL := a97[7:0];
                  FlagS := a88[7];
                  FlagZ := is_zero(a88);
                  FlagA := a89[3];
                  FlagP := parity(a88);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a98 = (-1 + a95) in
                  M[a98] := 14;
                  let:16 a99 = (-1 + a98) in
                  M[a99] := 7C;
                  A := a88;
                  B := 16;
                  C := 02;
                  D := 22;
                  E := 42;
                  H := 28;
                  L := 06;
                  SPH := a99[15:8];
                  SPL := a99[7:0];
                  FlagS := a88[7];
                  FlagZ := is_zero(a88);
                  FlagA := a89[3];
                  FlagP := parity(a88);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                let:16 a100 = (-1 + a95) in
                M[a100] := 16;
                let:16 a101 = (-1 + a100) in
                M[a101] := 02;
                #147D
                let:16 a102 = (-1 + a101) in
                M[a102] := 28;
                let:16 a103 = (-1 + a102) in
                M[a103] := 06;
                #147E
                #147F
                M[2242] := M[2806];
                #1480
                #1481
                #1482
                let:16 a104 = addWithCarry(!true,02,~00) in
                let:8 a105 = (02 & 0F) in
                let:8 a106 = (~00 & 0F) in
                let:16 a107 = addWithCarry(!true,a105,a106) in
                #1483
                if (!is_zero(a104[7:0])) {
                  A := M[2806];
                  B := 16;
                  C := a104[7:0];
                  D := 22;
                  E := 43;
                  H := 28;
                  L := 07;
                  SPH := a103[15:8];
                  SPL := a103[7:0];
                  FlagS := a104[7:0][7];
                  FlagZ := is_zero(a104[7:0]);
                  FlagA := a107[7:0][4];
                  FlagP := parity(a104[7:0]);
                  FlagCY := false;
                  jump (147E);
                } else {
                  #1486
                  let:16 a108 = (1 + a103) in
                  let:16 a109 = (1 + a108) in
                  #1487
                  #148A
                  let:17 a110 = add17(0020,(M[a108],M[a103])) in
                  #148B
                  let:16 a111 = (1 + a109) in
                  let:16 a112 = (1 + a111) in
                  #148C
                  let:16 a113 = addWithCarry(!true,M[a111],~00) in
                  let:8 a114 = (M[a111] & 0F) in
                  let:8 a115 = (~00 & 0F) in
                  let:16 a116 = addWithCarry(!true,a114,a115) in
                  #148D
                  if (!is_zero(a113[7:0])) {
                    A := M[2806];
                    B := a113[7:0];
                    C := M[a109];
                    D := 22;
                    E := 43;
                    H := a110[15:0][15:8];
                    L := a110[15:0][7:0];
                    SPH := a112[15:8];
                    SPL := a112[7:0];
                    FlagS := a113[7:0][7];
                    FlagZ := is_zero(a113[7:0]);
                    FlagA := a116[7:0][4];
                    FlagP := parity(a113[7:0]);
                    FlagCY := a110[16];
                    jump (147C);
                  } else {
                    #1490
                    let:16 a117 = (1 + a112) in
                    let:16 a118 = (1 + a117) in
                    A := M[2806];
                    B := a113[7:0];
                    C := M[a109];
                    D := 22;
                    E := 43;
                    H := a110[15:0][15:8];
                    L := a110[15:0][7:0];
                    SPH := a118[15:8];
                    SPL := a118[7:0];
                    FlagS := a113[7:0][7];
                    FlagZ := is_zero(a113[7:0]);
                    FlagA := a116[7:0][4];
                    FlagP := parity(a113[7:0]);
                    FlagCY := a110[16];
                    jump ((M[a117],M[a112]));
                  }
                }
              }
            }
          } else {
            #0232
            let:16 a119 = (-1 + a87) in
            M[a119] := 02;
            let:16 a120 = (-1 + a119) in
            M[a120] := 35;
            #return-to: 0235
            #1A69
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a121 = (-1 + a120) in
                M[a121] := 1A;
                let:16 a122 = (-1 + a121) in
                M[a122] := 69;
                A := a88;
                B := 16;
                C := 02;
                D := 22;
                E := 42;
                H := 28;
                L := 06;
                SPH := a122[15:8];
                SPL := a122[7:0];
                FlagS := a88[7];
                FlagZ := is_zero(a88);
                FlagA := a89[3];
                FlagP := parity(a88);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a123 = (-1 + a120) in
                M[a123] := 1A;
                let:16 a124 = (-1 + a123) in
                M[a124] := 69;
                A := a88;
                B := 16;
                C := 02;
                D := 22;
                E := 42;
                H := 28;
                L := 06;
                SPH := a124[15:8];
                SPL := a124[7:0];
                FlagS := a88[7];
                FlagZ := is_zero(a88);
                FlagA := a89[3];
                FlagP := parity(a88);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a125 = (-1 + a120) in
              M[a125] := 16;
              let:16 a126 = (-1 + a125) in
              M[a126] := 02;
              #1A6A
              let:16 a127 = (-1 + a126) in
              M[a127] := 28;
              let:16 a128 = (-1 + a127) in
              M[a128] := 06;
              #1A6B
              #1A6C
              let:8 a129 = (M[2806] | M[2242]) in
              #1A6D
              M[2806] := a129;
              #1A6E
              #1A6F
              #1A70
              let:16 a130 = addWithCarry(!true,02,~00) in
              let:8 a131 = (02 & 0F) in
              let:8 a132 = (~00 & 0F) in
              let:16 a133 = addWithCarry(!true,a131,a132) in
              #1A71
              if (!is_zero(a130[7:0])) {
                A := a129;
                B := 16;
                C := a130[7:0];
                D := 22;
                E := 43;
                H := 28;
                L := 07;
                SPH := a128[15:8];
                SPL := a128[7:0];
                FlagS := a130[7:0][7];
                FlagZ := is_zero(a130[7:0]);
                FlagA := a133[7:0][4];
                FlagP := parity(a130[7:0]);
                FlagCY := false;
                jump (1A6B);
              } else {
                #1A74
                let:16 a134 = (1 + a128) in
                let:16 a135 = (1 + a134) in
                #1A75
                #1A78
                let:17 a136 = add17(0020,(M[a134],M[a128])) in
                #1A79
                let:16 a137 = (1 + a135) in
                let:16 a138 = (1 + a137) in
                #1A7A
                let:16 a139 = addWithCarry(!true,M[a137],~00) in
                let:8 a140 = (M[a137] & 0F) in
                let:8 a141 = (~00 & 0F) in
                let:16 a142 = addWithCarry(!true,a140,a141) in
                #1A7B
                if (!is_zero(a139[7:0])) {
                  A := a129;
                  B := a139[7:0];
                  C := M[a135];
                  D := 22;
                  E := 43;
                  H := a136[15:0][15:8];
                  L := a136[15:0][7:0];
                  SPH := a138[15:8];
                  SPL := a138[7:0];
                  FlagS := a139[7:0][7];
                  FlagZ := is_zero(a139[7:0]);
                  FlagA := a142[7:0][4];
                  FlagP := parity(a139[7:0]);
                  FlagCY := a136[16];
                  jump (1A69);
                } else {
                  #1A7E
                  let:16 a143 = (1 + a138) in
                  let:16 a144 = (1 + a143) in
                  A := a129;
                  B := a139[7:0];
                  C := M[a135];
                  D := 22;
                  E := 43;
                  H := a136[15:0][15:8];
                  L := a136[15:0][7:0];
                  SPH := a144[15:8];
                  SPL := a144[7:0];
                  FlagS := a139[7:0][7];
                  FlagZ := is_zero(a139[7:0]);
                  FlagA := a142[7:0][4];
                  FlagP := parity(a139[7:0]);
                  FlagCY := a136[16];
                  jump ((M[a143],M[a138]));
                }
              }
            }
          }
        }
      }
    }

0811:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 14;
    #return-to: 0814
    #01CF
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 01;
        let:16 a4 = (-1 + a3) in
        M[a4] := CF;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 01;
        let:16 a6 = (-1 + a5) in
        M[a6] := CF;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #01D1
      #01D3
      #01D6
      #14CC
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 14;
          let:16 a8 = (-1 + a7) in
          M[a8] := CC;
          A := 01;
          B := E0;
          H := 24;
          L := 02;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := CC;
          A := 01;
          B := E0;
          H := 24;
          L := 02;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        let:16 a11 = (-1 + a2) in
        M[a11] := E0;
        let:16 a12 = (-1 + a11) in
        M[a12] := C;
        #14CD
        M[2402] := 01;
        #14CE
        #14D1
        let:17 a13 = add17(0020,2402) in
        #14D2
        let:16 a14 = (1 + a12) in
        let:16 a15 = (1 + a14) in
        #14D3
        let:16 a16 = addWithCarry(!true,M[a14],~00) in
        let:8 a17 = (M[a14] & 0F) in
        let:8 a18 = (~00 & 0F) in
        let:16 a19 = addWithCarry(!true,a17,a18) in
        #14D4
        if (!is_zero(a16[7:0])) {
          A := 01;
          B := a16[7:0];
          C := M[a12];
          H := a13[15:0][15:8];
          L := a13[15:0][7:0];
          SPH := a15[15:8];
          SPL := a15[7:0];
          FlagS := a16[7:0][7];
          FlagZ := is_zero(a16[7:0]);
          FlagA := a19[7:0][4];
          FlagP := parity(a16[7:0]);
          FlagCY := a13[16];
          jump (14CC);
        } else {
          #14D7
          let:16 a20 = (1 + a15) in
          let:16 a21 = (1 + a20) in
          A := 01;
          B := a16[7:0];
          C := M[a12];
          H := a13[15:0][15:8];
          L := a13[15:0][7:0];
          SPH := a21[15:8];
          SPL := a21[7:0];
          FlagS := a16[7:0][7];
          FlagZ := is_zero(a16[7:0]);
          FlagA := a19[7:0][4];
          FlagP := parity(a16[7:0]);
          FlagCY := a13[16];
          jump ((M[a20],M[a15]));
        }
      }
    }

0814:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 17;
    #return-to: 0817
    #00B1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 00;
        let:16 a4 = (-1 + a3) in
        M[a4] := B1;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 00;
        let:16 a6 = (-1 + a5) in
        M[a6] := B1;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 00;
      let:16 a8 = (-1 + a7) in
      M[a8] := B4;
      #return-to: 00B4
      #0886
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 08;
          let:16 a10 = (-1 + a9) in
          M[a10] := 86;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 08;
          let:16 a12 = (-1 + a11) in
          M[a12] := 86;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #0889
        #088A
        #088C
        let:16 a13 = (1 + a8) in
        let:16 a14 = (1 + a13) in
        A := M[2067];
        H := M[2067];
        L := FC;
        SPH := a14[15:8];
        SPL := a14[7:0];
        jump ((M[a13],M[a8]));
      }
    }

0817:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 1A;
    #return-to: 081A
    #19D1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := D1;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := D1;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #19D3
      M[20E9] := 01;
      #19D6
      let:16 a7 = (1 + a2) in
      let:16 a8 = (1 + a7) in
      A := 01;
      SPH := a8[15:8];
      SPL := a8[7:0];
      jump ((M[a7],M[a2]));
    }

081A:

    #081C
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 1F;
    #return-to: 081F
    #18FA
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := FA;
        B := 20;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 18;
        let:16 a6 = (-1 + a5) in
        M[a6] := FA;
        B := 20;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #18FD
      let:8 a7 = (20 | M[2094]) in
      #18FE
      M[2094] := a7;
      #1901
      sound_control(Ufo,a7[0]);
      sound_control(Shot,a7[1]);
      sound_control(PlayerDie,a7[2]);
      sound_control(InvaderDie,a7[3]);
      sound_control(ExtraLife,a7[4]);
      #1903
      let:16 a8 = (1 + a2) in
      let:16 a9 = (1 + a8) in
      A := a7;
      B := 20;
      SPH := a9[15:8];
      SPL := a9[7:0];
      FlagS := a7[7];
      FlagZ := is_zero(a7);
      FlagA := false;
      FlagP := parity(a7);
      FlagCY := false;
      jump ((M[a8],M[a2]));
    }

081F:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 22;
    #return-to: 0822
    #1618
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 16;
        let:16 a4 = (-1 + a3) in
        M[a4] := 18;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 16;
        let:16 a6 = (-1 + a5) in
        M[a6] := 18;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #161B
      let:16 a7 = addWithCarry(!false,M[2015],~FF) in
      let:8 a8 = (M[2015] & 0F) in
      let:8 a9 = (~FF & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #161D
      if (!is_zero(a7[7:0])) {
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := M[2015];
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := !a7[15:8][0];
        jump ((M[a11],M[a2]));
      } else {
        #161E
        #1621
        #1622
        #1623
        #1624
        let:8 a13 = (M[2011] | M[2010]) in
        #1625
        if (!is_zero(a13)) {
          let:16 a14 = (1 + a2) in
          let:16 a15 = (1 + a14) in
          A := a13;
          B := M[2011];
          H := 20;
          L := 11;
          SPH := a15[15:8];
          SPL := a15[7:0];
          FlagS := a13[7];
          FlagZ := is_zero(a13);
          FlagA := false;
          FlagP := parity(a13);
          FlagCY := false;
          jump ((M[a14],M[a2]));
        } else {
          #1626
          #1629
          let:8 a16 = (M[2025] & M[2025]) in
          let:8 a17 = (M[2025] | M[2025]) in
          #162A
          if (!is_zero(a16)) {
            let:16 a18 = (1 + a2) in
            let:16 a19 = (1 + a18) in
            A := a16;
            B := M[2011];
            H := 20;
            L := 11;
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a16[7];
            FlagZ := is_zero(a16);
            FlagA := a17[3];
            FlagP := parity(a16);
            FlagCY := false;
            jump ((M[a18],M[a2]));
          } else {
            #162B
            #162E
            let:8 a20 = (M[20EF] & M[20EF]) in
            let:8 a21 = (M[20EF] | M[20EF]) in
            #162F
            if (is_zero(a20)) {
              #1652
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a22 = (-1 + a2) in
                  M[a22] := 16;
                  let:16 a23 = (-1 + a22) in
                  M[a23] := 52;
                  A := a20;
                  B := M[2011];
                  H := 20;
                  L := 11;
                  SPH := a23[15:8];
                  SPL := a23[7:0];
                  FlagS := a20[7];
                  FlagZ := is_zero(a20);
                  FlagA := a21[3];
                  FlagP := parity(a20);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a24 = (-1 + a2) in
                  M[a24] := 16;
                  let:16 a25 = (-1 + a24) in
                  M[a25] := 52;
                  A := a20;
                  B := M[2011];
                  H := 20;
                  L := 11;
                  SPH := a25[15:8];
                  SPL := a25[7:0];
                  FlagS := a20[7];
                  FlagZ := is_zero(a20);
                  FlagA := a21[3];
                  FlagP := parity(a20);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #1655
                M[2025] := 01;
                #1657
                #165A
                let:16 a26 = (1 + (M[20EE],M[20ED])) in
                #165B
                #165C
                let:16 a27 = addWithCarry(!false,a26[7:0],~7E) in
                let:8 a28 = (a26[7:0] & 0F) in
                let:8 a29 = (~7E & 0F) in
                let:16 a30 = addWithCarry(!false,a28,a29) in
                #165E
                if (!a27[15:8][0]) {
                  #1663
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a31 = (-1 + a2) in
                      M[a31] := 16;
                      let:16 a32 = (-1 + a31) in
                      M[a32] := 63;
                      A := a26[7:0];
                      B := M[2011];
                      H := a26[15:8];
                      L := a26[7:0];
                      SPH := a32[15:8];
                      SPL := a32[7:0];
                      FlagS := a27[7:0][7];
                      FlagZ := is_zero(a27[7:0]);
                      FlagA := a30[7:0][4];
                      FlagP := parity(a27[7:0]);
                      FlagCY := !a27[15:8][0];
                      jump (0008);
                    } else {
                      let:16 a33 = (-1 + a2) in
                      M[a33] := 16;
                      let:16 a34 = (-1 + a33) in
                      M[a34] := 63;
                      A := a26[7:0];
                      B := M[2011];
                      H := a26[15:8];
                      L := a26[7:0];
                      SPH := a34[15:8];
                      SPL := a34[7:0];
                      FlagS := a27[7:0][7];
                      FlagZ := is_zero(a27[7:0]);
                      FlagA := a30[7:0][4];
                      FlagP := parity(a27[7:0]);
                      FlagCY := !a27[15:8][0];
                      jump (0010);
                    }
                  } else {
                    M[20ED] := a26[7:0];
                    M[20EE] := a26[15:8];
                    #1666
                    #1667
                    M[201D] := M[a26];
                    #166A
                    let:16 a35 = (1 + a2) in
                    let:16 a36 = (1 + a35) in
                    A := M[a26];
                    B := M[2011];
                    H := a26[15:8];
                    L := a26[7:0];
                    SPH := a36[15:8];
                    SPL := a36[7:0];
                    FlagS := a27[7:0][7];
                    FlagZ := is_zero(a27[7:0]);
                    FlagA := a30[7:0][4];
                    FlagP := parity(a27[7:0]);
                    FlagCY := !a27[15:8][0];
                    jump ((M[a35],M[a2]));
                  }
                } else {
                  #1661
                  #1663
                  M[20ED] := 74;
                  M[20EE] := a26[15:8];
                  #1666
                  #1667
                  M[201D] := M[(a26[15:8],74)];
                  #166A
                  let:16 a37 = (1 + a2) in
                  let:16 a38 = (1 + a37) in
                  A := M[(a26[15:8],74)];
                  B := M[2011];
                  H := a26[15:8];
                  L := 74;
                  SPH := a38[15:8];
                  SPL := a38[7:0];
                  FlagS := a27[7:0][7];
                  FlagZ := is_zero(a27[7:0]);
                  FlagA := a30[7:0][4];
                  FlagP := parity(a27[7:0]);
                  FlagCY := !a27[15:8][0];
                  jump ((M[a37],M[a2]));
                }
              }
            } else {
              #1632
              #1635
              let:8 a39 = (M[202D] & M[202D]) in
              let:8 a40 = (M[202D] | M[202D]) in
              #1636
              if (!is_zero(a39)) {
                #1648
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a41 = (-1 + a2) in
                    M[a41] := 16;
                    let:16 a42 = (-1 + a41) in
                    M[a42] := 48;
                    A := a39;
                    B := M[2011];
                    H := 20;
                    L := 11;
                    SPH := a42[15:8];
                    SPL := a42[7:0];
                    FlagS := a39[7];
                    FlagZ := is_zero(a39);
                    FlagA := a40[3];
                    FlagP := parity(a39);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a43 = (-1 + a2) in
                    M[a43] := 16;
                    let:16 a44 = (-1 + a43) in
                    M[a44] := 48;
                    A := a39;
                    B := M[2011];
                    H := 20;
                    L := 11;
                    SPH := a44[15:8];
                    SPL := a44[7:0];
                    FlagS := a39[7];
                    FlagZ := is_zero(a39);
                    FlagA := a40[3];
                    FlagP := parity(a39);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  let:16 a45 = (-1 + a2) in
                  M[a45] := 16;
                  let:16 a46 = (-1 + a45) in
                  M[a46] := 4B;
                  #return-to: 164B
                  #17C0
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a47 = (-1 + a46) in
                      M[a47] := 17;
                      let:16 a48 = (-1 + a47) in
                      M[a48] := C0;
                      A := a39;
                      B := M[2011];
                      H := 20;
                      L := 11;
                      SPH := a48[15:8];
                      SPL := a48[7:0];
                      FlagS := a39[7];
                      FlagZ := is_zero(a39);
                      FlagA := a40[3];
                      FlagP := parity(a39);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a49 = (-1 + a46) in
                      M[a49] := 17;
                      let:16 a50 = (-1 + a49) in
                      M[a50] := C0;
                      A := a39;
                      B := M[2011];
                      H := 20;
                      L := 11;
                      SPH := a50[15:8];
                      SPL := a50[7:0];
                      FlagS := a39[7];
                      FlagZ := is_zero(a39);
                      FlagA := a40[3];
                      FlagP := parity(a39);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    #17C3
                    #17C4
                    if (!M[2067][0]) {
                      #17CA
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a51 = (-1 + a46) in
                          M[a51] := 17;
                          let:16 a52 = (-1 + a51) in
                          M[a52] := CA;
                          A := updateBit((M[2067] >> 01),7,M[2067][0]);
                          B := M[2011];
                          H := 20;
                          L := 11;
                          SPH := a52[15:8];
                          SPL := a52[7:0];
                          FlagS := a39[7];
                          FlagZ := is_zero(a39);
                          FlagA := a40[3];
                          FlagP := parity(a39);
                          FlagCY := M[2067][0];
                          jump (0008);
                        } else {
                          let:16 a53 = (-1 + a46) in
                          M[a53] := 17;
                          let:16 a54 = (-1 + a53) in
                          M[a54] := CA;
                          A := updateBit((M[2067] >> 01),7,M[2067][0]);
                          B := M[2011];
                          H := 20;
                          L := 11;
                          SPH := a54[15:8];
                          SPL := a54[7:0];
                          FlagS := a39[7];
                          FlagZ := is_zero(a39);
                          FlagA := a40[3];
                          FlagP := parity(a39);
                          FlagCY := M[2067][0];
                          jump (0010);
                        }
                      } else {
                        #17CC
                        let:16 a55 = (1 + a46) in
                        let:16 a56 = (1 + a55) in
                        A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off));
                        B := M[2011];
                        H := 20;
                        L := 11;
                        SPH := a56[15:8];
                        SPL := a56[7:0];
                        FlagS := a39[7];
                        FlagZ := is_zero(a39);
                        FlagA := a40[3];
                        FlagP := parity(a39);
                        FlagCY := M[2067][0];
                        jump ((M[a55],M[a46]));
                      }
                    } else {
                      #17C7
                      #17C9
                      let:16 a57 = (1 + a46) in
                      let:16 a58 = (1 + a57) in
                      A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right));
                      B := M[2011];
                      H := 20;
                      L := 11;
                      SPH := a58[15:8];
                      SPL := a58[7:0];
                      FlagS := a39[7];
                      FlagZ := is_zero(a39);
                      FlagA := a40[3];
                      FlagP := parity(a39);
                      FlagCY := M[2067][0];
                      jump ((M[a57],M[a46]));
                    }
                  }
                }
              } else {
                #1639
                let:16 a59 = (-1 + a2) in
                M[a59] := 16;
                let:16 a60 = (-1 + a59) in
                M[a60] := 3C;
                #return-to: 163C
                #17C0
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a61 = (-1 + a60) in
                    M[a61] := 17;
                    let:16 a62 = (-1 + a61) in
                    M[a62] := C0;
                    A := a39;
                    B := M[2011];
                    H := 20;
                    L := 11;
                    SPH := a62[15:8];
                    SPL := a62[7:0];
                    FlagS := a39[7];
                    FlagZ := is_zero(a39);
                    FlagA := a40[3];
                    FlagP := parity(a39);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a63 = (-1 + a60) in
                    M[a63] := 17;
                    let:16 a64 = (-1 + a63) in
                    M[a64] := C0;
                    A := a39;
                    B := M[2011];
                    H := 20;
                    L := 11;
                    SPH := a64[15:8];
                    SPL := a64[7:0];
                    FlagS := a39[7];
                    FlagZ := is_zero(a39);
                    FlagA := a40[3];
                    FlagP := parity(a39);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  #17C3
                  #17C4
                  if (!M[2067][0]) {
                    #17CA
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a65 = (-1 + a60) in
                        M[a65] := 17;
                        let:16 a66 = (-1 + a65) in
                        M[a66] := CA;
                        A := updateBit((M[2067] >> 01),7,M[2067][0]);
                        B := M[2011];
                        H := 20;
                        L := 11;
                        SPH := a66[15:8];
                        SPL := a66[7:0];
                        FlagS := a39[7];
                        FlagZ := is_zero(a39);
                        FlagA := a40[3];
                        FlagP := parity(a39);
                        FlagCY := M[2067][0];
                        jump (0008);
                      } else {
                        let:16 a67 = (-1 + a60) in
                        M[a67] := 17;
                        let:16 a68 = (-1 + a67) in
                        M[a68] := CA;
                        A := updateBit((M[2067] >> 01),7,M[2067][0]);
                        B := M[2011];
                        H := 20;
                        L := 11;
                        SPH := a68[15:8];
                        SPL := a68[7:0];
                        FlagS := a39[7];
                        FlagZ := is_zero(a39);
                        FlagA := a40[3];
                        FlagP := parity(a39);
                        FlagCY := M[2067][0];
                        jump (0010);
                      }
                    } else {
                      #17CC
                      let:16 a69 = (1 + a60) in
                      let:16 a70 = (1 + a69) in
                      A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off));
                      B := M[2011];
                      H := 20;
                      L := 11;
                      SPH := a70[15:8];
                      SPL := a70[7:0];
                      FlagS := a39[7];
                      FlagZ := is_zero(a39);
                      FlagA := a40[3];
                      FlagP := parity(a39);
                      FlagCY := M[2067][0];
                      jump ((M[a69],M[a60]));
                    }
                  } else {
                    #17C7
                    #17C9
                    let:16 a71 = (1 + a60) in
                    let:16 a72 = (1 + a71) in
                    A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right));
                    B := M[2011];
                    H := 20;
                    L := 11;
                    SPH := a72[15:8];
                    SPL := a72[7:0];
                    FlagS := a39[7];
                    FlagZ := is_zero(a39);
                    FlagA := a40[3];
                    FlagP := parity(a39);
                    FlagCY := M[2067][0];
                    jump ((M[a71],M[a60]));
                  }
                }
              }
            }
          }
        }
      }
    }

0822:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 25;
    #return-to: 0825
    #190A
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 0A;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 0A;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 19;
      let:16 a8 = (-1 + a7) in
      M[a8] := 0D;
      #return-to: 190D
      #14D8
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := D8;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 14;
          let:16 a12 = (-1 + a11) in
          M[a12] := D8;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #14DB
        let:16 a13 = addWithCarry(!false,M[2025],~05) in
        let:8 a14 = (M[2025] & 0F) in
        let:8 a15 = (~05 & 0F) in
        let:16 a16 = addWithCarry(!false,a14,a15) in
        #14DD
        if (is_zero(a13[7:0])) {
          let:16 a17 = (1 + a8) in
          let:16 a18 = (1 + a17) in
          A := M[2025];
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          FlagCY := !a13[15:8][0];
          jump ((M[a17],M[a8]));
        } else {
          #14DE
          let:16 a19 = addWithCarry(!false,M[2025],~02) in
          let:8 a20 = (M[2025] & 0F) in
          let:8 a21 = (~02 & 0F) in
          let:16 a22 = addWithCarry(!false,a20,a21) in
          #14E0
          if (!is_zero(a19[7:0])) {
            let:16 a23 = (1 + a8) in
            let:16 a24 = (1 + a23) in
            A := M[2025];
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := !a19[15:8][0];
            jump ((M[a23],M[a8]));
          } else {
            #14E1
            #14E4
            let:16 a25 = addWithCarry(!false,M[2029],~D8) in
            let:8 a26 = (M[2029] & 0F) in
            let:8 a27 = (~D8 & 0F) in
            let:16 a28 = addWithCarry(!false,a26,a27) in
            #14E6
            #14E7
            if (!!a25[15:8][0]) {
              #1530
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a29 = (-1 + a8) in
                  M[a29] := 15;
                  let:16 a30 = (-1 + a29) in
                  M[a30] := 30;
                  A := M[2029];
                  B := M[2029];
                  SPH := a30[15:8];
                  SPL := a30[7:0];
                  FlagS := a25[7:0][7];
                  FlagZ := is_zero(a25[7:0]);
                  FlagA := a28[7:0][4];
                  FlagP := parity(a25[7:0]);
                  FlagCY := !a25[15:8][0];
                  jump (0008);
                } else {
                  let:16 a31 = (-1 + a8) in
                  M[a31] := 15;
                  let:16 a32 = (-1 + a31) in
                  M[a32] := 30;
                  A := M[2029];
                  B := M[2029];
                  SPH := a32[15:8];
                  SPL := a32[7:0];
                  FlagS := a25[7:0][7];
                  FlagZ := is_zero(a25[7:0]);
                  FlagA := a28[7:0][4];
                  FlagP := parity(a25[7:0]);
                  FlagCY := !a25[15:8][0];
                  jump (0010);
                }
              } else {
                #1532
                M[2025] := 03;
                #1535
                #154A
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a33 = (-1 + a8) in
                    M[a33] := 15;
                    let:16 a34 = (-1 + a33) in
                    M[a34] := 4A;
                    A := 03;
                    B := M[2029];
                    SPH := a34[15:8];
                    SPL := a34[7:0];
                    FlagS := a25[7:0][7];
                    FlagZ := is_zero(a25[7:0]);
                    FlagA := a28[7:0][4];
                    FlagP := parity(a25[7:0]);
                    FlagCY := !a25[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a35 = (-1 + a8) in
                    M[a35] := 15;
                    let:16 a36 = (-1 + a35) in
                    M[a36] := 4A;
                    A := 03;
                    B := M[2029];
                    SPH := a36[15:8];
                    SPL := a36[7:0];
                    FlagS := a25[7:0][7];
                    FlagZ := is_zero(a25[7:0]);
                    FlagA := a28[7:0][4];
                    FlagP := parity(a25[7:0]);
                    FlagCY := !a25[15:8][0];
                    jump (0010);
                  }
                } else {
                  let:8 a37 = (03 ^ 03) in
                  #154B
                  M[2002] := a37;
                  #154E
                  #1550
                  #19DC
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a38 = (-1 + a8) in
                      M[a38] := 19;
                      let:16 a39 = (-1 + a38) in
                      M[a39] := DC;
                      A := a37;
                      B := F7;
                      SPH := a39[15:8];
                      SPL := a39[7:0];
                      FlagS := a37[7];
                      FlagZ := is_zero(a37);
                      FlagA := false;
                      FlagP := parity(a37);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a40 = (-1 + a8) in
                      M[a40] := 19;
                      let:16 a41 = (-1 + a40) in
                      M[a41] := DC;
                      A := a37;
                      B := F7;
                      SPH := a41[15:8];
                      SPL := a41[7:0];
                      FlagS := a37[7];
                      FlagZ := is_zero(a37);
                      FlagA := false;
                      FlagP := parity(a37);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    #19DF
                    let:8 a42 = (F7 & M[2094]) in
                    let:8 a43 = (F7 | M[2094]) in
                    #19E0
                    M[2094] := a42;
                    #19E3
                    sound_control(Ufo,a42[0]);
                    sound_control(Shot,a42[1]);
                    sound_control(PlayerDie,a42[2]);
                    sound_control(InvaderDie,a42[3]);
                    sound_control(ExtraLife,a42[4]);
                    #19E5
                    let:16 a44 = (1 + a8) in
                    let:16 a45 = (1 + a44) in
                    A := a42;
                    B := F7;
                    SPH := a45[15:8];
                    SPL := a45[7:0];
                    FlagS := a42[7];
                    FlagZ := is_zero(a42);
                    FlagA := a43[3];
                    FlagP := parity(a42);
                    FlagCY := false;
                    jump ((M[a44],M[a8]));
                  }
                }
              }
            } else {
              #14EA
              #14ED
              let:8 a46 = (M[2002] & M[2002]) in
              let:8 a47 = (M[2002] | M[2002]) in
              #14EE
              if (is_zero(a46)) {
                let:16 a48 = (1 + a8) in
                let:16 a49 = (1 + a48) in
                A := a46;
                B := M[2029];
                SPH := a49[15:8];
                SPL := a49[7:0];
                FlagS := a46[7];
                FlagZ := is_zero(a46);
                FlagA := a47[3];
                FlagP := parity(a46);
                FlagCY := false;
                jump ((M[a48],M[a8]));
              } else {
                #14EF
                #14F0
                let:16 a50 = addWithCarry(!false,M[2029],~CE) in
                let:8 a51 = (M[2029] & 0F) in
                let:8 a52 = (~CE & 0F) in
                let:16 a53 = addWithCarry(!false,a51,a52) in
                #14F2
                if (!!a50[15:8][0]) {
                  #1579
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a54 = (-1 + a8) in
                      M[a54] := 15;
                      let:16 a55 = (-1 + a54) in
                      M[a55] := 79;
                      A := M[2029];
                      B := M[2029];
                      SPH := a55[15:8];
                      SPL := a55[7:0];
                      FlagS := a50[7:0][7];
                      FlagZ := is_zero(a50[7:0]);
                      FlagA := a53[7:0][4];
                      FlagP := parity(a50[7:0]);
                      FlagCY := !a50[15:8][0];
                      jump (0008);
                    } else {
                      let:16 a56 = (-1 + a8) in
                      M[a56] := 15;
                      let:16 a57 = (-1 + a56) in
                      M[a57] := 79;
                      A := M[2029];
                      B := M[2029];
                      SPH := a57[15:8];
                      SPL := a57[7:0];
                      FlagS := a50[7:0][7];
                      FlagZ := is_zero(a50[7:0]);
                      FlagA := a53[7:0][4];
                      FlagP := parity(a50[7:0]);
                      FlagCY := !a50[15:8][0];
                      jump (0010);
                    }
                  } else {
                    #157B
                    M[2085] := 01;
                    #157E
                    A := 01;
                    B := M[2029];
                    SPH := a8[15:8];
                    SPL := a8[7:0];
                    FlagS := a50[7:0][7];
                    FlagZ := is_zero(a50[7:0]);
                    FlagA := a53[7:0][4];
                    FlagP := parity(a50[7:0]);
                    FlagCY := !a50[15:8][0];
                    jump (1545);
                  }
                } else {
                  #14F5
                  let:16 a58 = addWithCarry(false,06,M[2029]) in
                  let:8 a59 = (06 & 0F) in
                  let:8 a60 = (M[2029] & 0F) in
                  let:16 a61 = addWithCarry(false,a59,a60) in
                  #14F7
                  #14F8
                  #14FB
                  let:16 a62 = addWithCarry(!false,M[2009],~90) in
                  let:8 a63 = (M[2009] & 0F) in
                  let:8 a64 = (~90 & 0F) in
                  let:16 a65 = addWithCarry(!false,a63,a64) in
                  #14FD
                  if (!!a62[15:8][0]) {
                    #1504
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a66 = (-1 + a8) in
                        M[a66] := 15;
                        let:16 a67 = (-1 + a66) in
                        M[a67] := 04;
                        A := M[2009];
                        B := a58[7:0];
                        SPH := a67[15:8];
                        SPL := a67[7:0];
                        FlagS := a62[7:0][7];
                        FlagZ := is_zero(a62[7:0]);
                        FlagA := a65[7:0][4];
                        FlagP := parity(a62[7:0]);
                        FlagCY := !a62[15:8][0];
                        jump (0008);
                      } else {
                        let:16 a68 = (-1 + a8) in
                        M[a68] := 15;
                        let:16 a69 = (-1 + a68) in
                        M[a69] := 04;
                        A := M[2009];
                        B := a58[7:0];
                        SPH := a69[15:8];
                        SPL := a69[7:0];
                        FlagS := a62[7:0][7];
                        FlagZ := is_zero(a62[7:0]);
                        FlagA := a65[7:0][4];
                        FlagP := parity(a62[7:0]);
                        FlagCY := !a62[15:8][0];
                        jump (0010);
                      }
                    } else {
                      #1505
                      let:16 a70 = (-1 + a8) in
                      M[a70] := 15;
                      let:16 a71 = (-1 + a70) in
                      M[a71] := 08;
                      #return-to: 1508
                      #1562
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a72 = (-1 + a71) in
                          M[a72] := 15;
                          let:16 a73 = (-1 + a72) in
                          M[a73] := 62;
                          A := M[2009];
                          B := a58[7:0];
                          L := a58[7:0];
                          SPH := a73[15:8];
                          SPL := a73[7:0];
                          FlagS := a62[7:0][7];
                          FlagZ := is_zero(a62[7:0]);
                          FlagA := a65[7:0][4];
                          FlagP := parity(a62[7:0]);
                          FlagCY := !a62[15:8][0];
                          jump (0008);
                        } else {
                          let:16 a74 = (-1 + a71) in
                          M[a74] := 15;
                          let:16 a75 = (-1 + a74) in
                          M[a75] := 62;
                          A := M[2009];
                          B := a58[7:0];
                          L := a58[7:0];
                          SPH := a75[15:8];
                          SPL := a75[7:0];
                          FlagS := a62[7:0][7];
                          FlagZ := is_zero(a62[7:0]);
                          FlagA := a65[7:0][4];
                          FlagP := parity(a62[7:0]);
                          FlagCY := !a62[15:8][0];
                          jump (0010);
                        }
                      } else {
                        #1565
                        #1566
                        let:16 a76 = (-1 + a71) in
                        M[a76] := 15;
                        let:16 a77 = (-1 + a76) in
                        M[a77] := 69;
                        #return-to: 1569
                        #1554
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a78 = (-1 + a77) in
                            M[a78] := 15;
                            let:16 a79 = (-1 + a78) in
                            M[a79] := 54;
                            A := M[2009];
                            B := a58[7:0];
                            H := a58[7:0];
                            L := a58[7:0];
                            SPH := a79[15:8];
                            SPL := a79[7:0];
                            FlagS := a62[7:0][7];
                            FlagZ := is_zero(a62[7:0]);
                            FlagA := a65[7:0][4];
                            FlagP := parity(a62[7:0]);
                            FlagCY := !a62[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a80 = (-1 + a77) in
                            M[a80] := 15;
                            let:16 a81 = (-1 + a80) in
                            M[a81] := 54;
                            A := M[2009];
                            B := a58[7:0];
                            H := a58[7:0];
                            L := a58[7:0];
                            SPH := a81[15:8];
                            SPL := a81[7:0];
                            FlagS := a62[7:0][7];
                            FlagZ := is_zero(a62[7:0]);
                            FlagA := a65[7:0][4];
                            FlagP := parity(a62[7:0]);
                            FlagCY := !a62[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1556
                          let:16 a82 = addWithCarry(!false,M[2009],~a58[7:0]) in
                          let:8 a83 = (M[2009] & 0F) in
                          let:8 a84 = (~a58[7:0] & 0F) in
                          let:16 a85 = addWithCarry(!false,a83,a84) in
                          #1557
                          if (!!a82[15:8][0]) {
                            let:16 a86 = (-1 + a77) in
                            M[a86] := 15;
                            let:16 a87 = (-1 + a86) in
                            M[a87] := 5A;
                            #return-to: 155A
                            #1590
                            if ((g_time_to_wakeup && g_interrupts_enabled)) {
                              disable_interrupts()
                              if (g_half_frame) {
                                let:16 a88 = (-1 + a87) in
                                M[a88] := 15;
                                let:16 a89 = (-1 + a88) in
                                M[a89] := 90;
                                A := M[2009];
                                B := a58[7:0];
                                C := 00;
                                H := a58[7:0];
                                L := a58[7:0];
                                SPH := a89[15:8];
                                SPL := a89[7:0];
                                FlagS := a82[7:0][7];
                                FlagZ := is_zero(a82[7:0]);
                                FlagA := a85[7:0][4];
                                FlagP := parity(a82[7:0]);
                                FlagCY := !a82[15:8][0];
                                jump (0008);
                              } else {
                                let:16 a90 = (-1 + a87) in
                                M[a90] := 15;
                                let:16 a91 = (-1 + a90) in
                                M[a91] := 90;
                                A := M[2009];
                                B := a58[7:0];
                                C := 00;
                                H := a58[7:0];
                                L := a58[7:0];
                                SPH := a91[15:8];
                                SPL := a91[7:0];
                                FlagS := a82[7:0][7];
                                FlagZ := is_zero(a82[7:0]);
                                FlagA := a85[7:0][4];
                                FlagP := parity(a82[7:0]);
                                FlagCY := !a82[15:8][0];
                                jump (0010);
                              }
                            } else {
                              let:16 a92 = addWithCarry(true,00,00) in
                              let:8 a93 = (00 & 0F) in
                              let:8 a94 = (00 & 0F) in
                              let:16 a95 = addWithCarry(true,a93,a94) in
                              #1591
                              let:16 a96 = addWithCarry(false,10,M[2009]) in
                              let:8 a97 = (10 & 0F) in
                              let:8 a98 = (M[2009] & 0F) in
                              let:16 a99 = addWithCarry(false,a97,a98) in
                              #1593
                              if (a96[7:0][7]) {
                                A := a96[7:0];
                                B := a58[7:0];
                                C := a92[7:0];
                                H := a58[7:0];
                                L := a58[7:0];
                                SPH := a87[15:8];
                                SPL := a87[7:0];
                                FlagS := a96[7:0][7];
                                FlagZ := is_zero(a96[7:0]);
                                FlagA := a99[7:0][4];
                                FlagP := parity(a96[7:0]);
                                FlagCY := a96[15:8][0];
                                jump (1590);
                              } else {
                                #1596
                                let:16 a100 = (1 + a87) in
                                let:16 a101 = (1 + a100) in
                                A := a96[7:0];
                                B := a58[7:0];
                                C := a92[7:0];
                                H := a58[7:0];
                                L := a58[7:0];
                                SPH := a101[15:8];
                                SPL := a101[7:0];
                                FlagS := a96[7:0][7];
                                FlagZ := is_zero(a96[7:0]);
                                FlagA := a99[7:0][4];
                                FlagP := parity(a96[7:0]);
                                FlagCY := a96[15:8][0];
                                jump ((M[a100],M[a87]));
                              }
                            }
                          } else {
                            A := M[2009];
                            B := a58[7:0];
                            C := 00;
                            H := a58[7:0];
                            L := a58[7:0];
                            SPH := a77[15:8];
                            SPL := a77[7:0];
                            FlagS := a82[7:0][7];
                            FlagZ := is_zero(a82[7:0]);
                            FlagA := a85[7:0][4];
                            FlagP := parity(a82[7:0]);
                            FlagCY := !a82[15:8][0];
                            jump (155A);
                          }
                        }
                      }
                    }
                  } else {
                    #1500
                    let:16 a102 = addWithCarry(!false,M[2009],~a58[7:0]) in
                    let:8 a103 = (M[2009] & 0F) in
                    let:8 a104 = (~a58[7:0] & 0F) in
                    let:16 a105 = addWithCarry(!false,a103,a104) in
                    #1501
                    if (!!a102[15:8][0]) {
                      #1530
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a106 = (-1 + a8) in
                          M[a106] := 15;
                          let:16 a107 = (-1 + a106) in
                          M[a107] := 30;
                          A := M[2009];
                          B := a58[7:0];
                          SPH := a107[15:8];
                          SPL := a107[7:0];
                          FlagS := a102[7:0][7];
                          FlagZ := is_zero(a102[7:0]);
                          FlagA := a105[7:0][4];
                          FlagP := parity(a102[7:0]);
                          FlagCY := !a102[15:8][0];
                          jump (0008);
                        } else {
                          let:16 a108 = (-1 + a8) in
                          M[a108] := 15;
                          let:16 a109 = (-1 + a108) in
                          M[a109] := 30;
                          A := M[2009];
                          B := a58[7:0];
                          SPH := a109[15:8];
                          SPL := a109[7:0];
                          FlagS := a102[7:0][7];
                          FlagZ := is_zero(a102[7:0]);
                          FlagA := a105[7:0][4];
                          FlagP := parity(a102[7:0]);
                          FlagCY := !a102[15:8][0];
                          jump (0010);
                        }
                      } else {
                        #1532
                        M[2025] := 03;
                        #1535
                        #154A
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a110 = (-1 + a8) in
                            M[a110] := 15;
                            let:16 a111 = (-1 + a110) in
                            M[a111] := 4A;
                            A := 03;
                            B := a58[7:0];
                            SPH := a111[15:8];
                            SPL := a111[7:0];
                            FlagS := a102[7:0][7];
                            FlagZ := is_zero(a102[7:0]);
                            FlagA := a105[7:0][4];
                            FlagP := parity(a102[7:0]);
                            FlagCY := !a102[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a112 = (-1 + a8) in
                            M[a112] := 15;
                            let:16 a113 = (-1 + a112) in
                            M[a113] := 4A;
                            A := 03;
                            B := a58[7:0];
                            SPH := a113[15:8];
                            SPL := a113[7:0];
                            FlagS := a102[7:0][7];
                            FlagZ := is_zero(a102[7:0]);
                            FlagA := a105[7:0][4];
                            FlagP := parity(a102[7:0]);
                            FlagCY := !a102[15:8][0];
                            jump (0010);
                          }
                        } else {
                          let:8 a114 = (03 ^ 03) in
                          #154B
                          M[2002] := a114;
                          #154E
                          #1550
                          #19DC
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a115 = (-1 + a8) in
                              M[a115] := 19;
                              let:16 a116 = (-1 + a115) in
                              M[a116] := DC;
                              A := a114;
                              B := F7;
                              SPH := a116[15:8];
                              SPL := a116[7:0];
                              FlagS := a114[7];
                              FlagZ := is_zero(a114);
                              FlagA := false;
                              FlagP := parity(a114);
                              FlagCY := false;
                              jump (0008);
                            } else {
                              let:16 a117 = (-1 + a8) in
                              M[a117] := 19;
                              let:16 a118 = (-1 + a117) in
                              M[a118] := DC;
                              A := a114;
                              B := F7;
                              SPH := a118[15:8];
                              SPL := a118[7:0];
                              FlagS := a114[7];
                              FlagZ := is_zero(a114);
                              FlagA := false;
                              FlagP := parity(a114);
                              FlagCY := false;
                              jump (0010);
                            }
                          } else {
                            #19DF
                            let:8 a119 = (F7 & M[2094]) in
                            let:8 a120 = (F7 | M[2094]) in
                            #19E0
                            M[2094] := a119;
                            #19E3
                            sound_control(Ufo,a119[0]);
                            sound_control(Shot,a119[1]);
                            sound_control(PlayerDie,a119[2]);
                            sound_control(InvaderDie,a119[3]);
                            sound_control(ExtraLife,a119[4]);
                            #19E5
                            let:16 a121 = (1 + a8) in
                            let:16 a122 = (1 + a121) in
                            A := a119;
                            B := F7;
                            SPH := a122[15:8];
                            SPL := a122[7:0];
                            FlagS := a119[7];
                            FlagZ := is_zero(a119);
                            FlagA := a120[3];
                            FlagP := parity(a119);
                            FlagCY := false;
                            jump ((M[a121],M[a8]));
                          }
                        }
                      }
                    } else {
                      #1504
                      #1505
                      let:16 a123 = (-1 + a8) in
                      M[a123] := 15;
                      let:16 a124 = (-1 + a123) in
                      M[a124] := 08;
                      #return-to: 1508
                      #1562
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a125 = (-1 + a124) in
                          M[a125] := 15;
                          let:16 a126 = (-1 + a125) in
                          M[a126] := 62;
                          A := M[2009];
                          B := a58[7:0];
                          L := a58[7:0];
                          SPH := a126[15:8];
                          SPL := a126[7:0];
                          FlagS := a102[7:0][7];
                          FlagZ := is_zero(a102[7:0]);
                          FlagA := a105[7:0][4];
                          FlagP := parity(a102[7:0]);
                          FlagCY := !a102[15:8][0];
                          jump (0008);
                        } else {
                          let:16 a127 = (-1 + a124) in
                          M[a127] := 15;
                          let:16 a128 = (-1 + a127) in
                          M[a128] := 62;
                          A := M[2009];
                          B := a58[7:0];
                          L := a58[7:0];
                          SPH := a128[15:8];
                          SPL := a128[7:0];
                          FlagS := a102[7:0][7];
                          FlagZ := is_zero(a102[7:0]);
                          FlagA := a105[7:0][4];
                          FlagP := parity(a102[7:0]);
                          FlagCY := !a102[15:8][0];
                          jump (0010);
                        }
                      } else {
                        #1565
                        #1566
                        let:16 a129 = (-1 + a124) in
                        M[a129] := 15;
                        let:16 a130 = (-1 + a129) in
                        M[a130] := 69;
                        #return-to: 1569
                        #1554
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a131 = (-1 + a130) in
                            M[a131] := 15;
                            let:16 a132 = (-1 + a131) in
                            M[a132] := 54;
                            A := M[2009];
                            B := a58[7:0];
                            H := a58[7:0];
                            L := a58[7:0];
                            SPH := a132[15:8];
                            SPL := a132[7:0];
                            FlagS := a102[7:0][7];
                            FlagZ := is_zero(a102[7:0]);
                            FlagA := a105[7:0][4];
                            FlagP := parity(a102[7:0]);
                            FlagCY := !a102[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a133 = (-1 + a130) in
                            M[a133] := 15;
                            let:16 a134 = (-1 + a133) in
                            M[a134] := 54;
                            A := M[2009];
                            B := a58[7:0];
                            H := a58[7:0];
                            L := a58[7:0];
                            SPH := a134[15:8];
                            SPL := a134[7:0];
                            FlagS := a102[7:0][7];
                            FlagZ := is_zero(a102[7:0]);
                            FlagA := a105[7:0][4];
                            FlagP := parity(a102[7:0]);
                            FlagCY := !a102[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1556
                          let:16 a135 = addWithCarry(!false,M[2009],~a58[7:0]) in
                          let:8 a136 = (M[2009] & 0F) in
                          let:8 a137 = (~a58[7:0] & 0F) in
                          let:16 a138 = addWithCarry(!false,a136,a137) in
                          #1557
                          if (!!a135[15:8][0]) {
                            let:16 a139 = (-1 + a130) in
                            M[a139] := 15;
                            let:16 a140 = (-1 + a139) in
                            M[a140] := 5A;
                            #return-to: 155A
                            #1590
                            if ((g_time_to_wakeup && g_interrupts_enabled)) {
                              disable_interrupts()
                              if (g_half_frame) {
                                let:16 a141 = (-1 + a140) in
                                M[a141] := 15;
                                let:16 a142 = (-1 + a141) in
                                M[a142] := 90;
                                A := M[2009];
                                B := a58[7:0];
                                C := 00;
                                H := a58[7:0];
                                L := a58[7:0];
                                SPH := a142[15:8];
                                SPL := a142[7:0];
                                FlagS := a135[7:0][7];
                                FlagZ := is_zero(a135[7:0]);
                                FlagA := a138[7:0][4];
                                FlagP := parity(a135[7:0]);
                                FlagCY := !a135[15:8][0];
                                jump (0008);
                              } else {
                                let:16 a143 = (-1 + a140) in
                                M[a143] := 15;
                                let:16 a144 = (-1 + a143) in
                                M[a144] := 90;
                                A := M[2009];
                                B := a58[7:0];
                                C := 00;
                                H := a58[7:0];
                                L := a58[7:0];
                                SPH := a144[15:8];
                                SPL := a144[7:0];
                                FlagS := a135[7:0][7];
                                FlagZ := is_zero(a135[7:0]);
                                FlagA := a138[7:0][4];
                                FlagP := parity(a135[7:0]);
                                FlagCY := !a135[15:8][0];
                                jump (0010);
                              }
                            } else {
                              let:16 a145 = addWithCarry(true,00,00) in
                              let:8 a146 = (00 & 0F) in
                              let:8 a147 = (00 & 0F) in
                              let:16 a148 = addWithCarry(true,a146,a147) in
                              #1591
                              let:16 a149 = addWithCarry(false,10,M[2009]) in
                              let:8 a150 = (10 & 0F) in
                              let:8 a151 = (M[2009] & 0F) in
                              let:16 a152 = addWithCarry(false,a150,a151) in
                              #1593
                              if (a149[7:0][7]) {
                                A := a149[7:0];
                                B := a58[7:0];
                                C := a145[7:0];
                                H := a58[7:0];
                                L := a58[7:0];
                                SPH := a140[15:8];
                                SPL := a140[7:0];
                                FlagS := a149[7:0][7];
                                FlagZ := is_zero(a149[7:0]);
                                FlagA := a152[7:0][4];
                                FlagP := parity(a149[7:0]);
                                FlagCY := a149[15:8][0];
                                jump (1590);
                              } else {
                                #1596
                                let:16 a153 = (1 + a140) in
                                let:16 a154 = (1 + a153) in
                                A := a149[7:0];
                                B := a58[7:0];
                                C := a145[7:0];
                                H := a58[7:0];
                                L := a58[7:0];
                                SPH := a154[15:8];
                                SPL := a154[7:0];
                                FlagS := a149[7:0][7];
                                FlagZ := is_zero(a149[7:0]);
                                FlagA := a152[7:0][4];
                                FlagP := parity(a149[7:0]);
                                FlagCY := a149[15:8][0];
                                jump ((M[a153],M[a140]));
                              }
                            }
                          } else {
                            A := M[2009];
                            B := a58[7:0];
                            C := 00;
                            H := a58[7:0];
                            L := a58[7:0];
                            SPH := a130[15:8];
                            SPL := a130[7:0];
                            FlagS := a135[7:0][7];
                            FlagZ := is_zero(a135[7:0]);
                            FlagA := a138[7:0][4];
                            FlagP := parity(a135[7:0]);
                            FlagCY := !a135[15:8][0];
                            jump (155A);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

0825:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 28;
    #return-to: 0828
    #15F3
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 15;
        let:16 a4 = (-1 + a3) in
        M[a4] := F3;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 15;
        let:16 a6 = (-1 + a5) in
        M[a6] := F3;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 15;
      let:16 a8 = (-1 + a7) in
      M[a8] := F6;
      #return-to: 15F6
      #1611
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 16;
          let:16 a10 = (-1 + a9) in
          M[a10] := 11;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 16;
          let:16 a12 = (-1 + a11) in
          M[a12] := 11;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1613
        #1616
        #1617
        let:16 a13 = (1 + a8) in
        let:16 a14 = (1 + a13) in
        A := M[2067];
        H := M[2067];
        L := 00;
        SPH := a14[15:8];
        SPL := a14[7:0];
        jump ((M[a13],M[a8]));
      }
    }

0828:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 2B;
    #return-to: 082B
    #0988
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 09;
        let:16 a4 = (-1 + a3) in
        M[a4] := 88;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 09;
        let:16 a6 = (-1 + a5) in
        M[a6] := 88;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 09;
      let:16 a8 = (-1 + a7) in
      M[a8] := 8B;
      #return-to: 098B
      #09CA
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 09;
          let:16 a10 = (-1 + a9) in
          M[a10] := CA;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 09;
          let:16 a12 = (-1 + a11) in
          M[a12] := CA;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #09CD
        #09CE
        #09D1
        if (M[2067][0]) {
          let:16 a13 = (1 + a8) in
          let:16 a14 = (1 + a13) in
          A := updateBit((M[2067] >> 01),7,M[2067][0]);
          H := 20;
          L := F8;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagCY := M[2067][0];
          jump ((M[a13],M[a8]));
        } else {
          #09D2
          #09D5
          let:16 a15 = (1 + a8) in
          let:16 a16 = (1 + a15) in
          A := updateBit((M[2067] >> 01),7,M[2067][0]);
          H := 20;
          L := FC;
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagCY := M[2067][0];
          jump ((M[a15],M[a8]));
        }
      }
    }

082B:

    #082E
    let:8 a1 = (M[2082] & M[2082]) in
    let:8 a2 = (M[2082] | M[2082]) in
    #082F
    if (is_zero(a1)) {
      #09EF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 09;
          let:16 a4 = (-1 + a3) in
          M[a4] := EF;
          A := a1;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 09;
          let:16 a6 = (-1 + a5) in
          M[a6] := EF;
          A := a1;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        let:16 a7 = (-1 + (SPH,SPL)) in
        M[a7] := 09;
        let:16 a8 = (-1 + a7) in
        M[a8] := F2;
        #return-to: 09F2
        #0A3C
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a8) in
            M[a9] := 0A;
            let:16 a10 = (-1 + a9) in
            M[a10] := 3C;
            A := a1;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a11 = (-1 + a8) in
            M[a11] := 0A;
            let:16 a12 = (-1 + a11) in
            M[a12] := 3C;
            A := a1;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a13 = (-1 + a8) in
          M[a13] := 0A;
          let:16 a14 = (-1 + a13) in
          M[a14] := 3F;
          #return-to: 0A3F
          #0A59
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a15 = (-1 + a14) in
              M[a15] := 0A;
              let:16 a16 = (-1 + a15) in
              M[a16] := 59;
              A := a1;
              SPH := a16[15:8];
              SPL := a16[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a17 = (-1 + a14) in
              M[a17] := 0A;
              let:16 a18 = (-1 + a17) in
              M[a18] := 59;
              A := a1;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #0A5C
            let:16 a19 = addWithCarry(!false,M[2015],~FF) in
            let:8 a20 = (M[2015] & 0F) in
            let:8 a21 = (~FF & 0F) in
            let:16 a22 = addWithCarry(!false,a20,a21) in
            #0A5E
            let:16 a23 = (1 + a14) in
            let:16 a24 = (1 + a23) in
            A := M[2015];
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := !a19[15:8][0];
            jump ((M[a23],M[a14]));
          }
        }
      }
    } else {
      #0832
      let:16 a25 = (-1 + (SPH,SPL)) in
      M[a25] := 08;
      let:16 a26 = (-1 + a25) in
      M[a26] := 35;
      #return-to: 0835
      #170E
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a27 = (-1 + a26) in
          M[a27] := 17;
          let:16 a28 = (-1 + a27) in
          M[a28] := 0E;
          A := a1;
          SPH := a28[15:8];
          SPL := a28[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a29 = (-1 + a26) in
          M[a29] := 17;
          let:16 a30 = (-1 + a29) in
          M[a30] := 0E;
          A := a1;
          SPH := a30[15:8];
          SPL := a30[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        let:16 a31 = (-1 + a26) in
        M[a31] := 17;
        let:16 a32 = (-1 + a31) in
        M[a32] := 11;
        #return-to: 1711
        #09CA
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a33 = (-1 + a32) in
            M[a33] := 09;
            let:16 a34 = (-1 + a33) in
            M[a34] := CA;
            A := a1;
            SPH := a34[15:8];
            SPL := a34[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a35 = (-1 + a32) in
            M[a35] := 09;
            let:16 a36 = (-1 + a35) in
            M[a36] := CA;
            A := a1;
            SPH := a36[15:8];
            SPL := a36[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #09CD
          #09CE
          #09D1
          if (M[2067][0]) {
            let:16 a37 = (1 + a32) in
            let:16 a38 = (1 + a37) in
            A := updateBit((M[2067] >> 01),7,M[2067][0]);
            H := 20;
            L := F8;
            SPH := a38[15:8];
            SPL := a38[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := M[2067][0];
            jump ((M[a37],M[a32]));
          } else {
            #09D2
            #09D5
            let:16 a39 = (1 + a32) in
            let:16 a40 = (1 + a39) in
            A := updateBit((M[2067] >> 01),7,M[2067][0]);
            H := 20;
            L := FC;
            SPH := a40[15:8];
            SPL := a40[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := M[2067][0];
            jump ((M[a39],M[a32]));
          }
        }
      }
    }

0835:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 38;
    #return-to: 0838
    #0935
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 09;
        let:16 a4 = (-1 + a3) in
        M[a4] := 35;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 09;
        let:16 a6 = (-1 + a5) in
        M[a6] := 35;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 09;
      let:16 a8 = (-1 + a7) in
      M[a8] := 38;
      #return-to: 0938
      #1910
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 19;
          let:16 a10 = (-1 + a9) in
          M[a10] := 10;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 19;
          let:16 a12 = (-1 + a11) in
          M[a12] := 10;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1913
        #1916
        #1917
        if (M[2067][0]) {
          let:16 a13 = (1 + a8) in
          let:16 a14 = (1 + a13) in
          A := updateBit((M[2067] >> 01),7,M[2067][0]);
          H := 20;
          L := E7;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagCY := M[2067][0];
          jump ((M[a13],M[a8]));
        } else {
          #1918
          #1919
          let:16 a15 = (1 + a8) in
          let:16 a16 = (1 + a15) in
          A := updateBit((M[2067] >> 01),7,M[2067][0]);
          H := 20;
          L := E8;
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagCY := M[2067][0];
          jump ((M[a15],M[a8]));
        }
      }
    }

0838:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 3B;
    #return-to: 083B
    #08D8
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 08;
        let:16 a4 = (-1 + a3) in
        M[a4] := D8;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 08;
        let:16 a6 = (-1 + a5) in
        M[a6] := D8;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #08DB
      let:16 a7 = addWithCarry(!false,M[2082],~09) in
      let:8 a8 = (M[2082] & 0F) in
      let:8 a9 = (~09 & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #08DD
      if (!!a7[15:8][0]) {
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := M[2082];
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := !a7[15:8][0];
        jump ((M[a11],M[a2]));
      } else {
        #08DE
        #08E0
        M[207E] := FB;
        #08E3
        let:16 a13 = (1 + a2) in
        let:16 a14 = (1 + a13) in
        A := FB;
        SPH := a14[15:8];
        SPL := a14[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := !a7[15:8][0];
        jump ((M[a13],M[a2]));
      }
    }

083B:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 3E;
    #return-to: 083E
    #172C
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 17;
        let:16 a4 = (-1 + a3) in
        M[a4] := 2C;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 17;
        let:16 a6 = (-1 + a5) in
        M[a6] := 2C;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #172F
      let:16 a7 = addWithCarry(!false,M[2025],~00) in
      let:8 a8 = (M[2025] & 0F) in
      let:8 a9 = (~00 & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #1731
      if (!is_zero(a7[7:0])) {
        #1739
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a2) in
            M[a11] := 17;
            let:16 a12 = (-1 + a11) in
            M[a12] := 39;
            A := M[2025];
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a7[7:0][7];
            FlagZ := is_zero(a7[7:0]);
            FlagA := a10[7:0][4];
            FlagP := parity(a7[7:0]);
            FlagCY := !a7[15:8][0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a2) in
            M[a13] := 17;
            let:16 a14 = (-1 + a13) in
            M[a14] := 39;
            A := M[2025];
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a7[7:0][7];
            FlagZ := is_zero(a7[7:0]);
            FlagA := a10[7:0][4];
            FlagP := parity(a7[7:0]);
            FlagCY := !a7[15:8][0];
            jump (0010);
          }
        } else {
          #173B
          #18FA
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a15 = (-1 + a2) in
              M[a15] := 18;
              let:16 a16 = (-1 + a15) in
              M[a16] := FA;
              A := M[2025];
              B := 02;
              SPH := a16[15:8];
              SPL := a16[7:0];
              FlagS := a7[7:0][7];
              FlagZ := is_zero(a7[7:0]);
              FlagA := a10[7:0][4];
              FlagP := parity(a7[7:0]);
              FlagCY := !a7[15:8][0];
              jump (0008);
            } else {
              let:16 a17 = (-1 + a2) in
              M[a17] := 18;
              let:16 a18 = (-1 + a17) in
              M[a18] := FA;
              A := M[2025];
              B := 02;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a7[7:0][7];
              FlagZ := is_zero(a7[7:0]);
              FlagA := a10[7:0][4];
              FlagP := parity(a7[7:0]);
              FlagCY := !a7[15:8][0];
              jump (0010);
            }
          } else {
            #18FD
            let:8 a19 = (02 | M[2094]) in
            #18FE
            M[2094] := a19;
            #1901
            sound_control(Ufo,a19[0]);
            sound_control(Shot,a19[1]);
            sound_control(PlayerDie,a19[2]);
            sound_control(InvaderDie,a19[3]);
            sound_control(ExtraLife,a19[4]);
            #1903
            let:16 a20 = (1 + a2) in
            let:16 a21 = (1 + a20) in
            A := a19;
            B := 02;
            SPH := a21[15:8];
            SPL := a21[7:0];
            FlagS := a19[7];
            FlagZ := is_zero(a19);
            FlagA := false;
            FlagP := parity(a19);
            FlagCY := false;
            jump ((M[a20],M[a2]));
          }
        }
      } else {
        #1734
        #1736
        #19DC
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a22 = (-1 + a2) in
            M[a22] := 19;
            let:16 a23 = (-1 + a22) in
            M[a23] := DC;
            A := M[2025];
            B := FD;
            SPH := a23[15:8];
            SPL := a23[7:0];
            FlagS := a7[7:0][7];
            FlagZ := is_zero(a7[7:0]);
            FlagA := a10[7:0][4];
            FlagP := parity(a7[7:0]);
            FlagCY := !a7[15:8][0];
            jump (0008);
          } else {
            let:16 a24 = (-1 + a2) in
            M[a24] := 19;
            let:16 a25 = (-1 + a24) in
            M[a25] := DC;
            A := M[2025];
            B := FD;
            SPH := a25[15:8];
            SPL := a25[7:0];
            FlagS := a7[7:0][7];
            FlagZ := is_zero(a7[7:0]);
            FlagA := a10[7:0][4];
            FlagP := parity(a7[7:0]);
            FlagCY := !a7[15:8][0];
            jump (0010);
          }
        } else {
          #19DF
          let:8 a26 = (FD & M[2094]) in
          let:8 a27 = (FD | M[2094]) in
          #19E0
          M[2094] := a26;
          #19E3
          sound_control(Ufo,a26[0]);
          sound_control(Shot,a26[1]);
          sound_control(PlayerDie,a26[2]);
          sound_control(InvaderDie,a26[3]);
          sound_control(ExtraLife,a26[4]);
          #19E5
          let:16 a28 = (1 + a2) in
          let:16 a29 = (1 + a28) in
          A := a26;
          B := FD;
          SPH := a29[15:8];
          SPL := a29[7:0];
          FlagS := a26[7];
          FlagZ := is_zero(a26);
          FlagA := a27[3];
          FlagP := parity(a26);
          FlagCY := false;
          jump ((M[a28],M[a2]));
        }
      }
    }

083E:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 41;
    #return-to: 0841
    #0A59
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 59;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 59;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0A5C
      let:16 a7 = addWithCarry(!false,M[2015],~FF) in
      let:8 a8 = (M[2015] & 0F) in
      let:8 a9 = (~FF & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #0A5E
      let:16 a11 = (1 + a2) in
      let:16 a12 = (1 + a11) in
      A := M[2015];
      SPH := a12[15:8];
      SPL := a12[7:0];
      FlagS := a7[7:0][7];
      FlagZ := is_zero(a7[7:0]);
      FlagA := a10[7:0][4];
      FlagP := parity(a7[7:0]);
      FlagCY := !a7[15:8][0];
      jump ((M[a11],M[a2]));
    }

0841:

    if (FlagZ) {
      jump (0849);
    } else {
      #0844
      #0846
      let:16 a1 = (-1 + (SPH,SPL)) in
      M[a1] := 08;
      let:16 a2 = (-1 + a1) in
      M[a2] := 49;
      #return-to: 0849
      #18FA
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + a2) in
          M[a3] := 18;
          let:16 a4 = (-1 + a3) in
          M[a4] := FA;
          B := 04;
          SPH := a4[15:8];
          SPL := a4[7:0];
          jump (0008);
        } else {
          let:16 a5 = (-1 + a2) in
          M[a5] := 18;
          let:16 a6 = (-1 + a5) in
          M[a6] := FA;
          B := 04;
          SPH := a6[15:8];
          SPL := a6[7:0];
          jump (0010);
        }
      } else {
        #18FD
        let:8 a7 = (04 | M[2094]) in
        #18FE
        M[2094] := a7;
        #1901
        sound_control(Ufo,a7[0]);
        sound_control(Shot,a7[1]);
        sound_control(PlayerDie,a7[2]);
        sound_control(InvaderDie,a7[3]);
        sound_control(ExtraLife,a7[4]);
        #1903
        let:16 a8 = (1 + a2) in
        let:16 a9 = (1 + a8) in
        A := a7;
        B := 04;
        SPH := a9[15:8];
        SPL := a9[7:0];
        FlagS := a7[7];
        FlagZ := is_zero(a7);
        FlagA := false;
        FlagP := parity(a7);
        FlagCY := false;
        jump ((M[a8],M[a2]));
      }
    }

0849:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 4C;
    #return-to: 084C
    #1775
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 17;
        let:16 a4 = (-1 + a3) in
        M[a4] := 75;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 17;
        let:16 a6 = (-1 + a5) in
        M[a6] := 75;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1778
      let:8 a7 = (M[2095] & M[2095]) in
      let:8 a8 = (M[2095] | M[2095]) in
      #1779
      if (is_zero(a7)) {
        #17AA
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a2) in
            M[a9] := 17;
            let:16 a10 = (-1 + a9) in
            M[a10] := AA;
            A := a7;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a11 = (-1 + a2) in
            M[a11] := 17;
            let:16 a12 = (-1 + a11) in
            M[a12] := AA;
            A := a7;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #17AD
          let:16 a13 = addWithCarry(!true,M[2099],~00) in
          let:8 a14 = (M[2099] & 0F) in
          let:8 a15 = (~00 & 0F) in
          let:16 a16 = addWithCarry(!true,a14,a15) in
          M[2099] := a13[7:0];
          #17AE
          if (!is_zero(a13[7:0])) {
            let:16 a17 = (1 + a2) in
            let:16 a18 = (1 + a17) in
            A := a7;
            H := 20;
            L := 99;
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a13[7:0][7];
            FlagZ := is_zero(a13[7:0]);
            FlagA := a16[7:0][4];
            FlagP := parity(a13[7:0]);
            FlagCY := false;
            jump ((M[a17],M[a2]));
          } else {
            #17AF
            #17B1
            #19DC
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a19 = (-1 + a2) in
                M[a19] := 19;
                let:16 a20 = (-1 + a19) in
                M[a20] := DC;
                A := a7;
                B := EF;
                H := 20;
                L := 99;
                SPH := a20[15:8];
                SPL := a20[7:0];
                FlagS := a13[7:0][7];
                FlagZ := is_zero(a13[7:0]);
                FlagA := a16[7:0][4];
                FlagP := parity(a13[7:0]);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a21 = (-1 + a2) in
                M[a21] := 19;
                let:16 a22 = (-1 + a21) in
                M[a22] := DC;
                A := a7;
                B := EF;
                H := 20;
                L := 99;
                SPH := a22[15:8];
                SPL := a22[7:0];
                FlagS := a13[7:0][7];
                FlagZ := is_zero(a13[7:0]);
                FlagA := a16[7:0][4];
                FlagP := parity(a13[7:0]);
                FlagCY := false;
                jump (0010);
              }
            } else {
              #19DF
              let:8 a23 = (EF & M[2094]) in
              let:8 a24 = (EF | M[2094]) in
              #19E0
              M[2094] := a23;
              #19E3
              sound_control(Ufo,a23[0]);
              sound_control(Shot,a23[1]);
              sound_control(PlayerDie,a23[2]);
              sound_control(InvaderDie,a23[3]);
              sound_control(ExtraLife,a23[4]);
              #19E5
              let:16 a25 = (1 + a2) in
              let:16 a26 = (1 + a25) in
              A := a23;
              B := EF;
              H := 20;
              L := 99;
              SPH := a26[15:8];
              SPL := a26[7:0];
              FlagS := a23[7];
              FlagZ := is_zero(a23);
              FlagA := a24[3];
              FlagP := parity(a23);
              FlagCY := false;
              jump ((M[a25],M[a2]));
            }
          }
        }
      } else {
        #177C
        #177F
        #1782
        #1785
        let:16 a27 = addWithCarry(!false,M[2082],~32) in
        let:8 a28 = (M[2082] & 0F) in
        let:8 a29 = (~32 & 0F) in
        let:16 a30 = addWithCarry(!false,a28,a29) in
        #1786
        if (!!a27[15:8][0]) {
          #178E
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a31 = (-1 + a2) in
              M[a31] := 17;
              let:16 a32 = (-1 + a31) in
              M[a32] := 8E;
              A := M[2082];
              D := 1A;
              E := 21;
              H := 1A;
              L := 11;
              SPH := a32[15:8];
              SPL := a32[7:0];
              FlagS := a27[7:0][7];
              FlagZ := is_zero(a27[7:0]);
              FlagA := a30[7:0][4];
              FlagP := parity(a27[7:0]);
              FlagCY := !a27[15:8][0];
              jump (0008);
            } else {
              let:16 a33 = (-1 + a2) in
              M[a33] := 17;
              let:16 a34 = (-1 + a33) in
              M[a34] := 8E;
              A := M[2082];
              D := 1A;
              E := 21;
              H := 1A;
              L := 11;
              SPH := a34[15:8];
              SPL := a34[7:0];
              FlagS := a27[7:0][7];
              FlagZ := is_zero(a27[7:0]);
              FlagA := a30[7:0][4];
              FlagP := parity(a27[7:0]);
              FlagCY := !a27[15:8][0];
              jump (0010);
            }
          } else {
            #178F
            M[2097] := 34;
            #1792
            #1795
            #1796
            let:8 a35 = (30 & M[2098]) in
            let:8 a36 = (30 | M[2098]) in
            #1798
            #1799
            #179A
            let:8 a37 = (0F & M[2098]) in
            let:8 a38 = (0F | M[2098]) in
            #179C
            #179D
            let:16 a39 = addWithCarry(!false,updateBit((a37 << 01),0,a37[7]),~10) in
            let:8 a40 = (updateBit((a37 << 01),0,a37[7]) & 0F) in
            let:8 a41 = (~10 & 0F) in
            let:16 a42 = addWithCarry(!false,a40,a41) in
            #179F
            if (!is_zero(a39[7:0])) {
              #17A4
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a43 = (-1 + a2) in
                  M[a43] := 17;
                  let:16 a44 = (-1 + a43) in
                  M[a44] := A4;
                  A := updateBit((a37 << 01),0,a37[7]);
                  B := a35;
                  D := 1A;
                  E := 21;
                  H := 20;
                  L := 98;
                  SPH := a44[15:8];
                  SPL := a44[7:0];
                  FlagS := a39[7:0][7];
                  FlagZ := is_zero(a39[7:0]);
                  FlagA := a42[7:0][4];
                  FlagP := parity(a39[7:0]);
                  FlagCY := !a39[15:8][0];
                  jump (0008);
                } else {
                  let:16 a45 = (-1 + a2) in
                  M[a45] := 17;
                  let:16 a46 = (-1 + a45) in
                  M[a46] := A4;
                  A := updateBit((a37 << 01),0,a37[7]);
                  B := a35;
                  D := 1A;
                  E := 21;
                  H := 20;
                  L := 98;
                  SPH := a46[15:8];
                  SPL := a46[7:0];
                  FlagS := a39[7:0][7];
                  FlagZ := is_zero(a39[7:0]);
                  FlagA := a42[7:0][4];
                  FlagP := parity(a39[7:0]);
                  FlagCY := !a39[15:8][0];
                  jump (0010);
                }
              } else {
                let:8 a47 = (a35 | updateBit((a37 << 01),0,a37[7])) in
                #17A5
                M[2098] := a47;
                #17A6
                let:8 a48 = (a47 ^ a47) in
                #17A7
                M[2095] := a48;
                #17AA
                #17AD
                let:16 a49 = addWithCarry(!true,M[2099],~00) in
                let:8 a50 = (M[2099] & 0F) in
                let:8 a51 = (~00 & 0F) in
                let:16 a52 = addWithCarry(!true,a50,a51) in
                M[2099] := a49[7:0];
                #17AE
                if (!is_zero(a49[7:0])) {
                  let:16 a53 = (1 + a2) in
                  let:16 a54 = (1 + a53) in
                  A := a48;
                  B := a35;
                  D := 1A;
                  E := 21;
                  H := 20;
                  L := 99;
                  SPH := a54[15:8];
                  SPL := a54[7:0];
                  FlagS := a49[7:0][7];
                  FlagZ := is_zero(a49[7:0]);
                  FlagA := a52[7:0][4];
                  FlagP := parity(a49[7:0]);
                  FlagCY := false;
                  jump ((M[a53],M[a2]));
                } else {
                  #17AF
                  #17B1
                  #19DC
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a55 = (-1 + a2) in
                      M[a55] := 19;
                      let:16 a56 = (-1 + a55) in
                      M[a56] := DC;
                      A := a48;
                      B := EF;
                      D := 1A;
                      E := 21;
                      H := 20;
                      L := 99;
                      SPH := a56[15:8];
                      SPL := a56[7:0];
                      FlagS := a49[7:0][7];
                      FlagZ := is_zero(a49[7:0]);
                      FlagA := a52[7:0][4];
                      FlagP := parity(a49[7:0]);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a57 = (-1 + a2) in
                      M[a57] := 19;
                      let:16 a58 = (-1 + a57) in
                      M[a58] := DC;
                      A := a48;
                      B := EF;
                      D := 1A;
                      E := 21;
                      H := 20;
                      L := 99;
                      SPH := a58[15:8];
                      SPL := a58[7:0];
                      FlagS := a49[7:0][7];
                      FlagZ := is_zero(a49[7:0]);
                      FlagA := a52[7:0][4];
                      FlagP := parity(a49[7:0]);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    #19DF
                    let:8 a59 = (EF & M[2094]) in
                    let:8 a60 = (EF | M[2094]) in
                    #19E0
                    M[2094] := a59;
                    #19E3
                    sound_control(Ufo,a59[0]);
                    sound_control(Shot,a59[1]);
                    sound_control(PlayerDie,a59[2]);
                    sound_control(InvaderDie,a59[3]);
                    sound_control(ExtraLife,a59[4]);
                    #19E5
                    let:16 a61 = (1 + a2) in
                    let:16 a62 = (1 + a61) in
                    A := a59;
                    B := EF;
                    D := 1A;
                    E := 21;
                    H := 20;
                    L := 99;
                    SPH := a62[15:8];
                    SPL := a62[7:0];
                    FlagS := a59[7];
                    FlagZ := is_zero(a59);
                    FlagA := a60[3];
                    FlagP := parity(a59);
                    FlagCY := false;
                    jump ((M[a61],M[a2]));
                  }
                }
              }
            } else {
              #17A2
              #17A4
              let:8 a63 = (a35 | 01) in
              #17A5
              M[2098] := a63;
              #17A6
              let:8 a64 = (a63 ^ a63) in
              #17A7
              M[2095] := a64;
              #17AA
              #17AD
              let:16 a65 = addWithCarry(!true,M[2099],~00) in
              let:8 a66 = (M[2099] & 0F) in
              let:8 a67 = (~00 & 0F) in
              let:16 a68 = addWithCarry(!true,a66,a67) in
              M[2099] := a65[7:0];
              #17AE
              if (!is_zero(a65[7:0])) {
                let:16 a69 = (1 + a2) in
                let:16 a70 = (1 + a69) in
                A := a64;
                B := a35;
                D := 1A;
                E := 21;
                H := 20;
                L := 99;
                SPH := a70[15:8];
                SPL := a70[7:0];
                FlagS := a65[7:0][7];
                FlagZ := is_zero(a65[7:0]);
                FlagA := a68[7:0][4];
                FlagP := parity(a65[7:0]);
                FlagCY := false;
                jump ((M[a69],M[a2]));
              } else {
                #17AF
                #17B1
                #19DC
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a71 = (-1 + a2) in
                    M[a71] := 19;
                    let:16 a72 = (-1 + a71) in
                    M[a72] := DC;
                    A := a64;
                    B := EF;
                    D := 1A;
                    E := 21;
                    H := 20;
                    L := 99;
                    SPH := a72[15:8];
                    SPL := a72[7:0];
                    FlagS := a65[7:0][7];
                    FlagZ := is_zero(a65[7:0]);
                    FlagA := a68[7:0][4];
                    FlagP := parity(a65[7:0]);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a73 = (-1 + a2) in
                    M[a73] := 19;
                    let:16 a74 = (-1 + a73) in
                    M[a74] := DC;
                    A := a64;
                    B := EF;
                    D := 1A;
                    E := 21;
                    H := 20;
                    L := 99;
                    SPH := a74[15:8];
                    SPL := a74[7:0];
                    FlagS := a65[7:0][7];
                    FlagZ := is_zero(a65[7:0]);
                    FlagA := a68[7:0][4];
                    FlagP := parity(a65[7:0]);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  #19DF
                  let:8 a75 = (EF & M[2094]) in
                  let:8 a76 = (EF | M[2094]) in
                  #19E0
                  M[2094] := a75;
                  #19E3
                  sound_control(Ufo,a75[0]);
                  sound_control(Shot,a75[1]);
                  sound_control(PlayerDie,a75[2]);
                  sound_control(InvaderDie,a75[3]);
                  sound_control(ExtraLife,a75[4]);
                  #19E5
                  let:16 a77 = (1 + a2) in
                  let:16 a78 = (1 + a77) in
                  A := a75;
                  B := EF;
                  D := 1A;
                  E := 21;
                  H := 20;
                  L := 99;
                  SPH := a78[15:8];
                  SPL := a78[7:0];
                  FlagS := a75[7];
                  FlagZ := is_zero(a75);
                  FlagA := a76[3];
                  FlagP := parity(a75);
                  FlagCY := false;
                  jump ((M[a77],M[a2]));
                }
              }
            }
          }
        } else {
          #1789
          #178A
          #178B
          A := M[2082];
          D := 1A;
          E := 22;
          H := 1A;
          L := 12;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a27[7:0][7];
          FlagZ := is_zero(a27[7:0]);
          FlagA := a30[7:0][4];
          FlagP := parity(a27[7:0]);
          FlagCY := !a27[15:8][0];
          jump (1785);
        }
      }
    }

084C:

    #084E
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := 51;
    #return-to: 0851
    #1804
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := 04;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 18;
        let:16 a6 = (-1 + a5) in
        M[a6] := 04;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1807
      #1808
      let:8 a7 = (M[2084] & M[2084]) in
      let:8 a8 = (M[2084] | M[2084]) in
      #1809
      if (is_zero(a7)) {
        A := a7;
        H := 20;
        L := 84;
        SPH := a2[15:8];
        SPL := a2[7:0];
        FlagS := a7[7];
        FlagZ := is_zero(a7);
        FlagA := a8[3];
        FlagP := parity(a7);
        FlagCY := false;
        jump (0707);
      } else {
        #180C
        #180D
        #180E
        let:8 a9 = (M[2085] & M[2085]) in
        let:8 a10 = (M[2085] | M[2085]) in
        #180F
        if (!is_zero(a9)) {
          let:16 a11 = (1 + a2) in
          let:16 a12 = (1 + a11) in
          A := a9;
          H := 20;
          L := 85;
          SPH := a12[15:8];
          SPL := a12[7:0];
          FlagS := a9[7];
          FlagZ := is_zero(a9);
          FlagA := a10[3];
          FlagP := parity(a9);
          FlagCY := false;
          jump ((M[a11],M[a2]));
        } else {
          #1810
          #1812
          #18FA
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a13 = (-1 + a2) in
              M[a13] := 18;
              let:16 a14 = (-1 + a13) in
              M[a14] := FA;
              A := a9;
              B := 01;
              H := 20;
              L := 85;
              SPH := a14[15:8];
              SPL := a14[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a15 = (-1 + a2) in
              M[a15] := 18;
              let:16 a16 = (-1 + a15) in
              M[a16] := FA;
              A := a9;
              B := 01;
              H := 20;
              L := 85;
              SPH := a16[15:8];
              SPL := a16[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #18FD
            let:8 a17 = (01 | M[2094]) in
            #18FE
            M[2094] := a17;
            #1901
            sound_control(Ufo,a17[0]);
            sound_control(Shot,a17[1]);
            sound_control(PlayerDie,a17[2]);
            sound_control(InvaderDie,a17[3]);
            sound_control(ExtraLife,a17[4]);
            #1903
            let:16 a18 = (1 + a2) in
            let:16 a19 = (1 + a18) in
            A := a17;
            B := 01;
            H := 20;
            L := 85;
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a17[7];
            FlagZ := is_zero(a17);
            FlagA := false;
            FlagP := parity(a17);
            FlagCY := false;
            jump ((M[a18],M[a2]));
          }
        }
      }
    }

0851:

    jump (081F);

085D:

    #085F
    #0861
    #0862
    #0863
    if (updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0]) {
      #086D
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a1 = (-1 + (SPH,SPL)) in
          M[a1] := 08;
          let:16 a2 = (-1 + a1) in
          M[a2] := 6D;
          A := updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0]);
          B := 98;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagCY := updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0];
          jump (0008);
        } else {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 08;
          let:16 a4 = (-1 + a3) in
          M[a4] := 6D;
          A := updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0]);
          B := 98;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagCY := updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0];
          jump (0010);
        }
      } else {
        #086F
        #079B
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a5 = (-1 + (SPH,SPL)) in
            M[a5] := 07;
            let:16 a6 = (-1 + a5) in
            M[a6] := 9B;
            A := 01;
            B := 98;
            SPH := a6[15:8];
            SPL := a6[7:0];
            FlagCY := updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0];
            jump (0008);
          } else {
            let:16 a7 = (-1 + (SPH,SPL)) in
            M[a7] := 07;
            let:16 a8 = (-1 + a7) in
            M[a8] := 9B;
            A := 01;
            B := 98;
            SPH := a8[15:8];
            SPL := a8[7:0];
            FlagCY := updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0];
            jump (0010);
          }
        } else {
          M[20CE] := 01;
          #079E
          #07A1
          let:16 a9 = addWithCarry(false,98,M[20EB]) in
          let:8 a10 = (98 & 0F) in
          let:8 a11 = (M[20EB] & 0F) in
          let:16 a12 = addWithCarry(false,a10,a11) in
          #07A2
          let:8 a13 = (a9[7:0] & 0F) in
          let:16 a14 = addWithCarry(false,a13,06) in
          let:16 a15 = addWithCarry(((((a13[1] || a13[2]) && a13[3]) || a12[7:0][4]) ? a14[7:0] : a13)[4],(a9[7:0] >> 04),00) in
          let:16 a16 = addWithCarry(false,a15[7:0],06) in
          let:8 a17 = (((((a13[1] || a13[2]) && a13[3]) || a12[7:0][4]) ? a14[7:0] : a13) & 0F) in
          let:8 a18 = ((((((a15[7:0][1] || a15[7:0][2]) && a15[7:0][3]) || a9[15:8][0]) ? a16[7:0] : a15[7:0]) << 04) | a17) in
          #07A3
          M[20EB] := a18;
          #07A6
          let:16 a19 = (-1 + (SPH,SPL)) in
          M[a19] := 07;
          let:16 a20 = (-1 + a19) in
          M[a20] := A9;
          #return-to: 07A9
          #1947
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a21 = (-1 + a20) in
              M[a21] := 19;
              let:16 a22 = (-1 + a21) in
              M[a22] := 47;
              A := a18;
              B := 98;
              SPH := a22[15:8];
              SPL := a22[7:0];
              FlagS := a18[7];
              FlagZ := is_zero(a18);
              FlagA := ((((a13[1] || a13[2]) && a13[3]) || a12[7:0][4]) ? a14[7:0] : a13)[4];
              FlagP := parity(a18);
              FlagCY := (((((a15[7:0][1] || a15[7:0][2]) && a15[7:0][3]) || a9[15:8][0]) ? a16[7:0] : a15[7:0])[4] || a9[15:8][0]);
              jump (0008);
            } else {
              let:16 a23 = (-1 + a20) in
              M[a23] := 19;
              let:16 a24 = (-1 + a23) in
              M[a24] := 47;
              A := a18;
              B := 98;
              SPH := a24[15:8];
              SPL := a24[7:0];
              FlagS := a18[7];
              FlagZ := is_zero(a18);
              FlagA := ((((a13[1] || a13[2]) && a13[3]) || a12[7:0][4]) ? a14[7:0] : a13)[4];
              FlagP := parity(a18);
              FlagCY := (((((a15[7:0][1] || a15[7:0][2]) && a15[7:0][3]) || a9[15:8][0]) ? a16[7:0] : a15[7:0])[4] || a9[15:8][0]);
              jump (0010);
            }
          } else {
            #194A
            #194D
            #09B2
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a25 = (-1 + a20) in
                M[a25] := 09;
                let:16 a26 = (-1 + a25) in
                M[a26] := B2;
                A := M[20EB];
                B := 98;
                H := 3C;
                L := 01;
                SPH := a26[15:8];
                SPL := a26[7:0];
                FlagS := a18[7];
                FlagZ := is_zero(a18);
                FlagA := ((((a13[1] || a13[2]) && a13[3]) || a12[7:0][4]) ? a14[7:0] : a13)[4];
                FlagP := parity(a18);
                FlagCY := (((((a15[7:0][1] || a15[7:0][2]) && a15[7:0][3]) || a9[15:8][0]) ? a16[7:0] : a15[7:0])[4] || a9[15:8][0]);
                jump (0008);
              } else {
                let:16 a27 = (-1 + a20) in
                M[a27] := 09;
                let:16 a28 = (-1 + a27) in
                M[a28] := B2;
                A := M[20EB];
                B := 98;
                H := 3C;
                L := 01;
                SPH := a28[15:8];
                SPL := a28[7:0];
                FlagS := a18[7];
                FlagZ := is_zero(a18);
                FlagA := ((((a13[1] || a13[2]) && a13[3]) || a12[7:0][4]) ? a14[7:0] : a13)[4];
                FlagP := parity(a18);
                FlagCY := (((((a15[7:0][1] || a15[7:0][2]) && a15[7:0][3]) || a9[15:8][0]) ? a16[7:0] : a15[7:0])[4] || a9[15:8][0]);
                jump (0010);
              }
            } else {
              let:16 a29 = (-1 + a20) in
              M[a29] := D;
              let:16 a30 = (-1 + a29) in
              M[a30] := E;
              #09B3
              let:16 a31 = (-1 + a30) in
              M[a31] := M[20EB];
              let:16 a32 = (-1 + a31) in
              M[a32] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a18[7]),6,is_zero(a18)),4,((((a13[1] || a13[2]) && a13[3]) || a12[7:0][4]) ? a14[7:0] : a13)[4]),2,parity(a18)),0,(((((a15[7:0][1] || a15[7:0][2]) && a15[7:0][3]) || a9[15:8][0]) ? a16[7:0] : a15[7:0])[4] || a9[15:8][0]));
              #09B4
              #09B5
              #09B6
              #09B7
              #09B8
              let:8 a33 = (0F & updateBit((updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0])[0])) in
              let:8 a34 = (0F | updateBit((updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0])[0])) in
              #09BA
              let:16 a35 = (-1 + a32) in
              M[a35] := 09;
              let:16 a36 = (-1 + a35) in
              M[a36] := BD;
              #return-to: 09BD
              #09C5
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a37 = (-1 + a36) in
                  M[a37] := 09;
                  let:16 a38 = (-1 + a37) in
                  M[a38] := C5;
                  A := a33;
                  B := 98;
                  H := 3C;
                  L := 01;
                  SPH := a38[15:8];
                  SPL := a38[7:0];
                  FlagS := a33[7];
                  FlagZ := is_zero(a33);
                  FlagA := a34[3];
                  FlagP := parity(a33);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a39 = (-1 + a36) in
                  M[a39] := 09;
                  let:16 a40 = (-1 + a39) in
                  M[a40] := C5;
                  A := a33;
                  B := 98;
                  H := 3C;
                  L := 01;
                  SPH := a40[15:8];
                  SPL := a40[7:0];
                  FlagS := a33[7];
                  FlagZ := is_zero(a33);
                  FlagA := a34[3];
                  FlagP := parity(a33);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                let:16 a41 = addWithCarry(false,1A,a33) in
                let:8 a42 = (1A & 0F) in
                let:8 a43 = (a33 & 0F) in
                let:16 a44 = addWithCarry(false,a42,a43) in
                #09C7
                #08FF
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a45 = (-1 + a36) in
                    M[a45] := 08;
                    let:16 a46 = (-1 + a45) in
                    M[a46] := FF;
                    A := a41[7:0];
                    B := 98;
                    H := 3C;
                    L := 01;
                    SPH := a46[15:8];
                    SPL := a46[7:0];
                    FlagS := a41[7:0][7];
                    FlagZ := is_zero(a41[7:0]);
                    FlagA := a44[7:0][4];
                    FlagP := parity(a41[7:0]);
                    FlagCY := a41[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a47 = (-1 + a36) in
                    M[a47] := 08;
                    let:16 a48 = (-1 + a47) in
                    M[a48] := FF;
                    A := a41[7:0];
                    B := 98;
                    H := 3C;
                    L := 01;
                    SPH := a48[15:8];
                    SPL := a48[7:0];
                    FlagS := a41[7:0][7];
                    FlagZ := is_zero(a41[7:0]);
                    FlagA := a44[7:0][4];
                    FlagP := parity(a41[7:0]);
                    FlagCY := a41[15:8][0];
                    jump (0010);
                  }
                } else {
                  #0902
                  let:16 a49 = (-1 + a36) in
                  M[a49] := 3C;
                  let:16 a50 = (-1 + a49) in
                  M[a50] := 01;
                  #0903
                  #0905
                  #0906
                  let:17 a51 = add17((00,a41[7:0]),(00,a41[7:0])) in
                  #0907
                  let:17 a52 = add17(a51[15:0],a51[15:0]) in
                  #0908
                  let:17 a53 = add17(a52[15:0],a52[15:0]) in
                  #0909
                  let:17 a54 = add17(1E00,a53[15:0]) in
                  #090A
                  #090B
                  let:16 a55 = (1 + a50) in
                  let:16 a56 = (1 + a55) in
                  #090C
                  #090E
                  #0910
                  #1439
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a57 = (-1 + a56) in
                      M[a57] := 14;
                      let:16 a58 = (-1 + a57) in
                      M[a58] := 39;
                      A := a41[7:0];
                      B := 08;
                      D := a54[15:0][15:8];
                      E := a54[15:0][7:0];
                      H := M[a55];
                      L := M[a50];
                      SPH := a58[15:8];
                      SPL := a58[7:0];
                      FlagS := a41[7:0][7];
                      FlagZ := is_zero(a41[7:0]);
                      FlagA := a44[7:0][4];
                      FlagP := parity(a41[7:0]);
                      FlagCY := a54[16];
                      jump (0008);
                    } else {
                      let:16 a59 = (-1 + a56) in
                      M[a59] := 14;
                      let:16 a60 = (-1 + a59) in
                      M[a60] := 39;
                      A := a41[7:0];
                      B := 08;
                      D := a54[15:0][15:8];
                      E := a54[15:0][7:0];
                      H := M[a55];
                      L := M[a50];
                      SPH := a60[15:8];
                      SPL := a60[7:0];
                      FlagS := a41[7:0][7];
                      FlagZ := is_zero(a41[7:0]);
                      FlagA := a44[7:0][4];
                      FlagP := parity(a41[7:0]);
                      FlagCY := a54[16];
                      jump (0010);
                    }
                  } else {
                    let:16 a61 = (-1 + a56) in
                    M[a61] := 08;
                    let:16 a62 = (-1 + a61) in
                    M[a62] := C;
                    #143A
                    #143B
                    M[(M[a55],M[a50])] := M[a54[15:0]];
                    #143C
                    let:16 a63 = (1 + a54[15:0]) in
                    #143D
                    #1440
                    let:17 a64 = add17(0020,(M[a55],M[a50])) in
                    #1441
                    let:16 a65 = (1 + a62) in
                    let:16 a66 = (1 + a65) in
                    #1442
                    let:16 a67 = addWithCarry(!true,M[a65],~00) in
                    let:8 a68 = (M[a65] & 0F) in
                    let:8 a69 = (~00 & 0F) in
                    let:16 a70 = addWithCarry(!true,a68,a69) in
                    #1443
                    if (!is_zero(a67[7:0])) {
                      A := M[a54[15:0]];
                      B := a67[7:0];
                      C := M[a62];
                      D := a63[15:8];
                      E := a63[7:0];
                      H := a64[15:0][15:8];
                      L := a64[15:0][7:0];
                      SPH := a66[15:8];
                      SPL := a66[7:0];
                      FlagS := a67[7:0][7];
                      FlagZ := is_zero(a67[7:0]);
                      FlagA := a70[7:0][4];
                      FlagP := parity(a67[7:0]);
                      FlagCY := a64[16];
                      jump (1439);
                    } else {
                      #1446
                      let:16 a71 = (1 + a66) in
                      let:16 a72 = (1 + a71) in
                      A := M[a54[15:0]];
                      B := a67[7:0];
                      C := M[a62];
                      D := a63[15:8];
                      E := a63[7:0];
                      H := a64[15:0][15:8];
                      L := a64[15:0][7:0];
                      SPH := a72[15:8];
                      SPL := a72[7:0];
                      FlagS := a67[7:0][7];
                      FlagZ := is_zero(a67[7:0]);
                      FlagA := a70[7:0][4];
                      FlagP := parity(a67[7:0]);
                      FlagCY := a64[16];
                      jump ((M[a71],M[a66]));
                    }
                  }
                }
              }
            }
          }
        }
      }
    } else {
      #0866
      #0867
      if (updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0])[0]) {
        #0798
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a73 = (-1 + (SPH,SPL)) in
            M[a73] := 07;
            let:16 a74 = (-1 + a73) in
            M[a74] := 98;
            A := updateBit((updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0]) >> 01),7,updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0])[0]);
            B := 98;
            SPH := a74[15:8];
            SPL := a74[7:0];
            FlagCY := updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0])[0];
            jump (0008);
          } else {
            let:16 a75 = (-1 + (SPH,SPL)) in
            M[a75] := 07;
            let:16 a76 = (-1 + a75) in
            M[a76] := 98;
            A := updateBit((updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0]) >> 01),7,updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0])[0]);
            B := 98;
            SPH := a76[15:8];
            SPL := a76[7:0];
            FlagCY := updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0])[0];
            jump (0010);
          }
        } else {
          #079A
          let:8 a77 = (updateBit((updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0]) >> 01),7,updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0])[0]) ^ updateBit((updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0]) >> 01),7,updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0])[0])) in
          #079B
          M[20CE] := a77;
          #079E
          #07A1
          let:16 a78 = addWithCarry(false,99,M[20EB]) in
          let:8 a79 = (99 & 0F) in
          let:8 a80 = (M[20EB] & 0F) in
          let:16 a81 = addWithCarry(false,a79,a80) in
          #07A2
          let:8 a82 = (a78[7:0] & 0F) in
          let:16 a83 = addWithCarry(false,a82,06) in
          let:16 a84 = addWithCarry(((((a82[1] || a82[2]) && a82[3]) || a81[7:0][4]) ? a83[7:0] : a82)[4],(a78[7:0] >> 04),00) in
          let:16 a85 = addWithCarry(false,a84[7:0],06) in
          let:8 a86 = (((((a82[1] || a82[2]) && a82[3]) || a81[7:0][4]) ? a83[7:0] : a82) & 0F) in
          let:8 a87 = ((((((a84[7:0][1] || a84[7:0][2]) && a84[7:0][3]) || a78[15:8][0]) ? a85[7:0] : a84[7:0]) << 04) | a86) in
          #07A3
          M[20EB] := a87;
          #07A6
          let:16 a88 = (-1 + (SPH,SPL)) in
          M[a88] := 07;
          let:16 a89 = (-1 + a88) in
          M[a89] := A9;
          #return-to: 07A9
          #1947
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a90 = (-1 + a89) in
              M[a90] := 19;
              let:16 a91 = (-1 + a90) in
              M[a91] := 47;
              A := a87;
              B := 99;
              SPH := a91[15:8];
              SPL := a91[7:0];
              FlagS := a87[7];
              FlagZ := is_zero(a87);
              FlagA := ((((a82[1] || a82[2]) && a82[3]) || a81[7:0][4]) ? a83[7:0] : a82)[4];
              FlagP := parity(a87);
              FlagCY := (((((a84[7:0][1] || a84[7:0][2]) && a84[7:0][3]) || a78[15:8][0]) ? a85[7:0] : a84[7:0])[4] || a78[15:8][0]);
              jump (0008);
            } else {
              let:16 a92 = (-1 + a89) in
              M[a92] := 19;
              let:16 a93 = (-1 + a92) in
              M[a93] := 47;
              A := a87;
              B := 99;
              SPH := a93[15:8];
              SPL := a93[7:0];
              FlagS := a87[7];
              FlagZ := is_zero(a87);
              FlagA := ((((a82[1] || a82[2]) && a82[3]) || a81[7:0][4]) ? a83[7:0] : a82)[4];
              FlagP := parity(a87);
              FlagCY := (((((a84[7:0][1] || a84[7:0][2]) && a84[7:0][3]) || a78[15:8][0]) ? a85[7:0] : a84[7:0])[4] || a78[15:8][0]);
              jump (0010);
            }
          } else {
            #194A
            #194D
            #09B2
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a94 = (-1 + a89) in
                M[a94] := 09;
                let:16 a95 = (-1 + a94) in
                M[a95] := B2;
                A := M[20EB];
                B := 99;
                H := 3C;
                L := 01;
                SPH := a95[15:8];
                SPL := a95[7:0];
                FlagS := a87[7];
                FlagZ := is_zero(a87);
                FlagA := ((((a82[1] || a82[2]) && a82[3]) || a81[7:0][4]) ? a83[7:0] : a82)[4];
                FlagP := parity(a87);
                FlagCY := (((((a84[7:0][1] || a84[7:0][2]) && a84[7:0][3]) || a78[15:8][0]) ? a85[7:0] : a84[7:0])[4] || a78[15:8][0]);
                jump (0008);
              } else {
                let:16 a96 = (-1 + a89) in
                M[a96] := 09;
                let:16 a97 = (-1 + a96) in
                M[a97] := B2;
                A := M[20EB];
                B := 99;
                H := 3C;
                L := 01;
                SPH := a97[15:8];
                SPL := a97[7:0];
                FlagS := a87[7];
                FlagZ := is_zero(a87);
                FlagA := ((((a82[1] || a82[2]) && a82[3]) || a81[7:0][4]) ? a83[7:0] : a82)[4];
                FlagP := parity(a87);
                FlagCY := (((((a84[7:0][1] || a84[7:0][2]) && a84[7:0][3]) || a78[15:8][0]) ? a85[7:0] : a84[7:0])[4] || a78[15:8][0]);
                jump (0010);
              }
            } else {
              let:16 a98 = (-1 + a89) in
              M[a98] := D;
              let:16 a99 = (-1 + a98) in
              M[a99] := E;
              #09B3
              let:16 a100 = (-1 + a99) in
              M[a100] := M[20EB];
              let:16 a101 = (-1 + a100) in
              M[a101] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a87[7]),6,is_zero(a87)),4,((((a82[1] || a82[2]) && a82[3]) || a81[7:0][4]) ? a83[7:0] : a82)[4]),2,parity(a87)),0,(((((a84[7:0][1] || a84[7:0][2]) && a84[7:0][3]) || a78[15:8][0]) ? a85[7:0] : a84[7:0])[4] || a78[15:8][0]));
              #09B4
              #09B5
              #09B6
              #09B7
              #09B8
              let:8 a102 = (0F & updateBit((updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0])[0])) in
              let:8 a103 = (0F | updateBit((updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0])[0])) in
              #09BA
              let:16 a104 = (-1 + a101) in
              M[a104] := 09;
              let:16 a105 = (-1 + a104) in
              M[a105] := BD;
              #return-to: 09BD
              #09C5
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a106 = (-1 + a105) in
                  M[a106] := 09;
                  let:16 a107 = (-1 + a106) in
                  M[a107] := C5;
                  A := a102;
                  B := 99;
                  H := 3C;
                  L := 01;
                  SPH := a107[15:8];
                  SPL := a107[7:0];
                  FlagS := a102[7];
                  FlagZ := is_zero(a102);
                  FlagA := a103[3];
                  FlagP := parity(a102);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a108 = (-1 + a105) in
                  M[a108] := 09;
                  let:16 a109 = (-1 + a108) in
                  M[a109] := C5;
                  A := a102;
                  B := 99;
                  H := 3C;
                  L := 01;
                  SPH := a109[15:8];
                  SPL := a109[7:0];
                  FlagS := a102[7];
                  FlagZ := is_zero(a102);
                  FlagA := a103[3];
                  FlagP := parity(a102);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                let:16 a110 = addWithCarry(false,1A,a102) in
                let:8 a111 = (1A & 0F) in
                let:8 a112 = (a102 & 0F) in
                let:16 a113 = addWithCarry(false,a111,a112) in
                #09C7
                #08FF
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a114 = (-1 + a105) in
                    M[a114] := 08;
                    let:16 a115 = (-1 + a114) in
                    M[a115] := FF;
                    A := a110[7:0];
                    B := 99;
                    H := 3C;
                    L := 01;
                    SPH := a115[15:8];
                    SPL := a115[7:0];
                    FlagS := a110[7:0][7];
                    FlagZ := is_zero(a110[7:0]);
                    FlagA := a113[7:0][4];
                    FlagP := parity(a110[7:0]);
                    FlagCY := a110[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a116 = (-1 + a105) in
                    M[a116] := 08;
                    let:16 a117 = (-1 + a116) in
                    M[a117] := FF;
                    A := a110[7:0];
                    B := 99;
                    H := 3C;
                    L := 01;
                    SPH := a117[15:8];
                    SPL := a117[7:0];
                    FlagS := a110[7:0][7];
                    FlagZ := is_zero(a110[7:0]);
                    FlagA := a113[7:0][4];
                    FlagP := parity(a110[7:0]);
                    FlagCY := a110[15:8][0];
                    jump (0010);
                  }
                } else {
                  #0902
                  let:16 a118 = (-1 + a105) in
                  M[a118] := 3C;
                  let:16 a119 = (-1 + a118) in
                  M[a119] := 01;
                  #0903
                  #0905
                  #0906
                  let:17 a120 = add17((00,a110[7:0]),(00,a110[7:0])) in
                  #0907
                  let:17 a121 = add17(a120[15:0],a120[15:0]) in
                  #0908
                  let:17 a122 = add17(a121[15:0],a121[15:0]) in
                  #0909
                  let:17 a123 = add17(1E00,a122[15:0]) in
                  #090A
                  #090B
                  let:16 a124 = (1 + a119) in
                  let:16 a125 = (1 + a124) in
                  #090C
                  #090E
                  #0910
                  #1439
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a126 = (-1 + a125) in
                      M[a126] := 14;
                      let:16 a127 = (-1 + a126) in
                      M[a127] := 39;
                      A := a110[7:0];
                      B := 08;
                      D := a123[15:0][15:8];
                      E := a123[15:0][7:0];
                      H := M[a124];
                      L := M[a119];
                      SPH := a127[15:8];
                      SPL := a127[7:0];
                      FlagS := a110[7:0][7];
                      FlagZ := is_zero(a110[7:0]);
                      FlagA := a113[7:0][4];
                      FlagP := parity(a110[7:0]);
                      FlagCY := a123[16];
                      jump (0008);
                    } else {
                      let:16 a128 = (-1 + a125) in
                      M[a128] := 14;
                      let:16 a129 = (-1 + a128) in
                      M[a129] := 39;
                      A := a110[7:0];
                      B := 08;
                      D := a123[15:0][15:8];
                      E := a123[15:0][7:0];
                      H := M[a124];
                      L := M[a119];
                      SPH := a129[15:8];
                      SPL := a129[7:0];
                      FlagS := a110[7:0][7];
                      FlagZ := is_zero(a110[7:0]);
                      FlagA := a113[7:0][4];
                      FlagP := parity(a110[7:0]);
                      FlagCY := a123[16];
                      jump (0010);
                    }
                  } else {
                    let:16 a130 = (-1 + a125) in
                    M[a130] := 08;
                    let:16 a131 = (-1 + a130) in
                    M[a131] := C;
                    #143A
                    #143B
                    M[(M[a124],M[a119])] := M[a123[15:0]];
                    #143C
                    let:16 a132 = (1 + a123[15:0]) in
                    #143D
                    #1440
                    let:17 a133 = add17(0020,(M[a124],M[a119])) in
                    #1441
                    let:16 a134 = (1 + a131) in
                    let:16 a135 = (1 + a134) in
                    #1442
                    let:16 a136 = addWithCarry(!true,M[a134],~00) in
                    let:8 a137 = (M[a134] & 0F) in
                    let:8 a138 = (~00 & 0F) in
                    let:16 a139 = addWithCarry(!true,a137,a138) in
                    #1443
                    if (!is_zero(a136[7:0])) {
                      A := M[a123[15:0]];
                      B := a136[7:0];
                      C := M[a131];
                      D := a132[15:8];
                      E := a132[7:0];
                      H := a133[15:0][15:8];
                      L := a133[15:0][7:0];
                      SPH := a135[15:8];
                      SPL := a135[7:0];
                      FlagS := a136[7:0][7];
                      FlagZ := is_zero(a136[7:0]);
                      FlagA := a139[7:0][4];
                      FlagP := parity(a136[7:0]);
                      FlagCY := a133[16];
                      jump (1439);
                    } else {
                      #1446
                      let:16 a140 = (1 + a135) in
                      let:16 a141 = (1 + a140) in
                      A := M[a123[15:0]];
                      B := a136[7:0];
                      C := M[a131];
                      D := a132[15:8];
                      E := a132[7:0];
                      H := a133[15:0][15:8];
                      L := a133[15:0][7:0];
                      SPH := a141[15:8];
                      SPL := a141[7:0];
                      FlagS := a136[7:0][7];
                      FlagZ := is_zero(a136[7:0]);
                      FlagA := a139[7:0][4];
                      FlagP := parity(a136[7:0]);
                      FlagCY := a133[16];
                      jump ((M[a140],M[a135]));
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        #086A
        A := updateBit((updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0]) >> 01),7,updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0])[0]);
        B := 98;
        FlagCY := updateBit((updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0]) >> 01),7,updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right)) >> 01),7,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))[0])[0])[0];
        jump (077F);
      }
    }

0875:

    jump (0814);

0898:

    #089B
    #089C
    #089E
    #08A1
    if (!M[2067][0]) {
      let:16 a1 = (-1 + (SPH,SPL)) in
      M[a1] := 08;
      let:16 a2 = (-1 + a1) in
      M[a2] := A4;
      #return-to: 08A4
      #08FF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + a2) in
          M[a3] := 08;
          let:16 a4 = (-1 + a3) in
          M[a4] := FF;
          A := 1C;
          H := 37;
          L := 11;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagCY := M[2067][0];
          jump (0008);
        } else {
          let:16 a5 = (-1 + a2) in
          M[a5] := 08;
          let:16 a6 = (-1 + a5) in
          M[a6] := FF;
          A := 1C;
          H := 37;
          L := 11;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagCY := M[2067][0];
          jump (0010);
        }
      } else {
        #0902
        let:16 a7 = (-1 + a2) in
        M[a7] := 37;
        let:16 a8 = (-1 + a7) in
        M[a8] := 11;
        #0903
        #0905
        #0906
        let:17 a9 = add17(001C,001C) in
        #0907
        let:17 a10 = add17(a9[15:0],a9[15:0]) in
        #0908
        let:17 a11 = add17(a10[15:0],a10[15:0]) in
        #0909
        let:17 a12 = add17(1E00,a11[15:0]) in
        #090A
        #090B
        let:16 a13 = (1 + a8) in
        let:16 a14 = (1 + a13) in
        #090C
        #090E
        #0910
        #1439
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 14;
            let:16 a16 = (-1 + a15) in
            M[a16] := 39;
            A := 1C;
            B := 08;
            D := a12[15:0][15:8];
            E := a12[15:0][7:0];
            H := M[a13];
            L := M[a8];
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagCY := a12[16];
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 14;
            let:16 a18 = (-1 + a17) in
            M[a18] := 39;
            A := 1C;
            B := 08;
            D := a12[15:0][15:8];
            E := a12[15:0][7:0];
            H := M[a13];
            L := M[a8];
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagCY := a12[16];
            jump (0010);
          }
        } else {
          let:16 a19 = (-1 + a14) in
          M[a19] := 08;
          let:16 a20 = (-1 + a19) in
          M[a20] := C;
          #143A
          #143B
          M[(M[a13],M[a8])] := M[a12[15:0]];
          #143C
          let:16 a21 = (1 + a12[15:0]) in
          #143D
          #1440
          let:17 a22 = add17(0020,(M[a13],M[a8])) in
          #1441
          let:16 a23 = (1 + a20) in
          let:16 a24 = (1 + a23) in
          #1442
          let:16 a25 = addWithCarry(!true,M[a23],~00) in
          let:8 a26 = (M[a23] & 0F) in
          let:8 a27 = (~00 & 0F) in
          let:16 a28 = addWithCarry(!true,a26,a27) in
          #1443
          if (!is_zero(a25[7:0])) {
            A := M[a12[15:0]];
            B := a25[7:0];
            C := M[a20];
            D := a21[15:8];
            E := a21[7:0];
            H := a22[15:0][15:8];
            L := a22[15:0][7:0];
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagS := a25[7:0][7];
            FlagZ := is_zero(a25[7:0]);
            FlagA := a28[7:0][4];
            FlagP := parity(a25[7:0]);
            FlagCY := a22[16];
            jump (1439);
          } else {
            #1446
            let:16 a29 = (1 + a24) in
            let:16 a30 = (1 + a29) in
            A := M[a12[15:0]];
            B := a25[7:0];
            C := M[a20];
            D := a21[15:8];
            E := a21[7:0];
            H := a22[15:0][15:8];
            L := a22[15:0][7:0];
            SPH := a30[15:8];
            SPL := a30[7:0];
            FlagS := a25[7:0][7];
            FlagZ := is_zero(a25[7:0]);
            FlagA := a28[7:0][4];
            FlagP := parity(a25[7:0]);
            FlagCY := a22[16];
            jump ((M[a29],M[a24]));
          }
        }
      }
    } else {
      A := 1C;
      H := 37;
      L := 11;
      FlagCY := M[2067][0];
      jump (08A4);
    }

08A4:

    #08A6
    M[20C0] := B0;
    #08A9
    #08AC
    let:8 a1 = (M[20C0] & M[20C0]) in
    let:8 a2 = (M[20C0] | M[20C0]) in
    #08AD
    if (is_zero(a1)) {
      let:16 a3 = (1 + (SPH,SPL)) in
      let:16 a4 = (1 + a3) in
      A := a1;
      SPH := a4[15:8];
      SPL := a4[7:0];
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump ((M[a3],M[(SPH,SPL)]));
    } else {
      #08AE
      let:8 a5 = (04 & a1) in
      let:8 a6 = (04 | a1) in
      #08B0
      if (!is_zero(a5)) {
        #08BC
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a7 = (-1 + (SPH,SPL)) in
            M[a7] := 08;
            let:16 a8 = (-1 + a7) in
            M[a8] := BC;
            A := a5;
            SPH := a8[15:8];
            SPL := a8[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a9 = (-1 + (SPH,SPL)) in
            M[a9] := 08;
            let:16 a10 = (-1 + a9) in
            M[a10] := BC;
            A := a5;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #08BE
          #08C1
          #08C4
          #08C5
          if (M[2067][0]) {
            #08CB
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a11 = (-1 + (SPH,SPL)) in
                M[a11] := 08;
                let:16 a12 = (-1 + a11) in
                M[a12] := CB;
                A := updateBit((M[2067] >> 01),7,M[2067][0]);
                B := 20;
                H := 27;
                L := 1C;
                SPH := a12[15:8];
                SPL := a12[7:0];
                FlagS := a5[7];
                FlagZ := is_zero(a5);
                FlagA := a6[3];
                FlagP := parity(a5);
                FlagCY := M[2067][0];
                jump (0008);
              } else {
                let:16 a13 = (-1 + (SPH,SPL)) in
                M[a13] := 08;
                let:16 a14 = (-1 + a13) in
                M[a14] := CB;
                A := updateBit((M[2067] >> 01),7,M[2067][0]);
                B := 20;
                H := 27;
                L := 1C;
                SPH := a14[15:8];
                SPL := a14[7:0];
                FlagS := a5[7];
                FlagZ := is_zero(a5);
                FlagA := a6[3];
                FlagP := parity(a5);
                FlagCY := M[2067][0];
                jump (0010);
              }
            } else {
              let:16 a15 = (-1 + (SPH,SPL)) in
              M[a15] := 08;
              let:16 a16 = (-1 + a15) in
              M[a16] := CE;
              #return-to: 08CE
              #14CB
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a17 = (-1 + a16) in
                  M[a17] := 14;
                  let:16 a18 = (-1 + a17) in
                  M[a18] := CB;
                  A := updateBit((M[2067] >> 01),7,M[2067][0]);
                  B := 20;
                  H := 27;
                  L := 1C;
                  SPH := a18[15:8];
                  SPL := a18[7:0];
                  FlagS := a5[7];
                  FlagZ := is_zero(a5);
                  FlagA := a6[3];
                  FlagP := parity(a5);
                  FlagCY := M[2067][0];
                  jump (0008);
                } else {
                  let:16 a19 = (-1 + a16) in
                  M[a19] := 14;
                  let:16 a20 = (-1 + a19) in
                  M[a20] := CB;
                  A := updateBit((M[2067] >> 01),7,M[2067][0]);
                  B := 20;
                  H := 27;
                  L := 1C;
                  SPH := a20[15:8];
                  SPL := a20[7:0];
                  FlagS := a5[7];
                  FlagZ := is_zero(a5);
                  FlagA := a6[3];
                  FlagP := parity(a5);
                  FlagCY := M[2067][0];
                  jump (0010);
                }
              } else {
                let:8 a21 = (updateBit((M[2067] >> 01),7,M[2067][0]) ^ updateBit((M[2067] >> 01),7,M[2067][0])) in
                #14CC
                let:16 a22 = (-1 + a16) in
                M[a22] := 20;
                let:16 a23 = (-1 + a22) in
                M[a23] := C;
                #14CD
                M[271C] := a21;
                #14CE
                #14D1
                let:17 a24 = add17(0020,271C) in
                #14D2
                let:16 a25 = (1 + a23) in
                let:16 a26 = (1 + a25) in
                #14D3
                let:16 a27 = addWithCarry(!true,M[a25],~00) in
                let:8 a28 = (M[a25] & 0F) in
                let:8 a29 = (~00 & 0F) in
                let:16 a30 = addWithCarry(!true,a28,a29) in
                #14D4
                if (!is_zero(a27[7:0])) {
                  A := a21;
                  B := a27[7:0];
                  C := M[a23];
                  H := a24[15:0][15:8];
                  L := a24[15:0][7:0];
                  SPH := a26[15:8];
                  SPL := a26[7:0];
                  FlagS := a27[7:0][7];
                  FlagZ := is_zero(a27[7:0]);
                  FlagA := a30[7:0][4];
                  FlagP := parity(a27[7:0]);
                  FlagCY := a24[16];
                  jump (14CC);
                } else {
                  #14D7
                  let:16 a31 = (1 + a26) in
                  let:16 a32 = (1 + a31) in
                  A := a21;
                  B := a27[7:0];
                  C := M[a23];
                  H := a24[15:0][15:8];
                  L := a24[15:0][7:0];
                  SPH := a32[15:8];
                  SPL := a32[7:0];
                  FlagS := a27[7:0][7];
                  FlagZ := is_zero(a27[7:0]);
                  FlagA := a30[7:0][4];
                  FlagP := parity(a27[7:0]);
                  FlagCY := a24[16];
                  jump ((M[a31],M[a26]));
                }
              }
            }
          } else {
            #08C8
            #08CB
            let:16 a33 = (-1 + (SPH,SPL)) in
            M[a33] := 08;
            let:16 a34 = (-1 + a33) in
            M[a34] := CE;
            #return-to: 08CE
            #14CB
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a35 = (-1 + a34) in
                M[a35] := 14;
                let:16 a36 = (-1 + a35) in
                M[a36] := CB;
                A := updateBit((M[2067] >> 01),7,M[2067][0]);
                B := 20;
                H := 39;
                L := 1C;
                SPH := a36[15:8];
                SPL := a36[7:0];
                FlagS := a5[7];
                FlagZ := is_zero(a5);
                FlagA := a6[3];
                FlagP := parity(a5);
                FlagCY := M[2067][0];
                jump (0008);
              } else {
                let:16 a37 = (-1 + a34) in
                M[a37] := 14;
                let:16 a38 = (-1 + a37) in
                M[a38] := CB;
                A := updateBit((M[2067] >> 01),7,M[2067][0]);
                B := 20;
                H := 39;
                L := 1C;
                SPH := a38[15:8];
                SPL := a38[7:0];
                FlagS := a5[7];
                FlagZ := is_zero(a5);
                FlagA := a6[3];
                FlagP := parity(a5);
                FlagCY := M[2067][0];
                jump (0010);
              }
            } else {
              let:8 a39 = (updateBit((M[2067] >> 01),7,M[2067][0]) ^ updateBit((M[2067] >> 01),7,M[2067][0])) in
              #14CC
              let:16 a40 = (-1 + a34) in
              M[a40] := 20;
              let:16 a41 = (-1 + a40) in
              M[a41] := C;
              #14CD
              M[391C] := a39;
              #14CE
              #14D1
              let:17 a42 = add17(0020,391C) in
              #14D2
              let:16 a43 = (1 + a41) in
              let:16 a44 = (1 + a43) in
              #14D3
              let:16 a45 = addWithCarry(!true,M[a43],~00) in
              let:8 a46 = (M[a43] & 0F) in
              let:8 a47 = (~00 & 0F) in
              let:16 a48 = addWithCarry(!true,a46,a47) in
              #14D4
              if (!is_zero(a45[7:0])) {
                A := a39;
                B := a45[7:0];
                C := M[a41];
                H := a42[15:0][15:8];
                L := a42[15:0][7:0];
                SPH := a44[15:8];
                SPL := a44[7:0];
                FlagS := a45[7:0][7];
                FlagZ := is_zero(a45[7:0]);
                FlagA := a48[7:0][4];
                FlagP := parity(a45[7:0]);
                FlagCY := a42[16];
                jump (14CC);
              } else {
                #14D7
                let:16 a49 = (1 + a44) in
                let:16 a50 = (1 + a49) in
                A := a39;
                B := a45[7:0];
                C := M[a41];
                H := a42[15:0][15:8];
                L := a42[15:0][7:0];
                SPH := a50[15:8];
                SPL := a50[7:0];
                FlagS := a45[7:0][7];
                FlagZ := is_zero(a45[7:0]);
                FlagA := a48[7:0][4];
                FlagP := parity(a45[7:0]);
                FlagCY := a42[16];
                jump ((M[a49],M[a44]));
              }
            }
          }
        }
      } else {
        #08B3
        let:16 a51 = (-1 + (SPH,SPL)) in
        M[a51] := 08;
        let:16 a52 = (-1 + a51) in
        M[a52] := B6;
        #return-to: 08B6
        #09CA
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a53 = (-1 + a52) in
            M[a53] := 09;
            let:16 a54 = (-1 + a53) in
            M[a54] := CA;
            A := a5;
            SPH := a54[15:8];
            SPL := a54[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a55 = (-1 + a52) in
            M[a55] := 09;
            let:16 a56 = (-1 + a55) in
            M[a56] := CA;
            A := a5;
            SPH := a56[15:8];
            SPL := a56[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #09CD
          #09CE
          #09D1
          if (M[2067][0]) {
            let:16 a57 = (1 + a52) in
            let:16 a58 = (1 + a57) in
            A := updateBit((M[2067] >> 01),7,M[2067][0]);
            H := 20;
            L := F8;
            SPH := a58[15:8];
            SPL := a58[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := M[2067][0];
            jump ((M[a57],M[a52]));
          } else {
            #09D2
            #09D5
            let:16 a59 = (1 + a52) in
            let:16 a60 = (1 + a59) in
            A := updateBit((M[2067] >> 01),7,M[2067][0]);
            H := 20;
            L := FC;
            SPH := a60[15:8];
            SPL := a60[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := M[2067][0];
            jump ((M[a59],M[a52]));
          }
        }
      }
    }

08B6:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 08;
    let:16 a2 = (-1 + a1) in
    M[a2] := B9;
    #return-to: 08B9
    #1931
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 31;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 31;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1932
      let:16 a7 = (1 + (H,L)) in
      #1933
      #1934
      let:16 a8 = (1 + a7) in
      #1935
      #1936
      let:16 a9 = (1 + a8) in
      #1937
      #1938
      #1939
      #09AD
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a10 = (-1 + a2) in
          M[a10] := 09;
          let:16 a11 = (-1 + a10) in
          M[a11] := AD;
          A := M[a8];
          D := M[a7];
          E := M[(H,L)];
          H := M[a9];
          L := M[a8];
          SPH := a11[15:8];
          SPL := a11[7:0];
          jump (0008);
        } else {
          let:16 a12 = (-1 + a2) in
          M[a12] := 09;
          let:16 a13 = (-1 + a12) in
          M[a13] := AD;
          A := M[a8];
          D := M[a7];
          E := M[(H,L)];
          H := M[a9];
          L := M[a8];
          SPH := a13[15:8];
          SPL := a13[7:0];
          jump (0010);
        }
      } else {
        #09AE
        let:16 a14 = (-1 + a2) in
        M[a14] := 09;
        let:16 a15 = (-1 + a14) in
        M[a15] := B1;
        #return-to: 09B1
        #09B2
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a16 = (-1 + a15) in
            M[a16] := 09;
            let:16 a17 = (-1 + a16) in
            M[a17] := B2;
            A := M[a7];
            D := M[a7];
            E := M[(H,L)];
            H := M[a9];
            L := M[a8];
            SPH := a17[15:8];
            SPL := a17[7:0];
            jump (0008);
          } else {
            let:16 a18 = (-1 + a15) in
            M[a18] := 09;
            let:16 a19 = (-1 + a18) in
            M[a19] := B2;
            A := M[a7];
            D := M[a7];
            E := M[(H,L)];
            H := M[a9];
            L := M[a8];
            SPH := a19[15:8];
            SPL := a19[7:0];
            jump (0010);
          }
        } else {
          let:16 a20 = (-1 + a15) in
          M[a20] := M[a7];
          let:16 a21 = (-1 + a20) in
          M[a21] := M[(H,L)];
          #09B3
          let:16 a22 = (-1 + a21) in
          M[a22] := M[a7];
          let:16 a23 = (-1 + a22) in
          M[a23] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,FlagS),6,FlagZ),4,FlagA),2,FlagP),0,FlagCY);
          #09B4
          #09B5
          #09B6
          #09B7
          #09B8
          let:8 a24 = (0F & updateBit((updateBit((updateBit((updateBit((M[a7] >> 01),7,M[a7][0]) >> 01),7,updateBit((M[a7] >> 01),7,M[a7][0])[0]) >> 01),7,updateBit((updateBit((M[a7] >> 01),7,M[a7][0]) >> 01),7,updateBit((M[a7] >> 01),7,M[a7][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[a7] >> 01),7,M[a7][0]) >> 01),7,updateBit((M[a7] >> 01),7,M[a7][0])[0]) >> 01),7,updateBit((updateBit((M[a7] >> 01),7,M[a7][0]) >> 01),7,updateBit((M[a7] >> 01),7,M[a7][0])[0])[0])[0])) in
          let:8 a25 = (0F | updateBit((updateBit((updateBit((updateBit((M[a7] >> 01),7,M[a7][0]) >> 01),7,updateBit((M[a7] >> 01),7,M[a7][0])[0]) >> 01),7,updateBit((updateBit((M[a7] >> 01),7,M[a7][0]) >> 01),7,updateBit((M[a7] >> 01),7,M[a7][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[a7] >> 01),7,M[a7][0]) >> 01),7,updateBit((M[a7] >> 01),7,M[a7][0])[0]) >> 01),7,updateBit((updateBit((M[a7] >> 01),7,M[a7][0]) >> 01),7,updateBit((M[a7] >> 01),7,M[a7][0])[0])[0])[0])) in
          #09BA
          let:16 a26 = (-1 + a23) in
          M[a26] := 09;
          let:16 a27 = (-1 + a26) in
          M[a27] := BD;
          #return-to: 09BD
          #09C5
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a28 = (-1 + a27) in
              M[a28] := 09;
              let:16 a29 = (-1 + a28) in
              M[a29] := C5;
              A := a24;
              D := M[a7];
              E := M[(H,L)];
              H := M[a9];
              L := M[a8];
              SPH := a29[15:8];
              SPL := a29[7:0];
              FlagS := a24[7];
              FlagZ := is_zero(a24);
              FlagA := a25[3];
              FlagP := parity(a24);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a30 = (-1 + a27) in
              M[a30] := 09;
              let:16 a31 = (-1 + a30) in
              M[a31] := C5;
              A := a24;
              D := M[a7];
              E := M[(H,L)];
              H := M[a9];
              L := M[a8];
              SPH := a31[15:8];
              SPL := a31[7:0];
              FlagS := a24[7];
              FlagZ := is_zero(a24);
              FlagA := a25[3];
              FlagP := parity(a24);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a32 = addWithCarry(false,1A,a24) in
            let:8 a33 = (1A & 0F) in
            let:8 a34 = (a24 & 0F) in
            let:16 a35 = addWithCarry(false,a33,a34) in
            #09C7
            #08FF
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a36 = (-1 + a27) in
                M[a36] := 08;
                let:16 a37 = (-1 + a36) in
                M[a37] := FF;
                A := a32[7:0];
                D := M[a7];
                E := M[(H,L)];
                H := M[a9];
                L := M[a8];
                SPH := a37[15:8];
                SPL := a37[7:0];
                FlagS := a32[7:0][7];
                FlagZ := is_zero(a32[7:0]);
                FlagA := a35[7:0][4];
                FlagP := parity(a32[7:0]);
                FlagCY := a32[15:8][0];
                jump (0008);
              } else {
                let:16 a38 = (-1 + a27) in
                M[a38] := 08;
                let:16 a39 = (-1 + a38) in
                M[a39] := FF;
                A := a32[7:0];
                D := M[a7];
                E := M[(H,L)];
                H := M[a9];
                L := M[a8];
                SPH := a39[15:8];
                SPL := a39[7:0];
                FlagS := a32[7:0][7];
                FlagZ := is_zero(a32[7:0]);
                FlagA := a35[7:0][4];
                FlagP := parity(a32[7:0]);
                FlagCY := a32[15:8][0];
                jump (0010);
              }
            } else {
              #0902
              let:16 a40 = (-1 + a27) in
              M[a40] := M[a9];
              let:16 a41 = (-1 + a40) in
              M[a41] := M[a8];
              #0903
              #0905
              #0906
              let:17 a42 = add17((00,a32[7:0]),(00,a32[7:0])) in
              #0907
              let:17 a43 = add17(a42[15:0],a42[15:0]) in
              #0908
              let:17 a44 = add17(a43[15:0],a43[15:0]) in
              #0909
              let:17 a45 = add17(1E00,a44[15:0]) in
              #090A
              #090B
              let:16 a46 = (1 + a41) in
              let:16 a47 = (1 + a46) in
              #090C
              #090E
              #0910
              #1439
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a48 = (-1 + a47) in
                  M[a48] := 14;
                  let:16 a49 = (-1 + a48) in
                  M[a49] := 39;
                  A := a32[7:0];
                  B := 08;
                  D := a45[15:0][15:8];
                  E := a45[15:0][7:0];
                  H := M[a46];
                  L := M[a41];
                  SPH := a49[15:8];
                  SPL := a49[7:0];
                  FlagS := a32[7:0][7];
                  FlagZ := is_zero(a32[7:0]);
                  FlagA := a35[7:0][4];
                  FlagP := parity(a32[7:0]);
                  FlagCY := a45[16];
                  jump (0008);
                } else {
                  let:16 a50 = (-1 + a47) in
                  M[a50] := 14;
                  let:16 a51 = (-1 + a50) in
                  M[a51] := 39;
                  A := a32[7:0];
                  B := 08;
                  D := a45[15:0][15:8];
                  E := a45[15:0][7:0];
                  H := M[a46];
                  L := M[a41];
                  SPH := a51[15:8];
                  SPL := a51[7:0];
                  FlagS := a32[7:0][7];
                  FlagZ := is_zero(a32[7:0]);
                  FlagA := a35[7:0][4];
                  FlagP := parity(a32[7:0]);
                  FlagCY := a45[16];
                  jump (0010);
                }
              } else {
                let:16 a52 = (-1 + a47) in
                M[a52] := 08;
                let:16 a53 = (-1 + a52) in
                M[a53] := C;
                #143A
                #143B
                M[(M[a46],M[a41])] := M[a45[15:0]];
                #143C
                let:16 a54 = (1 + a45[15:0]) in
                #143D
                #1440
                let:17 a55 = add17(0020,(M[a46],M[a41])) in
                #1441
                let:16 a56 = (1 + a53) in
                let:16 a57 = (1 + a56) in
                #1442
                let:16 a58 = addWithCarry(!true,M[a56],~00) in
                let:8 a59 = (M[a56] & 0F) in
                let:8 a60 = (~00 & 0F) in
                let:16 a61 = addWithCarry(!true,a59,a60) in
                #1443
                if (!is_zero(a58[7:0])) {
                  A := M[a45[15:0]];
                  B := a58[7:0];
                  C := M[a53];
                  D := a54[15:8];
                  E := a54[7:0];
                  H := a55[15:0][15:8];
                  L := a55[15:0][7:0];
                  SPH := a57[15:8];
                  SPL := a57[7:0];
                  FlagS := a58[7:0][7];
                  FlagZ := is_zero(a58[7:0]);
                  FlagA := a61[7:0][4];
                  FlagP := parity(a58[7:0]);
                  FlagCY := a55[16];
                  jump (1439);
                } else {
                  #1446
                  let:16 a62 = (1 + a57) in
                  let:16 a63 = (1 + a62) in
                  A := M[a45[15:0]];
                  B := a58[7:0];
                  C := M[a53];
                  D := a54[15:8];
                  E := a54[7:0];
                  H := a55[15:0][15:8];
                  L := a55[15:0][7:0];
                  SPH := a63[15:8];
                  SPL := a63[7:0];
                  FlagS := a58[7:0][7];
                  FlagZ := is_zero(a58[7:0]);
                  FlagA := a61[7:0][4];
                  FlagP := parity(a58[7:0]);
                  FlagCY := a55[16];
                  jump ((M[a62],M[a57]));
                }
              }
            }
          }
        }
      }
    }

08B9:

    #08A9
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 08;
        let:16 a2 = (-1 + a1) in
        M[a2] := A9;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 08;
        let:16 a4 = (-1 + a3) in
        M[a4] := A9;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      #08AC
      let:8 a5 = (M[20C0] & M[20C0]) in
      let:8 a6 = (M[20C0] | M[20C0]) in
      #08AD
      if (is_zero(a5)) {
        let:16 a7 = (1 + (SPH,SPL)) in
        let:16 a8 = (1 + a7) in
        A := a5;
        SPH := a8[15:8];
        SPL := a8[7:0];
        FlagS := a5[7];
        FlagZ := is_zero(a5);
        FlagA := a6[3];
        FlagP := parity(a5);
        FlagCY := false;
        jump ((M[a7],M[(SPH,SPL)]));
      } else {
        #08AE
        let:8 a9 = (04 & a5) in
        let:8 a10 = (04 | a5) in
        #08B0
        if (!is_zero(a9)) {
          #08BC
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a11 = (-1 + (SPH,SPL)) in
              M[a11] := 08;
              let:16 a12 = (-1 + a11) in
              M[a12] := BC;
              A := a9;
              SPH := a12[15:8];
              SPL := a12[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a13 = (-1 + (SPH,SPL)) in
              M[a13] := 08;
              let:16 a14 = (-1 + a13) in
              M[a14] := BC;
              A := a9;
              SPH := a14[15:8];
              SPL := a14[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #08BE
            #08C1
            #08C4
            #08C5
            if (M[2067][0]) {
              #08CB
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a15 = (-1 + (SPH,SPL)) in
                  M[a15] := 08;
                  let:16 a16 = (-1 + a15) in
                  M[a16] := CB;
                  A := updateBit((M[2067] >> 01),7,M[2067][0]);
                  B := 20;
                  H := 27;
                  L := 1C;
                  SPH := a16[15:8];
                  SPL := a16[7:0];
                  FlagS := a9[7];
                  FlagZ := is_zero(a9);
                  FlagA := a10[3];
                  FlagP := parity(a9);
                  FlagCY := M[2067][0];
                  jump (0008);
                } else {
                  let:16 a17 = (-1 + (SPH,SPL)) in
                  M[a17] := 08;
                  let:16 a18 = (-1 + a17) in
                  M[a18] := CB;
                  A := updateBit((M[2067] >> 01),7,M[2067][0]);
                  B := 20;
                  H := 27;
                  L := 1C;
                  SPH := a18[15:8];
                  SPL := a18[7:0];
                  FlagS := a9[7];
                  FlagZ := is_zero(a9);
                  FlagA := a10[3];
                  FlagP := parity(a9);
                  FlagCY := M[2067][0];
                  jump (0010);
                }
              } else {
                let:16 a19 = (-1 + (SPH,SPL)) in
                M[a19] := 08;
                let:16 a20 = (-1 + a19) in
                M[a20] := CE;
                #return-to: 08CE
                #14CB
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a21 = (-1 + a20) in
                    M[a21] := 14;
                    let:16 a22 = (-1 + a21) in
                    M[a22] := CB;
                    A := updateBit((M[2067] >> 01),7,M[2067][0]);
                    B := 20;
                    H := 27;
                    L := 1C;
                    SPH := a22[15:8];
                    SPL := a22[7:0];
                    FlagS := a9[7];
                    FlagZ := is_zero(a9);
                    FlagA := a10[3];
                    FlagP := parity(a9);
                    FlagCY := M[2067][0];
                    jump (0008);
                  } else {
                    let:16 a23 = (-1 + a20) in
                    M[a23] := 14;
                    let:16 a24 = (-1 + a23) in
                    M[a24] := CB;
                    A := updateBit((M[2067] >> 01),7,M[2067][0]);
                    B := 20;
                    H := 27;
                    L := 1C;
                    SPH := a24[15:8];
                    SPL := a24[7:0];
                    FlagS := a9[7];
                    FlagZ := is_zero(a9);
                    FlagA := a10[3];
                    FlagP := parity(a9);
                    FlagCY := M[2067][0];
                    jump (0010);
                  }
                } else {
                  let:8 a25 = (updateBit((M[2067] >> 01),7,M[2067][0]) ^ updateBit((M[2067] >> 01),7,M[2067][0])) in
                  #14CC
                  let:16 a26 = (-1 + a20) in
                  M[a26] := 20;
                  let:16 a27 = (-1 + a26) in
                  M[a27] := C;
                  #14CD
                  M[271C] := a25;
                  #14CE
                  #14D1
                  let:17 a28 = add17(0020,271C) in
                  #14D2
                  let:16 a29 = (1 + a27) in
                  let:16 a30 = (1 + a29) in
                  #14D3
                  let:16 a31 = addWithCarry(!true,M[a29],~00) in
                  let:8 a32 = (M[a29] & 0F) in
                  let:8 a33 = (~00 & 0F) in
                  let:16 a34 = addWithCarry(!true,a32,a33) in
                  #14D4
                  if (!is_zero(a31[7:0])) {
                    A := a25;
                    B := a31[7:0];
                    C := M[a27];
                    H := a28[15:0][15:8];
                    L := a28[15:0][7:0];
                    SPH := a30[15:8];
                    SPL := a30[7:0];
                    FlagS := a31[7:0][7];
                    FlagZ := is_zero(a31[7:0]);
                    FlagA := a34[7:0][4];
                    FlagP := parity(a31[7:0]);
                    FlagCY := a28[16];
                    jump (14CC);
                  } else {
                    #14D7
                    let:16 a35 = (1 + a30) in
                    let:16 a36 = (1 + a35) in
                    A := a25;
                    B := a31[7:0];
                    C := M[a27];
                    H := a28[15:0][15:8];
                    L := a28[15:0][7:0];
                    SPH := a36[15:8];
                    SPL := a36[7:0];
                    FlagS := a31[7:0][7];
                    FlagZ := is_zero(a31[7:0]);
                    FlagA := a34[7:0][4];
                    FlagP := parity(a31[7:0]);
                    FlagCY := a28[16];
                    jump ((M[a35],M[a30]));
                  }
                }
              }
            } else {
              #08C8
              #08CB
              let:16 a37 = (-1 + (SPH,SPL)) in
              M[a37] := 08;
              let:16 a38 = (-1 + a37) in
              M[a38] := CE;
              #return-to: 08CE
              #14CB
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a39 = (-1 + a38) in
                  M[a39] := 14;
                  let:16 a40 = (-1 + a39) in
                  M[a40] := CB;
                  A := updateBit((M[2067] >> 01),7,M[2067][0]);
                  B := 20;
                  H := 39;
                  L := 1C;
                  SPH := a40[15:8];
                  SPL := a40[7:0];
                  FlagS := a9[7];
                  FlagZ := is_zero(a9);
                  FlagA := a10[3];
                  FlagP := parity(a9);
                  FlagCY := M[2067][0];
                  jump (0008);
                } else {
                  let:16 a41 = (-1 + a38) in
                  M[a41] := 14;
                  let:16 a42 = (-1 + a41) in
                  M[a42] := CB;
                  A := updateBit((M[2067] >> 01),7,M[2067][0]);
                  B := 20;
                  H := 39;
                  L := 1C;
                  SPH := a42[15:8];
                  SPL := a42[7:0];
                  FlagS := a9[7];
                  FlagZ := is_zero(a9);
                  FlagA := a10[3];
                  FlagP := parity(a9);
                  FlagCY := M[2067][0];
                  jump (0010);
                }
              } else {
                let:8 a43 = (updateBit((M[2067] >> 01),7,M[2067][0]) ^ updateBit((M[2067] >> 01),7,M[2067][0])) in
                #14CC
                let:16 a44 = (-1 + a38) in
                M[a44] := 20;
                let:16 a45 = (-1 + a44) in
                M[a45] := C;
                #14CD
                M[391C] := a43;
                #14CE
                #14D1
                let:17 a46 = add17(0020,391C) in
                #14D2
                let:16 a47 = (1 + a45) in
                let:16 a48 = (1 + a47) in
                #14D3
                let:16 a49 = addWithCarry(!true,M[a47],~00) in
                let:8 a50 = (M[a47] & 0F) in
                let:8 a51 = (~00 & 0F) in
                let:16 a52 = addWithCarry(!true,a50,a51) in
                #14D4
                if (!is_zero(a49[7:0])) {
                  A := a43;
                  B := a49[7:0];
                  C := M[a45];
                  H := a46[15:0][15:8];
                  L := a46[15:0][7:0];
                  SPH := a48[15:8];
                  SPL := a48[7:0];
                  FlagS := a49[7:0][7];
                  FlagZ := is_zero(a49[7:0]);
                  FlagA := a52[7:0][4];
                  FlagP := parity(a49[7:0]);
                  FlagCY := a46[16];
                  jump (14CC);
                } else {
                  #14D7
                  let:16 a53 = (1 + a48) in
                  let:16 a54 = (1 + a53) in
                  A := a43;
                  B := a49[7:0];
                  C := M[a45];
                  H := a46[15:0][15:8];
                  L := a46[15:0][7:0];
                  SPH := a54[15:8];
                  SPL := a54[7:0];
                  FlagS := a49[7:0][7];
                  FlagZ := is_zero(a49[7:0]);
                  FlagA := a52[7:0][4];
                  FlagP := parity(a49[7:0]);
                  FlagCY := a46[16];
                  jump ((M[a53],M[a48]));
                }
              }
            }
          }
        } else {
          #08B3
          let:16 a55 = (-1 + (SPH,SPL)) in
          M[a55] := 08;
          let:16 a56 = (-1 + a55) in
          M[a56] := B6;
          #return-to: 08B6
          #09CA
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a57 = (-1 + a56) in
              M[a57] := 09;
              let:16 a58 = (-1 + a57) in
              M[a58] := CA;
              A := a9;
              SPH := a58[15:8];
              SPL := a58[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a59 = (-1 + a56) in
              M[a59] := 09;
              let:16 a60 = (-1 + a59) in
              M[a60] := CA;
              A := a9;
              SPH := a60[15:8];
              SPL := a60[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #09CD
            #09CE
            #09D1
            if (M[2067][0]) {
              let:16 a61 = (1 + a56) in
              let:16 a62 = (1 + a61) in
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              H := 20;
              L := F8;
              SPH := a62[15:8];
              SPL := a62[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := M[2067][0];
              jump ((M[a61],M[a56]));
            } else {
              #09D2
              #09D5
              let:16 a63 = (1 + a56) in
              let:16 a64 = (1 + a63) in
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              H := 20;
              L := FC;
              SPH := a64[15:8];
              SPL := a64[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := M[2067][0];
              jump ((M[a63],M[a56]));
            }
          }
        }
      }
    }

08CE:

    #08A9
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 08;
        let:16 a2 = (-1 + a1) in
        M[a2] := A9;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 08;
        let:16 a4 = (-1 + a3) in
        M[a4] := A9;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      #08AC
      let:8 a5 = (M[20C0] & M[20C0]) in
      let:8 a6 = (M[20C0] | M[20C0]) in
      #08AD
      if (is_zero(a5)) {
        let:16 a7 = (1 + (SPH,SPL)) in
        let:16 a8 = (1 + a7) in
        A := a5;
        SPH := a8[15:8];
        SPL := a8[7:0];
        FlagS := a5[7];
        FlagZ := is_zero(a5);
        FlagA := a6[3];
        FlagP := parity(a5);
        FlagCY := false;
        jump ((M[a7],M[(SPH,SPL)]));
      } else {
        #08AE
        let:8 a9 = (04 & a5) in
        let:8 a10 = (04 | a5) in
        #08B0
        if (!is_zero(a9)) {
          #08BC
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a11 = (-1 + (SPH,SPL)) in
              M[a11] := 08;
              let:16 a12 = (-1 + a11) in
              M[a12] := BC;
              A := a9;
              SPH := a12[15:8];
              SPL := a12[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a13 = (-1 + (SPH,SPL)) in
              M[a13] := 08;
              let:16 a14 = (-1 + a13) in
              M[a14] := BC;
              A := a9;
              SPH := a14[15:8];
              SPL := a14[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #08BE
            #08C1
            #08C4
            #08C5
            if (M[2067][0]) {
              #08CB
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a15 = (-1 + (SPH,SPL)) in
                  M[a15] := 08;
                  let:16 a16 = (-1 + a15) in
                  M[a16] := CB;
                  A := updateBit((M[2067] >> 01),7,M[2067][0]);
                  B := 20;
                  H := 27;
                  L := 1C;
                  SPH := a16[15:8];
                  SPL := a16[7:0];
                  FlagS := a9[7];
                  FlagZ := is_zero(a9);
                  FlagA := a10[3];
                  FlagP := parity(a9);
                  FlagCY := M[2067][0];
                  jump (0008);
                } else {
                  let:16 a17 = (-1 + (SPH,SPL)) in
                  M[a17] := 08;
                  let:16 a18 = (-1 + a17) in
                  M[a18] := CB;
                  A := updateBit((M[2067] >> 01),7,M[2067][0]);
                  B := 20;
                  H := 27;
                  L := 1C;
                  SPH := a18[15:8];
                  SPL := a18[7:0];
                  FlagS := a9[7];
                  FlagZ := is_zero(a9);
                  FlagA := a10[3];
                  FlagP := parity(a9);
                  FlagCY := M[2067][0];
                  jump (0010);
                }
              } else {
                let:16 a19 = (-1 + (SPH,SPL)) in
                M[a19] := 08;
                let:16 a20 = (-1 + a19) in
                M[a20] := CE;
                #return-to: 08CE
                #14CB
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a21 = (-1 + a20) in
                    M[a21] := 14;
                    let:16 a22 = (-1 + a21) in
                    M[a22] := CB;
                    A := updateBit((M[2067] >> 01),7,M[2067][0]);
                    B := 20;
                    H := 27;
                    L := 1C;
                    SPH := a22[15:8];
                    SPL := a22[7:0];
                    FlagS := a9[7];
                    FlagZ := is_zero(a9);
                    FlagA := a10[3];
                    FlagP := parity(a9);
                    FlagCY := M[2067][0];
                    jump (0008);
                  } else {
                    let:16 a23 = (-1 + a20) in
                    M[a23] := 14;
                    let:16 a24 = (-1 + a23) in
                    M[a24] := CB;
                    A := updateBit((M[2067] >> 01),7,M[2067][0]);
                    B := 20;
                    H := 27;
                    L := 1C;
                    SPH := a24[15:8];
                    SPL := a24[7:0];
                    FlagS := a9[7];
                    FlagZ := is_zero(a9);
                    FlagA := a10[3];
                    FlagP := parity(a9);
                    FlagCY := M[2067][0];
                    jump (0010);
                  }
                } else {
                  let:8 a25 = (updateBit((M[2067] >> 01),7,M[2067][0]) ^ updateBit((M[2067] >> 01),7,M[2067][0])) in
                  #14CC
                  let:16 a26 = (-1 + a20) in
                  M[a26] := 20;
                  let:16 a27 = (-1 + a26) in
                  M[a27] := C;
                  #14CD
                  M[271C] := a25;
                  #14CE
                  #14D1
                  let:17 a28 = add17(0020,271C) in
                  #14D2
                  let:16 a29 = (1 + a27) in
                  let:16 a30 = (1 + a29) in
                  #14D3
                  let:16 a31 = addWithCarry(!true,M[a29],~00) in
                  let:8 a32 = (M[a29] & 0F) in
                  let:8 a33 = (~00 & 0F) in
                  let:16 a34 = addWithCarry(!true,a32,a33) in
                  #14D4
                  if (!is_zero(a31[7:0])) {
                    A := a25;
                    B := a31[7:0];
                    C := M[a27];
                    H := a28[15:0][15:8];
                    L := a28[15:0][7:0];
                    SPH := a30[15:8];
                    SPL := a30[7:0];
                    FlagS := a31[7:0][7];
                    FlagZ := is_zero(a31[7:0]);
                    FlagA := a34[7:0][4];
                    FlagP := parity(a31[7:0]);
                    FlagCY := a28[16];
                    jump (14CC);
                  } else {
                    #14D7
                    let:16 a35 = (1 + a30) in
                    let:16 a36 = (1 + a35) in
                    A := a25;
                    B := a31[7:0];
                    C := M[a27];
                    H := a28[15:0][15:8];
                    L := a28[15:0][7:0];
                    SPH := a36[15:8];
                    SPL := a36[7:0];
                    FlagS := a31[7:0][7];
                    FlagZ := is_zero(a31[7:0]);
                    FlagA := a34[7:0][4];
                    FlagP := parity(a31[7:0]);
                    FlagCY := a28[16];
                    jump ((M[a35],M[a30]));
                  }
                }
              }
            } else {
              #08C8
              #08CB
              let:16 a37 = (-1 + (SPH,SPL)) in
              M[a37] := 08;
              let:16 a38 = (-1 + a37) in
              M[a38] := CE;
              #return-to: 08CE
              #14CB
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a39 = (-1 + a38) in
                  M[a39] := 14;
                  let:16 a40 = (-1 + a39) in
                  M[a40] := CB;
                  A := updateBit((M[2067] >> 01),7,M[2067][0]);
                  B := 20;
                  H := 39;
                  L := 1C;
                  SPH := a40[15:8];
                  SPL := a40[7:0];
                  FlagS := a9[7];
                  FlagZ := is_zero(a9);
                  FlagA := a10[3];
                  FlagP := parity(a9);
                  FlagCY := M[2067][0];
                  jump (0008);
                } else {
                  let:16 a41 = (-1 + a38) in
                  M[a41] := 14;
                  let:16 a42 = (-1 + a41) in
                  M[a42] := CB;
                  A := updateBit((M[2067] >> 01),7,M[2067][0]);
                  B := 20;
                  H := 39;
                  L := 1C;
                  SPH := a42[15:8];
                  SPL := a42[7:0];
                  FlagS := a9[7];
                  FlagZ := is_zero(a9);
                  FlagA := a10[3];
                  FlagP := parity(a9);
                  FlagCY := M[2067][0];
                  jump (0010);
                }
              } else {
                let:8 a43 = (updateBit((M[2067] >> 01),7,M[2067][0]) ^ updateBit((M[2067] >> 01),7,M[2067][0])) in
                #14CC
                let:16 a44 = (-1 + a38) in
                M[a44] := 20;
                let:16 a45 = (-1 + a44) in
                M[a45] := C;
                #14CD
                M[391C] := a43;
                #14CE
                #14D1
                let:17 a46 = add17(0020,391C) in
                #14D2
                let:16 a47 = (1 + a45) in
                let:16 a48 = (1 + a47) in
                #14D3
                let:16 a49 = addWithCarry(!true,M[a47],~00) in
                let:8 a50 = (M[a47] & 0F) in
                let:8 a51 = (~00 & 0F) in
                let:16 a52 = addWithCarry(!true,a50,a51) in
                #14D4
                if (!is_zero(a49[7:0])) {
                  A := a43;
                  B := a49[7:0];
                  C := M[a45];
                  H := a46[15:0][15:8];
                  L := a46[15:0][7:0];
                  SPH := a48[15:8];
                  SPL := a48[7:0];
                  FlagS := a49[7:0][7];
                  FlagZ := is_zero(a49[7:0]);
                  FlagA := a52[7:0][4];
                  FlagP := parity(a49[7:0]);
                  FlagCY := a46[16];
                  jump (14CC);
                } else {
                  #14D7
                  let:16 a53 = (1 + a48) in
                  let:16 a54 = (1 + a53) in
                  A := a43;
                  B := a49[7:0];
                  C := M[a45];
                  H := a46[15:0][15:8];
                  L := a46[15:0][7:0];
                  SPH := a54[15:8];
                  SPL := a54[7:0];
                  FlagS := a49[7:0][7];
                  FlagZ := is_zero(a49[7:0]);
                  FlagA := a52[7:0][4];
                  FlagP := parity(a49[7:0]);
                  FlagCY := a46[16];
                  jump ((M[a53],M[a48]));
                }
              }
            }
          }
        } else {
          #08B3
          let:16 a55 = (-1 + (SPH,SPL)) in
          M[a55] := 08;
          let:16 a56 = (-1 + a55) in
          M[a56] := B6;
          #return-to: 08B6
          #09CA
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a57 = (-1 + a56) in
              M[a57] := 09;
              let:16 a58 = (-1 + a57) in
              M[a58] := CA;
              A := a9;
              SPH := a58[15:8];
              SPL := a58[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a59 = (-1 + a56) in
              M[a59] := 09;
              let:16 a60 = (-1 + a59) in
              M[a60] := CA;
              A := a9;
              SPH := a60[15:8];
              SPL := a60[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #09CD
            #09CE
            #09D1
            if (M[2067][0]) {
              let:16 a61 = (1 + a56) in
              let:16 a62 = (1 + a61) in
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              H := 20;
              L := F8;
              SPH := a62[15:8];
              SPL := a62[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := M[2067][0];
              jump ((M[a61],M[a56]));
            } else {
              #09D2
              #09D5
              let:16 a63 = (1 + a56) in
              let:16 a64 = (1 + a63) in
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              H := 20;
              L := FC;
              SPH := a64[15:8];
              SPL := a64[7:0];
              FlagS := a9[7];
              FlagZ := is_zero(a9);
              FlagA := a10[3];
              FlagP := parity(a9);
              FlagCY := M[2067][0];
              jump ((M[a63],M[a56]));
            }
          }
        }
      }
    }

08F8:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #08F9
    let:16 a3 = (1 + (M[a1],M[(SPH,SPL)])) in
    #08FA
    let:16 a4 = addWithCarry(!true,C,~00) in
    let:8 a5 = (C & 0F) in
    let:8 a6 = (~00 & 0F) in
    let:16 a7 = addWithCarry(!true,a5,a6) in
    #08FB
    if (!is_zero(a4[7:0])) {
      #08F3
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a8 = (-1 + a2) in
          M[a8] := 08;
          let:16 a9 = (-1 + a8) in
          M[a9] := F3;
          C := a4[7:0];
          D := a3[15:8];
          E := a3[7:0];
          SPH := a9[15:8];
          SPL := a9[7:0];
          FlagS := a4[7:0][7];
          FlagZ := is_zero(a4[7:0]);
          FlagA := a7[7:0][4];
          FlagP := parity(a4[7:0]);
          jump (0008);
        } else {
          let:16 a10 = (-1 + a2) in
          M[a10] := 08;
          let:16 a11 = (-1 + a10) in
          M[a11] := F3;
          C := a4[7:0];
          D := a3[15:8];
          E := a3[7:0];
          SPH := a11[15:8];
          SPL := a11[7:0];
          FlagS := a4[7:0][7];
          FlagZ := is_zero(a4[7:0]);
          FlagA := a7[7:0][4];
          FlagP := parity(a4[7:0]);
          jump (0010);
        }
      } else {
        #08F4
        let:16 a12 = (-1 + a2) in
        M[a12] := a3[15:8];
        let:16 a13 = (-1 + a12) in
        M[a13] := a3[7:0];
        #08F5
        let:16 a14 = (-1 + a13) in
        M[a14] := 08;
        let:16 a15 = (-1 + a14) in
        M[a15] := F8;
        #return-to: 08F8
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a16 = (-1 + a15) in
            M[a16] := 08;
            let:16 a17 = (-1 + a16) in
            M[a17] := FF;
            A := M[a3];
            C := a4[7:0];
            D := a3[15:8];
            E := a3[7:0];
            SPH := a17[15:8];
            SPL := a17[7:0];
            FlagS := a4[7:0][7];
            FlagZ := is_zero(a4[7:0]);
            FlagA := a7[7:0][4];
            FlagP := parity(a4[7:0]);
            jump (0008);
          } else {
            let:16 a18 = (-1 + a15) in
            M[a18] := 08;
            let:16 a19 = (-1 + a18) in
            M[a19] := FF;
            A := M[a3];
            C := a4[7:0];
            D := a3[15:8];
            E := a3[7:0];
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a4[7:0][7];
            FlagZ := is_zero(a4[7:0]);
            FlagA := a7[7:0][4];
            FlagP := parity(a4[7:0]);
            jump (0010);
          }
        } else {
          #0902
          let:16 a20 = (-1 + a15) in
          M[a20] := H;
          let:16 a21 = (-1 + a20) in
          M[a21] := L;
          #0903
          #0905
          #0906
          let:17 a22 = add17((00,M[a3]),(00,M[a3])) in
          #0907
          let:17 a23 = add17(a22[15:0],a22[15:0]) in
          #0908
          let:17 a24 = add17(a23[15:0],a23[15:0]) in
          #0909
          let:17 a25 = add17(1E00,a24[15:0]) in
          #090A
          #090B
          let:16 a26 = (1 + a21) in
          let:16 a27 = (1 + a26) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a28 = (-1 + a27) in
              M[a28] := 14;
              let:16 a29 = (-1 + a28) in
              M[a29] := 39;
              A := M[a3];
              B := 08;
              C := a4[7:0];
              D := a25[15:0][15:8];
              E := a25[15:0][7:0];
              H := M[a26];
              L := M[a21];
              SPH := a29[15:8];
              SPL := a29[7:0];
              FlagS := a4[7:0][7];
              FlagZ := is_zero(a4[7:0]);
              FlagA := a7[7:0][4];
              FlagP := parity(a4[7:0]);
              FlagCY := a25[16];
              jump (0008);
            } else {
              let:16 a30 = (-1 + a27) in
              M[a30] := 14;
              let:16 a31 = (-1 + a30) in
              M[a31] := 39;
              A := M[a3];
              B := 08;
              C := a4[7:0];
              D := a25[15:0][15:8];
              E := a25[15:0][7:0];
              H := M[a26];
              L := M[a21];
              SPH := a31[15:8];
              SPL := a31[7:0];
              FlagS := a4[7:0][7];
              FlagZ := is_zero(a4[7:0]);
              FlagA := a7[7:0][4];
              FlagP := parity(a4[7:0]);
              FlagCY := a25[16];
              jump (0010);
            }
          } else {
            let:16 a32 = (-1 + a27) in
            M[a32] := 08;
            let:16 a33 = (-1 + a32) in
            M[a33] := a4[7:0];
            #143A
            #143B
            M[(M[a26],M[a21])] := M[a25[15:0]];
            #143C
            let:16 a34 = (1 + a25[15:0]) in
            #143D
            #1440
            let:17 a35 = add17(0020,(M[a26],M[a21])) in
            #1441
            let:16 a36 = (1 + a33) in
            let:16 a37 = (1 + a36) in
            #1442
            let:16 a38 = addWithCarry(!true,M[a36],~00) in
            let:8 a39 = (M[a36] & 0F) in
            let:8 a40 = (~00 & 0F) in
            let:16 a41 = addWithCarry(!true,a39,a40) in
            #1443
            if (!is_zero(a38[7:0])) {
              A := M[a25[15:0]];
              B := a38[7:0];
              C := M[a33];
              D := a34[15:8];
              E := a34[7:0];
              H := a35[15:0][15:8];
              L := a35[15:0][7:0];
              SPH := a37[15:8];
              SPL := a37[7:0];
              FlagS := a38[7:0][7];
              FlagZ := is_zero(a38[7:0]);
              FlagA := a41[7:0][4];
              FlagP := parity(a38[7:0]);
              FlagCY := a35[16];
              jump (1439);
            } else {
              #1446
              let:16 a42 = (1 + a37) in
              let:16 a43 = (1 + a42) in
              A := M[a25[15:0]];
              B := a38[7:0];
              C := M[a33];
              D := a34[15:8];
              E := a34[7:0];
              H := a35[15:0][15:8];
              L := a35[15:0][7:0];
              SPH := a43[15:8];
              SPL := a43[7:0];
              FlagS := a38[7:0][7];
              FlagZ := is_zero(a38[7:0]);
              FlagA := a41[7:0][4];
              FlagP := parity(a38[7:0]);
              FlagCY := a35[16];
              jump ((M[a42],M[a37]));
            }
          }
        }
      }
    } else {
      #08FE
      let:16 a44 = (1 + a2) in
      let:16 a45 = (1 + a44) in
      C := a4[7:0];
      D := a3[15:8];
      E := a3[7:0];
      SPH := a45[15:8];
      SPL := a45[7:0];
      FlagS := a4[7:0][7];
      FlagZ := is_zero(a4[7:0]);
      FlagA := a7[7:0][4];
      FlagP := parity(a4[7:0]);
      jump ((M[a44],M[a2]));
    }

0931:

    #0933
    #0934
    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    A := M[(H,FF)];
    L := FF;
    SPH := a2[15:8];
    SPL := a2[7:0];
    jump ((M[a1],M[(SPH,SPL)]));

0938:

    let:16 a1 = (-1 + (H,L)) in
    #0939
    let:16 a2 = (-1 + a1) in
    #093A
    #093B
    let:8 a3 = (M[a2] & M[a2]) in
    let:8 a4 = (M[a2] | M[a2]) in
    #093C
    if (is_zero(a3)) {
      let:16 a5 = (1 + (SPH,SPL)) in
      let:16 a6 = (1 + a5) in
      A := a3;
      H := a2[15:8];
      L := a2[7:0];
      SPH := a6[15:8];
      SPL := a6[7:0];
      FlagS := a3[7];
      FlagZ := is_zero(a3);
      FlagA := a4[3];
      FlagP := parity(a3);
      FlagCY := false;
      jump ((M[a5],M[(SPH,SPL)]));
    } else {
      #093D
      #093F
      #0941
      let:8 a7 = (08 & updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))) in
      let:8 a8 = (08 | updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))) in
      #0943
      if (is_zero(a7)) {
        #0948
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + (SPH,SPL)) in
            M[a9] := 09;
            let:16 a10 = (-1 + a9) in
            M[a10] := 48;
            A := a7;
            B := 15;
            H := a2[15:8];
            L := a2[7:0];
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a11 = (-1 + (SPH,SPL)) in
            M[a11] := 09;
            let:16 a12 = (-1 + a11) in
            M[a12] := 48;
            A := a7;
            B := 15;
            H := a2[15:8];
            L := a2[7:0];
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a13 = (-1 + (SPH,SPL)) in
          M[a13] := 09;
          let:16 a14 = (-1 + a13) in
          M[a14] := 4B;
          #return-to: 094B
          #09CA
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a15 = (-1 + a14) in
              M[a15] := 09;
              let:16 a16 = (-1 + a15) in
              M[a16] := CA;
              A := a7;
              B := 15;
              H := a2[15:8];
              L := a2[7:0];
              SPH := a16[15:8];
              SPL := a16[7:0];
              FlagS := a7[7];
              FlagZ := is_zero(a7);
              FlagA := a8[3];
              FlagP := parity(a7);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a17 = (-1 + a14) in
              M[a17] := 09;
              let:16 a18 = (-1 + a17) in
              M[a18] := CA;
              A := a7;
              B := 15;
              H := a2[15:8];
              L := a2[7:0];
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a7[7];
              FlagZ := is_zero(a7);
              FlagA := a8[3];
              FlagP := parity(a7);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #09CD
            #09CE
            #09D1
            if (M[2067][0]) {
              let:16 a19 = (1 + a14) in
              let:16 a20 = (1 + a19) in
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              B := 15;
              H := 20;
              L := F8;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a7[7];
              FlagZ := is_zero(a7);
              FlagA := a8[3];
              FlagP := parity(a7);
              FlagCY := M[2067][0];
              jump ((M[a19],M[a14]));
            } else {
              #09D2
              #09D5
              let:16 a21 = (1 + a14) in
              let:16 a22 = (1 + a21) in
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              B := 15;
              H := 20;
              L := FC;
              SPH := a22[15:8];
              SPL := a22[7:0];
              FlagS := a7[7];
              FlagZ := is_zero(a7);
              FlagA := a8[3];
              FlagP := parity(a7);
              FlagCY := M[2067][0];
              jump ((M[a21],M[a14]));
            }
          }
        }
      } else {
        #0946
        #0948
        let:16 a23 = (-1 + (SPH,SPL)) in
        M[a23] := 09;
        let:16 a24 = (-1 + a23) in
        M[a24] := 4B;
        #return-to: 094B
        #09CA
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a25 = (-1 + a24) in
            M[a25] := 09;
            let:16 a26 = (-1 + a25) in
            M[a26] := CA;
            A := a7;
            B := 10;
            H := a2[15:8];
            L := a2[7:0];
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a27 = (-1 + a24) in
            M[a27] := 09;
            let:16 a28 = (-1 + a27) in
            M[a28] := CA;
            A := a7;
            B := 10;
            H := a2[15:8];
            L := a2[7:0];
            SPH := a28[15:8];
            SPL := a28[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #09CD
          #09CE
          #09D1
          if (M[2067][0]) {
            let:16 a29 = (1 + a24) in
            let:16 a30 = (1 + a29) in
            A := updateBit((M[2067] >> 01),7,M[2067][0]);
            B := 10;
            H := 20;
            L := F8;
            SPH := a30[15:8];
            SPL := a30[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := M[2067][0];
            jump ((M[a29],M[a24]));
          } else {
            #09D2
            #09D5
            let:16 a31 = (1 + a24) in
            let:16 a32 = (1 + a31) in
            A := updateBit((M[2067] >> 01),7,M[2067][0]);
            B := 10;
            H := 20;
            L := FC;
            SPH := a32[15:8];
            SPL := a32[7:0];
            FlagS := a7[7];
            FlagZ := is_zero(a7);
            FlagA := a8[3];
            FlagP := parity(a7);
            FlagCY := M[2067][0];
            jump ((M[a31],M[a24]));
          }
        }
      }
    }

094B:

    let:16 a1 = (1 + (H,L)) in
    #094C
    #094D
    let:16 a2 = addWithCarry(!false,M[a1],~B) in
    let:8 a3 = (M[a1] & 0F) in
    let:8 a4 = (~B & 0F) in
    let:16 a5 = addWithCarry(!false,a3,a4) in
    #094E
    if (!a2[15:8][0]) {
      let:16 a6 = (1 + (SPH,SPL)) in
      let:16 a7 = (1 + a6) in
      A := M[a1];
      H := a1[15:8];
      L := a1[7:0];
      SPH := a7[15:8];
      SPL := a7[7:0];
      FlagS := a2[7:0][7];
      FlagZ := is_zero(a2[7:0]);
      FlagA := a5[7:0][4];
      FlagP := parity(a2[7:0]);
      FlagCY := !a2[15:8][0];
      jump ((M[a6],M[(SPH,SPL)]));
    } else {
      #094F
      let:16 a8 = (-1 + (SPH,SPL)) in
      M[a8] := 09;
      let:16 a9 = (-1 + a8) in
      M[a9] := 52;
      #return-to: 0952
      #092E
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a10 = (-1 + a9) in
          M[a10] := 09;
          let:16 a11 = (-1 + a10) in
          M[a11] := 2E;
          A := M[a1];
          H := a1[15:8];
          L := a1[7:0];
          SPH := a11[15:8];
          SPL := a11[7:0];
          FlagS := a2[7:0][7];
          FlagZ := is_zero(a2[7:0]);
          FlagA := a5[7:0][4];
          FlagP := parity(a2[7:0]);
          FlagCY := !a2[15:8][0];
          jump (0008);
        } else {
          let:16 a12 = (-1 + a9) in
          M[a12] := 09;
          let:16 a13 = (-1 + a12) in
          M[a13] := 2E;
          A := M[a1];
          H := a1[15:8];
          L := a1[7:0];
          SPH := a13[15:8];
          SPL := a13[7:0];
          FlagS := a2[7:0][7];
          FlagZ := is_zero(a2[7:0]);
          FlagA := a5[7:0][4];
          FlagP := parity(a2[7:0]);
          FlagCY := !a2[15:8][0];
          jump (0010);
        }
      } else {
        let:16 a14 = (-1 + a9) in
        M[a14] := 09;
        let:16 a15 = (-1 + a14) in
        M[a15] := 31;
        #return-to: 0931
        #1611
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a16 = (-1 + a15) in
            M[a16] := 16;
            let:16 a17 = (-1 + a16) in
            M[a17] := 11;
            A := M[a1];
            H := a1[15:8];
            L := a1[7:0];
            SPH := a17[15:8];
            SPL := a17[7:0];
            FlagS := a2[7:0][7];
            FlagZ := is_zero(a2[7:0]);
            FlagA := a5[7:0][4];
            FlagP := parity(a2[7:0]);
            FlagCY := !a2[15:8][0];
            jump (0008);
          } else {
            let:16 a18 = (-1 + a15) in
            M[a18] := 16;
            let:16 a19 = (-1 + a18) in
            M[a19] := 11;
            A := M[a1];
            H := a1[15:8];
            L := a1[7:0];
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a2[7:0][7];
            FlagZ := is_zero(a2[7:0]);
            FlagA := a5[7:0][4];
            FlagP := parity(a2[7:0]);
            FlagCY := !a2[15:8][0];
            jump (0010);
          }
        } else {
          #1613
          #1616
          #1617
          let:16 a20 = (1 + a15) in
          let:16 a21 = (1 + a20) in
          A := M[2067];
          H := M[2067];
          L := 00;
          SPH := a21[15:8];
          SPL := a21[7:0];
          FlagS := a2[7:0][7];
          FlagZ := is_zero(a2[7:0]);
          FlagA := a5[7:0][4];
          FlagP := parity(a2[7:0]);
          FlagCY := !a2[15:8][0];
          jump ((M[a20],M[a15]));
        }
      }
    }

0952:

    let:16 a1 = addWithCarry(true,M[(H,L)],00) in
    let:8 a2 = (M[(H,L)] & 0F) in
    let:8 a3 = (00 & 0F) in
    let:16 a4 = addWithCarry(true,a2,a3) in
    M[(H,L)] := a1[7:0];
    #0953
    #0954
    let:16 a5 = (-1 + (SPH,SPL)) in
    M[a5] := M[(H,L)];
    let:16 a6 = (-1 + a5) in
    M[a6] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a1[7:0][7]),6,is_zero(a1[7:0])),4,a4[7:0][4]),2,parity(a1[7:0])),0,FlagCY);
    #0955
    #0958
    let:16 a7 = addWithCarry(true,25,00) in
    let:8 a8 = (25 & 0F) in
    let:8 a9 = (00 & 0F) in
    let:16 a10 = addWithCarry(true,a8,a9) in
    #0959
    let:16 a11 = addWithCarry(true,a7[7:0],00) in
    let:8 a12 = (a7[7:0] & 0F) in
    let:8 a13 = (00 & 0F) in
    let:16 a14 = addWithCarry(true,a12,a13) in
    #095A
    let:16 a15 = addWithCarry(!true,M[(H,L)],~00) in
    let:8 a16 = (M[(H,L)] & 0F) in
    let:8 a17 = (~00 & 0F) in
    let:16 a18 = addWithCarry(!true,a16,a17) in
    #095B
    if (!is_zero(a15[7:0])) {
      A := a15[7:0];
      H := a11[7:0];
      L := 01;
      SPH := a6[15:8];
      SPL := a6[7:0];
      FlagS := a15[7:0][7];
      FlagZ := is_zero(a15[7:0]);
      FlagA := a18[7:0][4];
      FlagP := parity(a15[7:0]);
      jump (0958);
    } else {
      #095E
      #0960
      #0963
      let:16 a19 = (-1 + a6) in
      M[a19] := 09;
      let:16 a20 = (-1 + a19) in
      M[a20] := 66;
      #return-to: 0966
      #1439
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a21 = (-1 + a20) in
          M[a21] := 14;
          let:16 a22 = (-1 + a21) in
          M[a22] := 39;
          A := a15[7:0];
          B := 10;
          D := 1C;
          E := 60;
          H := a11[7:0];
          L := 01;
          SPH := a22[15:8];
          SPL := a22[7:0];
          FlagS := a15[7:0][7];
          FlagZ := is_zero(a15[7:0]);
          FlagA := a18[7:0][4];
          FlagP := parity(a15[7:0]);
          jump (0008);
        } else {
          let:16 a23 = (-1 + a20) in
          M[a23] := 14;
          let:16 a24 = (-1 + a23) in
          M[a24] := 39;
          A := a15[7:0];
          B := 10;
          D := 1C;
          E := 60;
          H := a11[7:0];
          L := 01;
          SPH := a24[15:8];
          SPL := a24[7:0];
          FlagS := a15[7:0][7];
          FlagZ := is_zero(a15[7:0]);
          FlagA := a18[7:0][4];
          FlagP := parity(a15[7:0]);
          jump (0010);
        }
      } else {
        let:16 a25 = (-1 + a20) in
        M[a25] := 10;
        let:16 a26 = (-1 + a25) in
        M[a26] := C;
        #143A
        #143B
        M[(a11[7:0],01)] := 00;
        #143C
        #143D
        #1440
        let:17 a27 = add17(0020,(a11[7:0],01)) in
        #1441
        let:16 a28 = (1 + a26) in
        let:16 a29 = (1 + a28) in
        #1442
        let:16 a30 = addWithCarry(!true,M[a28],~00) in
        let:8 a31 = (M[a28] & 0F) in
        let:8 a32 = (~00 & 0F) in
        let:16 a33 = addWithCarry(!true,a31,a32) in
        #1443
        if (!is_zero(a30[7:0])) {
          A := 00;
          B := a30[7:0];
          C := M[a26];
          D := 1C;
          E := 61;
          H := a27[15:0][15:8];
          L := a27[15:0][7:0];
          SPH := a29[15:8];
          SPL := a29[7:0];
          FlagS := a30[7:0][7];
          FlagZ := is_zero(a30[7:0]);
          FlagA := a33[7:0][4];
          FlagP := parity(a30[7:0]);
          FlagCY := a27[16];
          jump (1439);
        } else {
          #1446
          let:16 a34 = (1 + a29) in
          let:16 a35 = (1 + a34) in
          A := 00;
          B := a30[7:0];
          C := M[a26];
          D := 1C;
          E := 61;
          H := a27[15:0][15:8];
          L := a27[15:0][7:0];
          SPH := a35[15:8];
          SPL := a35[7:0];
          FlagS := a30[7:0][7];
          FlagZ := is_zero(a30[7:0]);
          FlagA := a33[7:0][4];
          FlagP := parity(a30[7:0]);
          FlagCY := a27[16];
          jump ((M[a34],M[a29]));
        }
      }
    }

0966:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #0967
    let:16 a3 = addWithCarry(true,M[a1],00) in
    let:8 a4 = (M[a1] & 0F) in
    let:8 a5 = (00 & 0F) in
    let:16 a6 = addWithCarry(true,a4,a5) in
    #0968
    let:16 a7 = (-1 + a2) in
    M[a7] := 09;
    let:16 a8 = (-1 + a7) in
    M[a8] := 6B;
    #return-to: 096B
    #1A8B
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a9 = (-1 + a8) in
        M[a9] := 1A;
        let:16 a10 = (-1 + a9) in
        M[a10] := 8B;
        A := a3[7:0];
        SPH := a10[15:8];
        SPL := a10[7:0];
        FlagS := a3[7:0][7];
        FlagZ := is_zero(a3[7:0]);
        FlagA := a6[7:0][4];
        FlagP := parity(a3[7:0]);
        FlagCY := M[(SPH,SPL)][0];
        jump (0008);
      } else {
        let:16 a11 = (-1 + a8) in
        M[a11] := 1A;
        let:16 a12 = (-1 + a11) in
        M[a12] := 8B;
        A := a3[7:0];
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a3[7:0][7];
        FlagZ := is_zero(a3[7:0]);
        FlagA := a6[7:0][4];
        FlagP := parity(a3[7:0]);
        FlagCY := M[(SPH,SPL)][0];
        jump (0010);
      }
    } else {
      #1A8E
      let:8 a13 = (0F & a3[7:0]) in
      let:8 a14 = (0F | a3[7:0]) in
      #1A90
      #09C5
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a15 = (-1 + a8) in
          M[a15] := 09;
          let:16 a16 = (-1 + a15) in
          M[a16] := C5;
          A := a13;
          H := 25;
          L := 01;
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a13[7];
          FlagZ := is_zero(a13);
          FlagA := a14[3];
          FlagP := parity(a13);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a17 = (-1 + a8) in
          M[a17] := 09;
          let:16 a18 = (-1 + a17) in
          M[a18] := C5;
          A := a13;
          H := 25;
          L := 01;
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a13[7];
          FlagZ := is_zero(a13);
          FlagA := a14[3];
          FlagP := parity(a13);
          FlagCY := false;
          jump (0010);
        }
      } else {
        let:16 a19 = addWithCarry(false,1A,a13) in
        let:8 a20 = (1A & 0F) in
        let:8 a21 = (a13 & 0F) in
        let:16 a22 = addWithCarry(false,a20,a21) in
        #09C7
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a23 = (-1 + a8) in
            M[a23] := 08;
            let:16 a24 = (-1 + a23) in
            M[a24] := FF;
            A := a19[7:0];
            H := 25;
            L := 01;
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := a19[15:8][0];
            jump (0008);
          } else {
            let:16 a25 = (-1 + a8) in
            M[a25] := 08;
            let:16 a26 = (-1 + a25) in
            M[a26] := FF;
            A := a19[7:0];
            H := 25;
            L := 01;
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := a19[15:8][0];
            jump (0010);
          }
        } else {
          #0902
          let:16 a27 = (-1 + a8) in
          M[a27] := 25;
          let:16 a28 = (-1 + a27) in
          M[a28] := 01;
          #0903
          #0905
          #0906
          let:17 a29 = add17((00,a19[7:0]),(00,a19[7:0])) in
          #0907
          let:17 a30 = add17(a29[15:0],a29[15:0]) in
          #0908
          let:17 a31 = add17(a30[15:0],a30[15:0]) in
          #0909
          let:17 a32 = add17(1E00,a31[15:0]) in
          #090A
          #090B
          let:16 a33 = (1 + a28) in
          let:16 a34 = (1 + a33) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a35 = (-1 + a34) in
              M[a35] := 14;
              let:16 a36 = (-1 + a35) in
              M[a36] := 39;
              A := a19[7:0];
              B := 08;
              D := a32[15:0][15:8];
              E := a32[15:0][7:0];
              H := M[a33];
              L := M[a28];
              SPH := a36[15:8];
              SPL := a36[7:0];
              FlagS := a19[7:0][7];
              FlagZ := is_zero(a19[7:0]);
              FlagA := a22[7:0][4];
              FlagP := parity(a19[7:0]);
              FlagCY := a32[16];
              jump (0008);
            } else {
              let:16 a37 = (-1 + a34) in
              M[a37] := 14;
              let:16 a38 = (-1 + a37) in
              M[a38] := 39;
              A := a19[7:0];
              B := 08;
              D := a32[15:0][15:8];
              E := a32[15:0][7:0];
              H := M[a33];
              L := M[a28];
              SPH := a38[15:8];
              SPL := a38[7:0];
              FlagS := a19[7:0][7];
              FlagZ := is_zero(a19[7:0]);
              FlagA := a22[7:0][4];
              FlagP := parity(a19[7:0]);
              FlagCY := a32[16];
              jump (0010);
            }
          } else {
            let:16 a39 = (-1 + a34) in
            M[a39] := 08;
            let:16 a40 = (-1 + a39) in
            M[a40] := C;
            #143A
            #143B
            M[(M[a33],M[a28])] := M[a32[15:0]];
            #143C
            let:16 a41 = (1 + a32[15:0]) in
            #143D
            #1440
            let:17 a42 = add17(0020,(M[a33],M[a28])) in
            #1441
            let:16 a43 = (1 + a40) in
            let:16 a44 = (1 + a43) in
            #1442
            let:16 a45 = addWithCarry(!true,M[a43],~00) in
            let:8 a46 = (M[a43] & 0F) in
            let:8 a47 = (~00 & 0F) in
            let:16 a48 = addWithCarry(!true,a46,a47) in
            #1443
            if (!is_zero(a45[7:0])) {
              A := M[a32[15:0]];
              B := a45[7:0];
              C := M[a40];
              D := a41[15:8];
              E := a41[7:0];
              H := a42[15:0][15:8];
              L := a42[15:0][7:0];
              SPH := a44[15:8];
              SPL := a44[7:0];
              FlagS := a45[7:0][7];
              FlagZ := is_zero(a45[7:0]);
              FlagA := a48[7:0][4];
              FlagP := parity(a45[7:0]);
              FlagCY := a42[16];
              jump (1439);
            } else {
              #1446
              let:16 a49 = (1 + a44) in
              let:16 a50 = (1 + a49) in
              A := M[a32[15:0]];
              B := a45[7:0];
              C := M[a40];
              D := a41[15:8];
              E := a41[7:0];
              H := a42[15:0][15:8];
              L := a42[15:0][7:0];
              SPH := a50[15:8];
              SPL := a50[7:0];
              FlagS := a45[7:0][7];
              FlagZ := is_zero(a45[7:0]);
              FlagA := a48[7:0][4];
              FlagP := parity(a45[7:0]);
              FlagCY := a42[16];
              jump ((M[a49],M[a44]));
            }
          }
        }
      }
    }

096B:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 09;
    let:16 a2 = (-1 + a1) in
    M[a2] := 6E;
    #return-to: 096E
    #1910
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 10;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 10;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1913
      #1916
      #1917
      if (M[2067][0]) {
        let:16 a7 = (1 + a2) in
        let:16 a8 = (1 + a7) in
        A := updateBit((M[2067] >> 01),7,M[2067][0]);
        H := 20;
        L := E7;
        SPH := a8[15:8];
        SPL := a8[7:0];
        FlagCY := M[2067][0];
        jump ((M[a7],M[a2]));
      } else {
        #1918
        #1919
        let:16 a9 = (1 + a2) in
        let:16 a10 = (1 + a9) in
        A := updateBit((M[2067] >> 01),7,M[2067][0]);
        H := 20;
        L := E8;
        SPH := a10[15:8];
        SPL := a10[7:0];
        FlagCY := M[2067][0];
        jump ((M[a9],M[a2]));
      }
    }

096E:

    let:16 a1 = (-1 + (H,L)) in
    #096F
    let:16 a2 = (-1 + a1) in
    #0970
    M[a2] := 00;
    #0972
    #0974
    M[2099] := FF;
    #0977
    #0979
    #18FA
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := FA;
        A := FF;
        B := 10;
        H := a2[15:8];
        L := a2[7:0];
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + (SPH,SPL)) in
        M[a5] := 18;
        let:16 a6 = (-1 + a5) in
        M[a6] := FA;
        A := FF;
        B := 10;
        H := a2[15:8];
        L := a2[7:0];
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #18FD
      let:8 a7 = (10 | M[2094]) in
      #18FE
      M[2094] := a7;
      #1901
      sound_control(Ufo,a7[0]);
      sound_control(Shot,a7[1]);
      sound_control(PlayerDie,a7[2]);
      sound_control(InvaderDie,a7[3]);
      sound_control(ExtraLife,a7[4]);
      #1903
      let:16 a8 = (1 + (SPH,SPL)) in
      let:16 a9 = (1 + a8) in
      A := a7;
      B := 10;
      H := a2[15:8];
      L := a2[7:0];
      SPH := a9[15:8];
      SPL := a9[7:0];
      FlagS := a7[7];
      FlagZ := is_zero(a7);
      FlagA := false;
      FlagP := parity(a7);
      FlagCY := false;
      jump ((M[a8],M[(SPH,SPL)]));
    }

098B:

    #098E
    let:8 a1 = (M[20F1] & M[20F1]) in
    let:8 a2 = (M[20F1] | M[20F1]) in
    #098F
    if (is_zero(a1)) {
      let:16 a3 = (1 + (SPH,SPL)) in
      let:16 a4 = (1 + a3) in
      A := a1;
      SPH := a4[15:8];
      SPL := a4[7:0];
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump ((M[a3],M[(SPH,SPL)]));
    } else {
      #0990
      let:8 a5 = (a1 ^ a1) in
      #0991
      M[20F1] := a5;
      #0994
      let:16 a6 = (-1 + (SPH,SPL)) in
      M[a6] := H;
      let:16 a7 = (-1 + a6) in
      M[a7] := L;
      #0995
      #0998
      #0999
      let:16 a8 = (1 + a7) in
      let:16 a9 = (1 + a8) in
      #099A
      #099B
      let:16 a10 = addWithCarry(false,M[20F2],M[(M[a8],M[a7])]) in
      let:8 a11 = (M[20F2] & 0F) in
      let:8 a12 = (M[(M[a8],M[a7])] & 0F) in
      let:16 a13 = addWithCarry(false,a11,a12) in
      #099C
      let:8 a14 = (a10[7:0] & 0F) in
      let:16 a15 = addWithCarry(false,a14,06) in
      let:16 a16 = addWithCarry(((((a14[1] || a14[2]) && a14[3]) || a13[7:0][4]) ? a15[7:0] : a14)[4],(a10[7:0] >> 04),00) in
      let:16 a17 = addWithCarry(false,a16[7:0],06) in
      let:8 a18 = (((((a14[1] || a14[2]) && a14[3]) || a13[7:0][4]) ? a15[7:0] : a14) & 0F) in
      let:8 a19 = ((((((a16[7:0][1] || a16[7:0][2]) && a16[7:0][3]) || a10[15:8][0]) ? a17[7:0] : a16[7:0]) << 04) | a18) in
      #099D
      M[(M[a8],M[a7])] := a19;
      #099E
      #099F
      let:16 a20 = (1 + (M[a8],M[a7])) in
      #09A0
      #09A1
      let:16 a21 = addWithCarry((((((a16[7:0][1] || a16[7:0][2]) && a16[7:0][3]) || a10[15:8][0]) ? a17[7:0] : a16[7:0])[4] || a10[15:8][0]),M[20F3],M[a20]) in
      let:8 a22 = (M[20F3] & 0F) in
      let:8 a23 = (M[a20] & 0F) in
      let:16 a24 = addWithCarry((((((a16[7:0][1] || a16[7:0][2]) && a16[7:0][3]) || a10[15:8][0]) ? a17[7:0] : a16[7:0])[4] || a10[15:8][0]),a22,a23) in
      #09A2
      let:8 a25 = (a21[7:0] & 0F) in
      let:16 a26 = addWithCarry(false,a25,06) in
      let:16 a27 = addWithCarry(((((a25[1] || a25[2]) && a25[3]) || a24[7:0][4]) ? a26[7:0] : a25)[4],(a21[7:0] >> 04),00) in
      let:16 a28 = addWithCarry(false,a27[7:0],06) in
      let:8 a29 = (((((a25[1] || a25[2]) && a25[3]) || a24[7:0][4]) ? a26[7:0] : a25) & 0F) in
      let:8 a30 = ((((((a27[7:0][1] || a27[7:0][2]) && a27[7:0][3]) || a21[15:8][0]) ? a28[7:0] : a27[7:0]) << 04) | a29) in
      #09A3
      M[a20] := a30;
      #09A4
      #09A5
      let:16 a31 = (1 + a20) in
      #09A6
      #09A7
      let:16 a32 = (1 + a31) in
      #09A8
      #09A9
      #09AA
      #09AD
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a33 = (-1 + a9) in
          M[a33] := 09;
          let:16 a34 = (-1 + a33) in
          M[a34] := AD;
          A := M[a31];
          D := a30;
          E := a19;
          H := M[a32];
          L := M[a31];
          SPH := a34[15:8];
          SPL := a34[7:0];
          FlagS := a30[7];
          FlagZ := is_zero(a30);
          FlagA := ((((a25[1] || a25[2]) && a25[3]) || a24[7:0][4]) ? a26[7:0] : a25)[4];
          FlagP := parity(a30);
          FlagCY := (((((a27[7:0][1] || a27[7:0][2]) && a27[7:0][3]) || a21[15:8][0]) ? a28[7:0] : a27[7:0])[4] || a21[15:8][0]);
          jump (0008);
        } else {
          let:16 a35 = (-1 + a9) in
          M[a35] := 09;
          let:16 a36 = (-1 + a35) in
          M[a36] := AD;
          A := M[a31];
          D := a30;
          E := a19;
          H := M[a32];
          L := M[a31];
          SPH := a36[15:8];
          SPL := a36[7:0];
          FlagS := a30[7];
          FlagZ := is_zero(a30);
          FlagA := ((((a25[1] || a25[2]) && a25[3]) || a24[7:0][4]) ? a26[7:0] : a25)[4];
          FlagP := parity(a30);
          FlagCY := (((((a27[7:0][1] || a27[7:0][2]) && a27[7:0][3]) || a21[15:8][0]) ? a28[7:0] : a27[7:0])[4] || a21[15:8][0]);
          jump (0010);
        }
      } else {
        #09AE
        let:16 a37 = (-1 + a9) in
        M[a37] := 09;
        let:16 a38 = (-1 + a37) in
        M[a38] := B1;
        #return-to: 09B1
        #09B2
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a39 = (-1 + a38) in
            M[a39] := 09;
            let:16 a40 = (-1 + a39) in
            M[a40] := B2;
            A := a30;
            D := a30;
            E := a19;
            H := M[a32];
            L := M[a31];
            SPH := a40[15:8];
            SPL := a40[7:0];
            FlagS := a30[7];
            FlagZ := is_zero(a30);
            FlagA := ((((a25[1] || a25[2]) && a25[3]) || a24[7:0][4]) ? a26[7:0] : a25)[4];
            FlagP := parity(a30);
            FlagCY := (((((a27[7:0][1] || a27[7:0][2]) && a27[7:0][3]) || a21[15:8][0]) ? a28[7:0] : a27[7:0])[4] || a21[15:8][0]);
            jump (0008);
          } else {
            let:16 a41 = (-1 + a38) in
            M[a41] := 09;
            let:16 a42 = (-1 + a41) in
            M[a42] := B2;
            A := a30;
            D := a30;
            E := a19;
            H := M[a32];
            L := M[a31];
            SPH := a42[15:8];
            SPL := a42[7:0];
            FlagS := a30[7];
            FlagZ := is_zero(a30);
            FlagA := ((((a25[1] || a25[2]) && a25[3]) || a24[7:0][4]) ? a26[7:0] : a25)[4];
            FlagP := parity(a30);
            FlagCY := (((((a27[7:0][1] || a27[7:0][2]) && a27[7:0][3]) || a21[15:8][0]) ? a28[7:0] : a27[7:0])[4] || a21[15:8][0]);
            jump (0010);
          }
        } else {
          let:16 a43 = (-1 + a38) in
          M[a43] := a30;
          let:16 a44 = (-1 + a43) in
          M[a44] := a19;
          #09B3
          let:16 a45 = (-1 + a44) in
          M[a45] := a30;
          let:16 a46 = (-1 + a45) in
          M[a46] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a30[7]),6,is_zero(a30)),4,((((a25[1] || a25[2]) && a25[3]) || a24[7:0][4]) ? a26[7:0] : a25)[4]),2,parity(a30)),0,(((((a27[7:0][1] || a27[7:0][2]) && a27[7:0][3]) || a21[15:8][0]) ? a28[7:0] : a27[7:0])[4] || a21[15:8][0]));
          #09B4
          #09B5
          #09B6
          #09B7
          #09B8
          let:8 a47 = (0F & updateBit((updateBit((updateBit((updateBit((a30 >> 01),7,a30[0]) >> 01),7,updateBit((a30 >> 01),7,a30[0])[0]) >> 01),7,updateBit((updateBit((a30 >> 01),7,a30[0]) >> 01),7,updateBit((a30 >> 01),7,a30[0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((a30 >> 01),7,a30[0]) >> 01),7,updateBit((a30 >> 01),7,a30[0])[0]) >> 01),7,updateBit((updateBit((a30 >> 01),7,a30[0]) >> 01),7,updateBit((a30 >> 01),7,a30[0])[0])[0])[0])) in
          let:8 a48 = (0F | updateBit((updateBit((updateBit((updateBit((a30 >> 01),7,a30[0]) >> 01),7,updateBit((a30 >> 01),7,a30[0])[0]) >> 01),7,updateBit((updateBit((a30 >> 01),7,a30[0]) >> 01),7,updateBit((a30 >> 01),7,a30[0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((a30 >> 01),7,a30[0]) >> 01),7,updateBit((a30 >> 01),7,a30[0])[0]) >> 01),7,updateBit((updateBit((a30 >> 01),7,a30[0]) >> 01),7,updateBit((a30 >> 01),7,a30[0])[0])[0])[0])) in
          #09BA
          let:16 a49 = (-1 + a46) in
          M[a49] := 09;
          let:16 a50 = (-1 + a49) in
          M[a50] := BD;
          #return-to: 09BD
          #09C5
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a51 = (-1 + a50) in
              M[a51] := 09;
              let:16 a52 = (-1 + a51) in
              M[a52] := C5;
              A := a47;
              D := a30;
              E := a19;
              H := M[a32];
              L := M[a31];
              SPH := a52[15:8];
              SPL := a52[7:0];
              FlagS := a47[7];
              FlagZ := is_zero(a47);
              FlagA := a48[3];
              FlagP := parity(a47);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a53 = (-1 + a50) in
              M[a53] := 09;
              let:16 a54 = (-1 + a53) in
              M[a54] := C5;
              A := a47;
              D := a30;
              E := a19;
              H := M[a32];
              L := M[a31];
              SPH := a54[15:8];
              SPL := a54[7:0];
              FlagS := a47[7];
              FlagZ := is_zero(a47);
              FlagA := a48[3];
              FlagP := parity(a47);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a55 = addWithCarry(false,1A,a47) in
            let:8 a56 = (1A & 0F) in
            let:8 a57 = (a47 & 0F) in
            let:16 a58 = addWithCarry(false,a56,a57) in
            #09C7
            #08FF
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a59 = (-1 + a50) in
                M[a59] := 08;
                let:16 a60 = (-1 + a59) in
                M[a60] := FF;
                A := a55[7:0];
                D := a30;
                E := a19;
                H := M[a32];
                L := M[a31];
                SPH := a60[15:8];
                SPL := a60[7:0];
                FlagS := a55[7:0][7];
                FlagZ := is_zero(a55[7:0]);
                FlagA := a58[7:0][4];
                FlagP := parity(a55[7:0]);
                FlagCY := a55[15:8][0];
                jump (0008);
              } else {
                let:16 a61 = (-1 + a50) in
                M[a61] := 08;
                let:16 a62 = (-1 + a61) in
                M[a62] := FF;
                A := a55[7:0];
                D := a30;
                E := a19;
                H := M[a32];
                L := M[a31];
                SPH := a62[15:8];
                SPL := a62[7:0];
                FlagS := a55[7:0][7];
                FlagZ := is_zero(a55[7:0]);
                FlagA := a58[7:0][4];
                FlagP := parity(a55[7:0]);
                FlagCY := a55[15:8][0];
                jump (0010);
              }
            } else {
              #0902
              let:16 a63 = (-1 + a50) in
              M[a63] := M[a32];
              let:16 a64 = (-1 + a63) in
              M[a64] := M[a31];
              #0903
              #0905
              #0906
              let:17 a65 = add17((00,a55[7:0]),(00,a55[7:0])) in
              #0907
              let:17 a66 = add17(a65[15:0],a65[15:0]) in
              #0908
              let:17 a67 = add17(a66[15:0],a66[15:0]) in
              #0909
              let:17 a68 = add17(1E00,a67[15:0]) in
              #090A
              #090B
              let:16 a69 = (1 + a64) in
              let:16 a70 = (1 + a69) in
              #090C
              #090E
              #0910
              #1439
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a71 = (-1 + a70) in
                  M[a71] := 14;
                  let:16 a72 = (-1 + a71) in
                  M[a72] := 39;
                  A := a55[7:0];
                  B := 08;
                  D := a68[15:0][15:8];
                  E := a68[15:0][7:0];
                  H := M[a69];
                  L := M[a64];
                  SPH := a72[15:8];
                  SPL := a72[7:0];
                  FlagS := a55[7:0][7];
                  FlagZ := is_zero(a55[7:0]);
                  FlagA := a58[7:0][4];
                  FlagP := parity(a55[7:0]);
                  FlagCY := a68[16];
                  jump (0008);
                } else {
                  let:16 a73 = (-1 + a70) in
                  M[a73] := 14;
                  let:16 a74 = (-1 + a73) in
                  M[a74] := 39;
                  A := a55[7:0];
                  B := 08;
                  D := a68[15:0][15:8];
                  E := a68[15:0][7:0];
                  H := M[a69];
                  L := M[a64];
                  SPH := a74[15:8];
                  SPL := a74[7:0];
                  FlagS := a55[7:0][7];
                  FlagZ := is_zero(a55[7:0]);
                  FlagA := a58[7:0][4];
                  FlagP := parity(a55[7:0]);
                  FlagCY := a68[16];
                  jump (0010);
                }
              } else {
                let:16 a75 = (-1 + a70) in
                M[a75] := 08;
                let:16 a76 = (-1 + a75) in
                M[a76] := C;
                #143A
                #143B
                M[(M[a69],M[a64])] := M[a68[15:0]];
                #143C
                let:16 a77 = (1 + a68[15:0]) in
                #143D
                #1440
                let:17 a78 = add17(0020,(M[a69],M[a64])) in
                #1441
                let:16 a79 = (1 + a76) in
                let:16 a80 = (1 + a79) in
                #1442
                let:16 a81 = addWithCarry(!true,M[a79],~00) in
                let:8 a82 = (M[a79] & 0F) in
                let:8 a83 = (~00 & 0F) in
                let:16 a84 = addWithCarry(!true,a82,a83) in
                #1443
                if (!is_zero(a81[7:0])) {
                  A := M[a68[15:0]];
                  B := a81[7:0];
                  C := M[a76];
                  D := a77[15:8];
                  E := a77[7:0];
                  H := a78[15:0][15:8];
                  L := a78[15:0][7:0];
                  SPH := a80[15:8];
                  SPL := a80[7:0];
                  FlagS := a81[7:0][7];
                  FlagZ := is_zero(a81[7:0]);
                  FlagA := a84[7:0][4];
                  FlagP := parity(a81[7:0]);
                  FlagCY := a78[16];
                  jump (1439);
                } else {
                  #1446
                  let:16 a85 = (1 + a80) in
                  let:16 a86 = (1 + a85) in
                  A := M[a68[15:0]];
                  B := a81[7:0];
                  C := M[a76];
                  D := a77[15:8];
                  E := a77[7:0];
                  H := a78[15:0][15:8];
                  L := a78[15:0][7:0];
                  SPH := a86[15:8];
                  SPL := a86[7:0];
                  FlagS := a81[7:0][7];
                  FlagZ := is_zero(a81[7:0]);
                  FlagA := a84[7:0][4];
                  FlagP := parity(a81[7:0]);
                  FlagCY := a78[16];
                  jump ((M[a85],M[a80]));
                }
              }
            }
          }
        }
      }
    }

09B1:

    #09B2
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := D;
    let:16 a2 = (-1 + a1) in
    M[a2] := E;
    #09B3
    let:16 a3 = (-1 + a2) in
    M[a3] := E;
    let:16 a4 = (-1 + a3) in
    M[a4] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,FlagS),6,FlagZ),4,FlagA),2,FlagP),0,FlagCY);
    #09B4
    #09B5
    #09B6
    #09B7
    #09B8
    let:8 a5 = (0F & updateBit((updateBit((updateBit((updateBit((E >> 01),7,E[0]) >> 01),7,updateBit((E >> 01),7,E[0])[0]) >> 01),7,updateBit((updateBit((E >> 01),7,E[0]) >> 01),7,updateBit((E >> 01),7,E[0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((E >> 01),7,E[0]) >> 01),7,updateBit((E >> 01),7,E[0])[0]) >> 01),7,updateBit((updateBit((E >> 01),7,E[0]) >> 01),7,updateBit((E >> 01),7,E[0])[0])[0])[0])) in
    let:8 a6 = (0F | updateBit((updateBit((updateBit((updateBit((E >> 01),7,E[0]) >> 01),7,updateBit((E >> 01),7,E[0])[0]) >> 01),7,updateBit((updateBit((E >> 01),7,E[0]) >> 01),7,updateBit((E >> 01),7,E[0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((E >> 01),7,E[0]) >> 01),7,updateBit((E >> 01),7,E[0])[0]) >> 01),7,updateBit((updateBit((E >> 01),7,E[0]) >> 01),7,updateBit((E >> 01),7,E[0])[0])[0])[0])) in
    #09BA
    let:16 a7 = (-1 + a4) in
    M[a7] := 09;
    let:16 a8 = (-1 + a7) in
    M[a8] := BD;
    #return-to: 09BD
    #09C5
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a9 = (-1 + a8) in
        M[a9] := 09;
        let:16 a10 = (-1 + a9) in
        M[a10] := C5;
        A := a5;
        SPH := a10[15:8];
        SPL := a10[7:0];
        FlagS := a5[7];
        FlagZ := is_zero(a5);
        FlagA := a6[3];
        FlagP := parity(a5);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a11 = (-1 + a8) in
        M[a11] := 09;
        let:16 a12 = (-1 + a11) in
        M[a12] := C5;
        A := a5;
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a5[7];
        FlagZ := is_zero(a5);
        FlagA := a6[3];
        FlagP := parity(a5);
        FlagCY := false;
        jump (0010);
      }
    } else {
      let:16 a13 = addWithCarry(false,1A,a5) in
      let:8 a14 = (1A & 0F) in
      let:8 a15 = (a5 & 0F) in
      let:16 a16 = addWithCarry(false,a14,a15) in
      #09C7
      #08FF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a17 = (-1 + a8) in
          M[a17] := 08;
          let:16 a18 = (-1 + a17) in
          M[a18] := FF;
          A := a13[7:0];
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          FlagCY := a13[15:8][0];
          jump (0008);
        } else {
          let:16 a19 = (-1 + a8) in
          M[a19] := 08;
          let:16 a20 = (-1 + a19) in
          M[a20] := FF;
          A := a13[7:0];
          SPH := a20[15:8];
          SPL := a20[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          FlagCY := a13[15:8][0];
          jump (0010);
        }
      } else {
        #0902
        let:16 a21 = (-1 + a8) in
        M[a21] := H;
        let:16 a22 = (-1 + a21) in
        M[a22] := L;
        #0903
        #0905
        #0906
        let:17 a23 = add17((00,a13[7:0]),(00,a13[7:0])) in
        #0907
        let:17 a24 = add17(a23[15:0],a23[15:0]) in
        #0908
        let:17 a25 = add17(a24[15:0],a24[15:0]) in
        #0909
        let:17 a26 = add17(1E00,a25[15:0]) in
        #090A
        #090B
        let:16 a27 = (1 + a22) in
        let:16 a28 = (1 + a27) in
        #090C
        #090E
        #0910
        #1439
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a29 = (-1 + a28) in
            M[a29] := 14;
            let:16 a30 = (-1 + a29) in
            M[a30] := 39;
            A := a13[7:0];
            B := 08;
            D := a26[15:0][15:8];
            E := a26[15:0][7:0];
            H := M[a27];
            L := M[a22];
            SPH := a30[15:8];
            SPL := a30[7:0];
            FlagS := a13[7:0][7];
            FlagZ := is_zero(a13[7:0]);
            FlagA := a16[7:0][4];
            FlagP := parity(a13[7:0]);
            FlagCY := a26[16];
            jump (0008);
          } else {
            let:16 a31 = (-1 + a28) in
            M[a31] := 14;
            let:16 a32 = (-1 + a31) in
            M[a32] := 39;
            A := a13[7:0];
            B := 08;
            D := a26[15:0][15:8];
            E := a26[15:0][7:0];
            H := M[a27];
            L := M[a22];
            SPH := a32[15:8];
            SPL := a32[7:0];
            FlagS := a13[7:0][7];
            FlagZ := is_zero(a13[7:0]);
            FlagA := a16[7:0][4];
            FlagP := parity(a13[7:0]);
            FlagCY := a26[16];
            jump (0010);
          }
        } else {
          let:16 a33 = (-1 + a28) in
          M[a33] := 08;
          let:16 a34 = (-1 + a33) in
          M[a34] := C;
          #143A
          #143B
          M[(M[a27],M[a22])] := M[a26[15:0]];
          #143C
          let:16 a35 = (1 + a26[15:0]) in
          #143D
          #1440
          let:17 a36 = add17(0020,(M[a27],M[a22])) in
          #1441
          let:16 a37 = (1 + a34) in
          let:16 a38 = (1 + a37) in
          #1442
          let:16 a39 = addWithCarry(!true,M[a37],~00) in
          let:8 a40 = (M[a37] & 0F) in
          let:8 a41 = (~00 & 0F) in
          let:16 a42 = addWithCarry(!true,a40,a41) in
          #1443
          if (!is_zero(a39[7:0])) {
            A := M[a26[15:0]];
            B := a39[7:0];
            C := M[a34];
            D := a35[15:8];
            E := a35[7:0];
            H := a36[15:0][15:8];
            L := a36[15:0][7:0];
            SPH := a38[15:8];
            SPL := a38[7:0];
            FlagS := a39[7:0][7];
            FlagZ := is_zero(a39[7:0]);
            FlagA := a42[7:0][4];
            FlagP := parity(a39[7:0]);
            FlagCY := a36[16];
            jump (1439);
          } else {
            #1446
            let:16 a43 = (1 + a38) in
            let:16 a44 = (1 + a43) in
            A := M[a26[15:0]];
            B := a39[7:0];
            C := M[a34];
            D := a35[15:8];
            E := a35[7:0];
            H := a36[15:0][15:8];
            L := a36[15:0][7:0];
            SPH := a44[15:8];
            SPL := a44[7:0];
            FlagS := a39[7:0][7];
            FlagZ := is_zero(a39[7:0]);
            FlagA := a42[7:0][4];
            FlagP := parity(a39[7:0]);
            FlagCY := a36[16];
            jump ((M[a43],M[a38]));
          }
        }
      }
    }

09BD:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #09BE
    let:8 a3 = (0F & M[a1]) in
    let:8 a4 = (0F | M[a1]) in
    #09C0
    let:16 a5 = (-1 + a2) in
    M[a5] := 09;
    let:16 a6 = (-1 + a5) in
    M[a6] := C3;
    #return-to: 09C3
    #09C5
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a7 = (-1 + a6) in
        M[a7] := 09;
        let:16 a8 = (-1 + a7) in
        M[a8] := C5;
        A := a3;
        SPH := a8[15:8];
        SPL := a8[7:0];
        FlagS := a3[7];
        FlagZ := is_zero(a3);
        FlagA := a4[3];
        FlagP := parity(a3);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a9 = (-1 + a6) in
        M[a9] := 09;
        let:16 a10 = (-1 + a9) in
        M[a10] := C5;
        A := a3;
        SPH := a10[15:8];
        SPL := a10[7:0];
        FlagS := a3[7];
        FlagZ := is_zero(a3);
        FlagA := a4[3];
        FlagP := parity(a3);
        FlagCY := false;
        jump (0010);
      }
    } else {
      let:16 a11 = addWithCarry(false,1A,a3) in
      let:8 a12 = (1A & 0F) in
      let:8 a13 = (a3 & 0F) in
      let:16 a14 = addWithCarry(false,a12,a13) in
      #09C7
      #08FF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a15 = (-1 + a6) in
          M[a15] := 08;
          let:16 a16 = (-1 + a15) in
          M[a16] := FF;
          A := a11[7:0];
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          FlagCY := a11[15:8][0];
          jump (0008);
        } else {
          let:16 a17 = (-1 + a6) in
          M[a17] := 08;
          let:16 a18 = (-1 + a17) in
          M[a18] := FF;
          A := a11[7:0];
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          FlagCY := a11[15:8][0];
          jump (0010);
        }
      } else {
        #0902
        let:16 a19 = (-1 + a6) in
        M[a19] := H;
        let:16 a20 = (-1 + a19) in
        M[a20] := L;
        #0903
        #0905
        #0906
        let:17 a21 = add17((00,a11[7:0]),(00,a11[7:0])) in
        #0907
        let:17 a22 = add17(a21[15:0],a21[15:0]) in
        #0908
        let:17 a23 = add17(a22[15:0],a22[15:0]) in
        #0909
        let:17 a24 = add17(1E00,a23[15:0]) in
        #090A
        #090B
        let:16 a25 = (1 + a20) in
        let:16 a26 = (1 + a25) in
        #090C
        #090E
        #0910
        #1439
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a27 = (-1 + a26) in
            M[a27] := 14;
            let:16 a28 = (-1 + a27) in
            M[a28] := 39;
            A := a11[7:0];
            B := 08;
            D := a24[15:0][15:8];
            E := a24[15:0][7:0];
            H := M[a25];
            L := M[a20];
            SPH := a28[15:8];
            SPL := a28[7:0];
            FlagS := a11[7:0][7];
            FlagZ := is_zero(a11[7:0]);
            FlagA := a14[7:0][4];
            FlagP := parity(a11[7:0]);
            FlagCY := a24[16];
            jump (0008);
          } else {
            let:16 a29 = (-1 + a26) in
            M[a29] := 14;
            let:16 a30 = (-1 + a29) in
            M[a30] := 39;
            A := a11[7:0];
            B := 08;
            D := a24[15:0][15:8];
            E := a24[15:0][7:0];
            H := M[a25];
            L := M[a20];
            SPH := a30[15:8];
            SPL := a30[7:0];
            FlagS := a11[7:0][7];
            FlagZ := is_zero(a11[7:0]);
            FlagA := a14[7:0][4];
            FlagP := parity(a11[7:0]);
            FlagCY := a24[16];
            jump (0010);
          }
        } else {
          let:16 a31 = (-1 + a26) in
          M[a31] := 08;
          let:16 a32 = (-1 + a31) in
          M[a32] := C;
          #143A
          #143B
          M[(M[a25],M[a20])] := M[a24[15:0]];
          #143C
          let:16 a33 = (1 + a24[15:0]) in
          #143D
          #1440
          let:17 a34 = add17(0020,(M[a25],M[a20])) in
          #1441
          let:16 a35 = (1 + a32) in
          let:16 a36 = (1 + a35) in
          #1442
          let:16 a37 = addWithCarry(!true,M[a35],~00) in
          let:8 a38 = (M[a35] & 0F) in
          let:8 a39 = (~00 & 0F) in
          let:16 a40 = addWithCarry(!true,a38,a39) in
          #1443
          if (!is_zero(a37[7:0])) {
            A := M[a24[15:0]];
            B := a37[7:0];
            C := M[a32];
            D := a33[15:8];
            E := a33[7:0];
            H := a34[15:0][15:8];
            L := a34[15:0][7:0];
            SPH := a36[15:8];
            SPL := a36[7:0];
            FlagS := a37[7:0][7];
            FlagZ := is_zero(a37[7:0]);
            FlagA := a40[7:0][4];
            FlagP := parity(a37[7:0]);
            FlagCY := a34[16];
            jump (1439);
          } else {
            #1446
            let:16 a41 = (1 + a36) in
            let:16 a42 = (1 + a41) in
            A := M[a24[15:0]];
            B := a37[7:0];
            C := M[a32];
            D := a33[15:8];
            E := a33[7:0];
            H := a34[15:0][15:8];
            L := a34[15:0][7:0];
            SPH := a42[15:8];
            SPL := a42[7:0];
            FlagS := a37[7:0][7];
            FlagZ := is_zero(a37[7:0]);
            FlagA := a40[7:0][4];
            FlagP := parity(a37[7:0]);
            FlagCY := a34[16];
            jump ((M[a41],M[a36]));
          }
        }
      }
    }

09C3:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #09C4
    let:16 a3 = (1 + a2) in
    let:16 a4 = (1 + a3) in
    D := M[a1];
    E := M[(SPH,SPL)];
    SPH := a4[15:8];
    SPL := a4[7:0];
    jump ((M[a3],M[a2]));

09F2:

    let:8 a1 = (A ^ A) in
    #09F3
    M[20E9] := a1;
    #09F6
    let:16 a2 = (-1 + (SPH,SPL)) in
    M[a2] := 09;
    let:16 a3 = (-1 + a2) in
    M[a3] := F9;
    #return-to: 09F9
    #09D6
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a4 = (-1 + a3) in
        M[a4] := 09;
        let:16 a5 = (-1 + a4) in
        M[a5] := D6;
        A := a1;
        SPH := a5[15:8];
        SPL := a5[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a6 = (-1 + a3) in
        M[a6] := 09;
        let:16 a7 = (-1 + a6) in
        M[a7] := D6;
        A := a1;
        SPH := a7[15:8];
        SPL := a7[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0010);
      }
    } else {
      #09D9
      M[2402] := 00;
      #09DB
      #09DC
      #09DD
      let:8 a8 = (1F & 03) in
      let:8 a9 = (1F | 03) in
      #09DF
      let:16 a10 = addWithCarry(!false,a8,~1C) in
      let:8 a11 = (a8 & 0F) in
      let:8 a12 = (~1C & 0F) in
      let:16 a13 = addWithCarry(!false,a11,a12) in
      #09E1
      if (!a10[15:8][0]) {
        #09E8
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a14 = (-1 + a3) in
            M[a14] := 09;
            let:16 a15 = (-1 + a14) in
            M[a15] := E8;
            A := a8;
            H := 24;
            L := 03;
            SPH := a15[15:8];
            SPL := a15[7:0];
            FlagS := a10[7:0][7];
            FlagZ := is_zero(a10[7:0]);
            FlagA := a13[7:0][4];
            FlagP := parity(a10[7:0]);
            FlagCY := !a10[15:8][0];
            jump (0008);
          } else {
            let:16 a16 = (-1 + a3) in
            M[a16] := 09;
            let:16 a17 = (-1 + a16) in
            M[a17] := E8;
            A := a8;
            H := 24;
            L := 03;
            SPH := a17[15:8];
            SPL := a17[7:0];
            FlagS := a10[7:0][7];
            FlagZ := is_zero(a10[7:0]);
            FlagA := a13[7:0][4];
            FlagP := parity(a10[7:0]);
            FlagCY := !a10[15:8][0];
            jump (0010);
          }
        } else {
          #09E9
          let:16 a18 = addWithCarry(!false,24,~40) in
          let:8 a19 = (24 & 0F) in
          let:8 a20 = (~40 & 0F) in
          let:16 a21 = addWithCarry(!false,a19,a20) in
          #09EB
          if (!a18[15:8][0]) {
            A := 24;
            H := 24;
            L := 03;
            SPH := a3[15:8];
            SPL := a3[7:0];
            FlagS := a18[7:0][7];
            FlagZ := is_zero(a18[7:0]);
            FlagA := a21[7:0][4];
            FlagP := parity(a18[7:0]);
            FlagCY := !a18[15:8][0];
            jump (09D9);
          } else {
            #09EE
            let:16 a22 = (1 + a3) in
            let:16 a23 = (1 + a22) in
            A := 24;
            H := 24;
            L := 03;
            SPH := a23[15:8];
            SPL := a23[7:0];
            FlagS := a18[7:0][7];
            FlagZ := is_zero(a18[7:0]);
            FlagA := a21[7:0][4];
            FlagP := parity(a18[7:0]);
            FlagCY := !a18[15:8][0];
            jump ((M[a22],M[a3]));
          }
        }
      } else {
        #09E4
        #09E7
        let:17 a24 = add17(0006,2403) in
        #09E8
        #09E9
        let:16 a25 = addWithCarry(!false,a24[15:0][15:8],~40) in
        let:8 a26 = (a24[15:0][15:8] & 0F) in
        let:8 a27 = (~40 & 0F) in
        let:16 a28 = addWithCarry(!false,a26,a27) in
        #09EB
        if (!a25[15:8][0]) {
          A := a24[15:0][15:8];
          D := 00;
          E := 06;
          H := a24[15:0][15:8];
          L := a24[15:0][7:0];
          SPH := a3[15:8];
          SPL := a3[7:0];
          FlagS := a25[7:0][7];
          FlagZ := is_zero(a25[7:0]);
          FlagA := a28[7:0][4];
          FlagP := parity(a25[7:0]);
          FlagCY := !a25[15:8][0];
          jump (09D9);
        } else {
          #09EE
          let:16 a29 = (1 + a3) in
          let:16 a30 = (1 + a29) in
          A := a24[15:0][15:8];
          D := 00;
          E := 06;
          H := a24[15:0][15:8];
          L := a24[15:0][7:0];
          SPH := a30[15:8];
          SPL := a30[7:0];
          FlagS := a25[7:0][7];
          FlagZ := is_zero(a25[7:0]);
          FlagA := a28[7:0][4];
          FlagP := parity(a25[7:0]);
          FlagCY := !a25[15:8][0];
          jump ((M[a29],M[a3]));
        }
      }
    }

09F9:

    #09FC
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := M[2067];
    let:16 a2 = (-1 + a1) in
    M[a2] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,FlagS),6,FlagZ),4,FlagA),2,FlagP),0,FlagCY);
    #09FD
    let:16 a3 = (-1 + a2) in
    M[a3] := 0A;
    let:16 a4 = (-1 + a3) in
    M[a4] := 00;
    #return-to: 0A00
    #01E4
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a5 = (-1 + a4) in
        M[a5] := 01;
        let:16 a6 = (-1 + a5) in
        M[a6] := E4;
        A := M[2067];
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0008);
      } else {
        let:16 a7 = (-1 + a4) in
        M[a7] := 01;
        let:16 a8 = (-1 + a7) in
        M[a8] := E4;
        A := M[2067];
        SPH := a8[15:8];
        SPL := a8[7:0];
        jump (0010);
      }
    } else {
      #01E6
      #01E9
      #01EC
      #1A32
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a4) in
          M[a9] := 1A;
          let:16 a10 = (-1 + a9) in
          M[a10] := 32;
          A := M[2067];
          B := C0;
          D := 1B;
          E := 00;
          H := 20;
          L := 00;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a4) in
          M[a11] := 1A;
          let:16 a12 = (-1 + a11) in
          M[a12] := 32;
          A := M[2067];
          B := C0;
          D := 1B;
          E := 00;
          H := 20;
          L := 00;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1A33
        M[2000] := 01;
        #1A34
        #1A35
        #1A36
        let:16 a13 = addWithCarry(!true,C0,~00) in
        let:8 a14 = (C0 & 0F) in
        let:8 a15 = (~00 & 0F) in
        let:16 a16 = addWithCarry(!true,a14,a15) in
        #1A37
        if (!is_zero(a13[7:0])) {
          A := 01;
          B := a13[7:0];
          D := 1B;
          E := 01;
          H := 20;
          L := 01;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          jump (1A32);
        } else {
          #1A3A
          let:16 a17 = (1 + a4) in
          let:16 a18 = (1 + a17) in
          A := 01;
          B := a13[7:0];
          D := 1B;
          E := 01;
          H := 20;
          L := 01;
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          jump ((M[a17],M[a4]));
        }
      }
    }

0A00:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #0A01
    M[2067] := M[a1];
    #0A04
    #0A07
    #0A08
    let:16 a3 = (-1 + a2) in
    M[a3] := M[2067];
    let:16 a4 = (-1 + a3) in
    M[a4] := L;
    #0A09
    #0A0B
    #0A0C
    let:8 a5 = (07 & M[(M[2067],FE)]) in
    let:8 a6 = (07 | M[(M[2067],FE)]) in
    #0A0E
    let:16 a7 = addWithCarry(true,a5,00) in
    let:8 a8 = (a5 & 0F) in
    let:8 a9 = (00 & 0F) in
    let:16 a10 = addWithCarry(true,a8,a9) in
    #0A0F
    M[(M[2067],FE)] := a7[7:0];
    #0A10
    #0A13
    #0A14
    let:16 a11 = addWithCarry(!true,a7[7:0],~00) in
    let:8 a12 = (a7[7:0] & 0F) in
    let:8 a13 = (~00 & 0F) in
    let:16 a14 = addWithCarry(!true,a12,a13) in
    #0A15
    if (!is_zero(a11[7:0])) {
      A := a11[7:0];
      H := 1D;
      L := A3;
      SPH := a4[15:8];
      SPL := a4[7:0];
      FlagS := a11[7:0][7];
      FlagZ := is_zero(a11[7:0]);
      FlagA := a14[7:0][4];
      FlagP := parity(a11[7:0]);
      FlagCY := false;
      jump (0A13);
    } else {
      #0A18
      #0A19
      let:16 a15 = (1 + a4) in
      let:16 a16 = (1 + a15) in
      #0A1A
      #0A1C
      M[(M[a15],FC)] := 60;
      #0A1D
      let:16 a17 = (1 + (M[a15],FC)) in
      #0A1E
      M[a17] := 38;
      #0A20
      #0A21
      #0A22
      if (a17[15:8][0]) {
        #0A33
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a18 = (-1 + a16) in
            M[a18] := 0A;
            let:16 a19 = (-1 + a18) in
            M[a19] := 33;
            A := updateBit((a17[15:8] >> 01),7,a17[15:8][0]);
            H := a17[15:8];
            L := a17[7:0];
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a11[7:0][7];
            FlagZ := is_zero(a11[7:0]);
            FlagA := a14[7:0][4];
            FlagP := parity(a11[7:0]);
            FlagCY := a17[15:8][0];
            jump (0008);
          } else {
            let:16 a20 = (-1 + a16) in
            M[a20] := 0A;
            let:16 a21 = (-1 + a20) in
            M[a21] := 33;
            A := updateBit((a17[15:8] >> 01),7,a17[15:8][0]);
            H := a17[15:8];
            L := a17[7:0];
            SPH := a21[15:8];
            SPL := a21[7:0];
            FlagS := a11[7:0][7];
            FlagZ := is_zero(a11[7:0]);
            FlagA := a14[7:0][4];
            FlagP := parity(a11[7:0]);
            FlagCY := a17[15:8][0];
            jump (0010);
          }
        } else {
          let:16 a22 = (-1 + a16) in
          M[a22] := 0A;
          let:16 a23 = (-1 + a22) in
          M[a23] := 36;
          #return-to: 0A36
          #01EF
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a24 = (-1 + a23) in
              M[a24] := 01;
              let:16 a25 = (-1 + a24) in
              M[a25] := EF;
              A := updateBit((a17[15:8] >> 01),7,a17[15:8][0]);
              H := a17[15:8];
              L := a17[7:0];
              SPH := a25[15:8];
              SPL := a25[7:0];
              FlagS := a11[7:0][7];
              FlagZ := is_zero(a11[7:0]);
              FlagA := a14[7:0][4];
              FlagP := parity(a11[7:0]);
              FlagCY := a17[15:8][0];
              jump (0008);
            } else {
              let:16 a26 = (-1 + a23) in
              M[a26] := 01;
              let:16 a27 = (-1 + a26) in
              M[a27] := EF;
              A := updateBit((a17[15:8] >> 01),7,a17[15:8][0]);
              H := a17[15:8];
              L := a17[7:0];
              SPH := a27[15:8];
              SPL := a27[7:0];
              FlagS := a11[7:0][7];
              FlagZ := is_zero(a11[7:0]);
              FlagA := a14[7:0][4];
              FlagP := parity(a11[7:0]);
              FlagCY := a17[15:8][0];
              jump (0010);
            }
          } else {
            #01F2
            #01F8
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a28 = (-1 + a23) in
                M[a28] := 01;
                let:16 a29 = (-1 + a28) in
                M[a29] := F8;
                A := updateBit((a17[15:8] >> 01),7,a17[15:8][0]);
                H := 21;
                L := 42;
                SPH := a29[15:8];
                SPL := a29[7:0];
                FlagS := a11[7:0][7];
                FlagZ := is_zero(a11[7:0]);
                FlagA := a14[7:0][4];
                FlagP := parity(a11[7:0]);
                FlagCY := a17[15:8][0];
                jump (0008);
              } else {
                let:16 a30 = (-1 + a23) in
                M[a30] := 01;
                let:16 a31 = (-1 + a30) in
                M[a31] := F8;
                A := updateBit((a17[15:8] >> 01),7,a17[15:8][0]);
                H := 21;
                L := 42;
                SPH := a31[15:8];
                SPL := a31[7:0];
                FlagS := a11[7:0][7];
                FlagZ := is_zero(a11[7:0]);
                FlagA := a14[7:0][4];
                FlagP := parity(a11[7:0]);
                FlagCY := a17[15:8][0];
                jump (0010);
              }
            } else {
              #01FA
              #01FD
              let:16 a32 = (-1 + a23) in
              M[a32] := 1D;
              let:16 a33 = (-1 + a32) in
              M[a33] := 20;
              #01FE
              #0200
              let:16 a34 = (-1 + a33) in
              M[a34] := 02;
              let:16 a35 = (-1 + a34) in
              M[a35] := 03;
              #return-to: 0203
              #1A32
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a36 = (-1 + a35) in
                  M[a36] := 1A;
                  let:16 a37 = (-1 + a36) in
                  M[a37] := 32;
                  A := updateBit((a17[15:8] >> 01),7,a17[15:8][0]);
                  B := 2C;
                  C := 04;
                  D := 1D;
                  E := 20;
                  H := 21;
                  L := 42;
                  SPH := a37[15:8];
                  SPL := a37[7:0];
                  FlagS := a11[7:0][7];
                  FlagZ := is_zero(a11[7:0]);
                  FlagA := a14[7:0][4];
                  FlagP := parity(a11[7:0]);
                  FlagCY := a17[15:8][0];
                  jump (0008);
                } else {
                  let:16 a38 = (-1 + a35) in
                  M[a38] := 1A;
                  let:16 a39 = (-1 + a38) in
                  M[a39] := 32;
                  A := updateBit((a17[15:8] >> 01),7,a17[15:8][0]);
                  B := 2C;
                  C := 04;
                  D := 1D;
                  E := 20;
                  H := 21;
                  L := 42;
                  SPH := a39[15:8];
                  SPL := a39[7:0];
                  FlagS := a11[7:0][7];
                  FlagZ := is_zero(a11[7:0]);
                  FlagA := a14[7:0][4];
                  FlagP := parity(a11[7:0]);
                  FlagCY := a17[15:8][0];
                  jump (0010);
                }
              } else {
                #1A33
                M[2142] := FF;
                #1A34
                #1A35
                #1A36
                let:16 a40 = addWithCarry(!true,2C,~00) in
                let:8 a41 = (2C & 0F) in
                let:8 a42 = (~00 & 0F) in
                let:16 a43 = addWithCarry(!true,a41,a42) in
                #1A37
                if (!is_zero(a40[7:0])) {
                  A := FF;
                  B := a40[7:0];
                  C := 04;
                  D := 1D;
                  E := 21;
                  H := 21;
                  L := 43;
                  SPH := a35[15:8];
                  SPL := a35[7:0];
                  FlagS := a40[7:0][7];
                  FlagZ := is_zero(a40[7:0]);
                  FlagA := a43[7:0][4];
                  FlagP := parity(a40[7:0]);
                  FlagCY := a17[15:8][0];
                  jump (1A32);
                } else {
                  #1A3A
                  let:16 a44 = (1 + a35) in
                  let:16 a45 = (1 + a44) in
                  A := FF;
                  B := a40[7:0];
                  C := 04;
                  D := 1D;
                  E := 21;
                  H := 21;
                  L := 43;
                  SPH := a45[15:8];
                  SPL := a45[7:0];
                  FlagS := a40[7:0][7];
                  FlagZ := is_zero(a40[7:0]);
                  FlagA := a43[7:0][4];
                  FlagP := parity(a40[7:0]);
                  FlagCY := a17[15:8][0];
                  jump ((M[a44],M[a35]));
                }
              }
            }
          }
        }
      } else {
        #0A25
        #0A27
        M[2098] := 21;
        #0A2A
        let:16 a46 = (-1 + a16) in
        M[a46] := 0A;
        let:16 a47 = (-1 + a46) in
        M[a47] := 2D;
        #return-to: 0A2D
        #01F5
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a48 = (-1 + a47) in
            M[a48] := 01;
            let:16 a49 = (-1 + a48) in
            M[a49] := F5;
            A := 21;
            H := a17[15:8];
            L := a17[7:0];
            SPH := a49[15:8];
            SPL := a49[7:0];
            FlagS := a11[7:0][7];
            FlagZ := is_zero(a11[7:0]);
            FlagA := a14[7:0][4];
            FlagP := parity(a11[7:0]);
            FlagCY := a17[15:8][0];
            jump (0008);
          } else {
            let:16 a50 = (-1 + a47) in
            M[a50] := 01;
            let:16 a51 = (-1 + a50) in
            M[a51] := F5;
            A := 21;
            H := a17[15:8];
            L := a17[7:0];
            SPH := a51[15:8];
            SPL := a51[7:0];
            FlagS := a11[7:0][7];
            FlagZ := is_zero(a11[7:0]);
            FlagA := a14[7:0][4];
            FlagP := parity(a11[7:0]);
            FlagCY := a17[15:8][0];
            jump (0010);
          }
        } else {
          #01F8
          #01FA
          #01FD
          let:16 a52 = (-1 + a47) in
          M[a52] := 1D;
          let:16 a53 = (-1 + a52) in
          M[a53] := 20;
          #01FE
          #0200
          let:16 a54 = (-1 + a53) in
          M[a54] := 02;
          let:16 a55 = (-1 + a54) in
          M[a55] := 03;
          #return-to: 0203
          #1A32
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a56 = (-1 + a55) in
              M[a56] := 1A;
              let:16 a57 = (-1 + a56) in
              M[a57] := 32;
              A := 21;
              B := 2C;
              C := 04;
              D := 1D;
              E := 20;
              H := 22;
              L := 42;
              SPH := a57[15:8];
              SPL := a57[7:0];
              FlagS := a11[7:0][7];
              FlagZ := is_zero(a11[7:0]);
              FlagA := a14[7:0][4];
              FlagP := parity(a11[7:0]);
              FlagCY := a17[15:8][0];
              jump (0008);
            } else {
              let:16 a58 = (-1 + a55) in
              M[a58] := 1A;
              let:16 a59 = (-1 + a58) in
              M[a59] := 32;
              A := 21;
              B := 2C;
              C := 04;
              D := 1D;
              E := 20;
              H := 22;
              L := 42;
              SPH := a59[15:8];
              SPL := a59[7:0];
              FlagS := a11[7:0][7];
              FlagZ := is_zero(a11[7:0]);
              FlagA := a14[7:0][4];
              FlagP := parity(a11[7:0]);
              FlagCY := a17[15:8][0];
              jump (0010);
            }
          } else {
            #1A33
            M[2242] := FF;
            #1A34
            #1A35
            #1A36
            let:16 a60 = addWithCarry(!true,2C,~00) in
            let:8 a61 = (2C & 0F) in
            let:8 a62 = (~00 & 0F) in
            let:16 a63 = addWithCarry(!true,a61,a62) in
            #1A37
            if (!is_zero(a60[7:0])) {
              A := FF;
              B := a60[7:0];
              C := 04;
              D := 1D;
              E := 21;
              H := 22;
              L := 43;
              SPH := a55[15:8];
              SPL := a55[7:0];
              FlagS := a60[7:0][7];
              FlagZ := is_zero(a60[7:0]);
              FlagA := a63[7:0][4];
              FlagP := parity(a60[7:0]);
              FlagCY := a17[15:8][0];
              jump (1A32);
            } else {
              #1A3A
              let:16 a64 = (1 + a55) in
              let:16 a65 = (1 + a64) in
              A := FF;
              B := a60[7:0];
              C := 04;
              D := 1D;
              E := 21;
              H := 22;
              L := 43;
              SPH := a65[15:8];
              SPL := a65[7:0];
              FlagS := a60[7:0][7];
              FlagZ := is_zero(a60[7:0]);
              FlagA := a63[7:0][4];
              FlagP := parity(a60[7:0]);
              FlagCY := a17[15:8][0];
              jump ((M[a64],M[a55]));
            }
          }
        }
      }
    }

0A2D:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0A;
    let:16 a2 = (-1 + a1) in
    M[a2] := 30;
    #return-to: 0A30
    #1904
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 04;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 04;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1907
      #01C3
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 01;
          let:16 a8 = (-1 + a7) in
          M[a8] := C3;
          H := 22;
          L := 00;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 01;
          let:16 a10 = (-1 + a9) in
          M[a10] := C3;
          H := 22;
          L := 00;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #01C5
        M[2200] := 01;
        #01C7
        #01C8
        let:16 a11 = addWithCarry(!true,37,~00) in
        let:8 a12 = (37 & 0F) in
        let:8 a13 = (~00 & 0F) in
        let:16 a14 = addWithCarry(!true,a12,a13) in
        #01C9
        if (!is_zero(a11[7:0])) {
          B := a11[7:0];
          H := 22;
          L := 01;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump (01C5);
        } else {
          #01CC
          let:16 a15 = (1 + a2) in
          let:16 a16 = (1 + a15) in
          B := a11[7:0];
          H := 22;
          L := 01;
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump ((M[a15],M[a2]));
        }
      }
    }

0A30:

    #0804
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 08;
        let:16 a2 = (-1 + a1) in
        M[a2] := 04;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 08;
        let:16 a4 = (-1 + a3) in
        M[a4] := 04;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 08;
      let:16 a6 = (-1 + a5) in
      M[a6] := 07;
      #return-to: 0807
      #01CF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 01;
          let:16 a8 = (-1 + a7) in
          M[a8] := CF;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 01;
          let:16 a10 = (-1 + a9) in
          M[a10] := CF;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #01D1
        #01D3
        #01D6
        #14CC
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a6) in
            M[a11] := 14;
            let:16 a12 = (-1 + a11) in
            M[a12] := CC;
            A := 01;
            B := E0;
            H := 24;
            L := 02;
            SPH := a12[15:8];
            SPL := a12[7:0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a6) in
            M[a13] := 14;
            let:16 a14 = (-1 + a13) in
            M[a14] := CC;
            A := 01;
            B := E0;
            H := 24;
            L := 02;
            SPH := a14[15:8];
            SPL := a14[7:0];
            jump (0010);
          }
        } else {
          let:16 a15 = (-1 + a6) in
          M[a15] := E0;
          let:16 a16 = (-1 + a15) in
          M[a16] := C;
          #14CD
          M[2402] := 01;
          #14CE
          #14D1
          let:17 a17 = add17(0020,2402) in
          #14D2
          let:16 a18 = (1 + a16) in
          let:16 a19 = (1 + a18) in
          #14D3
          let:16 a20 = addWithCarry(!true,M[a18],~00) in
          let:8 a21 = (M[a18] & 0F) in
          let:8 a22 = (~00 & 0F) in
          let:16 a23 = addWithCarry(!true,a21,a22) in
          #14D4
          if (!is_zero(a20[7:0])) {
            A := 01;
            B := a20[7:0];
            C := M[a16];
            H := a17[15:0][15:8];
            L := a17[15:0][7:0];
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a20[7:0][7];
            FlagZ := is_zero(a20[7:0]);
            FlagA := a23[7:0][4];
            FlagP := parity(a20[7:0]);
            FlagCY := a17[16];
            jump (14CC);
          } else {
            #14D7
            let:16 a24 = (1 + a19) in
            let:16 a25 = (1 + a24) in
            A := 01;
            B := a20[7:0];
            C := M[a16];
            H := a17[15:0][15:8];
            L := a17[15:0][7:0];
            SPH := a25[15:8];
            SPL := a25[7:0];
            FlagS := a20[7:0][7];
            FlagZ := is_zero(a20[7:0]);
            FlagA := a23[7:0][4];
            FlagP := parity(a20[7:0]);
            FlagCY := a17[16];
            jump ((M[a24],M[a19]));
          }
        }
      }
    }

0A36:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0A;
    let:16 a2 = (-1 + a1) in
    M[a2] := 39;
    #return-to: 0A39
    #01C0
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 01;
        let:16 a4 = (-1 + a3) in
        M[a4] := C0;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 01;
        let:16 a6 = (-1 + a5) in
        M[a6] := C0;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #01C3
      #01C5
      M[2100] := 01;
      #01C7
      #01C8
      let:16 a7 = addWithCarry(!true,37,~00) in
      let:8 a8 = (37 & 0F) in
      let:8 a9 = (~00 & 0F) in
      let:16 a10 = addWithCarry(!true,a8,a9) in
      #01C9
      if (!is_zero(a7[7:0])) {
        B := a7[7:0];
        H := 21;
        L := 01;
        SPH := a2[15:8];
        SPL := a2[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        jump (01C5);
      } else {
        #01CC
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        B := a7[7:0];
        H := 21;
        L := 01;
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        jump ((M[a11],M[a2]));
      }
    }

0A39:

    #0804
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 08;
        let:16 a2 = (-1 + a1) in
        M[a2] := 04;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 08;
        let:16 a4 = (-1 + a3) in
        M[a4] := 04;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 08;
      let:16 a6 = (-1 + a5) in
      M[a6] := 07;
      #return-to: 0807
      #01CF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 01;
          let:16 a8 = (-1 + a7) in
          M[a8] := CF;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 01;
          let:16 a10 = (-1 + a9) in
          M[a10] := CF;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #01D1
        #01D3
        #01D6
        #14CC
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a6) in
            M[a11] := 14;
            let:16 a12 = (-1 + a11) in
            M[a12] := CC;
            A := 01;
            B := E0;
            H := 24;
            L := 02;
            SPH := a12[15:8];
            SPL := a12[7:0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a6) in
            M[a13] := 14;
            let:16 a14 = (-1 + a13) in
            M[a14] := CC;
            A := 01;
            B := E0;
            H := 24;
            L := 02;
            SPH := a14[15:8];
            SPL := a14[7:0];
            jump (0010);
          }
        } else {
          let:16 a15 = (-1 + a6) in
          M[a15] := E0;
          let:16 a16 = (-1 + a15) in
          M[a16] := C;
          #14CD
          M[2402] := 01;
          #14CE
          #14D1
          let:17 a17 = add17(0020,2402) in
          #14D2
          let:16 a18 = (1 + a16) in
          let:16 a19 = (1 + a18) in
          #14D3
          let:16 a20 = addWithCarry(!true,M[a18],~00) in
          let:8 a21 = (M[a18] & 0F) in
          let:8 a22 = (~00 & 0F) in
          let:16 a23 = addWithCarry(!true,a21,a22) in
          #14D4
          if (!is_zero(a20[7:0])) {
            A := 01;
            B := a20[7:0];
            C := M[a16];
            H := a17[15:0][15:8];
            L := a17[15:0][7:0];
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a20[7:0][7];
            FlagZ := is_zero(a20[7:0]);
            FlagA := a23[7:0][4];
            FlagP := parity(a20[7:0]);
            FlagCY := a17[16];
            jump (14CC);
          } else {
            #14D7
            let:16 a24 = (1 + a19) in
            let:16 a25 = (1 + a24) in
            A := 01;
            B := a20[7:0];
            C := M[a16];
            H := a17[15:0][15:8];
            L := a17[15:0][7:0];
            SPH := a25[15:8];
            SPL := a25[7:0];
            FlagS := a20[7:0][7];
            FlagZ := is_zero(a20[7:0]);
            FlagA := a23[7:0][4];
            FlagP := parity(a20[7:0]);
            FlagCY := a17[16];
            jump ((M[a24],M[a19]));
          }
        }
      }
    }

0A3F:

    if (!FlagZ) {
      #0A52
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a1 = (-1 + (SPH,SPL)) in
          M[a1] := 0A;
          let:16 a2 = (-1 + a1) in
          M[a2] := 52;
          SPH := a2[15:8];
          SPL := a2[7:0];
          jump (0008);
        } else {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 0A;
          let:16 a4 = (-1 + a3) in
          M[a4] := 52;
          SPH := a4[15:8];
          SPL := a4[7:0];
          jump (0010);
        }
      } else {
        let:16 a5 = (-1 + (SPH,SPL)) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 55;
        #return-to: 0A55
        #0A59
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a7 = (-1 + a6) in
            M[a7] := 0A;
            let:16 a8 = (-1 + a7) in
            M[a8] := 59;
            SPH := a8[15:8];
            SPL := a8[7:0];
            jump (0008);
          } else {
            let:16 a9 = (-1 + a6) in
            M[a9] := 0A;
            let:16 a10 = (-1 + a9) in
            M[a10] := 59;
            SPH := a10[15:8];
            SPL := a10[7:0];
            jump (0010);
          }
        } else {
          #0A5C
          let:16 a11 = addWithCarry(!false,M[2015],~FF) in
          let:8 a12 = (M[2015] & 0F) in
          let:8 a13 = (~FF & 0F) in
          let:16 a14 = addWithCarry(!false,a12,a13) in
          #0A5E
          let:16 a15 = (1 + a6) in
          let:16 a16 = (1 + a15) in
          A := M[2015];
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          FlagCY := !a11[15:8][0];
          jump ((M[a15],M[a6]));
        }
      }
    } else {
      #0A42
      #0A44
      M[20C0] := 30;
      #0A47
      #0A4A
      let:8 a17 = (M[20C0] & M[20C0]) in
      let:8 a18 = (M[20C0] | M[20C0]) in
      #0A4B
      if (is_zero(a17)) {
        let:16 a19 = (1 + (SPH,SPL)) in
        let:16 a20 = (1 + a19) in
        A := a17;
        SPH := a20[15:8];
        SPL := a20[7:0];
        FlagS := a17[7];
        FlagZ := is_zero(a17);
        FlagA := a18[3];
        FlagP := parity(a17);
        FlagCY := false;
        jump ((M[a19],M[(SPH,SPL)]));
      } else {
        #0A4C
        let:16 a21 = (-1 + (SPH,SPL)) in
        M[a21] := 0A;
        let:16 a22 = (-1 + a21) in
        M[a22] := 4F;
        #return-to: 0A4F
        #0A59
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a23 = (-1 + a22) in
            M[a23] := 0A;
            let:16 a24 = (-1 + a23) in
            M[a24] := 59;
            A := a17;
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagS := a17[7];
            FlagZ := is_zero(a17);
            FlagA := a18[3];
            FlagP := parity(a17);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a25 = (-1 + a22) in
            M[a25] := 0A;
            let:16 a26 = (-1 + a25) in
            M[a26] := 59;
            A := a17;
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagS := a17[7];
            FlagZ := is_zero(a17);
            FlagA := a18[3];
            FlagP := parity(a17);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #0A5C
          let:16 a27 = addWithCarry(!false,M[2015],~FF) in
          let:8 a28 = (M[2015] & 0F) in
          let:8 a29 = (~FF & 0F) in
          let:16 a30 = addWithCarry(!false,a28,a29) in
          #0A5E
          let:16 a31 = (1 + a22) in
          let:16 a32 = (1 + a31) in
          A := M[2015];
          SPH := a32[15:8];
          SPL := a32[7:0];
          FlagS := a27[7:0][7];
          FlagZ := is_zero(a27[7:0]);
          FlagA := a30[7:0][4];
          FlagP := parity(a27[7:0]);
          FlagCY := !a27[15:8][0];
          jump ((M[a31],M[a22]));
        }
      }
    }

0A4F:

    if (FlagZ) {
      #0A47
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a1 = (-1 + (SPH,SPL)) in
          M[a1] := 0A;
          let:16 a2 = (-1 + a1) in
          M[a2] := 47;
          SPH := a2[15:8];
          SPL := a2[7:0];
          jump (0008);
        } else {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 0A;
          let:16 a4 = (-1 + a3) in
          M[a4] := 47;
          SPH := a4[15:8];
          SPL := a4[7:0];
          jump (0010);
        }
      } else {
        #0A4A
        let:8 a5 = (M[20C0] & M[20C0]) in
        let:8 a6 = (M[20C0] | M[20C0]) in
        #0A4B
        if (is_zero(a5)) {
          let:16 a7 = (1 + (SPH,SPL)) in
          let:16 a8 = (1 + a7) in
          A := a5;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a5[7];
          FlagZ := is_zero(a5);
          FlagA := a6[3];
          FlagP := parity(a5);
          FlagCY := false;
          jump ((M[a7],M[(SPH,SPL)]));
        } else {
          #0A4C
          let:16 a9 = (-1 + (SPH,SPL)) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := 4F;
          #return-to: 0A4F
          #0A59
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a11 = (-1 + a10) in
              M[a11] := 0A;
              let:16 a12 = (-1 + a11) in
              M[a12] := 59;
              A := a5;
              SPH := a12[15:8];
              SPL := a12[7:0];
              FlagS := a5[7];
              FlagZ := is_zero(a5);
              FlagA := a6[3];
              FlagP := parity(a5);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a13 = (-1 + a10) in
              M[a13] := 0A;
              let:16 a14 = (-1 + a13) in
              M[a14] := 59;
              A := a5;
              SPH := a14[15:8];
              SPL := a14[7:0];
              FlagS := a5[7];
              FlagZ := is_zero(a5);
              FlagA := a6[3];
              FlagP := parity(a5);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #0A5C
            let:16 a15 = addWithCarry(!false,M[2015],~FF) in
            let:8 a16 = (M[2015] & 0F) in
            let:8 a17 = (~FF & 0F) in
            let:16 a18 = addWithCarry(!false,a16,a17) in
            #0A5E
            let:16 a19 = (1 + a10) in
            let:16 a20 = (1 + a19) in
            A := M[2015];
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a15[7:0][7];
            FlagZ := is_zero(a15[7:0]);
            FlagA := a18[7:0][4];
            FlagP := parity(a15[7:0]);
            FlagCY := !a15[15:8][0];
            jump ((M[a19],M[a10]));
          }
        }
      }
    } else {
      #0A52
      let:16 a21 = (-1 + (SPH,SPL)) in
      M[a21] := 0A;
      let:16 a22 = (-1 + a21) in
      M[a22] := 55;
      #return-to: 0A55
      #0A59
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a23 = (-1 + a22) in
          M[a23] := 0A;
          let:16 a24 = (-1 + a23) in
          M[a24] := 59;
          SPH := a24[15:8];
          SPL := a24[7:0];
          jump (0008);
        } else {
          let:16 a25 = (-1 + a22) in
          M[a25] := 0A;
          let:16 a26 = (-1 + a25) in
          M[a26] := 59;
          SPH := a26[15:8];
          SPL := a26[7:0];
          jump (0010);
        }
      } else {
        #0A5C
        let:16 a27 = addWithCarry(!false,M[2015],~FF) in
        let:8 a28 = (M[2015] & 0F) in
        let:8 a29 = (~FF & 0F) in
        let:16 a30 = addWithCarry(!false,a28,a29) in
        #0A5E
        let:16 a31 = (1 + a22) in
        let:16 a32 = (1 + a31) in
        A := M[2015];
        SPH := a32[15:8];
        SPL := a32[7:0];
        FlagS := a27[7:0][7];
        FlagZ := is_zero(a27[7:0]);
        FlagA := a30[7:0][4];
        FlagP := parity(a27[7:0]);
        FlagCY := !a27[15:8][0];
        jump ((M[a31],M[a22]));
      }
    }

0A55:

    if (!FlagZ) {
      #0A52
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a1 = (-1 + (SPH,SPL)) in
          M[a1] := 0A;
          let:16 a2 = (-1 + a1) in
          M[a2] := 52;
          SPH := a2[15:8];
          SPL := a2[7:0];
          jump (0008);
        } else {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 0A;
          let:16 a4 = (-1 + a3) in
          M[a4] := 52;
          SPH := a4[15:8];
          SPL := a4[7:0];
          jump (0010);
        }
      } else {
        let:16 a5 = (-1 + (SPH,SPL)) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 55;
        #return-to: 0A55
        #0A59
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a7 = (-1 + a6) in
            M[a7] := 0A;
            let:16 a8 = (-1 + a7) in
            M[a8] := 59;
            SPH := a8[15:8];
            SPL := a8[7:0];
            jump (0008);
          } else {
            let:16 a9 = (-1 + a6) in
            M[a9] := 0A;
            let:16 a10 = (-1 + a9) in
            M[a10] := 59;
            SPH := a10[15:8];
            SPL := a10[7:0];
            jump (0010);
          }
        } else {
          #0A5C
          let:16 a11 = addWithCarry(!false,M[2015],~FF) in
          let:8 a12 = (M[2015] & 0F) in
          let:8 a13 = (~FF & 0F) in
          let:16 a14 = addWithCarry(!false,a12,a13) in
          #0A5E
          let:16 a15 = (1 + a6) in
          let:16 a16 = (1 + a15) in
          A := M[2015];
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          FlagCY := !a11[15:8][0];
          jump ((M[a15],M[a6]));
        }
      }
    } else {
      #0A58
      let:16 a17 = (1 + (SPH,SPL)) in
      let:16 a18 = (1 + a17) in
      SPH := a18[15:8];
      SPL := a18[7:0];
      jump ((M[a17],M[(SPH,SPL)]));
    }

0A6C:

    #0A6D
    #0A6E
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0A;
    let:16 a2 = (-1 + a1) in
    M[a2] := 71;
    #return-to: 0A71
    #097C
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 09;
        let:16 a4 = (-1 + a3) in
        M[a4] := 7C;
        A := C;
        B := C;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 09;
        let:16 a6 = (-1 + a5) in
        M[a6] := 7C;
        A := C;
        B := C;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #097F
      let:16 a7 = addWithCarry(!false,C,~02) in
      let:8 a8 = (C & 0F) in
      let:8 a9 = (~02 & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #0981
      if (!a7[15:8][0]) {
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := C;
        B := C;
        H := 1D;
        L := A0;
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := !a7[15:8][0];
        jump ((M[a11],M[a2]));
      } else {
        #0982
        #0983
        let:16 a13 = addWithCarry(!false,C,~04) in
        let:8 a14 = (C & 0F) in
        let:8 a15 = (~04 & 0F) in
        let:16 a16 = addWithCarry(!false,a14,a15) in
        #0985
        if (!a13[15:8][0]) {
          let:16 a17 = (1 + a2) in
          let:16 a18 = (1 + a17) in
          A := C;
          B := C;
          H := 1D;
          L := A1;
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          FlagCY := !a13[15:8][0];
          jump ((M[a17],M[a2]));
        } else {
          #0986
          #0987
          let:16 a19 = (1 + a2) in
          let:16 a20 = (1 + a19) in
          A := C;
          B := C;
          H := 1D;
          L := A2;
          SPH := a20[15:8];
          SPL := a20[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          FlagCY := !a13[15:8][0];
          jump ((M[a19],M[a2]));
        }
      }
    }

0A71:

    #0A72
    #0A75
    M[20F3] := 00;
    #0A77
    #0A78
    M[20F2] := M[(H,L)];
    #0A79
    #0A7A
    M[20F1] := 01;
    #0A7C
    #0A7F
    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    A := M[(H,L)];
    H := 20;
    L := 62;
    SPH := a2[15:8];
    SPL := a2[7:0];
    jump ((M[a1],M[(SPH,SPL)]));

0A98:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #0A99
    #0A9B
    M[20C0] := 07;
    #0A9E
    #0AA1
    let:16 a3 = addWithCarry(!true,M[20C0],~00) in
    let:8 a4 = (M[20C0] & 0F) in
    let:8 a5 = (~00 & 0F) in
    let:16 a6 = addWithCarry(!true,a4,a5) in
    #0AA2
    if (!is_zero(a3[7:0])) {
      A := a3[7:0];
      D := M[a1];
      E := M[(SPH,SPL)];
      SPH := a2[15:8];
      SPL := a2[7:0];
      FlagS := a3[7:0][7];
      FlagZ := is_zero(a3[7:0]);
      FlagA := a6[7:0][4];
      FlagP := parity(a3[7:0]);
      jump (0A9E);
    } else {
      #0AA5
      let:16 a7 = (1 + (M[a1],M[(SPH,SPL)])) in
      #0AA6
      let:16 a8 = addWithCarry(!true,C,~00) in
      let:8 a9 = (C & 0F) in
      let:8 a10 = (~00 & 0F) in
      let:16 a11 = addWithCarry(!true,a9,a10) in
      #0AA7
      if (!is_zero(a8[7:0])) {
        #0A93
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a12 = (-1 + a2) in
            M[a12] := 0A;
            let:16 a13 = (-1 + a12) in
            M[a13] := 93;
            A := a3[7:0];
            C := a8[7:0];
            D := a7[15:8];
            E := a7[7:0];
            SPH := a13[15:8];
            SPL := a13[7:0];
            FlagS := a8[7:0][7];
            FlagZ := is_zero(a8[7:0]);
            FlagA := a11[7:0][4];
            FlagP := parity(a8[7:0]);
            jump (0008);
          } else {
            let:16 a14 = (-1 + a2) in
            M[a14] := 0A;
            let:16 a15 = (-1 + a14) in
            M[a15] := 93;
            A := a3[7:0];
            C := a8[7:0];
            D := a7[15:8];
            E := a7[7:0];
            SPH := a15[15:8];
            SPL := a15[7:0];
            FlagS := a8[7:0][7];
            FlagZ := is_zero(a8[7:0]);
            FlagA := a11[7:0][4];
            FlagP := parity(a8[7:0]);
            jump (0010);
          }
        } else {
          let:16 a16 = (-1 + a2) in
          M[a16] := a7[15:8];
          let:16 a17 = (-1 + a16) in
          M[a17] := a7[7:0];
          #0A94
          #0A95
          let:16 a18 = (-1 + a17) in
          M[a18] := 0A;
          let:16 a19 = (-1 + a18) in
          M[a19] := 98;
          #return-to: 0A98
          #08FF
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a20 = (-1 + a19) in
              M[a20] := 08;
              let:16 a21 = (-1 + a20) in
              M[a21] := FF;
              A := M[a7];
              C := a8[7:0];
              D := a7[15:8];
              E := a7[7:0];
              SPH := a21[15:8];
              SPL := a21[7:0];
              FlagS := a8[7:0][7];
              FlagZ := is_zero(a8[7:0]);
              FlagA := a11[7:0][4];
              FlagP := parity(a8[7:0]);
              jump (0008);
            } else {
              let:16 a22 = (-1 + a19) in
              M[a22] := 08;
              let:16 a23 = (-1 + a22) in
              M[a23] := FF;
              A := M[a7];
              C := a8[7:0];
              D := a7[15:8];
              E := a7[7:0];
              SPH := a23[15:8];
              SPL := a23[7:0];
              FlagS := a8[7:0][7];
              FlagZ := is_zero(a8[7:0]);
              FlagA := a11[7:0][4];
              FlagP := parity(a8[7:0]);
              jump (0010);
            }
          } else {
            #0902
            let:16 a24 = (-1 + a19) in
            M[a24] := H;
            let:16 a25 = (-1 + a24) in
            M[a25] := L;
            #0903
            #0905
            #0906
            let:17 a26 = add17((00,M[a7]),(00,M[a7])) in
            #0907
            let:17 a27 = add17(a26[15:0],a26[15:0]) in
            #0908
            let:17 a28 = add17(a27[15:0],a27[15:0]) in
            #0909
            let:17 a29 = add17(1E00,a28[15:0]) in
            #090A
            #090B
            let:16 a30 = (1 + a25) in
            let:16 a31 = (1 + a30) in
            #090C
            #090E
            #0910
            #1439
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a32 = (-1 + a31) in
                M[a32] := 14;
                let:16 a33 = (-1 + a32) in
                M[a33] := 39;
                A := M[a7];
                B := 08;
                C := a8[7:0];
                D := a29[15:0][15:8];
                E := a29[15:0][7:0];
                H := M[a30];
                L := M[a25];
                SPH := a33[15:8];
                SPL := a33[7:0];
                FlagS := a8[7:0][7];
                FlagZ := is_zero(a8[7:0]);
                FlagA := a11[7:0][4];
                FlagP := parity(a8[7:0]);
                FlagCY := a29[16];
                jump (0008);
              } else {
                let:16 a34 = (-1 + a31) in
                M[a34] := 14;
                let:16 a35 = (-1 + a34) in
                M[a35] := 39;
                A := M[a7];
                B := 08;
                C := a8[7:0];
                D := a29[15:0][15:8];
                E := a29[15:0][7:0];
                H := M[a30];
                L := M[a25];
                SPH := a35[15:8];
                SPL := a35[7:0];
                FlagS := a8[7:0][7];
                FlagZ := is_zero(a8[7:0]);
                FlagA := a11[7:0][4];
                FlagP := parity(a8[7:0]);
                FlagCY := a29[16];
                jump (0010);
              }
            } else {
              let:16 a36 = (-1 + a31) in
              M[a36] := 08;
              let:16 a37 = (-1 + a36) in
              M[a37] := a8[7:0];
              #143A
              #143B
              M[(M[a30],M[a25])] := M[a29[15:0]];
              #143C
              let:16 a38 = (1 + a29[15:0]) in
              #143D
              #1440
              let:17 a39 = add17(0020,(M[a30],M[a25])) in
              #1441
              let:16 a40 = (1 + a37) in
              let:16 a41 = (1 + a40) in
              #1442
              let:16 a42 = addWithCarry(!true,M[a40],~00) in
              let:8 a43 = (M[a40] & 0F) in
              let:8 a44 = (~00 & 0F) in
              let:16 a45 = addWithCarry(!true,a43,a44) in
              #1443
              if (!is_zero(a42[7:0])) {
                A := M[a29[15:0]];
                B := a42[7:0];
                C := M[a37];
                D := a38[15:8];
                E := a38[7:0];
                H := a39[15:0][15:8];
                L := a39[15:0][7:0];
                SPH := a41[15:8];
                SPL := a41[7:0];
                FlagS := a42[7:0][7];
                FlagZ := is_zero(a42[7:0]);
                FlagA := a45[7:0][4];
                FlagP := parity(a42[7:0]);
                FlagCY := a39[16];
                jump (1439);
              } else {
                #1446
                let:16 a46 = (1 + a41) in
                let:16 a47 = (1 + a46) in
                A := M[a29[15:0]];
                B := a42[7:0];
                C := M[a37];
                D := a38[15:8];
                E := a38[7:0];
                H := a39[15:0][15:8];
                L := a39[15:0][7:0];
                SPH := a47[15:8];
                SPL := a47[7:0];
                FlagS := a42[7:0][7];
                FlagZ := is_zero(a42[7:0]);
                FlagA := a45[7:0][4];
                FlagP := parity(a42[7:0]);
                FlagCY := a39[16];
                jump ((M[a46],M[a41]));
              }
            }
          }
        }
      } else {
        #0AAA
        let:16 a48 = (1 + a2) in
        let:16 a49 = (1 + a48) in
        A := a3[7:0];
        C := a8[7:0];
        D := a7[15:8];
        E := a7[7:0];
        SPH := a49[15:8];
        SPL := a49[7:0];
        FlagS := a8[7:0][7];
        FlagZ := is_zero(a8[7:0]);
        FlagA := a11[7:0][4];
        FlagP := parity(a8[7:0]);
        jump ((M[a48],M[a2]));
      }
    }

0AF2:

    enable_interrupts()
    #0AF3
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0A;
    let:16 a2 = (-1 + a1) in
    M[a2] := F6;
    #return-to: 0AF6
    #0AB1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := B1;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := B1;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AB3
      #0AD7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := D7;
          A := 40;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := D7;
          A := 40;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        M[20C0] := 40;
        #0ADA
        #0ADD
        let:8 a11 = (M[20C0] & M[20C0]) in
        let:8 a12 = (M[20C0] | M[20C0]) in
        #0ADE
        if (!is_zero(a11)) {
          A := a11;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump (0ADA);
        } else {
          #0AE1
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        }
      }
    }

0AF6:

    #0AF9
    let:8 a1 = (M[20EC] & M[20EC]) in
    let:8 a2 = (M[20EC] | M[20EC]) in
    #0AFA
    #0AFD
    #0AFF
    if (!is_zero(a1)) {
      #0BE8
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 0B;
          let:16 a4 = (-1 + a3) in
          M[a4] := E8;
          A := a1;
          C := 04;
          H := 30;
          L := 17;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 0B;
          let:16 a6 = (-1 + a5) in
          M[a6] := E8;
          A := a1;
          C := 04;
          H := 30;
          L := 17;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #0BEB
        let:16 a7 = (-1 + (SPH,SPL)) in
        M[a7] := 0B;
        let:16 a8 = (-1 + a7) in
        M[a8] := EE;
        #return-to: 0BEE
        #0A93
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a8) in
            M[a9] := 0A;
            let:16 a10 = (-1 + a9) in
            M[a10] := 93;
            A := a1;
            C := 04;
            D := 1D;
            E := AB;
            H := 30;
            L := 17;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a11 = (-1 + a8) in
            M[a11] := 0A;
            let:16 a12 = (-1 + a11) in
            M[a12] := 93;
            A := a1;
            C := 04;
            D := 1D;
            E := AB;
            H := 30;
            L := 17;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a13 = (-1 + a8) in
          M[a13] := 1D;
          let:16 a14 = (-1 + a13) in
          M[a14] := AB;
          #0A94
          #0A95
          let:16 a15 = (-1 + a14) in
          M[a15] := 0A;
          let:16 a16 = (-1 + a15) in
          M[a16] := 98;
          #return-to: 0A98
          #08FF
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a16) in
              M[a17] := 08;
              let:16 a18 = (-1 + a17) in
              M[a18] := FF;
              A := 0F;
              C := 04;
              D := 1D;
              E := AB;
              H := 30;
              L := 17;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a19 = (-1 + a16) in
              M[a19] := 08;
              let:16 a20 = (-1 + a19) in
              M[a20] := FF;
              A := 0F;
              C := 04;
              D := 1D;
              E := AB;
              H := 30;
              L := 17;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #0902
            let:16 a21 = (-1 + a16) in
            M[a21] := 30;
            let:16 a22 = (-1 + a21) in
            M[a22] := 17;
            #0903
            #0905
            #0906
            let:17 a23 = add17(000F,000F) in
            #0907
            let:17 a24 = add17(a23[15:0],a23[15:0]) in
            #0908
            let:17 a25 = add17(a24[15:0],a24[15:0]) in
            #0909
            let:17 a26 = add17(1E00,a25[15:0]) in
            #090A
            #090B
            let:16 a27 = (1 + a22) in
            let:16 a28 = (1 + a27) in
            #090C
            #090E
            #0910
            #1439
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a29 = (-1 + a28) in
                M[a29] := 14;
                let:16 a30 = (-1 + a29) in
                M[a30] := 39;
                A := 0F;
                B := 08;
                C := 04;
                D := a26[15:0][15:8];
                E := a26[15:0][7:0];
                H := M[a27];
                L := M[a22];
                SPH := a30[15:8];
                SPL := a30[7:0];
                FlagS := a1[7];
                FlagZ := is_zero(a1);
                FlagA := a2[3];
                FlagP := parity(a1);
                FlagCY := a26[16];
                jump (0008);
              } else {
                let:16 a31 = (-1 + a28) in
                M[a31] := 14;
                let:16 a32 = (-1 + a31) in
                M[a32] := 39;
                A := 0F;
                B := 08;
                C := 04;
                D := a26[15:0][15:8];
                E := a26[15:0][7:0];
                H := M[a27];
                L := M[a22];
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagS := a1[7];
                FlagZ := is_zero(a1);
                FlagA := a2[3];
                FlagP := parity(a1);
                FlagCY := a26[16];
                jump (0010);
              }
            } else {
              let:16 a33 = (-1 + a28) in
              M[a33] := 08;
              let:16 a34 = (-1 + a33) in
              M[a34] := 04;
              #143A
              #143B
              M[(M[a27],M[a22])] := M[a26[15:0]];
              #143C
              let:16 a35 = (1 + a26[15:0]) in
              #143D
              #1440
              let:17 a36 = add17(0020,(M[a27],M[a22])) in
              #1441
              let:16 a37 = (1 + a34) in
              let:16 a38 = (1 + a37) in
              #1442
              let:16 a39 = addWithCarry(!true,M[a37],~00) in
              let:8 a40 = (M[a37] & 0F) in
              let:8 a41 = (~00 & 0F) in
              let:16 a42 = addWithCarry(!true,a40,a41) in
              #1443
              if (!is_zero(a39[7:0])) {
                A := M[a26[15:0]];
                B := a39[7:0];
                C := M[a34];
                D := a35[15:8];
                E := a35[7:0];
                H := a36[15:0][15:8];
                L := a36[15:0][7:0];
                SPH := a38[15:8];
                SPL := a38[7:0];
                FlagS := a39[7:0][7];
                FlagZ := is_zero(a39[7:0]);
                FlagA := a42[7:0][4];
                FlagP := parity(a39[7:0]);
                FlagCY := a36[16];
                jump (1439);
              } else {
                #1446
                let:16 a43 = (1 + a38) in
                let:16 a44 = (1 + a43) in
                A := M[a26[15:0]];
                B := a39[7:0];
                C := M[a34];
                D := a35[15:8];
                E := a35[7:0];
                H := a36[15:0][15:8];
                L := a36[15:0][7:0];
                SPH := a44[15:8];
                SPL := a44[7:0];
                FlagS := a39[7:0][7];
                FlagZ := is_zero(a39[7:0]);
                FlagA := a42[7:0][4];
                FlagP := parity(a39[7:0]);
                FlagCY := a36[16];
                jump ((M[a43],M[a38]));
              }
            }
          }
        }
      }
    } else {
      #0B02
      #0B05
      let:16 a45 = (-1 + (SPH,SPL)) in
      M[a45] := 0B;
      let:16 a46 = (-1 + a45) in
      M[a46] := 08;
      #return-to: 0B08
      #0A93
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a47 = (-1 + a46) in
          M[a47] := 0A;
          let:16 a48 = (-1 + a47) in
          M[a48] := 93;
          A := a1;
          C := 04;
          D := 1C;
          E := FA;
          H := 30;
          L := 17;
          SPH := a48[15:8];
          SPL := a48[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a49 = (-1 + a46) in
          M[a49] := 0A;
          let:16 a50 = (-1 + a49) in
          M[a50] := 93;
          A := a1;
          C := 04;
          D := 1C;
          E := FA;
          H := 30;
          L := 17;
          SPH := a50[15:8];
          SPL := a50[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        let:16 a51 = (-1 + a46) in
        M[a51] := 1C;
        let:16 a52 = (-1 + a51) in
        M[a52] := FA;
        #0A94
        #0A95
        let:16 a53 = (-1 + a52) in
        M[a53] := 0A;
        let:16 a54 = (-1 + a53) in
        M[a54] := 98;
        #return-to: 0A98
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a55 = (-1 + a54) in
            M[a55] := 08;
            let:16 a56 = (-1 + a55) in
            M[a56] := FF;
            A := 0F;
            C := 04;
            D := 1C;
            E := FA;
            H := 30;
            L := 17;
            SPH := a56[15:8];
            SPL := a56[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a57 = (-1 + a54) in
            M[a57] := 08;
            let:16 a58 = (-1 + a57) in
            M[a58] := FF;
            A := 0F;
            C := 04;
            D := 1C;
            E := FA;
            H := 30;
            L := 17;
            SPH := a58[15:8];
            SPL := a58[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #0902
          let:16 a59 = (-1 + a54) in
          M[a59] := 30;
          let:16 a60 = (-1 + a59) in
          M[a60] := 17;
          #0903
          #0905
          #0906
          let:17 a61 = add17(000F,000F) in
          #0907
          let:17 a62 = add17(a61[15:0],a61[15:0]) in
          #0908
          let:17 a63 = add17(a62[15:0],a62[15:0]) in
          #0909
          let:17 a64 = add17(1E00,a63[15:0]) in
          #090A
          #090B
          let:16 a65 = (1 + a60) in
          let:16 a66 = (1 + a65) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a67 = (-1 + a66) in
              M[a67] := 14;
              let:16 a68 = (-1 + a67) in
              M[a68] := 39;
              A := 0F;
              B := 08;
              C := 04;
              D := a64[15:0][15:8];
              E := a64[15:0][7:0];
              H := M[a65];
              L := M[a60];
              SPH := a68[15:8];
              SPL := a68[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := a64[16];
              jump (0008);
            } else {
              let:16 a69 = (-1 + a66) in
              M[a69] := 14;
              let:16 a70 = (-1 + a69) in
              M[a70] := 39;
              A := 0F;
              B := 08;
              C := 04;
              D := a64[15:0][15:8];
              E := a64[15:0][7:0];
              H := M[a65];
              L := M[a60];
              SPH := a70[15:8];
              SPL := a70[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := a64[16];
              jump (0010);
            }
          } else {
            let:16 a71 = (-1 + a66) in
            M[a71] := 08;
            let:16 a72 = (-1 + a71) in
            M[a72] := 04;
            #143A
            #143B
            M[(M[a65],M[a60])] := M[a64[15:0]];
            #143C
            let:16 a73 = (1 + a64[15:0]) in
            #143D
            #1440
            let:17 a74 = add17(0020,(M[a65],M[a60])) in
            #1441
            let:16 a75 = (1 + a72) in
            let:16 a76 = (1 + a75) in
            #1442
            let:16 a77 = addWithCarry(!true,M[a75],~00) in
            let:8 a78 = (M[a75] & 0F) in
            let:8 a79 = (~00 & 0F) in
            let:16 a80 = addWithCarry(!true,a78,a79) in
            #1443
            if (!is_zero(a77[7:0])) {
              A := M[a64[15:0]];
              B := a77[7:0];
              C := M[a72];
              D := a73[15:8];
              E := a73[7:0];
              H := a74[15:0][15:8];
              L := a74[15:0][7:0];
              SPH := a76[15:8];
              SPL := a76[7:0];
              FlagS := a77[7:0][7];
              FlagZ := is_zero(a77[7:0]);
              FlagA := a80[7:0][4];
              FlagP := parity(a77[7:0]);
              FlagCY := a74[16];
              jump (1439);
            } else {
              #1446
              let:16 a81 = (1 + a76) in
              let:16 a82 = (1 + a81) in
              A := M[a64[15:0]];
              B := a77[7:0];
              C := M[a72];
              D := a73[15:8];
              E := a73[7:0];
              H := a74[15:0][15:8];
              L := a74[15:0][7:0];
              SPH := a82[15:8];
              SPL := a82[7:0];
              FlagS := a77[7:0][7];
              FlagZ := is_zero(a77[7:0]);
              FlagA := a80[7:0][4];
              FlagP := parity(a77[7:0]);
              FlagCY := a74[16];
              jump ((M[a81],M[a76]));
            }
          }
        }
      }
    }

0B08:

    #0B0B
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 0E;
    #return-to: 0B0E
    #0ACF
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := CF;
        D := 1D;
        E := AF;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := CF;
        D := 1D;
        E := AF;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AD2
      #0AD4
      #0A93
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := 93;
          C := 0F;
          D := 1D;
          E := AF;
          H := 2B;
          L := 14;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := 93;
          C := 0F;
          D := 1D;
          E := AF;
          H := 2B;
          L := 14;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        let:16 a11 = (-1 + a2) in
        M[a11] := 1D;
        let:16 a12 = (-1 + a11) in
        M[a12] := AF;
        #0A94
        #0A95
        let:16 a13 = (-1 + a12) in
        M[a13] := 0A;
        let:16 a14 = (-1 + a13) in
        M[a14] := 98;
        #return-to: 0A98
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 08;
            let:16 a16 = (-1 + a15) in
            M[a16] := FF;
            A := 12;
            C := 0F;
            D := 1D;
            E := AF;
            H := 2B;
            L := 14;
            SPH := a16[15:8];
            SPL := a16[7:0];
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 08;
            let:16 a18 = (-1 + a17) in
            M[a18] := FF;
            A := 12;
            C := 0F;
            D := 1D;
            E := AF;
            H := 2B;
            L := 14;
            SPH := a18[15:8];
            SPL := a18[7:0];
            jump (0010);
          }
        } else {
          #0902
          let:16 a19 = (-1 + a14) in
          M[a19] := 2B;
          let:16 a20 = (-1 + a19) in
          M[a20] := 14;
          #0903
          #0905
          #0906
          let:17 a21 = add17(0012,0012) in
          #0907
          let:17 a22 = add17(a21[15:0],a21[15:0]) in
          #0908
          let:17 a23 = add17(a22[15:0],a22[15:0]) in
          #0909
          let:17 a24 = add17(1E00,a23[15:0]) in
          #090A
          #090B
          let:16 a25 = (1 + a20) in
          let:16 a26 = (1 + a25) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a27 = (-1 + a26) in
              M[a27] := 14;
              let:16 a28 = (-1 + a27) in
              M[a28] := 39;
              A := 12;
              B := 08;
              C := 0F;
              D := a24[15:0][15:8];
              E := a24[15:0][7:0];
              H := M[a25];
              L := M[a20];
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagCY := a24[16];
              jump (0008);
            } else {
              let:16 a29 = (-1 + a26) in
              M[a29] := 14;
              let:16 a30 = (-1 + a29) in
              M[a30] := 39;
              A := 12;
              B := 08;
              C := 0F;
              D := a24[15:0][15:8];
              E := a24[15:0][7:0];
              H := M[a25];
              L := M[a20];
              SPH := a30[15:8];
              SPL := a30[7:0];
              FlagCY := a24[16];
              jump (0010);
            }
          } else {
            let:16 a31 = (-1 + a26) in
            M[a31] := 08;
            let:16 a32 = (-1 + a31) in
            M[a32] := 0F;
            #143A
            #143B
            M[(M[a25],M[a20])] := M[a24[15:0]];
            #143C
            let:16 a33 = (1 + a24[15:0]) in
            #143D
            #1440
            let:17 a34 = add17(0020,(M[a25],M[a20])) in
            #1441
            let:16 a35 = (1 + a32) in
            let:16 a36 = (1 + a35) in
            #1442
            let:16 a37 = addWithCarry(!true,M[a35],~00) in
            let:8 a38 = (M[a35] & 0F) in
            let:8 a39 = (~00 & 0F) in
            let:16 a40 = addWithCarry(!true,a38,a39) in
            #1443
            if (!is_zero(a37[7:0])) {
              A := M[a24[15:0]];
              B := a37[7:0];
              C := M[a32];
              D := a33[15:8];
              E := a33[7:0];
              H := a34[15:0][15:8];
              L := a34[15:0][7:0];
              SPH := a36[15:8];
              SPL := a36[7:0];
              FlagS := a37[7:0][7];
              FlagZ := is_zero(a37[7:0]);
              FlagA := a40[7:0][4];
              FlagP := parity(a37[7:0]);
              FlagCY := a34[16];
              jump (1439);
            } else {
              #1446
              let:16 a41 = (1 + a36) in
              let:16 a42 = (1 + a41) in
              A := M[a24[15:0]];
              B := a37[7:0];
              C := M[a32];
              D := a33[15:8];
              E := a33[7:0];
              H := a34[15:0][15:8];
              L := a34[15:0][7:0];
              SPH := a42[15:8];
              SPL := a42[7:0];
              FlagS := a37[7:0][7];
              FlagZ := is_zero(a37[7:0]);
              FlagA := a40[7:0][4];
              FlagP := parity(a37[7:0]);
              FlagCY := a34[16];
              jump ((M[a41],M[a36]));
            }
          }
        }
      }
    }

0B0E:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 11;
    #return-to: 0B11
    #0AB1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := B1;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := B1;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AB3
      #0AD7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := D7;
          A := 40;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := D7;
          A := 40;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        M[20C0] := 40;
        #0ADA
        #0ADD
        let:8 a11 = (M[20C0] & M[20C0]) in
        let:8 a12 = (M[20C0] | M[20C0]) in
        #0ADE
        if (!is_zero(a11)) {
          A := a11;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump (0ADA);
        } else {
          #0AE1
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        }
      }
    }

0B11:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 14;
    #return-to: 0B14
    #1815
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := 15;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 18;
        let:16 a6 = (-1 + a5) in
        M[a6] := 15;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1818
      #181B
      #181D
      let:16 a7 = (-1 + a2) in
      M[a7] := 18;
      let:16 a8 = (-1 + a7) in
      M[a8] := 20;
      #return-to: 1820
      #08F3
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 08;
          let:16 a10 = (-1 + a9) in
          M[a10] := F3;
          C := 15;
          D := 1C;
          E := A3;
          H := 28;
          L := 10;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 08;
          let:16 a12 = (-1 + a11) in
          M[a12] := F3;
          C := 15;
          D := 1C;
          E := A3;
          H := 28;
          L := 10;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #08F4
        let:16 a13 = (-1 + a8) in
        M[a13] := 1C;
        let:16 a14 = (-1 + a13) in
        M[a14] := A3;
        #08F5
        let:16 a15 = (-1 + a14) in
        M[a15] := 08;
        let:16 a16 = (-1 + a15) in
        M[a16] := F8;
        #return-to: 08F8
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a17 = (-1 + a16) in
            M[a17] := 08;
            let:16 a18 = (-1 + a17) in
            M[a18] := FF;
            A := 28;
            C := 15;
            D := 1C;
            E := A3;
            H := 28;
            L := 10;
            SPH := a18[15:8];
            SPL := a18[7:0];
            jump (0008);
          } else {
            let:16 a19 = (-1 + a16) in
            M[a19] := 08;
            let:16 a20 = (-1 + a19) in
            M[a20] := FF;
            A := 28;
            C := 15;
            D := 1C;
            E := A3;
            H := 28;
            L := 10;
            SPH := a20[15:8];
            SPL := a20[7:0];
            jump (0010);
          }
        } else {
          #0902
          let:16 a21 = (-1 + a16) in
          M[a21] := 28;
          let:16 a22 = (-1 + a21) in
          M[a22] := 10;
          #0903
          #0905
          #0906
          let:17 a23 = add17(0028,0028) in
          #0907
          let:17 a24 = add17(a23[15:0],a23[15:0]) in
          #0908
          let:17 a25 = add17(a24[15:0],a24[15:0]) in
          #0909
          let:17 a26 = add17(1E00,a25[15:0]) in
          #090A
          #090B
          let:16 a27 = (1 + a22) in
          let:16 a28 = (1 + a27) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a29 = (-1 + a28) in
              M[a29] := 14;
              let:16 a30 = (-1 + a29) in
              M[a30] := 39;
              A := 28;
              B := 08;
              C := 15;
              D := a26[15:0][15:8];
              E := a26[15:0][7:0];
              H := M[a27];
              L := M[a22];
              SPH := a30[15:8];
              SPL := a30[7:0];
              FlagCY := a26[16];
              jump (0008);
            } else {
              let:16 a31 = (-1 + a28) in
              M[a31] := 14;
              let:16 a32 = (-1 + a31) in
              M[a32] := 39;
              A := 28;
              B := 08;
              C := 15;
              D := a26[15:0][15:8];
              E := a26[15:0][7:0];
              H := M[a27];
              L := M[a22];
              SPH := a32[15:8];
              SPL := a32[7:0];
              FlagCY := a26[16];
              jump (0010);
            }
          } else {
            let:16 a33 = (-1 + a28) in
            M[a33] := 08;
            let:16 a34 = (-1 + a33) in
            M[a34] := 15;
            #143A
            #143B
            M[(M[a27],M[a22])] := M[a26[15:0]];
            #143C
            let:16 a35 = (1 + a26[15:0]) in
            #143D
            #1440
            let:17 a36 = add17(0020,(M[a27],M[a22])) in
            #1441
            let:16 a37 = (1 + a34) in
            let:16 a38 = (1 + a37) in
            #1442
            let:16 a39 = addWithCarry(!true,M[a37],~00) in
            let:8 a40 = (M[a37] & 0F) in
            let:8 a41 = (~00 & 0F) in
            let:16 a42 = addWithCarry(!true,a40,a41) in
            #1443
            if (!is_zero(a39[7:0])) {
              A := M[a26[15:0]];
              B := a39[7:0];
              C := M[a34];
              D := a35[15:8];
              E := a35[7:0];
              H := a36[15:0][15:8];
              L := a36[15:0][7:0];
              SPH := a38[15:8];
              SPL := a38[7:0];
              FlagS := a39[7:0][7];
              FlagZ := is_zero(a39[7:0]);
              FlagA := a42[7:0][4];
              FlagP := parity(a39[7:0]);
              FlagCY := a36[16];
              jump (1439);
            } else {
              #1446
              let:16 a43 = (1 + a38) in
              let:16 a44 = (1 + a43) in
              A := M[a26[15:0]];
              B := a39[7:0];
              C := M[a34];
              D := a35[15:8];
              E := a35[7:0];
              H := a36[15:0][15:8];
              L := a36[15:0][7:0];
              SPH := a44[15:8];
              SPL := a44[7:0];
              FlagS := a39[7:0][7];
              FlagZ := is_zero(a39[7:0]);
              FlagA := a42[7:0][4];
              FlagP := parity(a39[7:0]);
              FlagCY := a36[16];
              jump ((M[a43],M[a38]));
            }
          }
        }
      }
    }

0B14:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 17;
    #return-to: 0B17
    #0AB6
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := B6;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := B6;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AB8
      #0AD7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := D7;
          A := 80;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := D7;
          A := 80;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        M[20C0] := 80;
        #0ADA
        #0ADD
        let:8 a11 = (M[20C0] & M[20C0]) in
        let:8 a12 = (M[20C0] | M[20C0]) in
        #0ADE
        if (!is_zero(a11)) {
          A := a11;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump (0ADA);
        } else {
          #0AE1
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        }
      }
    }

0B17:

    #0B1A
    let:8 a1 = (M[20EC] & M[20EC]) in
    let:8 a2 = (M[20EC] | M[20EC]) in
    #0B1B
    if (!is_zero(a1)) {
      A := a1;
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump (0B4A);
    } else {
      #0B1E
      #0B21
      let:16 a3 = (-1 + (SPH,SPL)) in
      M[a3] := 0B;
      let:16 a4 = (-1 + a3) in
      M[a4] := 24;
      #return-to: 0B24
      #0AE2
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + a4) in
          M[a5] := 0A;
          let:16 a6 = (-1 + a5) in
          M[a6] := E2;
          A := a1;
          D := 1A;
          E := 95;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a7 = (-1 + a4) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := E2;
          A := a1;
          D := 1A;
          E := 95;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #0AE5
        #0AE7
        #1A32
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a4) in
            M[a9] := 1A;
            let:16 a10 = (-1 + a9) in
            M[a10] := 32;
            A := a1;
            B := 0C;
            D := 1A;
            E := 95;
            H := 20;
            L := C2;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a11 = (-1 + a4) in
            M[a11] := 1A;
            let:16 a12 = (-1 + a11) in
            M[a12] := 32;
            A := a1;
            B := 0C;
            D := 1A;
            E := 95;
            H := 20;
            L := C2;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #1A33
          M[20C2] := 00;
          #1A34
          #1A35
          #1A36
          let:16 a13 = addWithCarry(!true,0C,~00) in
          let:8 a14 = (0C & 0F) in
          let:8 a15 = (~00 & 0F) in
          let:16 a16 = addWithCarry(!true,a14,a15) in
          #1A37
          if (!is_zero(a13[7:0])) {
            A := 00;
            B := a13[7:0];
            D := 1A;
            E := 96;
            H := 20;
            L := C3;
            SPH := a4[15:8];
            SPL := a4[7:0];
            FlagS := a13[7:0][7];
            FlagZ := is_zero(a13[7:0]);
            FlagA := a16[7:0][4];
            FlagP := parity(a13[7:0]);
            FlagCY := false;
            jump (1A32);
          } else {
            #1A3A
            let:16 a17 = (1 + a4) in
            let:16 a18 = (1 + a17) in
            A := 00;
            B := a13[7:0];
            D := 1A;
            E := 96;
            H := 20;
            L := C3;
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a13[7:0][7];
            FlagZ := is_zero(a13[7:0]);
            FlagA := a16[7:0][4];
            FlagP := parity(a13[7:0]);
            FlagCY := false;
            jump ((M[a17],M[a4]));
          }
        }
      }
    }

0B24:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 27;
    #return-to: 0B27
    #0A80
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 80;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 80;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0A82
      M[20C1] := 02;
      #0A85
      #0A87
      #0A8A
      let:8 a7 = (M[20CB] & M[20CB]) in
      let:8 a8 = (M[20CB] | M[20CB]) in
      #0A8B
      if (is_zero(a7)) {
        A := a7;
        SPH := a2[15:8];
        SPL := a2[7:0];
        FlagS := a7[7];
        FlagZ := is_zero(a7);
        FlagA := a8[3];
        FlagP := parity(a7);
        FlagCY := false;
        jump (0A85);
      } else {
        #0A8E
        let:8 a9 = (a7 ^ a7) in
        #0A8F
        M[20C1] := a9;
        #0A92
        let:16 a10 = (1 + a2) in
        let:16 a11 = (1 + a10) in
        A := a9;
        SPH := a11[15:8];
        SPL := a11[7:0];
        FlagS := a9[7];
        FlagZ := is_zero(a9);
        FlagA := false;
        FlagP := parity(a9);
        FlagCY := false;
        jump ((M[a10],M[a2]));
      }
    }

0B27:

    #0B2A
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 2D;
    #return-to: 0B2D
    #0AE2
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := E2;
        D := 1B;
        E := B0;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := E2;
        D := 1B;
        E := B0;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AE5
      #0AE7
      #1A32
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 1A;
          let:16 a8 = (-1 + a7) in
          M[a8] := 32;
          B := 0C;
          D := 1B;
          E := B0;
          H := 20;
          L := C2;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 1A;
          let:16 a10 = (-1 + a9) in
          M[a10] := 32;
          B := 0C;
          D := 1B;
          E := B0;
          H := 20;
          L := C2;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1A33
        M[20C2] := 00;
        #1A34
        #1A35
        #1A36
        let:16 a11 = addWithCarry(!true,0C,~00) in
        let:8 a12 = (0C & 0F) in
        let:8 a13 = (~00 & 0F) in
        let:16 a14 = addWithCarry(!true,a12,a13) in
        #1A37
        if (!is_zero(a11[7:0])) {
          A := 00;
          B := a11[7:0];
          D := 1B;
          E := B1;
          H := 20;
          L := C3;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump (1A32);
        } else {
          #1A3A
          let:16 a15 = (1 + a2) in
          let:16 a16 = (1 + a15) in
          A := 00;
          B := a11[7:0];
          D := 1B;
          E := B1;
          H := 20;
          L := C3;
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump ((M[a15],M[a2]));
        }
      }
    }

0B2D:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 30;
    #return-to: 0B30
    #0A80
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 80;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 80;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0A82
      M[20C1] := 02;
      #0A85
      #0A87
      #0A8A
      let:8 a7 = (M[20CB] & M[20CB]) in
      let:8 a8 = (M[20CB] | M[20CB]) in
      #0A8B
      if (is_zero(a7)) {
        A := a7;
        SPH := a2[15:8];
        SPL := a2[7:0];
        FlagS := a7[7];
        FlagZ := is_zero(a7);
        FlagA := a8[3];
        FlagP := parity(a7);
        FlagCY := false;
        jump (0A85);
      } else {
        #0A8E
        let:8 a9 = (a7 ^ a7) in
        #0A8F
        M[20C1] := a9;
        #0A92
        let:16 a10 = (1 + a2) in
        let:16 a11 = (1 + a10) in
        A := a9;
        SPH := a11[15:8];
        SPL := a11[7:0];
        FlagS := a9[7];
        FlagZ := is_zero(a9);
        FlagA := false;
        FlagP := parity(a9);
        FlagCY := false;
        jump ((M[a10],M[a2]));
      }
    }

0B30:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 33;
    #return-to: 0B33
    #0AB1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := B1;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := B1;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AB3
      #0AD7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := D7;
          A := 40;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := D7;
          A := 40;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        M[20C0] := 40;
        #0ADA
        #0ADD
        let:8 a11 = (M[20C0] & M[20C0]) in
        let:8 a12 = (M[20C0] | M[20C0]) in
        #0ADE
        if (!is_zero(a11)) {
          A := a11;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump (0ADA);
        } else {
          #0AE1
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        }
      }
    }

0B33:

    #0B36
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 39;
    #return-to: 0B39
    #0AE2
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := E2;
        D := 1F;
        E := C9;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := E2;
        D := 1F;
        E := C9;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AE5
      #0AE7
      #1A32
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 1A;
          let:16 a8 = (-1 + a7) in
          M[a8] := 32;
          B := 0C;
          D := 1F;
          E := C9;
          H := 20;
          L := C2;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 1A;
          let:16 a10 = (-1 + a9) in
          M[a10] := 32;
          B := 0C;
          D := 1F;
          E := C9;
          H := 20;
          L := C2;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1A33
        M[20C2] := 00;
        #1A34
        #1A35
        #1A36
        let:16 a11 = addWithCarry(!true,0C,~00) in
        let:8 a12 = (0C & 0F) in
        let:8 a13 = (~00 & 0F) in
        let:16 a14 = addWithCarry(!true,a12,a13) in
        #1A37
        if (!is_zero(a11[7:0])) {
          A := 00;
          B := a11[7:0];
          D := 1F;
          E := CA;
          H := 20;
          L := C3;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump (1A32);
        } else {
          #1A3A
          let:16 a15 = (1 + a2) in
          let:16 a16 = (1 + a15) in
          A := 00;
          B := a11[7:0];
          D := 1F;
          E := CA;
          H := 20;
          L := C3;
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump ((M[a15],M[a2]));
        }
      }
    }

0B39:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 3C;
    #return-to: 0B3C
    #0A80
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 80;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 80;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0A82
      M[20C1] := 02;
      #0A85
      #0A87
      #0A8A
      let:8 a7 = (M[20CB] & M[20CB]) in
      let:8 a8 = (M[20CB] | M[20CB]) in
      #0A8B
      if (is_zero(a7)) {
        A := a7;
        SPH := a2[15:8];
        SPL := a2[7:0];
        FlagS := a7[7];
        FlagZ := is_zero(a7);
        FlagA := a8[3];
        FlagP := parity(a7);
        FlagCY := false;
        jump (0A85);
      } else {
        #0A8E
        let:8 a9 = (a7 ^ a7) in
        #0A8F
        M[20C1] := a9;
        #0A92
        let:16 a10 = (1 + a2) in
        let:16 a11 = (1 + a10) in
        A := a9;
        SPH := a11[15:8];
        SPL := a11[7:0];
        FlagS := a9[7];
        FlagZ := is_zero(a9);
        FlagA := false;
        FlagP := parity(a9);
        FlagCY := false;
        jump ((M[a10],M[a2]));
      }
    }

0B3C:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 3F;
    #return-to: 0B3F
    #0AB1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := B1;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := B1;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AB3
      #0AD7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := D7;
          A := 40;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := D7;
          A := 40;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        M[20C0] := 40;
        #0ADA
        #0ADD
        let:8 a11 = (M[20C0] & M[20C0]) in
        let:8 a12 = (M[20C0] | M[20C0]) in
        #0ADE
        if (!is_zero(a11)) {
          A := a11;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump (0ADA);
        } else {
          #0AE1
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        }
      }
    }

0B3F:

    #0B42
    #0B44
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 47;
    #return-to: 0B47
    #14CB
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 14;
        let:16 a4 = (-1 + a3) in
        M[a4] := CB;
        B := 0A;
        H := 33;
        L := B7;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 14;
        let:16 a6 = (-1 + a5) in
        M[a6] := CB;
        B := 0A;
        H := 33;
        L := B7;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:8 a7 = (A ^ A) in
      #14CC
      let:16 a8 = (-1 + a2) in
      M[a8] := 0A;
      let:16 a9 = (-1 + a8) in
      M[a9] := C;
      #14CD
      M[33B7] := a7;
      #14CE
      #14D1
      let:17 a10 = add17(0020,33B7) in
      #14D2
      let:16 a11 = (1 + a9) in
      let:16 a12 = (1 + a11) in
      #14D3
      let:16 a13 = addWithCarry(!true,M[a11],~00) in
      let:8 a14 = (M[a11] & 0F) in
      let:8 a15 = (~00 & 0F) in
      let:16 a16 = addWithCarry(!true,a14,a15) in
      #14D4
      if (!is_zero(a13[7:0])) {
        A := a7;
        B := a13[7:0];
        C := M[a9];
        H := a10[15:0][15:8];
        L := a10[15:0][7:0];
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a13[7:0][7];
        FlagZ := is_zero(a13[7:0]);
        FlagA := a16[7:0][4];
        FlagP := parity(a13[7:0]);
        FlagCY := a10[16];
        jump (14CC);
      } else {
        #14D7
        let:16 a17 = (1 + a12) in
        let:16 a18 = (1 + a17) in
        A := a7;
        B := a13[7:0];
        C := M[a9];
        H := a10[15:0][15:8];
        L := a10[15:0][7:0];
        SPH := a18[15:8];
        SPL := a18[7:0];
        FlagS := a13[7:0][7];
        FlagZ := is_zero(a13[7:0]);
        FlagA := a16[7:0][4];
        FlagP := parity(a13[7:0]);
        FlagCY := a10[16];
        jump ((M[a17],M[a12]));
      }
    }

0B47:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 4A;
    #return-to: 0B4A
    #0AB6
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := B6;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := B6;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AB8
      #0AD7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := D7;
          A := 80;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := D7;
          A := 80;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        M[20C0] := 80;
        #0ADA
        #0ADD
        let:8 a11 = (M[20C0] & M[20C0]) in
        let:8 a12 = (M[20C0] | M[20C0]) in
        #0ADE
        if (!is_zero(a11)) {
          A := a11;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump (0ADA);
        } else {
          #0AE1
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        }
      }
    }

0B4A:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 4D;
    #return-to: 0B4D
    #09D6
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 09;
        let:16 a4 = (-1 + a3) in
        M[a4] := D6;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 09;
        let:16 a6 = (-1 + a5) in
        M[a6] := D6;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #09D9
      M[2402] := 00;
      #09DB
      #09DC
      #09DD
      let:8 a7 = (1F & 03) in
      let:8 a8 = (1F | 03) in
      #09DF
      let:16 a9 = addWithCarry(!false,a7,~1C) in
      let:8 a10 = (a7 & 0F) in
      let:8 a11 = (~1C & 0F) in
      let:16 a12 = addWithCarry(!false,a10,a11) in
      #09E1
      if (!a9[15:8][0]) {
        #09E8
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + a2) in
            M[a13] := 09;
            let:16 a14 = (-1 + a13) in
            M[a14] := E8;
            A := a7;
            H := 24;
            L := 03;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a9[7:0][7];
            FlagZ := is_zero(a9[7:0]);
            FlagA := a12[7:0][4];
            FlagP := parity(a9[7:0]);
            FlagCY := !a9[15:8][0];
            jump (0008);
          } else {
            let:16 a15 = (-1 + a2) in
            M[a15] := 09;
            let:16 a16 = (-1 + a15) in
            M[a16] := E8;
            A := a7;
            H := 24;
            L := 03;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a9[7:0][7];
            FlagZ := is_zero(a9[7:0]);
            FlagA := a12[7:0][4];
            FlagP := parity(a9[7:0]);
            FlagCY := !a9[15:8][0];
            jump (0010);
          }
        } else {
          #09E9
          let:16 a17 = addWithCarry(!false,24,~40) in
          let:8 a18 = (24 & 0F) in
          let:8 a19 = (~40 & 0F) in
          let:16 a20 = addWithCarry(!false,a18,a19) in
          #09EB
          if (!a17[15:8][0]) {
            A := 24;
            H := 24;
            L := 03;
            SPH := a2[15:8];
            SPL := a2[7:0];
            FlagS := a17[7:0][7];
            FlagZ := is_zero(a17[7:0]);
            FlagA := a20[7:0][4];
            FlagP := parity(a17[7:0]);
            FlagCY := !a17[15:8][0];
            jump (09D9);
          } else {
            #09EE
            let:16 a21 = (1 + a2) in
            let:16 a22 = (1 + a21) in
            A := 24;
            H := 24;
            L := 03;
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a17[7:0][7];
            FlagZ := is_zero(a17[7:0]);
            FlagA := a20[7:0][4];
            FlagP := parity(a17[7:0]);
            FlagCY := !a17[15:8][0];
            jump ((M[a21],M[a2]));
          }
        }
      } else {
        #09E4
        #09E7
        let:17 a23 = add17(0006,2403) in
        #09E8
        #09E9
        let:16 a24 = addWithCarry(!false,a23[15:0][15:8],~40) in
        let:8 a25 = (a23[15:0][15:8] & 0F) in
        let:8 a26 = (~40 & 0F) in
        let:16 a27 = addWithCarry(!false,a25,a26) in
        #09EB
        if (!a24[15:8][0]) {
          A := a23[15:0][15:8];
          D := 00;
          E := 06;
          H := a23[15:0][15:8];
          L := a23[15:0][7:0];
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a24[7:0][7];
          FlagZ := is_zero(a24[7:0]);
          FlagA := a27[7:0][4];
          FlagP := parity(a24[7:0]);
          FlagCY := !a24[15:8][0];
          jump (09D9);
        } else {
          #09EE
          let:16 a28 = (1 + a2) in
          let:16 a29 = (1 + a28) in
          A := a23[15:0][15:8];
          D := 00;
          E := 06;
          H := a23[15:0][15:8];
          L := a23[15:0][7:0];
          SPH := a29[15:8];
          SPL := a29[7:0];
          FlagS := a24[7:0][7];
          FlagZ := is_zero(a24[7:0]);
          FlagA := a27[7:0][4];
          FlagP := parity(a24[7:0]);
          FlagCY := !a24[15:8][0];
          jump ((M[a28],M[a2]));
        }
      }
    }

0B4D:

    #0B50
    let:8 a1 = (M[21FF] & M[21FF]) in
    let:8 a2 = (M[21FF] | M[21FF]) in
    #0B51
    if (!is_zero(a1)) {
      A := a1;
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump (0B5D);
    } else {
      #0B54
      let:16 a3 = (-1 + (SPH,SPL)) in
      M[a3] := 0B;
      let:16 a4 = (-1 + a3) in
      M[a4] := 57;
      #return-to: 0B57
      #08D1
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + a4) in
          M[a5] := 08;
          let:16 a6 = (-1 + a5) in
          M[a6] := D1;
          A := a1;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a7 = (-1 + a4) in
          M[a7] := 08;
          let:16 a8 = (-1 + a7) in
          M[a8] := D1;
          A := a1;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #08D3
        let:8 a9 = (03 & updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))) in
        let:8 a10 = (03 | updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))) in
        #08D5
        let:16 a11 = addWithCarry(false,03,a9) in
        let:8 a12 = (03 & 0F) in
        let:8 a13 = (a9 & 0F) in
        let:16 a14 = addWithCarry(false,a12,a13) in
        #08D7
        let:16 a15 = (1 + a4) in
        let:16 a16 = (1 + a15) in
        A := a11[7:0];
        SPH := a16[15:8];
        SPL := a16[7:0];
        FlagS := a11[7:0][7];
        FlagZ := is_zero(a11[7:0]);
        FlagA := a14[7:0][4];
        FlagP := parity(a11[7:0]);
        FlagCY := a11[15:8][0];
        jump ((M[a15],M[a4]));
      }
    }

0B57:

    M[21FF] := A;
    #0B5A
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 5D;
    #return-to: 0B5D
    #1A7F
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 1A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 7F;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 1A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 7F;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 1A;
      let:16 a8 = (-1 + a7) in
      M[a8] := 82;
      #return-to: 1A82
      #092E
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 09;
          let:16 a10 = (-1 + a9) in
          M[a10] := 2E;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 09;
          let:16 a12 = (-1 + a11) in
          M[a12] := 2E;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        let:16 a13 = (-1 + a8) in
        M[a13] := 09;
        let:16 a14 = (-1 + a13) in
        M[a14] := 31;
        #return-to: 0931
        #1611
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 16;
            let:16 a16 = (-1 + a15) in
            M[a16] := 11;
            SPH := a16[15:8];
            SPL := a16[7:0];
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 16;
            let:16 a18 = (-1 + a17) in
            M[a18] := 11;
            SPH := a18[15:8];
            SPL := a18[7:0];
            jump (0010);
          }
        } else {
          #1613
          #1616
          #1617
          let:16 a19 = (1 + a14) in
          let:16 a20 = (1 + a19) in
          A := M[2067];
          H := M[2067];
          L := 00;
          SPH := a20[15:8];
          SPL := a20[7:0];
          jump ((M[a19],M[a14]));
        }
      }
    }

0B5D:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 60;
    #return-to: 0B60
    #01E4
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 01;
        let:16 a4 = (-1 + a3) in
        M[a4] := E4;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 01;
        let:16 a6 = (-1 + a5) in
        M[a6] := E4;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #01E6
      #01E9
      #01EC
      #1A32
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 1A;
          let:16 a8 = (-1 + a7) in
          M[a8] := 32;
          B := C0;
          D := 1B;
          E := 00;
          H := 20;
          L := 00;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 1A;
          let:16 a10 = (-1 + a9) in
          M[a10] := 32;
          B := C0;
          D := 1B;
          E := 00;
          H := 20;
          L := 00;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1A33
        M[2000] := 01;
        #1A34
        #1A35
        #1A36
        let:16 a11 = addWithCarry(!true,C0,~00) in
        let:8 a12 = (C0 & 0F) in
        let:8 a13 = (~00 & 0F) in
        let:16 a14 = addWithCarry(!true,a12,a13) in
        #1A37
        if (!is_zero(a11[7:0])) {
          A := 01;
          B := a11[7:0];
          D := 1B;
          E := 01;
          H := 20;
          L := 01;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump (1A32);
        } else {
          #1A3A
          let:16 a15 = (1 + a2) in
          let:16 a16 = (1 + a15) in
          A := 01;
          B := a11[7:0];
          D := 1B;
          E := 01;
          H := 20;
          L := 01;
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          jump ((M[a15],M[a2]));
        }
      }
    }

0B60:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 63;
    #return-to: 0B63
    #01C0
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 01;
        let:16 a4 = (-1 + a3) in
        M[a4] := C0;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 01;
        let:16 a6 = (-1 + a5) in
        M[a6] := C0;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #01C3
      #01C5
      M[2100] := 01;
      #01C7
      #01C8
      let:16 a7 = addWithCarry(!true,37,~00) in
      let:8 a8 = (37 & 0F) in
      let:8 a9 = (~00 & 0F) in
      let:16 a10 = addWithCarry(!true,a8,a9) in
      #01C9
      if (!is_zero(a7[7:0])) {
        B := a7[7:0];
        H := 21;
        L := 01;
        SPH := a2[15:8];
        SPL := a2[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        jump (01C5);
      } else {
        #01CC
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        B := a7[7:0];
        H := 21;
        L := 01;
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        jump ((M[a11],M[a2]));
      }
    }

0B63:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 66;
    #return-to: 0B66
    #01EF
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 01;
        let:16 a4 = (-1 + a3) in
        M[a4] := EF;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 01;
        let:16 a6 = (-1 + a5) in
        M[a6] := EF;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #01F2
      #01F8
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 01;
          let:16 a8 = (-1 + a7) in
          M[a8] := F8;
          H := 21;
          L := 42;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 01;
          let:16 a10 = (-1 + a9) in
          M[a10] := F8;
          H := 21;
          L := 42;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #01FA
        #01FD
        let:16 a11 = (-1 + a2) in
        M[a11] := 1D;
        let:16 a12 = (-1 + a11) in
        M[a12] := 20;
        #01FE
        #0200
        let:16 a13 = (-1 + a12) in
        M[a13] := 02;
        let:16 a14 = (-1 + a13) in
        M[a14] := 03;
        #return-to: 0203
        #1A32
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 32;
            B := 2C;
            C := 04;
            D := 1D;
            E := 20;
            H := 21;
            L := 42;
            SPH := a16[15:8];
            SPL := a16[7:0];
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 1A;
            let:16 a18 = (-1 + a17) in
            M[a18] := 32;
            B := 2C;
            C := 04;
            D := 1D;
            E := 20;
            H := 21;
            L := 42;
            SPH := a18[15:8];
            SPL := a18[7:0];
            jump (0010);
          }
        } else {
          #1A33
          M[2142] := FF;
          #1A34
          #1A35
          #1A36
          let:16 a19 = addWithCarry(!true,2C,~00) in
          let:8 a20 = (2C & 0F) in
          let:8 a21 = (~00 & 0F) in
          let:16 a22 = addWithCarry(!true,a20,a21) in
          #1A37
          if (!is_zero(a19[7:0])) {
            A := FF;
            B := a19[7:0];
            C := 04;
            D := 1D;
            E := 21;
            H := 21;
            L := 43;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            jump (1A32);
          } else {
            #1A3A
            let:16 a23 = (1 + a14) in
            let:16 a24 = (1 + a23) in
            A := FF;
            B := a19[7:0];
            C := 04;
            D := 1D;
            E := 21;
            H := 21;
            L := 43;
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            jump ((M[a23],M[a14]));
          }
        }
      }
    }

0B66:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 69;
    #return-to: 0B69
    #021A
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 02;
        let:16 a4 = (-1 + a3) in
        M[a4] := 1A;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 02;
        let:16 a6 = (-1 + a5) in
        M[a6] := 1A;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:8 a7 = (A ^ A) in
      #021B
      #021E
      M[2081] := a7;
      #0221
      #0224
      #0227
      #0229
      let:16 a8 = (-1 + a2) in
      M[a8] := 04;
      let:16 a9 = (-1 + a8) in
      M[a9] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a7[7]),6,is_zero(a7)),4,false),2,parity(a7)),0,false);
      #022A
      let:16 a10 = (-1 + a9) in
      M[a10] := 16;
      let:16 a11 = (-1 + a10) in
      M[a11] := 02;
      #022B
      #022E
      let:8 a12 = (M[2081] & M[2081]) in
      let:8 a13 = (M[2081] | M[2081]) in
      #022F
      if (!is_zero(a12)) {
        #0242
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a14 = (-1 + a11) in
            M[a14] := 02;
            let:16 a15 = (-1 + a14) in
            M[a15] := 42;
            A := a12;
            B := 16;
            C := 02;
            D := 21;
            E := 42;
            H := 28;
            L := 06;
            SPH := a15[15:8];
            SPL := a15[7:0];
            FlagS := a12[7];
            FlagZ := is_zero(a12);
            FlagA := a13[3];
            FlagP := parity(a12);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a16 = (-1 + a11) in
            M[a16] := 02;
            let:16 a17 = (-1 + a16) in
            M[a17] := 42;
            A := a12;
            B := 16;
            C := 02;
            D := 21;
            E := 42;
            H := 28;
            L := 06;
            SPH := a17[15:8];
            SPL := a17[7:0];
            FlagS := a12[7];
            FlagZ := is_zero(a12);
            FlagA := a13[3];
            FlagP := parity(a12);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a18 = (-1 + a11) in
          M[a18] := 02;
          let:16 a19 = (-1 + a18) in
          M[a19] := 45;
          #return-to: 0245
          #147C
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a20 = (-1 + a19) in
              M[a20] := 14;
              let:16 a21 = (-1 + a20) in
              M[a21] := 7C;
              A := a12;
              B := 16;
              C := 02;
              D := 21;
              E := 42;
              H := 28;
              L := 06;
              SPH := a21[15:8];
              SPL := a21[7:0];
              FlagS := a12[7];
              FlagZ := is_zero(a12);
              FlagA := a13[3];
              FlagP := parity(a12);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a22 = (-1 + a19) in
              M[a22] := 14;
              let:16 a23 = (-1 + a22) in
              M[a23] := 7C;
              A := a12;
              B := 16;
              C := 02;
              D := 21;
              E := 42;
              H := 28;
              L := 06;
              SPH := a23[15:8];
              SPL := a23[7:0];
              FlagS := a12[7];
              FlagZ := is_zero(a12);
              FlagA := a13[3];
              FlagP := parity(a12);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a24 = (-1 + a19) in
            M[a24] := 16;
            let:16 a25 = (-1 + a24) in
            M[a25] := 02;
            #147D
            let:16 a26 = (-1 + a25) in
            M[a26] := 28;
            let:16 a27 = (-1 + a26) in
            M[a27] := 06;
            #147E
            #147F
            M[2142] := M[2806];
            #1480
            #1481
            #1482
            let:16 a28 = addWithCarry(!true,02,~00) in
            let:8 a29 = (02 & 0F) in
            let:8 a30 = (~00 & 0F) in
            let:16 a31 = addWithCarry(!true,a29,a30) in
            #1483
            if (!is_zero(a28[7:0])) {
              A := M[2806];
              B := 16;
              C := a28[7:0];
              D := 21;
              E := 43;
              H := 28;
              L := 07;
              SPH := a27[15:8];
              SPL := a27[7:0];
              FlagS := a28[7:0][7];
              FlagZ := is_zero(a28[7:0]);
              FlagA := a31[7:0][4];
              FlagP := parity(a28[7:0]);
              FlagCY := false;
              jump (147E);
            } else {
              #1486
              let:16 a32 = (1 + a27) in
              let:16 a33 = (1 + a32) in
              #1487
              #148A
              let:17 a34 = add17(0020,(M[a32],M[a27])) in
              #148B
              let:16 a35 = (1 + a33) in
              let:16 a36 = (1 + a35) in
              #148C
              let:16 a37 = addWithCarry(!true,M[a35],~00) in
              let:8 a38 = (M[a35] & 0F) in
              let:8 a39 = (~00 & 0F) in
              let:16 a40 = addWithCarry(!true,a38,a39) in
              #148D
              if (!is_zero(a37[7:0])) {
                A := M[2806];
                B := a37[7:0];
                C := M[a33];
                D := 21;
                E := 43;
                H := a34[15:0][15:8];
                L := a34[15:0][7:0];
                SPH := a36[15:8];
                SPL := a36[7:0];
                FlagS := a37[7:0][7];
                FlagZ := is_zero(a37[7:0]);
                FlagA := a40[7:0][4];
                FlagP := parity(a37[7:0]);
                FlagCY := a34[16];
                jump (147C);
              } else {
                #1490
                let:16 a41 = (1 + a36) in
                let:16 a42 = (1 + a41) in
                A := M[2806];
                B := a37[7:0];
                C := M[a33];
                D := 21;
                E := 43;
                H := a34[15:0][15:8];
                L := a34[15:0][7:0];
                SPH := a42[15:8];
                SPL := a42[7:0];
                FlagS := a37[7:0][7];
                FlagZ := is_zero(a37[7:0]);
                FlagA := a40[7:0][4];
                FlagP := parity(a37[7:0]);
                FlagCY := a34[16];
                jump ((M[a41],M[a36]));
              }
            }
          }
        }
      } else {
        #0232
        let:16 a43 = (-1 + a11) in
        M[a43] := 02;
        let:16 a44 = (-1 + a43) in
        M[a44] := 35;
        #return-to: 0235
        #1A69
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a45 = (-1 + a44) in
            M[a45] := 1A;
            let:16 a46 = (-1 + a45) in
            M[a46] := 69;
            A := a12;
            B := 16;
            C := 02;
            D := 21;
            E := 42;
            H := 28;
            L := 06;
            SPH := a46[15:8];
            SPL := a46[7:0];
            FlagS := a12[7];
            FlagZ := is_zero(a12);
            FlagA := a13[3];
            FlagP := parity(a12);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a47 = (-1 + a44) in
            M[a47] := 1A;
            let:16 a48 = (-1 + a47) in
            M[a48] := 69;
            A := a12;
            B := 16;
            C := 02;
            D := 21;
            E := 42;
            H := 28;
            L := 06;
            SPH := a48[15:8];
            SPL := a48[7:0];
            FlagS := a12[7];
            FlagZ := is_zero(a12);
            FlagA := a13[3];
            FlagP := parity(a12);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a49 = (-1 + a44) in
          M[a49] := 16;
          let:16 a50 = (-1 + a49) in
          M[a50] := 02;
          #1A6A
          let:16 a51 = (-1 + a50) in
          M[a51] := 28;
          let:16 a52 = (-1 + a51) in
          M[a52] := 06;
          #1A6B
          #1A6C
          let:8 a53 = (M[2806] | M[2142]) in
          #1A6D
          M[2806] := a53;
          #1A6E
          #1A6F
          #1A70
          let:16 a54 = addWithCarry(!true,02,~00) in
          let:8 a55 = (02 & 0F) in
          let:8 a56 = (~00 & 0F) in
          let:16 a57 = addWithCarry(!true,a55,a56) in
          #1A71
          if (!is_zero(a54[7:0])) {
            A := a53;
            B := 16;
            C := a54[7:0];
            D := 21;
            E := 43;
            H := 28;
            L := 07;
            SPH := a52[15:8];
            SPL := a52[7:0];
            FlagS := a54[7:0][7];
            FlagZ := is_zero(a54[7:0]);
            FlagA := a57[7:0][4];
            FlagP := parity(a54[7:0]);
            FlagCY := false;
            jump (1A6B);
          } else {
            #1A74
            let:16 a58 = (1 + a52) in
            let:16 a59 = (1 + a58) in
            #1A75
            #1A78
            let:17 a60 = add17(0020,(M[a58],M[a52])) in
            #1A79
            let:16 a61 = (1 + a59) in
            let:16 a62 = (1 + a61) in
            #1A7A
            let:16 a63 = addWithCarry(!true,M[a61],~00) in
            let:8 a64 = (M[a61] & 0F) in
            let:8 a65 = (~00 & 0F) in
            let:16 a66 = addWithCarry(!true,a64,a65) in
            #1A7B
            if (!is_zero(a63[7:0])) {
              A := a53;
              B := a63[7:0];
              C := M[a59];
              D := 21;
              E := 43;
              H := a60[15:0][15:8];
              L := a60[15:0][7:0];
              SPH := a62[15:8];
              SPL := a62[7:0];
              FlagS := a63[7:0][7];
              FlagZ := is_zero(a63[7:0]);
              FlagA := a66[7:0][4];
              FlagP := parity(a63[7:0]);
              FlagCY := a60[16];
              jump (1A69);
            } else {
              #1A7E
              let:16 a67 = (1 + a62) in
              let:16 a68 = (1 + a67) in
              A := a53;
              B := a63[7:0];
              C := M[a59];
              D := 21;
              E := 43;
              H := a60[15:0][15:8];
              L := a60[15:0][7:0];
              SPH := a68[15:8];
              SPL := a68[7:0];
              FlagS := a63[7:0][7];
              FlagZ := is_zero(a63[7:0]);
              FlagA := a66[7:0][4];
              FlagP := parity(a63[7:0]);
              FlagCY := a60[16];
              jump ((M[a67],M[a62]));
            }
          }
        }
      }
    }

0B69:

    #0B6B
    M[20C1] := 01;
    #0B6E
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 71;
    #return-to: 0B71
    #01CF
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 01;
        let:16 a4 = (-1 + a3) in
        M[a4] := CF;
        A := 01;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 01;
        let:16 a6 = (-1 + a5) in
        M[a6] := CF;
        A := 01;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #01D1
      #01D3
      #01D6
      #14CC
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 14;
          let:16 a8 = (-1 + a7) in
          M[a8] := CC;
          A := 01;
          B := E0;
          H := 24;
          L := 02;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := CC;
          A := 01;
          B := E0;
          H := 24;
          L := 02;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        let:16 a11 = (-1 + a2) in
        M[a11] := E0;
        let:16 a12 = (-1 + a11) in
        M[a12] := C;
        #14CD
        M[2402] := 01;
        #14CE
        #14D1
        let:17 a13 = add17(0020,2402) in
        #14D2
        let:16 a14 = (1 + a12) in
        let:16 a15 = (1 + a14) in
        #14D3
        let:16 a16 = addWithCarry(!true,M[a14],~00) in
        let:8 a17 = (M[a14] & 0F) in
        let:8 a18 = (~00 & 0F) in
        let:16 a19 = addWithCarry(!true,a17,a18) in
        #14D4
        if (!is_zero(a16[7:0])) {
          A := 01;
          B := a16[7:0];
          C := M[a12];
          H := a13[15:0][15:8];
          L := a13[15:0][7:0];
          SPH := a15[15:8];
          SPL := a15[7:0];
          FlagS := a16[7:0][7];
          FlagZ := is_zero(a16[7:0]);
          FlagA := a19[7:0][4];
          FlagP := parity(a16[7:0]);
          FlagCY := a13[16];
          jump (14CC);
        } else {
          #14D7
          let:16 a20 = (1 + a15) in
          let:16 a21 = (1 + a20) in
          A := 01;
          B := a16[7:0];
          C := M[a12];
          H := a13[15:0][15:8];
          L := a13[15:0][7:0];
          SPH := a21[15:8];
          SPL := a21[7:0];
          FlagS := a16[7:0][7];
          FlagZ := is_zero(a16[7:0]);
          FlagA := a19[7:0][4];
          FlagP := parity(a16[7:0]);
          FlagCY := a13[16];
          jump ((M[a20],M[a15]));
        }
      }
    }

0B71:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 74;
    #return-to: 0B74
    #1618
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 16;
        let:16 a4 = (-1 + a3) in
        M[a4] := 18;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 16;
        let:16 a6 = (-1 + a5) in
        M[a6] := 18;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #161B
      let:16 a7 = addWithCarry(!false,M[2015],~FF) in
      let:8 a8 = (M[2015] & 0F) in
      let:8 a9 = (~FF & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #161D
      if (!is_zero(a7[7:0])) {
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := M[2015];
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := !a7[15:8][0];
        jump ((M[a11],M[a2]));
      } else {
        #161E
        #1621
        #1622
        #1623
        #1624
        let:8 a13 = (M[2011] | M[2010]) in
        #1625
        if (!is_zero(a13)) {
          let:16 a14 = (1 + a2) in
          let:16 a15 = (1 + a14) in
          A := a13;
          B := M[2011];
          H := 20;
          L := 11;
          SPH := a15[15:8];
          SPL := a15[7:0];
          FlagS := a13[7];
          FlagZ := is_zero(a13);
          FlagA := false;
          FlagP := parity(a13);
          FlagCY := false;
          jump ((M[a14],M[a2]));
        } else {
          #1626
          #1629
          let:8 a16 = (M[2025] & M[2025]) in
          let:8 a17 = (M[2025] | M[2025]) in
          #162A
          if (!is_zero(a16)) {
            let:16 a18 = (1 + a2) in
            let:16 a19 = (1 + a18) in
            A := a16;
            B := M[2011];
            H := 20;
            L := 11;
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a16[7];
            FlagZ := is_zero(a16);
            FlagA := a17[3];
            FlagP := parity(a16);
            FlagCY := false;
            jump ((M[a18],M[a2]));
          } else {
            #162B
            #162E
            let:8 a20 = (M[20EF] & M[20EF]) in
            let:8 a21 = (M[20EF] | M[20EF]) in
            #162F
            if (is_zero(a20)) {
              #1652
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a22 = (-1 + a2) in
                  M[a22] := 16;
                  let:16 a23 = (-1 + a22) in
                  M[a23] := 52;
                  A := a20;
                  B := M[2011];
                  H := 20;
                  L := 11;
                  SPH := a23[15:8];
                  SPL := a23[7:0];
                  FlagS := a20[7];
                  FlagZ := is_zero(a20);
                  FlagA := a21[3];
                  FlagP := parity(a20);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a24 = (-1 + a2) in
                  M[a24] := 16;
                  let:16 a25 = (-1 + a24) in
                  M[a25] := 52;
                  A := a20;
                  B := M[2011];
                  H := 20;
                  L := 11;
                  SPH := a25[15:8];
                  SPL := a25[7:0];
                  FlagS := a20[7];
                  FlagZ := is_zero(a20);
                  FlagA := a21[3];
                  FlagP := parity(a20);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #1655
                M[2025] := 01;
                #1657
                #165A
                let:16 a26 = (1 + (M[20EE],M[20ED])) in
                #165B
                #165C
                let:16 a27 = addWithCarry(!false,a26[7:0],~7E) in
                let:8 a28 = (a26[7:0] & 0F) in
                let:8 a29 = (~7E & 0F) in
                let:16 a30 = addWithCarry(!false,a28,a29) in
                #165E
                if (!a27[15:8][0]) {
                  #1663
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a31 = (-1 + a2) in
                      M[a31] := 16;
                      let:16 a32 = (-1 + a31) in
                      M[a32] := 63;
                      A := a26[7:0];
                      B := M[2011];
                      H := a26[15:8];
                      L := a26[7:0];
                      SPH := a32[15:8];
                      SPL := a32[7:0];
                      FlagS := a27[7:0][7];
                      FlagZ := is_zero(a27[7:0]);
                      FlagA := a30[7:0][4];
                      FlagP := parity(a27[7:0]);
                      FlagCY := !a27[15:8][0];
                      jump (0008);
                    } else {
                      let:16 a33 = (-1 + a2) in
                      M[a33] := 16;
                      let:16 a34 = (-1 + a33) in
                      M[a34] := 63;
                      A := a26[7:0];
                      B := M[2011];
                      H := a26[15:8];
                      L := a26[7:0];
                      SPH := a34[15:8];
                      SPL := a34[7:0];
                      FlagS := a27[7:0][7];
                      FlagZ := is_zero(a27[7:0]);
                      FlagA := a30[7:0][4];
                      FlagP := parity(a27[7:0]);
                      FlagCY := !a27[15:8][0];
                      jump (0010);
                    }
                  } else {
                    M[20ED] := a26[7:0];
                    M[20EE] := a26[15:8];
                    #1666
                    #1667
                    M[201D] := M[a26];
                    #166A
                    let:16 a35 = (1 + a2) in
                    let:16 a36 = (1 + a35) in
                    A := M[a26];
                    B := M[2011];
                    H := a26[15:8];
                    L := a26[7:0];
                    SPH := a36[15:8];
                    SPL := a36[7:0];
                    FlagS := a27[7:0][7];
                    FlagZ := is_zero(a27[7:0]);
                    FlagA := a30[7:0][4];
                    FlagP := parity(a27[7:0]);
                    FlagCY := !a27[15:8][0];
                    jump ((M[a35],M[a2]));
                  }
                } else {
                  #1661
                  #1663
                  M[20ED] := 74;
                  M[20EE] := a26[15:8];
                  #1666
                  #1667
                  M[201D] := M[(a26[15:8],74)];
                  #166A
                  let:16 a37 = (1 + a2) in
                  let:16 a38 = (1 + a37) in
                  A := M[(a26[15:8],74)];
                  B := M[2011];
                  H := a26[15:8];
                  L := 74;
                  SPH := a38[15:8];
                  SPL := a38[7:0];
                  FlagS := a27[7:0][7];
                  FlagZ := is_zero(a27[7:0]);
                  FlagA := a30[7:0][4];
                  FlagP := parity(a27[7:0]);
                  FlagCY := !a27[15:8][0];
                  jump ((M[a37],M[a2]));
                }
              }
            } else {
              #1632
              #1635
              let:8 a39 = (M[202D] & M[202D]) in
              let:8 a40 = (M[202D] | M[202D]) in
              #1636
              if (!is_zero(a39)) {
                #1648
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a41 = (-1 + a2) in
                    M[a41] := 16;
                    let:16 a42 = (-1 + a41) in
                    M[a42] := 48;
                    A := a39;
                    B := M[2011];
                    H := 20;
                    L := 11;
                    SPH := a42[15:8];
                    SPL := a42[7:0];
                    FlagS := a39[7];
                    FlagZ := is_zero(a39);
                    FlagA := a40[3];
                    FlagP := parity(a39);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a43 = (-1 + a2) in
                    M[a43] := 16;
                    let:16 a44 = (-1 + a43) in
                    M[a44] := 48;
                    A := a39;
                    B := M[2011];
                    H := 20;
                    L := 11;
                    SPH := a44[15:8];
                    SPL := a44[7:0];
                    FlagS := a39[7];
                    FlagZ := is_zero(a39);
                    FlagA := a40[3];
                    FlagP := parity(a39);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  let:16 a45 = (-1 + a2) in
                  M[a45] := 16;
                  let:16 a46 = (-1 + a45) in
                  M[a46] := 4B;
                  #return-to: 164B
                  #17C0
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a47 = (-1 + a46) in
                      M[a47] := 17;
                      let:16 a48 = (-1 + a47) in
                      M[a48] := C0;
                      A := a39;
                      B := M[2011];
                      H := 20;
                      L := 11;
                      SPH := a48[15:8];
                      SPL := a48[7:0];
                      FlagS := a39[7];
                      FlagZ := is_zero(a39);
                      FlagA := a40[3];
                      FlagP := parity(a39);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a49 = (-1 + a46) in
                      M[a49] := 17;
                      let:16 a50 = (-1 + a49) in
                      M[a50] := C0;
                      A := a39;
                      B := M[2011];
                      H := 20;
                      L := 11;
                      SPH := a50[15:8];
                      SPL := a50[7:0];
                      FlagS := a39[7];
                      FlagZ := is_zero(a39);
                      FlagA := a40[3];
                      FlagP := parity(a39);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    #17C3
                    #17C4
                    if (!M[2067][0]) {
                      #17CA
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a51 = (-1 + a46) in
                          M[a51] := 17;
                          let:16 a52 = (-1 + a51) in
                          M[a52] := CA;
                          A := updateBit((M[2067] >> 01),7,M[2067][0]);
                          B := M[2011];
                          H := 20;
                          L := 11;
                          SPH := a52[15:8];
                          SPL := a52[7:0];
                          FlagS := a39[7];
                          FlagZ := is_zero(a39);
                          FlagA := a40[3];
                          FlagP := parity(a39);
                          FlagCY := M[2067][0];
                          jump (0008);
                        } else {
                          let:16 a53 = (-1 + a46) in
                          M[a53] := 17;
                          let:16 a54 = (-1 + a53) in
                          M[a54] := CA;
                          A := updateBit((M[2067] >> 01),7,M[2067][0]);
                          B := M[2011];
                          H := 20;
                          L := 11;
                          SPH := a54[15:8];
                          SPL := a54[7:0];
                          FlagS := a39[7];
                          FlagZ := is_zero(a39);
                          FlagA := a40[3];
                          FlagP := parity(a39);
                          FlagCY := M[2067][0];
                          jump (0010);
                        }
                      } else {
                        #17CC
                        let:16 a55 = (1 + a46) in
                        let:16 a56 = (1 + a55) in
                        A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off));
                        B := M[2011];
                        H := 20;
                        L := 11;
                        SPH := a56[15:8];
                        SPL := a56[7:0];
                        FlagS := a39[7];
                        FlagZ := is_zero(a39);
                        FlagA := a40[3];
                        FlagP := parity(a39);
                        FlagCY := M[2067][0];
                        jump ((M[a55],M[a46]));
                      }
                    } else {
                      #17C7
                      #17C9
                      let:16 a57 = (1 + a46) in
                      let:16 a58 = (1 + a57) in
                      A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right));
                      B := M[2011];
                      H := 20;
                      L := 11;
                      SPH := a58[15:8];
                      SPL := a58[7:0];
                      FlagS := a39[7];
                      FlagZ := is_zero(a39);
                      FlagA := a40[3];
                      FlagP := parity(a39);
                      FlagCY := M[2067][0];
                      jump ((M[a57],M[a46]));
                    }
                  }
                }
              } else {
                #1639
                let:16 a59 = (-1 + a2) in
                M[a59] := 16;
                let:16 a60 = (-1 + a59) in
                M[a60] := 3C;
                #return-to: 163C
                #17C0
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a61 = (-1 + a60) in
                    M[a61] := 17;
                    let:16 a62 = (-1 + a61) in
                    M[a62] := C0;
                    A := a39;
                    B := M[2011];
                    H := 20;
                    L := 11;
                    SPH := a62[15:8];
                    SPL := a62[7:0];
                    FlagS := a39[7];
                    FlagZ := is_zero(a39);
                    FlagA := a40[3];
                    FlagP := parity(a39);
                    FlagCY := false;
                    jump (0008);
                  } else {
                    let:16 a63 = (-1 + a60) in
                    M[a63] := 17;
                    let:16 a64 = (-1 + a63) in
                    M[a64] := C0;
                    A := a39;
                    B := M[2011];
                    H := 20;
                    L := 11;
                    SPH := a64[15:8];
                    SPL := a64[7:0];
                    FlagS := a39[7];
                    FlagZ := is_zero(a39);
                    FlagA := a40[3];
                    FlagP := parity(a39);
                    FlagCY := false;
                    jump (0010);
                  }
                } else {
                  #17C3
                  #17C4
                  if (!M[2067][0]) {
                    #17CA
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a65 = (-1 + a60) in
                        M[a65] := 17;
                        let:16 a66 = (-1 + a65) in
                        M[a66] := CA;
                        A := updateBit((M[2067] >> 01),7,M[2067][0]);
                        B := M[2011];
                        H := 20;
                        L := 11;
                        SPH := a66[15:8];
                        SPL := a66[7:0];
                        FlagS := a39[7];
                        FlagZ := is_zero(a39);
                        FlagA := a40[3];
                        FlagP := parity(a39);
                        FlagCY := M[2067][0];
                        jump (0008);
                      } else {
                        let:16 a67 = (-1 + a60) in
                        M[a67] := 17;
                        let:16 a68 = (-1 + a67) in
                        M[a68] := CA;
                        A := updateBit((M[2067] >> 01),7,M[2067][0]);
                        B := M[2011];
                        H := 20;
                        L := 11;
                        SPH := a68[15:8];
                        SPL := a68[7:0];
                        FlagS := a39[7];
                        FlagZ := is_zero(a39);
                        FlagA := a40[3];
                        FlagP := parity(a39);
                        FlagCY := M[2067][0];
                        jump (0010);
                      }
                    } else {
                      #17CC
                      let:16 a69 = (1 + a60) in
                      let:16 a70 = (1 + a69) in
                      A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off));
                      B := M[2011];
                      H := 20;
                      L := 11;
                      SPH := a70[15:8];
                      SPL := a70[7:0];
                      FlagS := a39[7];
                      FlagZ := is_zero(a39);
                      FlagA := a40[3];
                      FlagP := parity(a39);
                      FlagCY := M[2067][0];
                      jump ((M[a69],M[a60]));
                    }
                  } else {
                    #17C7
                    #17C9
                    let:16 a71 = (1 + a60) in
                    let:16 a72 = (1 + a71) in
                    A := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right));
                    B := M[2011];
                    H := 20;
                    L := 11;
                    SPH := a72[15:8];
                    SPL := a72[7:0];
                    FlagS := a39[7];
                    FlagZ := is_zero(a39);
                    FlagA := a40[3];
                    FlagP := parity(a39);
                    FlagCY := M[2067][0];
                    jump ((M[a71],M[a60]));
                  }
                }
              }
            }
          }
        }
      }
    }

0B74:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 77;
    #return-to: 0B77
    #0BF1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0B;
        let:16 a4 = (-1 + a3) in
        M[a4] := F1;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0B;
        let:16 a6 = (-1 + a5) in
        M[a6] := F1;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 0B;
      let:16 a8 = (-1 + a7) in
      M[a8] := F4;
      #return-to: 0BF4
      #190A
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 19;
          let:16 a10 = (-1 + a9) in
          M[a10] := 0A;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 19;
          let:16 a12 = (-1 + a11) in
          M[a12] := 0A;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        let:16 a13 = (-1 + a8) in
        M[a13] := 19;
        let:16 a14 = (-1 + a13) in
        M[a14] := 0D;
        #return-to: 190D
        #14D8
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 14;
            let:16 a16 = (-1 + a15) in
            M[a16] := D8;
            SPH := a16[15:8];
            SPL := a16[7:0];
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 14;
            let:16 a18 = (-1 + a17) in
            M[a18] := D8;
            SPH := a18[15:8];
            SPL := a18[7:0];
            jump (0010);
          }
        } else {
          #14DB
          let:16 a19 = addWithCarry(!false,M[2025],~05) in
          let:8 a20 = (M[2025] & 0F) in
          let:8 a21 = (~05 & 0F) in
          let:16 a22 = addWithCarry(!false,a20,a21) in
          #14DD
          if (is_zero(a19[7:0])) {
            let:16 a23 = (1 + a14) in
            let:16 a24 = (1 + a23) in
            A := M[2025];
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := !a19[15:8][0];
            jump ((M[a23],M[a14]));
          } else {
            #14DE
            let:16 a25 = addWithCarry(!false,M[2025],~02) in
            let:8 a26 = (M[2025] & 0F) in
            let:8 a27 = (~02 & 0F) in
            let:16 a28 = addWithCarry(!false,a26,a27) in
            #14E0
            if (!is_zero(a25[7:0])) {
              let:16 a29 = (1 + a14) in
              let:16 a30 = (1 + a29) in
              A := M[2025];
              SPH := a30[15:8];
              SPL := a30[7:0];
              FlagS := a25[7:0][7];
              FlagZ := is_zero(a25[7:0]);
              FlagA := a28[7:0][4];
              FlagP := parity(a25[7:0]);
              FlagCY := !a25[15:8][0];
              jump ((M[a29],M[a14]));
            } else {
              #14E1
              #14E4
              let:16 a31 = addWithCarry(!false,M[2029],~D8) in
              let:8 a32 = (M[2029] & 0F) in
              let:8 a33 = (~D8 & 0F) in
              let:16 a34 = addWithCarry(!false,a32,a33) in
              #14E6
              #14E7
              if (!!a31[15:8][0]) {
                #1530
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a35 = (-1 + a14) in
                    M[a35] := 15;
                    let:16 a36 = (-1 + a35) in
                    M[a36] := 30;
                    A := M[2029];
                    B := M[2029];
                    SPH := a36[15:8];
                    SPL := a36[7:0];
                    FlagS := a31[7:0][7];
                    FlagZ := is_zero(a31[7:0]);
                    FlagA := a34[7:0][4];
                    FlagP := parity(a31[7:0]);
                    FlagCY := !a31[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a37 = (-1 + a14) in
                    M[a37] := 15;
                    let:16 a38 = (-1 + a37) in
                    M[a38] := 30;
                    A := M[2029];
                    B := M[2029];
                    SPH := a38[15:8];
                    SPL := a38[7:0];
                    FlagS := a31[7:0][7];
                    FlagZ := is_zero(a31[7:0]);
                    FlagA := a34[7:0][4];
                    FlagP := parity(a31[7:0]);
                    FlagCY := !a31[15:8][0];
                    jump (0010);
                  }
                } else {
                  #1532
                  M[2025] := 03;
                  #1535
                  #154A
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a39 = (-1 + a14) in
                      M[a39] := 15;
                      let:16 a40 = (-1 + a39) in
                      M[a40] := 4A;
                      A := 03;
                      B := M[2029];
                      SPH := a40[15:8];
                      SPL := a40[7:0];
                      FlagS := a31[7:0][7];
                      FlagZ := is_zero(a31[7:0]);
                      FlagA := a34[7:0][4];
                      FlagP := parity(a31[7:0]);
                      FlagCY := !a31[15:8][0];
                      jump (0008);
                    } else {
                      let:16 a41 = (-1 + a14) in
                      M[a41] := 15;
                      let:16 a42 = (-1 + a41) in
                      M[a42] := 4A;
                      A := 03;
                      B := M[2029];
                      SPH := a42[15:8];
                      SPL := a42[7:0];
                      FlagS := a31[7:0][7];
                      FlagZ := is_zero(a31[7:0]);
                      FlagA := a34[7:0][4];
                      FlagP := parity(a31[7:0]);
                      FlagCY := !a31[15:8][0];
                      jump (0010);
                    }
                  } else {
                    let:8 a43 = (03 ^ 03) in
                    #154B
                    M[2002] := a43;
                    #154E
                    #1550
                    #19DC
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a44 = (-1 + a14) in
                        M[a44] := 19;
                        let:16 a45 = (-1 + a44) in
                        M[a45] := DC;
                        A := a43;
                        B := F7;
                        SPH := a45[15:8];
                        SPL := a45[7:0];
                        FlagS := a43[7];
                        FlagZ := is_zero(a43);
                        FlagA := false;
                        FlagP := parity(a43);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a46 = (-1 + a14) in
                        M[a46] := 19;
                        let:16 a47 = (-1 + a46) in
                        M[a47] := DC;
                        A := a43;
                        B := F7;
                        SPH := a47[15:8];
                        SPL := a47[7:0];
                        FlagS := a43[7];
                        FlagZ := is_zero(a43);
                        FlagA := false;
                        FlagP := parity(a43);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      #19DF
                      let:8 a48 = (F7 & M[2094]) in
                      let:8 a49 = (F7 | M[2094]) in
                      #19E0
                      M[2094] := a48;
                      #19E3
                      sound_control(Ufo,a48[0]);
                      sound_control(Shot,a48[1]);
                      sound_control(PlayerDie,a48[2]);
                      sound_control(InvaderDie,a48[3]);
                      sound_control(ExtraLife,a48[4]);
                      #19E5
                      let:16 a50 = (1 + a14) in
                      let:16 a51 = (1 + a50) in
                      A := a48;
                      B := F7;
                      SPH := a51[15:8];
                      SPL := a51[7:0];
                      FlagS := a48[7];
                      FlagZ := is_zero(a48);
                      FlagA := a49[3];
                      FlagP := parity(a48);
                      FlagCY := false;
                      jump ((M[a50],M[a14]));
                    }
                  }
                }
              } else {
                #14EA
                #14ED
                let:8 a52 = (M[2002] & M[2002]) in
                let:8 a53 = (M[2002] | M[2002]) in
                #14EE
                if (is_zero(a52)) {
                  let:16 a54 = (1 + a14) in
                  let:16 a55 = (1 + a54) in
                  A := a52;
                  B := M[2029];
                  SPH := a55[15:8];
                  SPL := a55[7:0];
                  FlagS := a52[7];
                  FlagZ := is_zero(a52);
                  FlagA := a53[3];
                  FlagP := parity(a52);
                  FlagCY := false;
                  jump ((M[a54],M[a14]));
                } else {
                  #14EF
                  #14F0
                  let:16 a56 = addWithCarry(!false,M[2029],~CE) in
                  let:8 a57 = (M[2029] & 0F) in
                  let:8 a58 = (~CE & 0F) in
                  let:16 a59 = addWithCarry(!false,a57,a58) in
                  #14F2
                  if (!!a56[15:8][0]) {
                    #1579
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a60 = (-1 + a14) in
                        M[a60] := 15;
                        let:16 a61 = (-1 + a60) in
                        M[a61] := 79;
                        A := M[2029];
                        B := M[2029];
                        SPH := a61[15:8];
                        SPL := a61[7:0];
                        FlagS := a56[7:0][7];
                        FlagZ := is_zero(a56[7:0]);
                        FlagA := a59[7:0][4];
                        FlagP := parity(a56[7:0]);
                        FlagCY := !a56[15:8][0];
                        jump (0008);
                      } else {
                        let:16 a62 = (-1 + a14) in
                        M[a62] := 15;
                        let:16 a63 = (-1 + a62) in
                        M[a63] := 79;
                        A := M[2029];
                        B := M[2029];
                        SPH := a63[15:8];
                        SPL := a63[7:0];
                        FlagS := a56[7:0][7];
                        FlagZ := is_zero(a56[7:0]);
                        FlagA := a59[7:0][4];
                        FlagP := parity(a56[7:0]);
                        FlagCY := !a56[15:8][0];
                        jump (0010);
                      }
                    } else {
                      #157B
                      M[2085] := 01;
                      #157E
                      A := 01;
                      B := M[2029];
                      SPH := a14[15:8];
                      SPL := a14[7:0];
                      FlagS := a56[7:0][7];
                      FlagZ := is_zero(a56[7:0]);
                      FlagA := a59[7:0][4];
                      FlagP := parity(a56[7:0]);
                      FlagCY := !a56[15:8][0];
                      jump (1545);
                    }
                  } else {
                    #14F5
                    let:16 a64 = addWithCarry(false,06,M[2029]) in
                    let:8 a65 = (06 & 0F) in
                    let:8 a66 = (M[2029] & 0F) in
                    let:16 a67 = addWithCarry(false,a65,a66) in
                    #14F7
                    #14F8
                    #14FB
                    let:16 a68 = addWithCarry(!false,M[2009],~90) in
                    let:8 a69 = (M[2009] & 0F) in
                    let:8 a70 = (~90 & 0F) in
                    let:16 a71 = addWithCarry(!false,a69,a70) in
                    #14FD
                    if (!!a68[15:8][0]) {
                      #1504
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a72 = (-1 + a14) in
                          M[a72] := 15;
                          let:16 a73 = (-1 + a72) in
                          M[a73] := 04;
                          A := M[2009];
                          B := a64[7:0];
                          SPH := a73[15:8];
                          SPL := a73[7:0];
                          FlagS := a68[7:0][7];
                          FlagZ := is_zero(a68[7:0]);
                          FlagA := a71[7:0][4];
                          FlagP := parity(a68[7:0]);
                          FlagCY := !a68[15:8][0];
                          jump (0008);
                        } else {
                          let:16 a74 = (-1 + a14) in
                          M[a74] := 15;
                          let:16 a75 = (-1 + a74) in
                          M[a75] := 04;
                          A := M[2009];
                          B := a64[7:0];
                          SPH := a75[15:8];
                          SPL := a75[7:0];
                          FlagS := a68[7:0][7];
                          FlagZ := is_zero(a68[7:0]);
                          FlagA := a71[7:0][4];
                          FlagP := parity(a68[7:0]);
                          FlagCY := !a68[15:8][0];
                          jump (0010);
                        }
                      } else {
                        #1505
                        let:16 a76 = (-1 + a14) in
                        M[a76] := 15;
                        let:16 a77 = (-1 + a76) in
                        M[a77] := 08;
                        #return-to: 1508
                        #1562
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a78 = (-1 + a77) in
                            M[a78] := 15;
                            let:16 a79 = (-1 + a78) in
                            M[a79] := 62;
                            A := M[2009];
                            B := a64[7:0];
                            L := a64[7:0];
                            SPH := a79[15:8];
                            SPL := a79[7:0];
                            FlagS := a68[7:0][7];
                            FlagZ := is_zero(a68[7:0]);
                            FlagA := a71[7:0][4];
                            FlagP := parity(a68[7:0]);
                            FlagCY := !a68[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a80 = (-1 + a77) in
                            M[a80] := 15;
                            let:16 a81 = (-1 + a80) in
                            M[a81] := 62;
                            A := M[2009];
                            B := a64[7:0];
                            L := a64[7:0];
                            SPH := a81[15:8];
                            SPL := a81[7:0];
                            FlagS := a68[7:0][7];
                            FlagZ := is_zero(a68[7:0]);
                            FlagA := a71[7:0][4];
                            FlagP := parity(a68[7:0]);
                            FlagCY := !a68[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1565
                          #1566
                          let:16 a82 = (-1 + a77) in
                          M[a82] := 15;
                          let:16 a83 = (-1 + a82) in
                          M[a83] := 69;
                          #return-to: 1569
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a84 = (-1 + a83) in
                              M[a84] := 15;
                              let:16 a85 = (-1 + a84) in
                              M[a85] := 54;
                              A := M[2009];
                              B := a64[7:0];
                              H := a64[7:0];
                              L := a64[7:0];
                              SPH := a85[15:8];
                              SPL := a85[7:0];
                              FlagS := a68[7:0][7];
                              FlagZ := is_zero(a68[7:0]);
                              FlagA := a71[7:0][4];
                              FlagP := parity(a68[7:0]);
                              FlagCY := !a68[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a86 = (-1 + a83) in
                              M[a86] := 15;
                              let:16 a87 = (-1 + a86) in
                              M[a87] := 54;
                              A := M[2009];
                              B := a64[7:0];
                              H := a64[7:0];
                              L := a64[7:0];
                              SPH := a87[15:8];
                              SPL := a87[7:0];
                              FlagS := a68[7:0][7];
                              FlagZ := is_zero(a68[7:0]);
                              FlagA := a71[7:0][4];
                              FlagP := parity(a68[7:0]);
                              FlagCY := !a68[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a88 = addWithCarry(!false,M[2009],~a64[7:0]) in
                            let:8 a89 = (M[2009] & 0F) in
                            let:8 a90 = (~a64[7:0] & 0F) in
                            let:16 a91 = addWithCarry(!false,a89,a90) in
                            #1557
                            if (!!a88[15:8][0]) {
                              let:16 a92 = (-1 + a83) in
                              M[a92] := 15;
                              let:16 a93 = (-1 + a92) in
                              M[a93] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a94 = (-1 + a93) in
                                  M[a94] := 15;
                                  let:16 a95 = (-1 + a94) in
                                  M[a95] := 90;
                                  A := M[2009];
                                  B := a64[7:0];
                                  C := 00;
                                  H := a64[7:0];
                                  L := a64[7:0];
                                  SPH := a95[15:8];
                                  SPL := a95[7:0];
                                  FlagS := a88[7:0][7];
                                  FlagZ := is_zero(a88[7:0]);
                                  FlagA := a91[7:0][4];
                                  FlagP := parity(a88[7:0]);
                                  FlagCY := !a88[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a96 = (-1 + a93) in
                                  M[a96] := 15;
                                  let:16 a97 = (-1 + a96) in
                                  M[a97] := 90;
                                  A := M[2009];
                                  B := a64[7:0];
                                  C := 00;
                                  H := a64[7:0];
                                  L := a64[7:0];
                                  SPH := a97[15:8];
                                  SPL := a97[7:0];
                                  FlagS := a88[7:0][7];
                                  FlagZ := is_zero(a88[7:0]);
                                  FlagA := a91[7:0][4];
                                  FlagP := parity(a88[7:0]);
                                  FlagCY := !a88[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a98 = addWithCarry(true,00,00) in
                                let:8 a99 = (00 & 0F) in
                                let:8 a100 = (00 & 0F) in
                                let:16 a101 = addWithCarry(true,a99,a100) in
                                #1591
                                let:16 a102 = addWithCarry(false,10,M[2009]) in
                                let:8 a103 = (10 & 0F) in
                                let:8 a104 = (M[2009] & 0F) in
                                let:16 a105 = addWithCarry(false,a103,a104) in
                                #1593
                                if (a102[7:0][7]) {
                                  A := a102[7:0];
                                  B := a64[7:0];
                                  C := a98[7:0];
                                  H := a64[7:0];
                                  L := a64[7:0];
                                  SPH := a93[15:8];
                                  SPL := a93[7:0];
                                  FlagS := a102[7:0][7];
                                  FlagZ := is_zero(a102[7:0]);
                                  FlagA := a105[7:0][4];
                                  FlagP := parity(a102[7:0]);
                                  FlagCY := a102[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a106 = (1 + a93) in
                                  let:16 a107 = (1 + a106) in
                                  A := a102[7:0];
                                  B := a64[7:0];
                                  C := a98[7:0];
                                  H := a64[7:0];
                                  L := a64[7:0];
                                  SPH := a107[15:8];
                                  SPL := a107[7:0];
                                  FlagS := a102[7:0][7];
                                  FlagZ := is_zero(a102[7:0]);
                                  FlagA := a105[7:0][4];
                                  FlagP := parity(a102[7:0]);
                                  FlagCY := a102[15:8][0];
                                  jump ((M[a106],M[a93]));
                                }
                              }
                            } else {
                              A := M[2009];
                              B := a64[7:0];
                              C := 00;
                              H := a64[7:0];
                              L := a64[7:0];
                              SPH := a83[15:8];
                              SPL := a83[7:0];
                              FlagS := a88[7:0][7];
                              FlagZ := is_zero(a88[7:0]);
                              FlagA := a91[7:0][4];
                              FlagP := parity(a88[7:0]);
                              FlagCY := !a88[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #1500
                      let:16 a108 = addWithCarry(!false,M[2009],~a64[7:0]) in
                      let:8 a109 = (M[2009] & 0F) in
                      let:8 a110 = (~a64[7:0] & 0F) in
                      let:16 a111 = addWithCarry(!false,a109,a110) in
                      #1501
                      if (!!a108[15:8][0]) {
                        #1530
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a112 = (-1 + a14) in
                            M[a112] := 15;
                            let:16 a113 = (-1 + a112) in
                            M[a113] := 30;
                            A := M[2009];
                            B := a64[7:0];
                            SPH := a113[15:8];
                            SPL := a113[7:0];
                            FlagS := a108[7:0][7];
                            FlagZ := is_zero(a108[7:0]);
                            FlagA := a111[7:0][4];
                            FlagP := parity(a108[7:0]);
                            FlagCY := !a108[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a114 = (-1 + a14) in
                            M[a114] := 15;
                            let:16 a115 = (-1 + a114) in
                            M[a115] := 30;
                            A := M[2009];
                            B := a64[7:0];
                            SPH := a115[15:8];
                            SPL := a115[7:0];
                            FlagS := a108[7:0][7];
                            FlagZ := is_zero(a108[7:0]);
                            FlagA := a111[7:0][4];
                            FlagP := parity(a108[7:0]);
                            FlagCY := !a108[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1532
                          M[2025] := 03;
                          #1535
                          #154A
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a116 = (-1 + a14) in
                              M[a116] := 15;
                              let:16 a117 = (-1 + a116) in
                              M[a117] := 4A;
                              A := 03;
                              B := a64[7:0];
                              SPH := a117[15:8];
                              SPL := a117[7:0];
                              FlagS := a108[7:0][7];
                              FlagZ := is_zero(a108[7:0]);
                              FlagA := a111[7:0][4];
                              FlagP := parity(a108[7:0]);
                              FlagCY := !a108[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a118 = (-1 + a14) in
                              M[a118] := 15;
                              let:16 a119 = (-1 + a118) in
                              M[a119] := 4A;
                              A := 03;
                              B := a64[7:0];
                              SPH := a119[15:8];
                              SPL := a119[7:0];
                              FlagS := a108[7:0][7];
                              FlagZ := is_zero(a108[7:0]);
                              FlagA := a111[7:0][4];
                              FlagP := parity(a108[7:0]);
                              FlagCY := !a108[15:8][0];
                              jump (0010);
                            }
                          } else {
                            let:8 a120 = (03 ^ 03) in
                            #154B
                            M[2002] := a120;
                            #154E
                            #1550
                            #19DC
                            if ((g_time_to_wakeup && g_interrupts_enabled)) {
                              disable_interrupts()
                              if (g_half_frame) {
                                let:16 a121 = (-1 + a14) in
                                M[a121] := 19;
                                let:16 a122 = (-1 + a121) in
                                M[a122] := DC;
                                A := a120;
                                B := F7;
                                SPH := a122[15:8];
                                SPL := a122[7:0];
                                FlagS := a120[7];
                                FlagZ := is_zero(a120);
                                FlagA := false;
                                FlagP := parity(a120);
                                FlagCY := false;
                                jump (0008);
                              } else {
                                let:16 a123 = (-1 + a14) in
                                M[a123] := 19;
                                let:16 a124 = (-1 + a123) in
                                M[a124] := DC;
                                A := a120;
                                B := F7;
                                SPH := a124[15:8];
                                SPL := a124[7:0];
                                FlagS := a120[7];
                                FlagZ := is_zero(a120);
                                FlagA := false;
                                FlagP := parity(a120);
                                FlagCY := false;
                                jump (0010);
                              }
                            } else {
                              #19DF
                              let:8 a125 = (F7 & M[2094]) in
                              let:8 a126 = (F7 | M[2094]) in
                              #19E0
                              M[2094] := a125;
                              #19E3
                              sound_control(Ufo,a125[0]);
                              sound_control(Shot,a125[1]);
                              sound_control(PlayerDie,a125[2]);
                              sound_control(InvaderDie,a125[3]);
                              sound_control(ExtraLife,a125[4]);
                              #19E5
                              let:16 a127 = (1 + a14) in
                              let:16 a128 = (1 + a127) in
                              A := a125;
                              B := F7;
                              SPH := a128[15:8];
                              SPL := a128[7:0];
                              FlagS := a125[7];
                              FlagZ := is_zero(a125);
                              FlagA := a126[3];
                              FlagP := parity(a125);
                              FlagCY := false;
                              jump ((M[a127],M[a14]));
                            }
                          }
                        }
                      } else {
                        #1504
                        #1505
                        let:16 a129 = (-1 + a14) in
                        M[a129] := 15;
                        let:16 a130 = (-1 + a129) in
                        M[a130] := 08;
                        #return-to: 1508
                        #1562
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a131 = (-1 + a130) in
                            M[a131] := 15;
                            let:16 a132 = (-1 + a131) in
                            M[a132] := 62;
                            A := M[2009];
                            B := a64[7:0];
                            L := a64[7:0];
                            SPH := a132[15:8];
                            SPL := a132[7:0];
                            FlagS := a108[7:0][7];
                            FlagZ := is_zero(a108[7:0]);
                            FlagA := a111[7:0][4];
                            FlagP := parity(a108[7:0]);
                            FlagCY := !a108[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a133 = (-1 + a130) in
                            M[a133] := 15;
                            let:16 a134 = (-1 + a133) in
                            M[a134] := 62;
                            A := M[2009];
                            B := a64[7:0];
                            L := a64[7:0];
                            SPH := a134[15:8];
                            SPL := a134[7:0];
                            FlagS := a108[7:0][7];
                            FlagZ := is_zero(a108[7:0]);
                            FlagA := a111[7:0][4];
                            FlagP := parity(a108[7:0]);
                            FlagCY := !a108[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1565
                          #1566
                          let:16 a135 = (-1 + a130) in
                          M[a135] := 15;
                          let:16 a136 = (-1 + a135) in
                          M[a136] := 69;
                          #return-to: 1569
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a137 = (-1 + a136) in
                              M[a137] := 15;
                              let:16 a138 = (-1 + a137) in
                              M[a138] := 54;
                              A := M[2009];
                              B := a64[7:0];
                              H := a64[7:0];
                              L := a64[7:0];
                              SPH := a138[15:8];
                              SPL := a138[7:0];
                              FlagS := a108[7:0][7];
                              FlagZ := is_zero(a108[7:0]);
                              FlagA := a111[7:0][4];
                              FlagP := parity(a108[7:0]);
                              FlagCY := !a108[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a139 = (-1 + a136) in
                              M[a139] := 15;
                              let:16 a140 = (-1 + a139) in
                              M[a140] := 54;
                              A := M[2009];
                              B := a64[7:0];
                              H := a64[7:0];
                              L := a64[7:0];
                              SPH := a140[15:8];
                              SPL := a140[7:0];
                              FlagS := a108[7:0][7];
                              FlagZ := is_zero(a108[7:0]);
                              FlagA := a111[7:0][4];
                              FlagP := parity(a108[7:0]);
                              FlagCY := !a108[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a141 = addWithCarry(!false,M[2009],~a64[7:0]) in
                            let:8 a142 = (M[2009] & 0F) in
                            let:8 a143 = (~a64[7:0] & 0F) in
                            let:16 a144 = addWithCarry(!false,a142,a143) in
                            #1557
                            if (!!a141[15:8][0]) {
                              let:16 a145 = (-1 + a136) in
                              M[a145] := 15;
                              let:16 a146 = (-1 + a145) in
                              M[a146] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a147 = (-1 + a146) in
                                  M[a147] := 15;
                                  let:16 a148 = (-1 + a147) in
                                  M[a148] := 90;
                                  A := M[2009];
                                  B := a64[7:0];
                                  C := 00;
                                  H := a64[7:0];
                                  L := a64[7:0];
                                  SPH := a148[15:8];
                                  SPL := a148[7:0];
                                  FlagS := a141[7:0][7];
                                  FlagZ := is_zero(a141[7:0]);
                                  FlagA := a144[7:0][4];
                                  FlagP := parity(a141[7:0]);
                                  FlagCY := !a141[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a149 = (-1 + a146) in
                                  M[a149] := 15;
                                  let:16 a150 = (-1 + a149) in
                                  M[a150] := 90;
                                  A := M[2009];
                                  B := a64[7:0];
                                  C := 00;
                                  H := a64[7:0];
                                  L := a64[7:0];
                                  SPH := a150[15:8];
                                  SPL := a150[7:0];
                                  FlagS := a141[7:0][7];
                                  FlagZ := is_zero(a141[7:0]);
                                  FlagA := a144[7:0][4];
                                  FlagP := parity(a141[7:0]);
                                  FlagCY := !a141[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a151 = addWithCarry(true,00,00) in
                                let:8 a152 = (00 & 0F) in
                                let:8 a153 = (00 & 0F) in
                                let:16 a154 = addWithCarry(true,a152,a153) in
                                #1591
                                let:16 a155 = addWithCarry(false,10,M[2009]) in
                                let:8 a156 = (10 & 0F) in
                                let:8 a157 = (M[2009] & 0F) in
                                let:16 a158 = addWithCarry(false,a156,a157) in
                                #1593
                                if (a155[7:0][7]) {
                                  A := a155[7:0];
                                  B := a64[7:0];
                                  C := a151[7:0];
                                  H := a64[7:0];
                                  L := a64[7:0];
                                  SPH := a146[15:8];
                                  SPL := a146[7:0];
                                  FlagS := a155[7:0][7];
                                  FlagZ := is_zero(a155[7:0]);
                                  FlagA := a158[7:0][4];
                                  FlagP := parity(a155[7:0]);
                                  FlagCY := a155[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a159 = (1 + a146) in
                                  let:16 a160 = (1 + a159) in
                                  A := a155[7:0];
                                  B := a64[7:0];
                                  C := a151[7:0];
                                  H := a64[7:0];
                                  L := a64[7:0];
                                  SPH := a160[15:8];
                                  SPL := a160[7:0];
                                  FlagS := a155[7:0][7];
                                  FlagZ := is_zero(a155[7:0]);
                                  FlagA := a158[7:0][4];
                                  FlagP := parity(a155[7:0]);
                                  FlagCY := a155[15:8][0];
                                  jump ((M[a159],M[a146]));
                                }
                              }
                            } else {
                              A := M[2009];
                              B := a64[7:0];
                              C := 00;
                              H := a64[7:0];
                              L := a64[7:0];
                              SPH := a136[15:8];
                              SPL := a136[7:0];
                              FlagS := a141[7:0][7];
                              FlagZ := is_zero(a141[7:0]);
                              FlagA := a144[7:0][4];
                              FlagP := parity(a141[7:0]);
                              FlagCY := !a141[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

0B77:

    #0B79
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 7C;
    #return-to: 0B7C
    #0A59
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 59;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 59;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0A5C
      let:16 a7 = addWithCarry(!false,M[2015],~FF) in
      let:8 a8 = (M[2015] & 0F) in
      let:8 a9 = (~FF & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #0A5E
      let:16 a11 = (1 + a2) in
      let:16 a12 = (1 + a11) in
      A := M[2015];
      SPH := a12[15:8];
      SPL := a12[7:0];
      FlagS := a7[7:0][7];
      FlagZ := is_zero(a7[7:0]);
      FlagA := a10[7:0][4];
      FlagP := parity(a7[7:0]);
      FlagCY := !a7[15:8][0];
      jump ((M[a11],M[a2]));
    }

0B7C:

    if (FlagZ) {
      jump (0B71);
    } else {
      #0B7F
      let:8 a1 = (A ^ A) in
      #0B80
      M[2025] := a1;
      #0B83
      let:16 a2 = (-1 + (SPH,SPL)) in
      M[a2] := 0B;
      let:16 a3 = (-1 + a2) in
      M[a3] := 86;
      #return-to: 0B86
      #0A59
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a4 = (-1 + a3) in
          M[a4] := 0A;
          let:16 a5 = (-1 + a4) in
          M[a5] := 59;
          A := a1;
          SPH := a5[15:8];
          SPL := a5[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := false;
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a6 = (-1 + a3) in
          M[a6] := 0A;
          let:16 a7 = (-1 + a6) in
          M[a7] := 59;
          A := a1;
          SPH := a7[15:8];
          SPL := a7[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := false;
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #0A5C
        let:16 a8 = addWithCarry(!false,M[2015],~FF) in
        let:8 a9 = (M[2015] & 0F) in
        let:8 a10 = (~FF & 0F) in
        let:16 a11 = addWithCarry(!false,a9,a10) in
        #0A5E
        let:16 a12 = (1 + a3) in
        let:16 a13 = (1 + a12) in
        A := M[2015];
        SPH := a13[15:8];
        SPL := a13[7:0];
        FlagS := a8[7:0][7];
        FlagZ := is_zero(a8[7:0]);
        FlagA := a11[7:0][4];
        FlagP := parity(a8[7:0]);
        FlagCY := !a8[15:8][0];
        jump ((M[a12],M[a3]));
      }
    }

0B86:

    if (!FlagZ) {
      #0B83
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a1 = (-1 + (SPH,SPL)) in
          M[a1] := 0B;
          let:16 a2 = (-1 + a1) in
          M[a2] := 83;
          SPH := a2[15:8];
          SPL := a2[7:0];
          jump (0008);
        } else {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 0B;
          let:16 a4 = (-1 + a3) in
          M[a4] := 83;
          SPH := a4[15:8];
          SPL := a4[7:0];
          jump (0010);
        }
      } else {
        let:16 a5 = (-1 + (SPH,SPL)) in
        M[a5] := 0B;
        let:16 a6 = (-1 + a5) in
        M[a6] := 86;
        #return-to: 0B86
        #0A59
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a7 = (-1 + a6) in
            M[a7] := 0A;
            let:16 a8 = (-1 + a7) in
            M[a8] := 59;
            SPH := a8[15:8];
            SPL := a8[7:0];
            jump (0008);
          } else {
            let:16 a9 = (-1 + a6) in
            M[a9] := 0A;
            let:16 a10 = (-1 + a9) in
            M[a10] := 59;
            SPH := a10[15:8];
            SPL := a10[7:0];
            jump (0010);
          }
        } else {
          #0A5C
          let:16 a11 = addWithCarry(!false,M[2015],~FF) in
          let:8 a12 = (M[2015] & 0F) in
          let:8 a13 = (~FF & 0F) in
          let:16 a14 = addWithCarry(!false,a12,a13) in
          #0A5E
          let:16 a15 = (1 + a6) in
          let:16 a16 = (1 + a15) in
          A := M[2015];
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          FlagCY := !a11[15:8][0];
          jump ((M[a15],M[a6]));
        }
      }
    } else {
      #0B89
      let:8 a17 = (A ^ A) in
      #0B8A
      M[20C1] := a17;
      #0B8D
      let:16 a18 = (-1 + (SPH,SPL)) in
      M[a18] := 0B;
      let:16 a19 = (-1 + a18) in
      M[a19] := 90;
      #return-to: 0B90
      #0AB1
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a20 = (-1 + a19) in
          M[a20] := 0A;
          let:16 a21 = (-1 + a20) in
          M[a21] := B1;
          A := a17;
          SPH := a21[15:8];
          SPL := a21[7:0];
          FlagS := a17[7];
          FlagZ := is_zero(a17);
          FlagA := false;
          FlagP := parity(a17);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a22 = (-1 + a19) in
          M[a22] := 0A;
          let:16 a23 = (-1 + a22) in
          M[a23] := B1;
          A := a17;
          SPH := a23[15:8];
          SPL := a23[7:0];
          FlagS := a17[7];
          FlagZ := is_zero(a17);
          FlagA := false;
          FlagP := parity(a17);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #0AB3
        #0AD7
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a24 = (-1 + a19) in
            M[a24] := 0A;
            let:16 a25 = (-1 + a24) in
            M[a25] := D7;
            A := 40;
            SPH := a25[15:8];
            SPL := a25[7:0];
            FlagS := a17[7];
            FlagZ := is_zero(a17);
            FlagA := false;
            FlagP := parity(a17);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a26 = (-1 + a19) in
            M[a26] := 0A;
            let:16 a27 = (-1 + a26) in
            M[a27] := D7;
            A := 40;
            SPH := a27[15:8];
            SPL := a27[7:0];
            FlagS := a17[7];
            FlagZ := is_zero(a17);
            FlagA := false;
            FlagP := parity(a17);
            FlagCY := false;
            jump (0010);
          }
        } else {
          M[20C0] := 40;
          #0ADA
          #0ADD
          let:8 a28 = (M[20C0] & M[20C0]) in
          let:8 a29 = (M[20C0] | M[20C0]) in
          #0ADE
          if (!is_zero(a28)) {
            A := a28;
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a28[7];
            FlagZ := is_zero(a28);
            FlagA := a29[3];
            FlagP := parity(a28);
            FlagCY := false;
            jump (0ADA);
          } else {
            #0AE1
            let:16 a30 = (1 + a19) in
            let:16 a31 = (1 + a30) in
            A := a28;
            SPH := a31[15:8];
            SPL := a31[7:0];
            FlagS := a28[7];
            FlagZ := is_zero(a28);
            FlagA := a29[3];
            FlagP := parity(a28);
            FlagCY := false;
            jump ((M[a30],M[a19]));
          }
        }
      }
    }

0B90:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 93;
    #return-to: 0B93
    #1988
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 88;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 88;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #09D6
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 09;
          let:16 a8 = (-1 + a7) in
          M[a8] := D6;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 09;
          let:16 a10 = (-1 + a9) in
          M[a10] := D6;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #09D9
        M[2402] := 00;
        #09DB
        #09DC
        #09DD
        let:8 a11 = (1F & 03) in
        let:8 a12 = (1F | 03) in
        #09DF
        let:16 a13 = addWithCarry(!false,a11,~1C) in
        let:8 a14 = (a11 & 0F) in
        let:8 a15 = (~1C & 0F) in
        let:16 a16 = addWithCarry(!false,a14,a15) in
        #09E1
        if (!a13[15:8][0]) {
          #09E8
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a2) in
              M[a17] := 09;
              let:16 a18 = (-1 + a17) in
              M[a18] := E8;
              A := a11;
              H := 24;
              L := 03;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a13[7:0][7];
              FlagZ := is_zero(a13[7:0]);
              FlagA := a16[7:0][4];
              FlagP := parity(a13[7:0]);
              FlagCY := !a13[15:8][0];
              jump (0008);
            } else {
              let:16 a19 = (-1 + a2) in
              M[a19] := 09;
              let:16 a20 = (-1 + a19) in
              M[a20] := E8;
              A := a11;
              H := 24;
              L := 03;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a13[7:0][7];
              FlagZ := is_zero(a13[7:0]);
              FlagA := a16[7:0][4];
              FlagP := parity(a13[7:0]);
              FlagCY := !a13[15:8][0];
              jump (0010);
            }
          } else {
            #09E9
            let:16 a21 = addWithCarry(!false,24,~40) in
            let:8 a22 = (24 & 0F) in
            let:8 a23 = (~40 & 0F) in
            let:16 a24 = addWithCarry(!false,a22,a23) in
            #09EB
            if (!a21[15:8][0]) {
              A := 24;
              H := 24;
              L := 03;
              SPH := a2[15:8];
              SPL := a2[7:0];
              FlagS := a21[7:0][7];
              FlagZ := is_zero(a21[7:0]);
              FlagA := a24[7:0][4];
              FlagP := parity(a21[7:0]);
              FlagCY := !a21[15:8][0];
              jump (09D9);
            } else {
              #09EE
              let:16 a25 = (1 + a2) in
              let:16 a26 = (1 + a25) in
              A := 24;
              H := 24;
              L := 03;
              SPH := a26[15:8];
              SPL := a26[7:0];
              FlagS := a21[7:0][7];
              FlagZ := is_zero(a21[7:0]);
              FlagA := a24[7:0][4];
              FlagP := parity(a21[7:0]);
              FlagCY := !a21[15:8][0];
              jump ((M[a25],M[a2]));
            }
          }
        } else {
          #09E4
          #09E7
          let:17 a27 = add17(0006,2403) in
          #09E8
          #09E9
          let:16 a28 = addWithCarry(!false,a27[15:0][15:8],~40) in
          let:8 a29 = (a27[15:0][15:8] & 0F) in
          let:8 a30 = (~40 & 0F) in
          let:16 a31 = addWithCarry(!false,a29,a30) in
          #09EB
          if (!a28[15:8][0]) {
            A := a27[15:0][15:8];
            D := 00;
            E := 06;
            H := a27[15:0][15:8];
            L := a27[15:0][7:0];
            SPH := a2[15:8];
            SPL := a2[7:0];
            FlagS := a28[7:0][7];
            FlagZ := is_zero(a28[7:0]);
            FlagA := a31[7:0][4];
            FlagP := parity(a28[7:0]);
            FlagCY := !a28[15:8][0];
            jump (09D9);
          } else {
            #09EE
            let:16 a32 = (1 + a2) in
            let:16 a33 = (1 + a32) in
            A := a27[15:0][15:8];
            D := 00;
            E := 06;
            H := a27[15:0][15:8];
            L := a27[15:0][7:0];
            SPH := a33[15:8];
            SPL := a33[7:0];
            FlagS := a28[7:0][7];
            FlagZ := is_zero(a28[7:0]);
            FlagA := a31[7:0][4];
            FlagP := parity(a28[7:0]);
            FlagCY := !a28[15:8][0];
            jump ((M[a32],M[a2]));
          }
        }
      }
    }

0B93:

    #0B95
    #0B98
    #0B9B
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := 9E;
    #return-to: 0B9E
    #08F3
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 08;
        let:16 a4 = (-1 + a3) in
        M[a4] := F3;
        C := 0C;
        D := 1F;
        E := 90;
        H := 2C;
        L := 11;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 08;
        let:16 a6 = (-1 + a5) in
        M[a6] := F3;
        C := 0C;
        D := 1F;
        E := 90;
        H := 2C;
        L := 11;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #08F4
      let:16 a7 = (-1 + a2) in
      M[a7] := 1F;
      let:16 a8 = (-1 + a7) in
      M[a8] := 90;
      #08F5
      let:16 a9 = (-1 + a8) in
      M[a9] := 08;
      let:16 a10 = (-1 + a9) in
      M[a10] := F8;
      #return-to: 08F8
      #08FF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a11 = (-1 + a10) in
          M[a11] := 08;
          let:16 a12 = (-1 + a11) in
          M[a12] := FF;
          A := 08;
          C := 0C;
          D := 1F;
          E := 90;
          H := 2C;
          L := 11;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0008);
        } else {
          let:16 a13 = (-1 + a10) in
          M[a13] := 08;
          let:16 a14 = (-1 + a13) in
          M[a14] := FF;
          A := 08;
          C := 0C;
          D := 1F;
          E := 90;
          H := 2C;
          L := 11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          jump (0010);
        }
      } else {
        #0902
        let:16 a15 = (-1 + a10) in
        M[a15] := 2C;
        let:16 a16 = (-1 + a15) in
        M[a16] := 11;
        #0903
        #0905
        #0906
        let:17 a17 = add17(0008,0008) in
        #0907
        let:17 a18 = add17(a17[15:0],a17[15:0]) in
        #0908
        let:17 a19 = add17(a18[15:0],a18[15:0]) in
        #0909
        let:17 a20 = add17(1E00,a19[15:0]) in
        #090A
        #090B
        let:16 a21 = (1 + a16) in
        let:16 a22 = (1 + a21) in
        #090C
        #090E
        #0910
        #1439
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a23 = (-1 + a22) in
            M[a23] := 14;
            let:16 a24 = (-1 + a23) in
            M[a24] := 39;
            A := 08;
            B := 08;
            C := 0C;
            D := a20[15:0][15:8];
            E := a20[15:0][7:0];
            H := M[a21];
            L := M[a16];
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagCY := a20[16];
            jump (0008);
          } else {
            let:16 a25 = (-1 + a22) in
            M[a25] := 14;
            let:16 a26 = (-1 + a25) in
            M[a26] := 39;
            A := 08;
            B := 08;
            C := 0C;
            D := a20[15:0][15:8];
            E := a20[15:0][7:0];
            H := M[a21];
            L := M[a16];
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagCY := a20[16];
            jump (0010);
          }
        } else {
          let:16 a27 = (-1 + a22) in
          M[a27] := 08;
          let:16 a28 = (-1 + a27) in
          M[a28] := 0C;
          #143A
          #143B
          M[(M[a21],M[a16])] := M[a20[15:0]];
          #143C
          let:16 a29 = (1 + a20[15:0]) in
          #143D
          #1440
          let:17 a30 = add17(0020,(M[a21],M[a16])) in
          #1441
          let:16 a31 = (1 + a28) in
          let:16 a32 = (1 + a31) in
          #1442
          let:16 a33 = addWithCarry(!true,M[a31],~00) in
          let:8 a34 = (M[a31] & 0F) in
          let:8 a35 = (~00 & 0F) in
          let:16 a36 = addWithCarry(!true,a34,a35) in
          #1443
          if (!is_zero(a33[7:0])) {
            A := M[a20[15:0]];
            B := a33[7:0];
            C := M[a28];
            D := a29[15:8];
            E := a29[7:0];
            H := a30[15:0][15:8];
            L := a30[15:0][7:0];
            SPH := a32[15:8];
            SPL := a32[7:0];
            FlagS := a33[7:0][7];
            FlagZ := is_zero(a33[7:0]);
            FlagA := a36[7:0][4];
            FlagP := parity(a33[7:0]);
            FlagCY := a30[16];
            jump (1439);
          } else {
            #1446
            let:16 a37 = (1 + a32) in
            let:16 a38 = (1 + a37) in
            A := M[a20[15:0]];
            B := a33[7:0];
            C := M[a28];
            D := a29[15:8];
            E := a29[7:0];
            H := a30[15:0][15:8];
            L := a30[15:0][7:0];
            SPH := a38[15:8];
            SPL := a38[7:0];
            FlagS := a33[7:0][7];
            FlagZ := is_zero(a33[7:0]);
            FlagA := a36[7:0][4];
            FlagP := parity(a33[7:0]);
            FlagCY := a30[16];
            jump ((M[a37],M[a32]));
          }
        }
      }
    }

0B9E:

    #0BA1
    let:16 a1 = addWithCarry(!false,M[20EC],~00) in
    let:8 a2 = (M[20EC] & 0F) in
    let:8 a3 = (~00 & 0F) in
    let:16 a4 = addWithCarry(!false,a2,a3) in
    #0BA3
    if (!is_zero(a1[7:0])) {
      A := M[20EC];
      FlagS := a1[7:0][7];
      FlagZ := is_zero(a1[7:0]);
      FlagA := a4[7:0][4];
      FlagP := parity(a1[7:0]);
      FlagCY := !a1[15:8][0];
      jump (0BAE);
    } else {
      #0BA6
      #0BA9
      #0BAB
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 0B;
      let:16 a6 = (-1 + a5) in
      M[a6] := AE;
      #return-to: 0BAE
      #08FF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 08;
          let:16 a8 = (-1 + a7) in
          M[a8] := FF;
          A := 02;
          H := 33;
          L := 11;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 08;
          let:16 a10 = (-1 + a9) in
          M[a10] := FF;
          A := 02;
          H := 33;
          L := 11;
          SPH := a10[15:8];
          SPL := a10[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0010);
        }
      } else {
        #0902
        let:16 a11 = (-1 + a6) in
        M[a11] := 33;
        let:16 a12 = (-1 + a11) in
        M[a12] := 11;
        #0903
        #0905
        #0906
        let:17 a13 = add17(0002,0002) in
        #0907
        let:17 a14 = add17(a13[15:0],a13[15:0]) in
        #0908
        let:17 a15 = add17(a14[15:0],a14[15:0]) in
        #0909
        let:17 a16 = add17(1E00,a15[15:0]) in
        #090A
        #090B
        let:16 a17 = (1 + a12) in
        let:16 a18 = (1 + a17) in
        #090C
        #090E
        #0910
        #1439
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a19 = (-1 + a18) in
            M[a19] := 14;
            let:16 a20 = (-1 + a19) in
            M[a20] := 39;
            A := 02;
            B := 08;
            D := a16[15:0][15:8];
            E := a16[15:0][7:0];
            H := M[a17];
            L := M[a12];
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := a16[16];
            jump (0008);
          } else {
            let:16 a21 = (-1 + a18) in
            M[a21] := 14;
            let:16 a22 = (-1 + a21) in
            M[a22] := 39;
            A := 02;
            B := 08;
            D := a16[15:0][15:8];
            E := a16[15:0][7:0];
            H := M[a17];
            L := M[a12];
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := a16[16];
            jump (0010);
          }
        } else {
          let:16 a23 = (-1 + a18) in
          M[a23] := 08;
          let:16 a24 = (-1 + a23) in
          M[a24] := C;
          #143A
          #143B
          M[(M[a17],M[a12])] := M[a16[15:0]];
          #143C
          let:16 a25 = (1 + a16[15:0]) in
          #143D
          #1440
          let:17 a26 = add17(0020,(M[a17],M[a12])) in
          #1441
          let:16 a27 = (1 + a24) in
          let:16 a28 = (1 + a27) in
          #1442
          let:16 a29 = addWithCarry(!true,M[a27],~00) in
          let:8 a30 = (M[a27] & 0F) in
          let:8 a31 = (~00 & 0F) in
          let:16 a32 = addWithCarry(!true,a30,a31) in
          #1443
          if (!is_zero(a29[7:0])) {
            A := M[a16[15:0]];
            B := a29[7:0];
            C := M[a24];
            D := a25[15:8];
            E := a25[7:0];
            H := a26[15:0][15:8];
            L := a26[15:0][7:0];
            SPH := a28[15:8];
            SPL := a28[7:0];
            FlagS := a29[7:0][7];
            FlagZ := is_zero(a29[7:0]);
            FlagA := a32[7:0][4];
            FlagP := parity(a29[7:0]);
            FlagCY := a26[16];
            jump (1439);
          } else {
            #1446
            let:16 a33 = (1 + a28) in
            let:16 a34 = (1 + a33) in
            A := M[a16[15:0]];
            B := a29[7:0];
            C := M[a24];
            D := a25[15:8];
            E := a25[7:0];
            H := a26[15:0][15:8];
            L := a26[15:0][7:0];
            SPH := a34[15:8];
            SPL := a34[7:0];
            FlagS := a29[7:0][7];
            FlagZ := is_zero(a29[7:0]);
            FlagA := a32[7:0][4];
            FlagP := parity(a29[7:0]);
            FlagCY := a26[16];
            jump ((M[a33],M[a28]));
          }
        }
      }
    }

0BAE:

    #0BB1
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := B4;
    #return-to: 0BB4
    #1856
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := 56;
        B := 1F;
        C := 9C;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 18;
        let:16 a6 = (-1 + a5) in
        M[a6] := 56;
        B := 1F;
        C := 9C;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1857
      let:16 a7 = addWithCarry(!false,0D,~FF) in
      let:8 a8 = (0D & 0F) in
      let:8 a9 = (~FF & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #1859
      #185A
      if (is_zero(a7[7:0])) {
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := 0D;
        B := 1F;
        C := 9C;
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := true;
        jump ((M[a11],M[a2]));
      } else {
        #185B
        #185C
        #185D
        #185E
        #185F
        #1860
        #1861
        #1862
        #1863
        #1864
        #1865
        #1866
        let:8 a13 = (1F & 1F) in
        let:8 a14 = (1F | 1F) in
        #1867
        let:16 a15 = (1 + a2) in
        let:16 a16 = (1 + a15) in
        A := a13;
        B := 1F;
        C := A0;
        D := 1F;
        E := 50;
        H := 2A;
        L := 0D;
        SPH := a16[15:8];
        SPL := a16[7:0];
        FlagS := a13[7];
        FlagZ := is_zero(a13);
        FlagA := a14[3];
        FlagP := parity(a13);
        FlagCY := false;
        jump ((M[a15],M[a2]));
      }
    }

0BB4:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := B7;
    #return-to: 0BB7
    #184C
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := 4C;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 18;
        let:16 a6 = (-1 + a5) in
        M[a6] := 4C;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := B;
      let:16 a8 = (-1 + a7) in
      M[a8] := C;
      #184D
      #1850
      #1851
      let:16 a9 = (-1 + a8) in
      M[a9] := 18;
      let:16 a10 = (-1 + a9) in
      M[a10] := 54;
      #return-to: 1854
      #0A93
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a11 = (-1 + a10) in
          M[a11] := 0A;
          let:16 a12 = (-1 + a11) in
          M[a12] := 93;
          A := M[206C];
          C := M[206C];
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0008);
        } else {
          let:16 a13 = (-1 + a10) in
          M[a13] := 0A;
          let:16 a14 = (-1 + a13) in
          M[a14] := 93;
          A := M[206C];
          C := M[206C];
          SPH := a14[15:8];
          SPL := a14[7:0];
          jump (0010);
        }
      } else {
        let:16 a15 = (-1 + a10) in
        M[a15] := D;
        let:16 a16 = (-1 + a15) in
        M[a16] := E;
        #0A94
        #0A95
        let:16 a17 = (-1 + a16) in
        M[a17] := 0A;
        let:16 a18 = (-1 + a17) in
        M[a18] := 98;
        #return-to: 0A98
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a19 = (-1 + a18) in
            M[a19] := 08;
            let:16 a20 = (-1 + a19) in
            M[a20] := FF;
            A := M[(D,E)];
            C := M[206C];
            SPH := a20[15:8];
            SPL := a20[7:0];
            jump (0008);
          } else {
            let:16 a21 = (-1 + a18) in
            M[a21] := 08;
            let:16 a22 = (-1 + a21) in
            M[a22] := FF;
            A := M[(D,E)];
            C := M[206C];
            SPH := a22[15:8];
            SPL := a22[7:0];
            jump (0010);
          }
        } else {
          #0902
          let:16 a23 = (-1 + a18) in
          M[a23] := H;
          let:16 a24 = (-1 + a23) in
          M[a24] := L;
          #0903
          #0905
          #0906
          let:17 a25 = add17((00,M[(D,E)]),(00,M[(D,E)])) in
          #0907
          let:17 a26 = add17(a25[15:0],a25[15:0]) in
          #0908
          let:17 a27 = add17(a26[15:0],a26[15:0]) in
          #0909
          let:17 a28 = add17(1E00,a27[15:0]) in
          #090A
          #090B
          let:16 a29 = (1 + a24) in
          let:16 a30 = (1 + a29) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a31 = (-1 + a30) in
              M[a31] := 14;
              let:16 a32 = (-1 + a31) in
              M[a32] := 39;
              A := M[(D,E)];
              B := 08;
              C := M[206C];
              D := a28[15:0][15:8];
              E := a28[15:0][7:0];
              H := M[a29];
              L := M[a24];
              SPH := a32[15:8];
              SPL := a32[7:0];
              FlagCY := a28[16];
              jump (0008);
            } else {
              let:16 a33 = (-1 + a30) in
              M[a33] := 14;
              let:16 a34 = (-1 + a33) in
              M[a34] := 39;
              A := M[(D,E)];
              B := 08;
              C := M[206C];
              D := a28[15:0][15:8];
              E := a28[15:0][7:0];
              H := M[a29];
              L := M[a24];
              SPH := a34[15:8];
              SPL := a34[7:0];
              FlagCY := a28[16];
              jump (0010);
            }
          } else {
            let:16 a35 = (-1 + a30) in
            M[a35] := 08;
            let:16 a36 = (-1 + a35) in
            M[a36] := M[206C];
            #143A
            #143B
            M[(M[a29],M[a24])] := M[a28[15:0]];
            #143C
            let:16 a37 = (1 + a28[15:0]) in
            #143D
            #1440
            let:17 a38 = add17(0020,(M[a29],M[a24])) in
            #1441
            let:16 a39 = (1 + a36) in
            let:16 a40 = (1 + a39) in
            #1442
            let:16 a41 = addWithCarry(!true,M[a39],~00) in
            let:8 a42 = (M[a39] & 0F) in
            let:8 a43 = (~00 & 0F) in
            let:16 a44 = addWithCarry(!true,a42,a43) in
            #1443
            if (!is_zero(a41[7:0])) {
              A := M[a28[15:0]];
              B := a41[7:0];
              C := M[a36];
              D := a37[15:8];
              E := a37[7:0];
              H := a38[15:0][15:8];
              L := a38[15:0][7:0];
              SPH := a40[15:8];
              SPL := a40[7:0];
              FlagS := a41[7:0][7];
              FlagZ := is_zero(a41[7:0]);
              FlagA := a44[7:0][4];
              FlagP := parity(a41[7:0]);
              FlagCY := a38[16];
              jump (1439);
            } else {
              #1446
              let:16 a45 = (1 + a40) in
              let:16 a46 = (1 + a45) in
              A := M[a28[15:0]];
              B := a41[7:0];
              C := M[a36];
              D := a37[15:8];
              E := a37[7:0];
              H := a38[15:0][15:8];
              L := a38[15:0][7:0];
              SPH := a46[15:8];
              SPL := a46[7:0];
              FlagS := a41[7:0][7];
              FlagZ := is_zero(a41[7:0]);
              FlagA := a44[7:0][4];
              FlagP := parity(a41[7:0]);
              FlagCY := a38[16];
              jump ((M[a45],M[a40]));
            }
          }
        }
      }
    }

0BB7:

    #0BB9
    #0BBA
    if (updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))[7]) {
      A := updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off)) << 01),0,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))[7]);
      FlagCY := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))[7];
      jump (0BC3);
    } else {
      #0BBD
      #0BC0
      let:16 a1 = (-1 + (SPH,SPL)) in
      M[a1] := 0B;
      let:16 a2 = (-1 + a1) in
      M[a2] := C3;
      #return-to: 0BC3
      #183A
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + a2) in
          M[a3] := 18;
          let:16 a4 = (-1 + a3) in
          M[a4] := 3A;
          A := updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off)) << 01),0,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))[7]);
          B := 1F;
          C := A0;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagCY := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))[7];
          jump (0008);
        } else {
          let:16 a5 = (-1 + a2) in
          M[a5] := 18;
          let:16 a6 = (-1 + a5) in
          M[a6] := 3A;
          A := updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off)) << 01),0,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))[7]);
          B := 1F;
          C := A0;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagCY := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))[7];
          jump (0010);
        }
      } else {
        let:16 a7 = (-1 + a2) in
        M[a7] := 18;
        let:16 a8 = (-1 + a7) in
        M[a8] := 3D;
        #return-to: 183D
        #1856
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a8) in
            M[a9] := 18;
            let:16 a10 = (-1 + a9) in
            M[a10] := 56;
            A := updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off)) << 01),0,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))[7]);
            B := 1F;
            C := A0;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagCY := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))[7];
            jump (0008);
          } else {
            let:16 a11 = (-1 + a8) in
            M[a11] := 18;
            let:16 a12 = (-1 + a11) in
            M[a12] := 56;
            A := updateBit((updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off)) << 01),0,updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))[7]);
            B := 1F;
            C := A0;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagCY := updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,is_pressed([dip3] lives (3,4,5,6) lsb)),1,is_pressed([dip5] lives (3,4,5,6) msb)),2,is_pressed(TILT)),3,is_pressed([dip6] extra ship at 1000)),4,is_pressed(player2 shoot)),5,is_pressed(player2 left)),6,is_pressed(player2 right)),7,is_pressed([dip7] coin info off))[7];
            jump (0010);
          }
        } else {
          #1857
          let:16 a13 = addWithCarry(!false,0A,~FF) in
          let:8 a14 = (0A & 0F) in
          let:8 a15 = (~FF & 0F) in
          let:16 a16 = addWithCarry(!false,a14,a15) in
          #1859
          #185A
          if (is_zero(a13[7:0])) {
            let:16 a17 = (1 + a8) in
            let:16 a18 = (1 + a17) in
            A := 0A;
            B := 1F;
            C := A0;
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a13[7:0][7];
            FlagZ := is_zero(a13[7:0]);
            FlagA := a16[7:0][4];
            FlagP := parity(a13[7:0]);
            FlagCY := true;
            jump ((M[a17],M[a8]));
          } else {
            #185B
            #185C
            #185D
            #185E
            #185F
            #1860
            #1861
            #1862
            #1863
            #1864
            #1865
            #1866
            let:8 a19 = (1F & 1F) in
            let:8 a20 = (1F | 1F) in
            #1867
            let:16 a21 = (1 + a8) in
            let:16 a22 = (1 + a21) in
            A := a19;
            B := 1F;
            C := A4;
            D := 1F;
            E := 62;
            H := 2A;
            L := 0A;
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a19[7];
            FlagZ := is_zero(a19);
            FlagA := a20[3];
            FlagP := parity(a19);
            FlagCY := false;
            jump ((M[a21],M[a8]));
          }
        }
      }
    }

0BC3:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := C6;
    #return-to: 0BC6
    #0AB6
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := B6;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := B6;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AB8
      #0AD7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := D7;
          A := 80;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := D7;
          A := 80;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        M[20C0] := 80;
        #0ADA
        #0ADD
        let:8 a11 = (M[20C0] & M[20C0]) in
        let:8 a12 = (M[20C0] | M[20C0]) in
        #0ADE
        if (!is_zero(a11)) {
          A := a11;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump (0ADA);
        } else {
          #0AE1
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        }
      }
    }

0BC6:

    #0BC9
    let:16 a1 = addWithCarry(!false,M[20EC],~00) in
    let:8 a2 = (M[20EC] & 0F) in
    let:8 a3 = (~00 & 0F) in
    let:16 a4 = addWithCarry(!false,a2,a3) in
    #0BCB
    if (!is_zero(a1[7:0])) {
      A := M[20EC];
      FlagS := a1[7:0][7];
      FlagZ := is_zero(a1[7:0]);
      FlagA := a4[7:0][4];
      FlagP := parity(a1[7:0]);
      FlagCY := !a1[15:8][0];
      jump (0BDA);
    } else {
      #0BCE
      #0BD1
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 0B;
      let:16 a6 = (-1 + a5) in
      M[a6] := D4;
      #return-to: 0BD4
      #0AE2
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := E2;
          A := M[20EC];
          D := 1F;
          E := D5;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := E2;
          A := M[20EC];
          D := 1F;
          E := D5;
          SPH := a10[15:8];
          SPL := a10[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0010);
        }
      } else {
        #0AE5
        #0AE7
        #1A32
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a6) in
            M[a11] := 1A;
            let:16 a12 = (-1 + a11) in
            M[a12] := 32;
            A := M[20EC];
            B := 0C;
            D := 1F;
            E := D5;
            H := 20;
            L := C2;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a6) in
            M[a13] := 1A;
            let:16 a14 = (-1 + a13) in
            M[a14] := 32;
            A := M[20EC];
            B := 0C;
            D := 1F;
            E := D5;
            H := 20;
            L := C2;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump (0010);
          }
        } else {
          #1A33
          M[20C2] := 00;
          #1A34
          #1A35
          #1A36
          let:16 a15 = addWithCarry(!true,0C,~00) in
          let:8 a16 = (0C & 0F) in
          let:8 a17 = (~00 & 0F) in
          let:16 a18 = addWithCarry(!true,a16,a17) in
          #1A37
          if (!is_zero(a15[7:0])) {
            A := 00;
            B := a15[7:0];
            D := 1F;
            E := D6;
            H := 20;
            L := C3;
            SPH := a6[15:8];
            SPL := a6[7:0];
            FlagS := a15[7:0][7];
            FlagZ := is_zero(a15[7:0]);
            FlagA := a18[7:0][4];
            FlagP := parity(a15[7:0]);
            FlagCY := !a1[15:8][0];
            jump (1A32);
          } else {
            #1A3A
            let:16 a19 = (1 + a6) in
            let:16 a20 = (1 + a19) in
            A := 00;
            B := a15[7:0];
            D := 1F;
            E := D6;
            H := 20;
            L := C3;
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a15[7:0][7];
            FlagZ := is_zero(a15[7:0]);
            FlagA := a18[7:0][4];
            FlagP := parity(a15[7:0]);
            FlagCY := !a1[15:8][0];
            jump ((M[a19],M[a6]));
          }
        }
      }
    }

0BD4:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := D7;
    #return-to: 0BD7
    #0A80
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 80;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 80;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0A82
      M[20C1] := 02;
      #0A85
      #0A87
      #0A8A
      let:8 a7 = (M[20CB] & M[20CB]) in
      let:8 a8 = (M[20CB] | M[20CB]) in
      #0A8B
      if (is_zero(a7)) {
        A := a7;
        SPH := a2[15:8];
        SPL := a2[7:0];
        FlagS := a7[7];
        FlagZ := is_zero(a7);
        FlagA := a8[3];
        FlagP := parity(a7);
        FlagCY := false;
        jump (0A85);
      } else {
        #0A8E
        let:8 a9 = (a7 ^ a7) in
        #0A8F
        M[20C1] := a9;
        #0A92
        let:16 a10 = (1 + a2) in
        let:16 a11 = (1 + a10) in
        A := a9;
        SPH := a11[15:8];
        SPL := a11[7:0];
        FlagS := a9[7];
        FlagZ := is_zero(a9);
        FlagA := false;
        FlagP := parity(a9);
        FlagCY := false;
        jump ((M[a10],M[a2]));
      }
    }

0BD7:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 0B;
    let:16 a2 = (-1 + a1) in
    M[a2] := DA;
    #return-to: 0BDA
    #189E
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := 9E;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 18;
        let:16 a6 = (-1 + a5) in
        M[a6] := 9E;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #18A1
      #18A4
      #18A6
      let:16 a7 = (-1 + a2) in
      M[a7] := 18;
      let:16 a8 = (-1 + a7) in
      M[a8] := A9;
      #return-to: 18A9
      #1A32
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 1A;
          let:16 a10 = (-1 + a9) in
          M[a10] := 32;
          B := 10;
          D := 1B;
          E := C0;
          H := 20;
          L := 50;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 1A;
          let:16 a12 = (-1 + a11) in
          M[a12] := 32;
          B := 10;
          D := 1B;
          E := C0;
          H := 20;
          L := 50;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1A33
        M[2050] := 00;
        #1A34
        #1A35
        #1A36
        let:16 a13 = addWithCarry(!true,10,~00) in
        let:8 a14 = (10 & 0F) in
        let:8 a15 = (~00 & 0F) in
        let:16 a16 = addWithCarry(!true,a14,a15) in
        #1A37
        if (!is_zero(a13[7:0])) {
          A := 00;
          B := a13[7:0];
          D := 1B;
          E := C1;
          H := 20;
          L := 51;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          jump (1A32);
        } else {
          #1A3A
          let:16 a17 = (1 + a8) in
          let:16 a18 = (1 + a17) in
          A := 00;
          B := a13[7:0];
          D := 1B;
          E := C1;
          H := 20;
          L := 51;
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          jump ((M[a17],M[a8]));
        }
      }
    }

0BDA:

    #0BDD
    #0BDE
    let:16 a1 = addWithCarry(true,M[20EC],00) in
    let:8 a2 = (M[20EC] & 0F) in
    let:8 a3 = (00 & 0F) in
    let:16 a4 = addWithCarry(true,a2,a3) in
    #0BDF
    let:8 a5 = (01 & a1[7:0]) in
    let:8 a6 = (01 | a1[7:0]) in
    #0BE1
    M[20EC] := a5;
    #0BE2
    let:16 a7 = (-1 + (SPH,SPL)) in
    M[a7] := 0B;
    let:16 a8 = (-1 + a7) in
    M[a8] := E5;
    #return-to: 0BE5
    #09D6
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a9 = (-1 + a8) in
        M[a9] := 09;
        let:16 a10 = (-1 + a9) in
        M[a10] := D6;
        A := a5;
        H := 20;
        L := EC;
        SPH := a10[15:8];
        SPL := a10[7:0];
        FlagS := a5[7];
        FlagZ := is_zero(a5);
        FlagA := a6[3];
        FlagP := parity(a5);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a11 = (-1 + a8) in
        M[a11] := 09;
        let:16 a12 = (-1 + a11) in
        M[a12] := D6;
        A := a5;
        H := 20;
        L := EC;
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a5[7];
        FlagZ := is_zero(a5);
        FlagA := a6[3];
        FlagP := parity(a5);
        FlagCY := false;
        jump (0010);
      }
    } else {
      #09D9
      M[2402] := 00;
      #09DB
      #09DC
      #09DD
      let:8 a13 = (1F & 03) in
      let:8 a14 = (1F | 03) in
      #09DF
      let:16 a15 = addWithCarry(!false,a13,~1C) in
      let:8 a16 = (a13 & 0F) in
      let:8 a17 = (~1C & 0F) in
      let:16 a18 = addWithCarry(!false,a16,a17) in
      #09E1
      if (!a15[15:8][0]) {
        #09E8
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a19 = (-1 + a8) in
            M[a19] := 09;
            let:16 a20 = (-1 + a19) in
            M[a20] := E8;
            A := a13;
            H := 24;
            L := 03;
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a15[7:0][7];
            FlagZ := is_zero(a15[7:0]);
            FlagA := a18[7:0][4];
            FlagP := parity(a15[7:0]);
            FlagCY := !a15[15:8][0];
            jump (0008);
          } else {
            let:16 a21 = (-1 + a8) in
            M[a21] := 09;
            let:16 a22 = (-1 + a21) in
            M[a22] := E8;
            A := a13;
            H := 24;
            L := 03;
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a15[7:0][7];
            FlagZ := is_zero(a15[7:0]);
            FlagA := a18[7:0][4];
            FlagP := parity(a15[7:0]);
            FlagCY := !a15[15:8][0];
            jump (0010);
          }
        } else {
          #09E9
          let:16 a23 = addWithCarry(!false,24,~40) in
          let:8 a24 = (24 & 0F) in
          let:8 a25 = (~40 & 0F) in
          let:16 a26 = addWithCarry(!false,a24,a25) in
          #09EB
          if (!a23[15:8][0]) {
            A := 24;
            H := 24;
            L := 03;
            SPH := a8[15:8];
            SPL := a8[7:0];
            FlagS := a23[7:0][7];
            FlagZ := is_zero(a23[7:0]);
            FlagA := a26[7:0][4];
            FlagP := parity(a23[7:0]);
            FlagCY := !a23[15:8][0];
            jump (09D9);
          } else {
            #09EE
            let:16 a27 = (1 + a8) in
            let:16 a28 = (1 + a27) in
            A := 24;
            H := 24;
            L := 03;
            SPH := a28[15:8];
            SPL := a28[7:0];
            FlagS := a23[7:0][7];
            FlagZ := is_zero(a23[7:0]);
            FlagA := a26[7:0][4];
            FlagP := parity(a23[7:0]);
            FlagCY := !a23[15:8][0];
            jump ((M[a27],M[a8]));
          }
        }
      } else {
        #09E4
        #09E7
        let:17 a29 = add17(0006,2403) in
        #09E8
        #09E9
        let:16 a30 = addWithCarry(!false,a29[15:0][15:8],~40) in
        let:8 a31 = (a29[15:0][15:8] & 0F) in
        let:8 a32 = (~40 & 0F) in
        let:16 a33 = addWithCarry(!false,a31,a32) in
        #09EB
        if (!a30[15:8][0]) {
          A := a29[15:0][15:8];
          D := 00;
          E := 06;
          H := a29[15:0][15:8];
          L := a29[15:0][7:0];
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a30[7:0][7];
          FlagZ := is_zero(a30[7:0]);
          FlagA := a33[7:0][4];
          FlagP := parity(a30[7:0]);
          FlagCY := !a30[15:8][0];
          jump (09D9);
        } else {
          #09EE
          let:16 a34 = (1 + a8) in
          let:16 a35 = (1 + a34) in
          A := a29[15:0][15:8];
          D := 00;
          E := 06;
          H := a29[15:0][15:8];
          L := a29[15:0][7:0];
          SPH := a35[15:8];
          SPL := a35[7:0];
          FlagS := a30[7:0][7];
          FlagZ := is_zero(a30[7:0]);
          FlagA := a33[7:0][4];
          FlagP := parity(a30[7:0]);
          FlagCY := !a30[15:8][0];
          jump ((M[a34],M[a8]));
        }
      }
    }

0BE5:

    jump (18DF);

0BEE:

    #0B0B
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 0B;
        let:16 a2 = (-1 + a1) in
        M[a2] := 0B;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 0B;
        let:16 a4 = (-1 + a3) in
        M[a4] := 0B;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 0B;
      let:16 a6 = (-1 + a5) in
      M[a6] := 0E;
      #return-to: 0B0E
      #0ACF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := CF;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := CF;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #0AD2
        #0AD4
        #0A93
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a6) in
            M[a11] := 0A;
            let:16 a12 = (-1 + a11) in
            M[a12] := 93;
            C := 0F;
            H := 2B;
            L := 14;
            SPH := a12[15:8];
            SPL := a12[7:0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a6) in
            M[a13] := 0A;
            let:16 a14 = (-1 + a13) in
            M[a14] := 93;
            C := 0F;
            H := 2B;
            L := 14;
            SPH := a14[15:8];
            SPL := a14[7:0];
            jump (0010);
          }
        } else {
          let:16 a15 = (-1 + a6) in
          M[a15] := D;
          let:16 a16 = (-1 + a15) in
          M[a16] := E;
          #0A94
          #0A95
          let:16 a17 = (-1 + a16) in
          M[a17] := 0A;
          let:16 a18 = (-1 + a17) in
          M[a18] := 98;
          #return-to: 0A98
          #08FF
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a19 = (-1 + a18) in
              M[a19] := 08;
              let:16 a20 = (-1 + a19) in
              M[a20] := FF;
              A := M[(D,E)];
              C := 0F;
              H := 2B;
              L := 14;
              SPH := a20[15:8];
              SPL := a20[7:0];
              jump (0008);
            } else {
              let:16 a21 = (-1 + a18) in
              M[a21] := 08;
              let:16 a22 = (-1 + a21) in
              M[a22] := FF;
              A := M[(D,E)];
              C := 0F;
              H := 2B;
              L := 14;
              SPH := a22[15:8];
              SPL := a22[7:0];
              jump (0010);
            }
          } else {
            #0902
            let:16 a23 = (-1 + a18) in
            M[a23] := 2B;
            let:16 a24 = (-1 + a23) in
            M[a24] := 14;
            #0903
            #0905
            #0906
            let:17 a25 = add17((00,M[(D,E)]),(00,M[(D,E)])) in
            #0907
            let:17 a26 = add17(a25[15:0],a25[15:0]) in
            #0908
            let:17 a27 = add17(a26[15:0],a26[15:0]) in
            #0909
            let:17 a28 = add17(1E00,a27[15:0]) in
            #090A
            #090B
            let:16 a29 = (1 + a24) in
            let:16 a30 = (1 + a29) in
            #090C
            #090E
            #0910
            #1439
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a31 = (-1 + a30) in
                M[a31] := 14;
                let:16 a32 = (-1 + a31) in
                M[a32] := 39;
                A := M[(D,E)];
                B := 08;
                C := 0F;
                D := a28[15:0][15:8];
                E := a28[15:0][7:0];
                H := M[a29];
                L := M[a24];
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagCY := a28[16];
                jump (0008);
              } else {
                let:16 a33 = (-1 + a30) in
                M[a33] := 14;
                let:16 a34 = (-1 + a33) in
                M[a34] := 39;
                A := M[(D,E)];
                B := 08;
                C := 0F;
                D := a28[15:0][15:8];
                E := a28[15:0][7:0];
                H := M[a29];
                L := M[a24];
                SPH := a34[15:8];
                SPL := a34[7:0];
                FlagCY := a28[16];
                jump (0010);
              }
            } else {
              let:16 a35 = (-1 + a30) in
              M[a35] := 08;
              let:16 a36 = (-1 + a35) in
              M[a36] := 0F;
              #143A
              #143B
              M[(M[a29],M[a24])] := M[a28[15:0]];
              #143C
              let:16 a37 = (1 + a28[15:0]) in
              #143D
              #1440
              let:17 a38 = add17(0020,(M[a29],M[a24])) in
              #1441
              let:16 a39 = (1 + a36) in
              let:16 a40 = (1 + a39) in
              #1442
              let:16 a41 = addWithCarry(!true,M[a39],~00) in
              let:8 a42 = (M[a39] & 0F) in
              let:8 a43 = (~00 & 0F) in
              let:16 a44 = addWithCarry(!true,a42,a43) in
              #1443
              if (!is_zero(a41[7:0])) {
                A := M[a28[15:0]];
                B := a41[7:0];
                C := M[a36];
                D := a37[15:8];
                E := a37[7:0];
                H := a38[15:0][15:8];
                L := a38[15:0][7:0];
                SPH := a40[15:8];
                SPL := a40[7:0];
                FlagS := a41[7:0][7];
                FlagZ := is_zero(a41[7:0]);
                FlagA := a44[7:0][4];
                FlagP := parity(a41[7:0]);
                FlagCY := a38[16];
                jump (1439);
              } else {
                #1446
                let:16 a45 = (1 + a40) in
                let:16 a46 = (1 + a45) in
                A := M[a28[15:0]];
                B := a41[7:0];
                C := M[a36];
                D := a37[15:8];
                E := a37[7:0];
                H := a38[15:0][15:8];
                L := a38[15:0][7:0];
                SPH := a46[15:8];
                SPL := a46[7:0];
                FlagS := a41[7:0][7];
                FlagZ := is_zero(a41[7:0]);
                FlagA := a44[7:0][4];
                FlagP := parity(a41[7:0]);
                FlagCY := a38[16];
                jump ((M[a45],M[a40]));
              }
            }
          }
        }
      }
    }

0BF4:

    #199A
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 19;
        let:16 a2 = (-1 + a1) in
        M[a2] := 9A;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 9A;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      #199D
      let:8 a5 = (M[201E] & M[201E]) in
      let:8 a6 = (M[201E] | M[201E]) in
      #199E
      if (!is_zero(a5)) {
        #19AC
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a7 = (-1 + (SPH,SPL)) in
            M[a7] := 19;
            let:16 a8 = (-1 + a7) in
            M[a8] := AC;
            A := a5;
            SPH := a8[15:8];
            SPL := a8[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a9 = (-1 + (SPH,SPL)) in
            M[a9] := 19;
            let:16 a10 = (-1 + a9) in
            M[a10] := AC;
            A := a5;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #19AE
          let:8 a11 = (76 & updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))) in
          let:8 a12 = (76 | updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))) in
          #19B0
          let:16 a13 = addWithCarry(!false,a11,~34) in
          let:8 a14 = (a11 & 0F) in
          let:8 a15 = (~34 & 0F) in
          let:16 a16 = addWithCarry(!false,a14,a15) in
          #19B2
          if (!is_zero(a13[7:0])) {
            let:16 a17 = (1 + (SPH,SPL)) in
            let:16 a18 = (1 + a17) in
            A := a11;
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a13[7:0][7];
            FlagZ := is_zero(a13[7:0]);
            FlagA := a16[7:0][4];
            FlagP := parity(a13[7:0]);
            FlagCY := !a13[15:8][0];
            jump ((M[a17],M[(SPH,SPL)]));
          } else {
            #19B3
            #19B6
            #19B9
            #19BB
            #08F3
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a19 = (-1 + (SPH,SPL)) in
                M[a19] := 08;
                let:16 a20 = (-1 + a19) in
                M[a20] := F3;
                A := a11;
                C := 09;
                D := 0B;
                E := F7;
                H := 2E;
                L := 1B;
                SPH := a20[15:8];
                SPL := a20[7:0];
                FlagS := a13[7:0][7];
                FlagZ := is_zero(a13[7:0]);
                FlagA := a16[7:0][4];
                FlagP := parity(a13[7:0]);
                FlagCY := !a13[15:8][0];
                jump (0008);
              } else {
                let:16 a21 = (-1 + (SPH,SPL)) in
                M[a21] := 08;
                let:16 a22 = (-1 + a21) in
                M[a22] := F3;
                A := a11;
                C := 09;
                D := 0B;
                E := F7;
                H := 2E;
                L := 1B;
                SPH := a22[15:8];
                SPL := a22[7:0];
                FlagS := a13[7:0][7];
                FlagZ := is_zero(a13[7:0]);
                FlagA := a16[7:0][4];
                FlagP := parity(a13[7:0]);
                FlagCY := !a13[15:8][0];
                jump (0010);
              }
            } else {
              #08F4
              let:16 a23 = (-1 + (SPH,SPL)) in
              M[a23] := 0B;
              let:16 a24 = (-1 + a23) in
              M[a24] := F7;
              #08F5
              let:16 a25 = (-1 + a24) in
              M[a25] := 08;
              let:16 a26 = (-1 + a25) in
              M[a26] := F8;
              #return-to: 08F8
              #08FF
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a27 = (-1 + a26) in
                  M[a27] := 08;
                  let:16 a28 = (-1 + a27) in
                  M[a28] := FF;
                  A := 13;
                  C := 09;
                  D := 0B;
                  E := F7;
                  H := 2E;
                  L := 1B;
                  SPH := a28[15:8];
                  SPL := a28[7:0];
                  FlagS := a13[7:0][7];
                  FlagZ := is_zero(a13[7:0]);
                  FlagA := a16[7:0][4];
                  FlagP := parity(a13[7:0]);
                  FlagCY := !a13[15:8][0];
                  jump (0008);
                } else {
                  let:16 a29 = (-1 + a26) in
                  M[a29] := 08;
                  let:16 a30 = (-1 + a29) in
                  M[a30] := FF;
                  A := 13;
                  C := 09;
                  D := 0B;
                  E := F7;
                  H := 2E;
                  L := 1B;
                  SPH := a30[15:8];
                  SPL := a30[7:0];
                  FlagS := a13[7:0][7];
                  FlagZ := is_zero(a13[7:0]);
                  FlagA := a16[7:0][4];
                  FlagP := parity(a13[7:0]);
                  FlagCY := !a13[15:8][0];
                  jump (0010);
                }
              } else {
                #0902
                let:16 a31 = (-1 + a26) in
                M[a31] := 2E;
                let:16 a32 = (-1 + a31) in
                M[a32] := 1B;
                #0903
                #0905
                #0906
                let:17 a33 = add17(0013,0013) in
                #0907
                let:17 a34 = add17(a33[15:0],a33[15:0]) in
                #0908
                let:17 a35 = add17(a34[15:0],a34[15:0]) in
                #0909
                let:17 a36 = add17(1E00,a35[15:0]) in
                #090A
                #090B
                let:16 a37 = (1 + a32) in
                let:16 a38 = (1 + a37) in
                #090C
                #090E
                #0910
                #1439
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a39 = (-1 + a38) in
                    M[a39] := 14;
                    let:16 a40 = (-1 + a39) in
                    M[a40] := 39;
                    A := 13;
                    B := 08;
                    C := 09;
                    D := a36[15:0][15:8];
                    E := a36[15:0][7:0];
                    H := M[a37];
                    L := M[a32];
                    SPH := a40[15:8];
                    SPL := a40[7:0];
                    FlagS := a13[7:0][7];
                    FlagZ := is_zero(a13[7:0]);
                    FlagA := a16[7:0][4];
                    FlagP := parity(a13[7:0]);
                    FlagCY := a36[16];
                    jump (0008);
                  } else {
                    let:16 a41 = (-1 + a38) in
                    M[a41] := 14;
                    let:16 a42 = (-1 + a41) in
                    M[a42] := 39;
                    A := 13;
                    B := 08;
                    C := 09;
                    D := a36[15:0][15:8];
                    E := a36[15:0][7:0];
                    H := M[a37];
                    L := M[a32];
                    SPH := a42[15:8];
                    SPL := a42[7:0];
                    FlagS := a13[7:0][7];
                    FlagZ := is_zero(a13[7:0]);
                    FlagA := a16[7:0][4];
                    FlagP := parity(a13[7:0]);
                    FlagCY := a36[16];
                    jump (0010);
                  }
                } else {
                  let:16 a43 = (-1 + a38) in
                  M[a43] := 08;
                  let:16 a44 = (-1 + a43) in
                  M[a44] := 09;
                  #143A
                  #143B
                  M[(M[a37],M[a32])] := M[a36[15:0]];
                  #143C
                  let:16 a45 = (1 + a36[15:0]) in
                  #143D
                  #1440
                  let:17 a46 = add17(0020,(M[a37],M[a32])) in
                  #1441
                  let:16 a47 = (1 + a44) in
                  let:16 a48 = (1 + a47) in
                  #1442
                  let:16 a49 = addWithCarry(!true,M[a47],~00) in
                  let:8 a50 = (M[a47] & 0F) in
                  let:8 a51 = (~00 & 0F) in
                  let:16 a52 = addWithCarry(!true,a50,a51) in
                  #1443
                  if (!is_zero(a49[7:0])) {
                    A := M[a36[15:0]];
                    B := a49[7:0];
                    C := M[a44];
                    D := a45[15:8];
                    E := a45[7:0];
                    H := a46[15:0][15:8];
                    L := a46[15:0][7:0];
                    SPH := a48[15:8];
                    SPL := a48[7:0];
                    FlagS := a49[7:0][7];
                    FlagZ := is_zero(a49[7:0]);
                    FlagA := a52[7:0][4];
                    FlagP := parity(a49[7:0]);
                    FlagCY := a46[16];
                    jump (1439);
                  } else {
                    #1446
                    let:16 a53 = (1 + a48) in
                    let:16 a54 = (1 + a53) in
                    A := M[a36[15:0]];
                    B := a49[7:0];
                    C := M[a44];
                    D := a45[15:8];
                    E := a45[7:0];
                    H := a46[15:0][15:8];
                    L := a46[15:0][7:0];
                    SPH := a54[15:8];
                    SPL := a54[7:0];
                    FlagS := a49[7:0][7];
                    FlagZ := is_zero(a49[7:0]);
                    FlagA := a52[7:0][4];
                    FlagP := parity(a49[7:0]);
                    FlagCY := a46[16];
                    jump ((M[a53],M[a48]));
                  }
                }
              }
            }
          }
        }
      } else {
        #19A1
        #19A3
        let:8 a55 = (76 & updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))) in
        let:8 a56 = (76 | updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))) in
        #19A5
        let:16 a57 = addWithCarry(!false,a55,~72) in
        let:8 a58 = (a55 & 0F) in
        let:8 a59 = (~72 & 0F) in
        let:16 a60 = addWithCarry(!false,a58,a59) in
        #19A7
        if (!is_zero(a57[7:0])) {
          let:16 a61 = (1 + (SPH,SPL)) in
          let:16 a62 = (1 + a61) in
          A := a57[7:0];
          SPH := a62[15:8];
          SPL := a62[7:0];
          FlagS := a57[7:0][7];
          FlagZ := is_zero(a57[7:0]);
          FlagA := a60[7:0][4];
          FlagP := parity(a57[7:0]);
          FlagCY := !a57[15:8][0];
          jump ((M[a61],M[(SPH,SPL)]));
        } else {
          #19A8
          let:16 a63 = addWithCarry(true,a57[7:0],00) in
          let:8 a64 = (a57[7:0] & 0F) in
          let:8 a65 = (00 & 0F) in
          let:16 a66 = addWithCarry(true,a64,a65) in
          #19A9
          M[201E] := a63[7:0];
          #19AC
          #19AE
          let:8 a67 = (76 & updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))) in
          let:8 a68 = (76 | updateBit(updateBit(updateBit(updateBit(updateBit(updateBit(00,0,!is_pressed(coin entry)),1,is_pressed(player2 start)),2,is_pressed(player1 start)),4,is_pressed(player1 shoot)),5,is_pressed(player1 left)),6,is_pressed(player1 right))) in
          #19B0
          let:16 a69 = addWithCarry(!false,a67,~34) in
          let:8 a70 = (a67 & 0F) in
          let:8 a71 = (~34 & 0F) in
          let:16 a72 = addWithCarry(!false,a70,a71) in
          #19B2
          if (!is_zero(a69[7:0])) {
            let:16 a73 = (1 + (SPH,SPL)) in
            let:16 a74 = (1 + a73) in
            A := a67;
            SPH := a74[15:8];
            SPL := a74[7:0];
            FlagS := a69[7:0][7];
            FlagZ := is_zero(a69[7:0]);
            FlagA := a72[7:0][4];
            FlagP := parity(a69[7:0]);
            FlagCY := !a69[15:8][0];
            jump ((M[a73],M[(SPH,SPL)]));
          } else {
            #19B3
            #19B6
            #19B9
            #19BB
            #08F3
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a75 = (-1 + (SPH,SPL)) in
                M[a75] := 08;
                let:16 a76 = (-1 + a75) in
                M[a76] := F3;
                A := a67;
                C := 09;
                D := 0B;
                E := F7;
                H := 2E;
                L := 1B;
                SPH := a76[15:8];
                SPL := a76[7:0];
                FlagS := a69[7:0][7];
                FlagZ := is_zero(a69[7:0]);
                FlagA := a72[7:0][4];
                FlagP := parity(a69[7:0]);
                FlagCY := !a69[15:8][0];
                jump (0008);
              } else {
                let:16 a77 = (-1 + (SPH,SPL)) in
                M[a77] := 08;
                let:16 a78 = (-1 + a77) in
                M[a78] := F3;
                A := a67;
                C := 09;
                D := 0B;
                E := F7;
                H := 2E;
                L := 1B;
                SPH := a78[15:8];
                SPL := a78[7:0];
                FlagS := a69[7:0][7];
                FlagZ := is_zero(a69[7:0]);
                FlagA := a72[7:0][4];
                FlagP := parity(a69[7:0]);
                FlagCY := !a69[15:8][0];
                jump (0010);
              }
            } else {
              #08F4
              let:16 a79 = (-1 + (SPH,SPL)) in
              M[a79] := 0B;
              let:16 a80 = (-1 + a79) in
              M[a80] := F7;
              #08F5
              let:16 a81 = (-1 + a80) in
              M[a81] := 08;
              let:16 a82 = (-1 + a81) in
              M[a82] := F8;
              #return-to: 08F8
              #08FF
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a83 = (-1 + a82) in
                  M[a83] := 08;
                  let:16 a84 = (-1 + a83) in
                  M[a84] := FF;
                  A := 13;
                  C := 09;
                  D := 0B;
                  E := F7;
                  H := 2E;
                  L := 1B;
                  SPH := a84[15:8];
                  SPL := a84[7:0];
                  FlagS := a69[7:0][7];
                  FlagZ := is_zero(a69[7:0]);
                  FlagA := a72[7:0][4];
                  FlagP := parity(a69[7:0]);
                  FlagCY := !a69[15:8][0];
                  jump (0008);
                } else {
                  let:16 a85 = (-1 + a82) in
                  M[a85] := 08;
                  let:16 a86 = (-1 + a85) in
                  M[a86] := FF;
                  A := 13;
                  C := 09;
                  D := 0B;
                  E := F7;
                  H := 2E;
                  L := 1B;
                  SPH := a86[15:8];
                  SPL := a86[7:0];
                  FlagS := a69[7:0][7];
                  FlagZ := is_zero(a69[7:0]);
                  FlagA := a72[7:0][4];
                  FlagP := parity(a69[7:0]);
                  FlagCY := !a69[15:8][0];
                  jump (0010);
                }
              } else {
                #0902
                let:16 a87 = (-1 + a82) in
                M[a87] := 2E;
                let:16 a88 = (-1 + a87) in
                M[a88] := 1B;
                #0903
                #0905
                #0906
                let:17 a89 = add17(0013,0013) in
                #0907
                let:17 a90 = add17(a89[15:0],a89[15:0]) in
                #0908
                let:17 a91 = add17(a90[15:0],a90[15:0]) in
                #0909
                let:17 a92 = add17(1E00,a91[15:0]) in
                #090A
                #090B
                let:16 a93 = (1 + a88) in
                let:16 a94 = (1 + a93) in
                #090C
                #090E
                #0910
                #1439
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a95 = (-1 + a94) in
                    M[a95] := 14;
                    let:16 a96 = (-1 + a95) in
                    M[a96] := 39;
                    A := 13;
                    B := 08;
                    C := 09;
                    D := a92[15:0][15:8];
                    E := a92[15:0][7:0];
                    H := M[a93];
                    L := M[a88];
                    SPH := a96[15:8];
                    SPL := a96[7:0];
                    FlagS := a69[7:0][7];
                    FlagZ := is_zero(a69[7:0]);
                    FlagA := a72[7:0][4];
                    FlagP := parity(a69[7:0]);
                    FlagCY := a92[16];
                    jump (0008);
                  } else {
                    let:16 a97 = (-1 + a94) in
                    M[a97] := 14;
                    let:16 a98 = (-1 + a97) in
                    M[a98] := 39;
                    A := 13;
                    B := 08;
                    C := 09;
                    D := a92[15:0][15:8];
                    E := a92[15:0][7:0];
                    H := M[a93];
                    L := M[a88];
                    SPH := a98[15:8];
                    SPL := a98[7:0];
                    FlagS := a69[7:0][7];
                    FlagZ := is_zero(a69[7:0]);
                    FlagA := a72[7:0][4];
                    FlagP := parity(a69[7:0]);
                    FlagCY := a92[16];
                    jump (0010);
                  }
                } else {
                  let:16 a99 = (-1 + a94) in
                  M[a99] := 08;
                  let:16 a100 = (-1 + a99) in
                  M[a100] := 09;
                  #143A
                  #143B
                  M[(M[a93],M[a88])] := M[a92[15:0]];
                  #143C
                  let:16 a101 = (1 + a92[15:0]) in
                  #143D
                  #1440
                  let:17 a102 = add17(0020,(M[a93],M[a88])) in
                  #1441
                  let:16 a103 = (1 + a100) in
                  let:16 a104 = (1 + a103) in
                  #1442
                  let:16 a105 = addWithCarry(!true,M[a103],~00) in
                  let:8 a106 = (M[a103] & 0F) in
                  let:8 a107 = (~00 & 0F) in
                  let:16 a108 = addWithCarry(!true,a106,a107) in
                  #1443
                  if (!is_zero(a105[7:0])) {
                    A := M[a92[15:0]];
                    B := a105[7:0];
                    C := M[a100];
                    D := a101[15:8];
                    E := a101[7:0];
                    H := a102[15:0][15:8];
                    L := a102[15:0][7:0];
                    SPH := a104[15:8];
                    SPL := a104[7:0];
                    FlagS := a105[7:0][7];
                    FlagZ := is_zero(a105[7:0]);
                    FlagA := a108[7:0][4];
                    FlagP := parity(a105[7:0]);
                    FlagCY := a102[16];
                    jump (1439);
                  } else {
                    #1446
                    let:16 a109 = (1 + a104) in
                    let:16 a110 = (1 + a109) in
                    A := M[a92[15:0]];
                    B := a105[7:0];
                    C := M[a100];
                    D := a101[15:8];
                    E := a101[7:0];
                    H := a102[15:0][15:8];
                    L := a102[15:0][7:0];
                    SPH := a110[15:8];
                    SPL := a110[7:0];
                    FlagS := a105[7:0][7];
                    FlagZ := is_zero(a105[7:0]);
                    FlagA := a108[7:0][4];
                    FlagP := parity(a105[7:0]);
                    FlagCY := a102[16];
                    jump ((M[a109],M[a104]));
                  }
                }
              }
            }
          }
        }
      }
    }

1404:

    #1405
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := B;
    let:16 a2 = (-1 + a1) in
    M[a2] := C;
    #1406
    let:16 a3 = (-1 + a2) in
    M[a3] := H;
    let:16 a4 = (-1 + a3) in
    M[a4] := L;
    #1407
    #1408
    #140A
    let:8 a5 = (Shifter_OFF & 07) in
    let:8 a6 = (~Shifter_OFF & 07) in
    let:8 a7 = ((M[(D,E)] << a5) | ((Shifter_HI >> a6) >> 01)) in
    #140C
    let:8 a8 = (M[(H,L)] | a7) in
    #140D
    M[(H,L)] := a8;
    #140E
    let:16 a9 = (1 + (H,L)) in
    #140F
    let:16 a10 = (1 + (D,E)) in
    #1410
    let:8 a11 = (a8 ^ a8) in
    #1411
    #1413
    let:8 a12 = (Shifter_OFF & 07) in
    let:8 a13 = (~Shifter_OFF & 07) in
    let:8 a14 = ((a11 << a12) | ((M[(D,E)] >> a13) >> 01)) in
    #1415
    let:8 a15 = (M[a9] | a14) in
    #1416
    M[a9] := a15;
    #1417
    let:16 a16 = (1 + a4) in
    let:16 a17 = (1 + a16) in
    #1418
    #141B
    let:17 a18 = add17(0020,(M[a16],M[a4])) in
    #141C
    let:16 a19 = (1 + a17) in
    let:16 a20 = (1 + a19) in
    #141D
    let:16 a21 = addWithCarry(!true,M[a19],~00) in
    let:8 a22 = (M[a19] & 0F) in
    let:8 a23 = (~00 & 0F) in
    let:16 a24 = addWithCarry(!true,a22,a23) in
    #141E
    if (!is_zero(a21[7:0])) {
      A := a15;
      B := a21[7:0];
      C := M[a17];
      D := a10[15:8];
      E := a10[7:0];
      H := a18[15:0][15:8];
      L := a18[15:0][7:0];
      SPH := a20[15:8];
      SPL := a20[7:0];
      FlagS := a21[7:0][7];
      FlagZ := is_zero(a21[7:0]);
      FlagA := a24[7:0][4];
      FlagP := parity(a21[7:0]);
      FlagCY := a18[16];
      Shifter_HI := a11;
      Shifter_LO := M[(D,E)];
      jump (1405);
    } else {
      #1421
      let:16 a25 = (1 + a20) in
      let:16 a26 = (1 + a25) in
      A := a15;
      B := a21[7:0];
      C := M[a17];
      D := a10[15:8];
      E := a10[7:0];
      H := a18[15:0][15:8];
      L := a18[15:0][7:0];
      SPH := a26[15:8];
      SPL := a26[7:0];
      FlagS := a21[7:0][7];
      FlagZ := is_zero(a21[7:0]);
      FlagA := a24[7:0][4];
      FlagP := parity(a21[7:0]);
      FlagCY := a18[16];
      Shifter_HI := a11;
      Shifter_LO := M[(D,E)];
      jump ((M[a25],M[a20]));
    }

1427:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := B;
    let:16 a2 = (-1 + a1) in
    M[a2] := C;
    #1428
    let:16 a3 = (-1 + a2) in
    M[a3] := H;
    let:16 a4 = (-1 + a3) in
    M[a4] := L;
    #1429
    let:8 a5 = (A ^ A) in
    #142A
    M[(H,L)] := a5;
    #142B
    let:16 a6 = (1 + (H,L)) in
    #142C
    M[a6] := a5;
    #142D
    let:16 a7 = (1 + a6) in
    #142E
    let:16 a8 = (1 + a4) in
    let:16 a9 = (1 + a8) in
    #142F
    #1432
    let:17 a10 = add17(0020,(M[a8],M[a4])) in
    #1433
    let:16 a11 = (1 + a9) in
    let:16 a12 = (1 + a11) in
    #1434
    let:16 a13 = addWithCarry(!true,M[a11],~00) in
    let:8 a14 = (M[a11] & 0F) in
    let:8 a15 = (~00 & 0F) in
    let:16 a16 = addWithCarry(!true,a14,a15) in
    #1435
    if (!is_zero(a13[7:0])) {
      A := a5;
      B := a13[7:0];
      C := M[a9];
      H := a10[15:0][15:8];
      L := a10[15:0][7:0];
      SPH := a12[15:8];
      SPL := a12[7:0];
      FlagS := a13[7:0][7];
      FlagZ := is_zero(a13[7:0]);
      FlagA := a16[7:0][4];
      FlagP := parity(a13[7:0]);
      FlagCY := a10[16];
      jump (1427);
    } else {
      #1438
      let:16 a17 = (1 + a12) in
      let:16 a18 = (1 + a17) in
      A := a5;
      B := a13[7:0];
      C := M[a9];
      H := a10[15:0][15:8];
      L := a10[15:0][7:0];
      SPH := a18[15:8];
      SPL := a18[7:0];
      FlagS := a13[7:0][7];
      FlagZ := is_zero(a13[7:0]);
      FlagA := a16[7:0][4];
      FlagP := parity(a13[7:0]);
      FlagCY := a10[16];
      jump ((M[a17],M[a12]));
    }

1455:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := B;
    let:16 a2 = (-1 + a1) in
    M[a2] := C;
    #1456
    let:16 a3 = (-1 + a2) in
    M[a3] := H;
    let:16 a4 = (-1 + a3) in
    M[a4] := L;
    #1457
    #1458
    #145A
    let:8 a5 = (Shifter_OFF & 07) in
    let:8 a6 = (~Shifter_OFF & 07) in
    let:8 a7 = ((M[(D,E)] << a5) | ((Shifter_HI >> a6) >> 01)) in
    #145C
    #145D
    let:8 a8 = (M[(H,L)] & ~a7) in
    let:8 a9 = (M[(H,L)] | ~a7) in
    #145E
    M[(H,L)] := a8;
    #145F
    let:16 a10 = (1 + (H,L)) in
    #1460
    let:16 a11 = (1 + (D,E)) in
    #1461
    let:8 a12 = (a8 ^ a8) in
    #1462
    #1464
    let:8 a13 = (Shifter_OFF & 07) in
    let:8 a14 = (~Shifter_OFF & 07) in
    let:8 a15 = ((a12 << a13) | ((M[(D,E)] >> a14) >> 01)) in
    #1466
    #1467
    let:8 a16 = (M[a10] & ~a15) in
    let:8 a17 = (M[a10] | ~a15) in
    #1468
    M[a10] := a16;
    #1469
    let:16 a18 = (1 + a4) in
    let:16 a19 = (1 + a18) in
    #146A
    #146D
    let:17 a20 = add17(0020,(M[a18],M[a4])) in
    #146E
    let:16 a21 = (1 + a19) in
    let:16 a22 = (1 + a21) in
    #146F
    let:16 a23 = addWithCarry(!true,M[a21],~00) in
    let:8 a24 = (M[a21] & 0F) in
    let:8 a25 = (~00 & 0F) in
    let:16 a26 = addWithCarry(!true,a24,a25) in
    #1470
    if (!is_zero(a23[7:0])) {
      A := a16;
      B := a23[7:0];
      C := M[a19];
      D := a11[15:8];
      E := a11[7:0];
      H := a20[15:0][15:8];
      L := a20[15:0][7:0];
      SPH := a22[15:8];
      SPL := a22[7:0];
      FlagS := a23[7:0][7];
      FlagZ := is_zero(a23[7:0]);
      FlagA := a26[7:0][4];
      FlagP := parity(a23[7:0]);
      FlagCY := a20[16];
      Shifter_HI := a12;
      Shifter_LO := M[(D,E)];
      jump (1455);
    } else {
      #1473
      let:16 a27 = (1 + a22) in
      let:16 a28 = (1 + a27) in
      A := a16;
      B := a23[7:0];
      C := M[a19];
      D := a11[15:8];
      E := a11[7:0];
      H := a20[15:0][15:8];
      L := a20[15:0][7:0];
      SPH := a28[15:8];
      SPL := a28[7:0];
      FlagS := a23[7:0][7];
      FlagZ := is_zero(a23[7:0]);
      FlagA := a26[7:0][4];
      FlagP := parity(a23[7:0]);
      FlagCY := a20[16];
      Shifter_HI := a12;
      Shifter_LO := M[(D,E)];
      jump ((M[a27],M[a22]));
    }

1494:

    let:8 a1 = (A ^ A) in
    #1495
    M[2061] := a1;
    #1498
    let:16 a2 = (-1 + (SPH,SPL)) in
    M[a2] := B;
    let:16 a3 = (-1 + a2) in
    M[a3] := C;
    #1499
    let:16 a4 = (-1 + a3) in
    M[a4] := H;
    let:16 a5 = (-1 + a4) in
    M[a5] := L;
    #149A
    #149B
    #149D
    let:8 a6 = (Shifter_OFF & 07) in
    let:8 a7 = (~Shifter_OFF & 07) in
    let:8 a8 = ((M[(D,E)] << a6) | ((Shifter_HI >> a7) >> 01)) in
    #149F
    let:16 a9 = (-1 + a5) in
    M[a9] := a8;
    let:16 a10 = (-1 + a9) in
    M[a10] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a1[7]),6,is_zero(a1)),4,false),2,parity(a1)),0,false);
    #14A0
    let:8 a11 = (M[(H,L)] & a8) in
    let:8 a12 = (M[(H,L)] | a8) in
    #14A1
    if (is_zero(a11)) {
      #14A9
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a13 = (-1 + a10) in
          M[a13] := 14;
          let:16 a14 = (-1 + a13) in
          M[a14] := A9;
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          Shifter_HI := M[(D,E)];
          Shifter_LO := Shifter_HI;
          jump (0008);
        } else {
          let:16 a15 = (-1 + a10) in
          M[a15] := 14;
          let:16 a16 = (-1 + a15) in
          M[a16] := A9;
          A := a11;
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          Shifter_HI := M[(D,E)];
          Shifter_LO := Shifter_HI;
          jump (0010);
        }
      } else {
        let:16 a17 = (1 + a10) in
        let:16 a18 = (1 + a17) in
        #14AA
        let:8 a19 = (M[(H,L)] | M[a17]) in
        #14AB
        M[(H,L)] := a19;
        #14AC
        let:16 a20 = (1 + (H,L)) in
        #14AD
        let:16 a21 = (1 + (D,E)) in
        #14AE
        let:8 a22 = (a19 ^ a19) in
        #14AF
        #14B1
        let:8 a23 = (Shifter_OFF & 07) in
        let:8 a24 = (~Shifter_OFF & 07) in
        let:8 a25 = ((a22 << a23) | ((M[(D,E)] >> a24) >> 01)) in
        #14B3
        let:16 a26 = (-1 + a18) in
        M[a26] := a25;
        let:16 a27 = (-1 + a26) in
        M[a27] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a22[7]),6,is_zero(a22)),4,false),2,parity(a22)),0,false);
        #14B4
        let:8 a28 = (M[a20] & a25) in
        let:8 a29 = (M[a20] | a25) in
        #14B5
        if (is_zero(a28)) {
          #14BD
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a30 = (-1 + a27) in
              M[a30] := 14;
              let:16 a31 = (-1 + a30) in
              M[a31] := BD;
              A := a28;
              D := a21[15:8];
              E := a21[7:0];
              H := a20[15:8];
              L := a20[7:0];
              SPH := a31[15:8];
              SPL := a31[7:0];
              FlagS := a28[7];
              FlagZ := is_zero(a28);
              FlagA := a29[3];
              FlagP := parity(a28);
              FlagCY := false;
              Shifter_HI := a22;
              Shifter_LO := M[(D,E)];
              jump (0008);
            } else {
              let:16 a32 = (-1 + a27) in
              M[a32] := 14;
              let:16 a33 = (-1 + a32) in
              M[a33] := BD;
              A := a28;
              D := a21[15:8];
              E := a21[7:0];
              H := a20[15:8];
              L := a20[7:0];
              SPH := a33[15:8];
              SPL := a33[7:0];
              FlagS := a28[7];
              FlagZ := is_zero(a28);
              FlagA := a29[3];
              FlagP := parity(a28);
              FlagCY := false;
              Shifter_HI := a22;
              Shifter_LO := M[(D,E)];
              jump (0010);
            }
          } else {
            let:16 a34 = (1 + a27) in
            let:16 a35 = (1 + a34) in
            #14BE
            let:8 a36 = (M[a20] | M[a34]) in
            #14BF
            M[a20] := a36;
            #14C0
            let:16 a37 = (1 + a35) in
            let:16 a38 = (1 + a37) in
            #14C1
            #14C4
            let:17 a39 = add17(0020,(M[a37],M[a35])) in
            #14C5
            let:16 a40 = (1 + a38) in
            let:16 a41 = (1 + a40) in
            #14C6
            let:16 a42 = addWithCarry(!true,M[a40],~00) in
            let:8 a43 = (M[a40] & 0F) in
            let:8 a44 = (~00 & 0F) in
            let:16 a45 = addWithCarry(!true,a43,a44) in
            #14C7
            if (!is_zero(a42[7:0])) {
              A := a36;
              B := a42[7:0];
              C := M[a38];
              D := a21[15:8];
              E := a21[7:0];
              H := a39[15:0][15:8];
              L := a39[15:0][7:0];
              SPH := a41[15:8];
              SPL := a41[7:0];
              FlagS := a42[7:0][7];
              FlagZ := is_zero(a42[7:0]);
              FlagA := a45[7:0][4];
              FlagP := parity(a42[7:0]);
              FlagCY := a39[16];
              Shifter_HI := a22;
              Shifter_LO := M[(D,E)];
              jump (1498);
            } else {
              #14CA
              let:16 a46 = (1 + a41) in
              let:16 a47 = (1 + a46) in
              A := a36;
              B := a42[7:0];
              C := M[a38];
              D := a21[15:8];
              E := a21[7:0];
              H := a39[15:0][15:8];
              L := a39[15:0][7:0];
              SPH := a47[15:8];
              SPL := a47[7:0];
              FlagS := a42[7:0][7];
              FlagZ := is_zero(a42[7:0]);
              FlagA := a45[7:0][4];
              FlagP := parity(a42[7:0]);
              FlagCY := a39[16];
              Shifter_HI := a22;
              Shifter_LO := M[(D,E)];
              jump ((M[a46],M[a41]));
            }
          }
        } else {
          #14B8
          #14BA
          M[2061] := 01;
          #14BD
          let:16 a48 = (1 + a27) in
          let:16 a49 = (1 + a48) in
          #14BE
          let:8 a50 = (M[a20] | M[a48]) in
          #14BF
          M[a20] := a50;
          #14C0
          let:16 a51 = (1 + a49) in
          let:16 a52 = (1 + a51) in
          #14C1
          #14C4
          let:17 a53 = add17(0020,(M[a51],M[a49])) in
          #14C5
          let:16 a54 = (1 + a52) in
          let:16 a55 = (1 + a54) in
          #14C6
          let:16 a56 = addWithCarry(!true,M[a54],~00) in
          let:8 a57 = (M[a54] & 0F) in
          let:8 a58 = (~00 & 0F) in
          let:16 a59 = addWithCarry(!true,a57,a58) in
          #14C7
          if (!is_zero(a56[7:0])) {
            A := a50;
            B := a56[7:0];
            C := M[a52];
            D := a21[15:8];
            E := a21[7:0];
            H := a53[15:0][15:8];
            L := a53[15:0][7:0];
            SPH := a55[15:8];
            SPL := a55[7:0];
            FlagS := a56[7:0][7];
            FlagZ := is_zero(a56[7:0]);
            FlagA := a59[7:0][4];
            FlagP := parity(a56[7:0]);
            FlagCY := a53[16];
            Shifter_HI := a22;
            Shifter_LO := M[(D,E)];
            jump (1498);
          } else {
            #14CA
            let:16 a60 = (1 + a55) in
            let:16 a61 = (1 + a60) in
            A := a50;
            B := a56[7:0];
            C := M[a52];
            D := a21[15:8];
            E := a21[7:0];
            H := a53[15:0][15:8];
            L := a53[15:0][7:0];
            SPH := a61[15:8];
            SPL := a61[7:0];
            FlagS := a56[7:0][7];
            FlagZ := is_zero(a56[7:0]);
            FlagA := a59[7:0][4];
            FlagP := parity(a56[7:0]);
            FlagCY := a53[16];
            Shifter_HI := a22;
            Shifter_LO := M[(D,E)];
            jump ((M[a60],M[a55]));
          }
        }
      }
    } else {
      #14A4
      #14A6
      M[2061] := 01;
      #14A9
      let:16 a62 = (1 + a10) in
      let:16 a63 = (1 + a62) in
      #14AA
      let:8 a64 = (M[(H,L)] | M[a62]) in
      #14AB
      M[(H,L)] := a64;
      #14AC
      let:16 a65 = (1 + (H,L)) in
      #14AD
      let:16 a66 = (1 + (D,E)) in
      #14AE
      let:8 a67 = (a64 ^ a64) in
      #14AF
      #14B1
      let:8 a68 = (Shifter_OFF & 07) in
      let:8 a69 = (~Shifter_OFF & 07) in
      let:8 a70 = ((a67 << a68) | ((M[(D,E)] >> a69) >> 01)) in
      #14B3
      let:16 a71 = (-1 + a63) in
      M[a71] := a70;
      let:16 a72 = (-1 + a71) in
      M[a72] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a67[7]),6,is_zero(a67)),4,false),2,parity(a67)),0,false);
      #14B4
      let:8 a73 = (M[a65] & a70) in
      let:8 a74 = (M[a65] | a70) in
      #14B5
      if (is_zero(a73)) {
        #14BD
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a75 = (-1 + a72) in
            M[a75] := 14;
            let:16 a76 = (-1 + a75) in
            M[a76] := BD;
            A := a73;
            D := a66[15:8];
            E := a66[7:0];
            H := a65[15:8];
            L := a65[7:0];
            SPH := a76[15:8];
            SPL := a76[7:0];
            FlagS := a73[7];
            FlagZ := is_zero(a73);
            FlagA := a74[3];
            FlagP := parity(a73);
            FlagCY := false;
            Shifter_HI := a67;
            Shifter_LO := M[(D,E)];
            jump (0008);
          } else {
            let:16 a77 = (-1 + a72) in
            M[a77] := 14;
            let:16 a78 = (-1 + a77) in
            M[a78] := BD;
            A := a73;
            D := a66[15:8];
            E := a66[7:0];
            H := a65[15:8];
            L := a65[7:0];
            SPH := a78[15:8];
            SPL := a78[7:0];
            FlagS := a73[7];
            FlagZ := is_zero(a73);
            FlagA := a74[3];
            FlagP := parity(a73);
            FlagCY := false;
            Shifter_HI := a67;
            Shifter_LO := M[(D,E)];
            jump (0010);
          }
        } else {
          let:16 a79 = (1 + a72) in
          let:16 a80 = (1 + a79) in
          #14BE
          let:8 a81 = (M[a65] | M[a79]) in
          #14BF
          M[a65] := a81;
          #14C0
          let:16 a82 = (1 + a80) in
          let:16 a83 = (1 + a82) in
          #14C1
          #14C4
          let:17 a84 = add17(0020,(M[a82],M[a80])) in
          #14C5
          let:16 a85 = (1 + a83) in
          let:16 a86 = (1 + a85) in
          #14C6
          let:16 a87 = addWithCarry(!true,M[a85],~00) in
          let:8 a88 = (M[a85] & 0F) in
          let:8 a89 = (~00 & 0F) in
          let:16 a90 = addWithCarry(!true,a88,a89) in
          #14C7
          if (!is_zero(a87[7:0])) {
            A := a81;
            B := a87[7:0];
            C := M[a83];
            D := a66[15:8];
            E := a66[7:0];
            H := a84[15:0][15:8];
            L := a84[15:0][7:0];
            SPH := a86[15:8];
            SPL := a86[7:0];
            FlagS := a87[7:0][7];
            FlagZ := is_zero(a87[7:0]);
            FlagA := a90[7:0][4];
            FlagP := parity(a87[7:0]);
            FlagCY := a84[16];
            Shifter_HI := a67;
            Shifter_LO := M[(D,E)];
            jump (1498);
          } else {
            #14CA
            let:16 a91 = (1 + a86) in
            let:16 a92 = (1 + a91) in
            A := a81;
            B := a87[7:0];
            C := M[a83];
            D := a66[15:8];
            E := a66[7:0];
            H := a84[15:0][15:8];
            L := a84[15:0][7:0];
            SPH := a92[15:8];
            SPL := a92[7:0];
            FlagS := a87[7:0][7];
            FlagZ := is_zero(a87[7:0]);
            FlagA := a90[7:0][4];
            FlagP := parity(a87[7:0]);
            FlagCY := a84[16];
            Shifter_HI := a67;
            Shifter_LO := M[(D,E)];
            jump ((M[a91],M[a86]));
          }
        }
      } else {
        #14B8
        #14BA
        M[2061] := 01;
        #14BD
        let:16 a93 = (1 + a72) in
        let:16 a94 = (1 + a93) in
        #14BE
        let:8 a95 = (M[a65] | M[a93]) in
        #14BF
        M[a65] := a95;
        #14C0
        let:16 a96 = (1 + a94) in
        let:16 a97 = (1 + a96) in
        #14C1
        #14C4
        let:17 a98 = add17(0020,(M[a96],M[a94])) in
        #14C5
        let:16 a99 = (1 + a97) in
        let:16 a100 = (1 + a99) in
        #14C6
        let:16 a101 = addWithCarry(!true,M[a99],~00) in
        let:8 a102 = (M[a99] & 0F) in
        let:8 a103 = (~00 & 0F) in
        let:16 a104 = addWithCarry(!true,a102,a103) in
        #14C7
        if (!is_zero(a101[7:0])) {
          A := a95;
          B := a101[7:0];
          C := M[a97];
          D := a66[15:8];
          E := a66[7:0];
          H := a98[15:0][15:8];
          L := a98[15:0][7:0];
          SPH := a100[15:8];
          SPL := a100[7:0];
          FlagS := a101[7:0][7];
          FlagZ := is_zero(a101[7:0]);
          FlagA := a104[7:0][4];
          FlagP := parity(a101[7:0]);
          FlagCY := a98[16];
          Shifter_HI := a67;
          Shifter_LO := M[(D,E)];
          jump (1498);
        } else {
          #14CA
          let:16 a105 = (1 + a100) in
          let:16 a106 = (1 + a105) in
          A := a95;
          B := a101[7:0];
          C := M[a97];
          D := a66[15:8];
          E := a66[7:0];
          H := a98[15:0][15:8];
          L := a98[15:0][7:0];
          SPH := a106[15:8];
          SPL := a106[7:0];
          FlagS := a101[7:0][7];
          FlagZ := is_zero(a101[7:0]);
          FlagA := a104[7:0][4];
          FlagP := parity(a101[7:0]);
          FlagCY := a98[16];
          Shifter_HI := a67;
          Shifter_LO := M[(D,E)];
          jump ((M[a105],M[a100]));
        }
      }
    }

1508:

    #150B
    #150C
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 15;
    let:16 a2 = (-1 + a1) in
    M[a2] := 0F;
    #return-to: 150F
    #156F
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 15;
        let:16 a4 = (-1 + a3) in
        M[a4] := 6F;
        A := M[202A];
        H := M[202A];
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 15;
        let:16 a6 = (-1 + a5) in
        M[a6] := 6F;
        A := M[202A];
        H := M[202A];
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1572
      let:16 a7 = (-1 + a2) in
      M[a7] := 15;
      let:16 a8 = (-1 + a7) in
      M[a8] := 75;
      #return-to: 1575
      #1554
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 15;
          let:16 a10 = (-1 + a9) in
          M[a10] := 54;
          A := M[200A];
          H := M[202A];
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 15;
          let:16 a12 = (-1 + a11) in
          M[a12] := 54;
          A := M[200A];
          H := M[202A];
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1556
        let:16 a13 = addWithCarry(!false,M[200A],~M[202A]) in
        let:8 a14 = (M[200A] & 0F) in
        let:8 a15 = (~M[202A] & 0F) in
        let:16 a16 = addWithCarry(!false,a14,a15) in
        #1557
        if (!!a13[15:8][0]) {
          let:16 a17 = (-1 + a8) in
          M[a17] := 15;
          let:16 a18 = (-1 + a17) in
          M[a18] := 5A;
          #return-to: 155A
          #1590
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a19 = (-1 + a18) in
              M[a19] := 15;
              let:16 a20 = (-1 + a19) in
              M[a20] := 90;
              A := M[200A];
              C := 00;
              H := M[202A];
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a13[7:0][7];
              FlagZ := is_zero(a13[7:0]);
              FlagA := a16[7:0][4];
              FlagP := parity(a13[7:0]);
              FlagCY := !a13[15:8][0];
              jump (0008);
            } else {
              let:16 a21 = (-1 + a18) in
              M[a21] := 15;
              let:16 a22 = (-1 + a21) in
              M[a22] := 90;
              A := M[200A];
              C := 00;
              H := M[202A];
              SPH := a22[15:8];
              SPL := a22[7:0];
              FlagS := a13[7:0][7];
              FlagZ := is_zero(a13[7:0]);
              FlagA := a16[7:0][4];
              FlagP := parity(a13[7:0]);
              FlagCY := !a13[15:8][0];
              jump (0010);
            }
          } else {
            let:16 a23 = addWithCarry(true,00,00) in
            let:8 a24 = (00 & 0F) in
            let:8 a25 = (00 & 0F) in
            let:16 a26 = addWithCarry(true,a24,a25) in
            #1591
            let:16 a27 = addWithCarry(false,10,M[200A]) in
            let:8 a28 = (10 & 0F) in
            let:8 a29 = (M[200A] & 0F) in
            let:16 a30 = addWithCarry(false,a28,a29) in
            #1593
            if (a27[7:0][7]) {
              A := a27[7:0];
              C := a23[7:0];
              H := M[202A];
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a27[7:0][7];
              FlagZ := is_zero(a27[7:0]);
              FlagA := a30[7:0][4];
              FlagP := parity(a27[7:0]);
              FlagCY := a27[15:8][0];
              jump (1590);
            } else {
              #1596
              let:16 a31 = (1 + a18) in
              let:16 a32 = (1 + a31) in
              A := a27[7:0];
              C := a23[7:0];
              H := M[202A];
              SPH := a32[15:8];
              SPL := a32[7:0];
              FlagS := a27[7:0][7];
              FlagZ := is_zero(a27[7:0]);
              FlagA := a30[7:0][4];
              FlagP := parity(a27[7:0]);
              FlagCY := a27[15:8][0];
              jump ((M[a31],M[a18]));
            }
          }
        } else {
          A := M[200A];
          C := 00;
          H := M[202A];
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          FlagCY := !a13[15:8][0];
          jump (155A);
        }
      }
    }

150F:

    M[2064] := L;
    M[2065] := H;
    #1512
    #1514
    M[2025] := 05;
    #1517
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 15;
    let:16 a2 = (-1 + a1) in
    M[a2] := 1A;
    #return-to: 151A
    #1581
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 15;
        let:16 a4 = (-1 + a3) in
        M[a4] := 81;
        A := 05;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 15;
        let:16 a6 = (-1 + a5) in
        M[a6] := 81;
        A := 05;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1582
      #1583
      #1584
      #1585
      let:16 a7 = addWithCarry(false,B,updateBit((updateBit((updateBit((B << 01),0,B[7]) << 01),0,updateBit((B << 01),0,B[7])[7]) << 01),0,updateBit((updateBit((B << 01),0,B[7]) << 01),0,updateBit((B << 01),0,B[7])[7])[7])) in
      let:8 a8 = (B & 0F) in
      let:8 a9 = (updateBit((updateBit((updateBit((B << 01),0,B[7]) << 01),0,updateBit((B << 01),0,B[7])[7]) << 01),0,updateBit((updateBit((B << 01),0,B[7]) << 01),0,updateBit((B << 01),0,B[7])[7])[7]) & 0F) in
      let:16 a10 = addWithCarry(false,a8,a9) in
      #1586
      let:16 a11 = addWithCarry(false,B,a7[7:0]) in
      let:8 a12 = (B & 0F) in
      let:8 a13 = (a7[7:0] & 0F) in
      let:16 a14 = addWithCarry(false,a12,a13) in
      #1587
      let:16 a15 = addWithCarry(false,B,a11[7:0]) in
      let:8 a16 = (B & 0F) in
      let:8 a17 = (a11[7:0] & 0F) in
      let:16 a18 = addWithCarry(false,a16,a17) in
      #1588
      let:16 a19 = addWithCarry(false,C,a15[7:0]) in
      let:8 a20 = (C & 0F) in
      let:8 a21 = (a15[7:0] & 0F) in
      let:16 a22 = addWithCarry(false,a20,a21) in
      #1589
      let:16 a23 = addWithCarry(!true,a19[7:0],~00) in
      let:8 a24 = (a19[7:0] & 0F) in
      let:8 a25 = (~00 & 0F) in
      let:16 a26 = addWithCarry(!true,a24,a25) in
      #158A
      #158B
      #158E
      #158F
      let:16 a27 = (1 + a2) in
      let:16 a28 = (1 + a27) in
      A := M[2067];
      H := M[2067];
      L := a23[7:0];
      SPH := a28[15:8];
      SPL := a28[7:0];
      FlagS := a23[7:0][7];
      FlagZ := is_zero(a23[7:0]);
      FlagA := a26[7:0][4];
      FlagP := parity(a23[7:0]);
      FlagCY := a19[15:8][0];
      jump ((M[a27],M[a2]));
    }

151A:

    #151B
    let:8 a1 = (M[(H,L)] & M[(H,L)]) in
    let:8 a2 = (M[(H,L)] | M[(H,L)]) in
    #151C
    if (is_zero(a1)) {
      #1530
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 15;
          let:16 a4 = (-1 + a3) in
          M[a4] := 30;
          A := a1;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 15;
          let:16 a6 = (-1 + a5) in
          M[a6] := 30;
          A := a1;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #1532
        M[2025] := 03;
        #1535
        #154A
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a7 = (-1 + (SPH,SPL)) in
            M[a7] := 15;
            let:16 a8 = (-1 + a7) in
            M[a8] := 4A;
            A := 03;
            SPH := a8[15:8];
            SPL := a8[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a9 = (-1 + (SPH,SPL)) in
            M[a9] := 15;
            let:16 a10 = (-1 + a9) in
            M[a10] := 4A;
            A := 03;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:8 a11 = (03 ^ 03) in
          #154B
          M[2002] := a11;
          #154E
          #1550
          #19DC
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a12 = (-1 + (SPH,SPL)) in
              M[a12] := 19;
              let:16 a13 = (-1 + a12) in
              M[a13] := DC;
              A := a11;
              B := F7;
              SPH := a13[15:8];
              SPL := a13[7:0];
              FlagS := a11[7];
              FlagZ := is_zero(a11);
              FlagA := false;
              FlagP := parity(a11);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a14 = (-1 + (SPH,SPL)) in
              M[a14] := 19;
              let:16 a15 = (-1 + a14) in
              M[a15] := DC;
              A := a11;
              B := F7;
              SPH := a15[15:8];
              SPL := a15[7:0];
              FlagS := a11[7];
              FlagZ := is_zero(a11);
              FlagA := false;
              FlagP := parity(a11);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #19DF
            let:8 a16 = (F7 & M[2094]) in
            let:8 a17 = (F7 | M[2094]) in
            #19E0
            M[2094] := a16;
            #19E3
            sound_control(Ufo,a16[0]);
            sound_control(Shot,a16[1]);
            sound_control(PlayerDie,a16[2]);
            sound_control(InvaderDie,a16[3]);
            sound_control(ExtraLife,a16[4]);
            #19E5
            let:16 a18 = (1 + (SPH,SPL)) in
            let:16 a19 = (1 + a18) in
            A := a16;
            B := F7;
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a16[7];
            FlagZ := is_zero(a16);
            FlagA := a17[3];
            FlagP := parity(a16);
            FlagCY := false;
            jump ((M[a18],M[(SPH,SPL)]));
          }
        }
      }
    } else {
      #151F
      M[(H,L)] := 00;
      #1521
      let:16 a20 = (-1 + (SPH,SPL)) in
      M[a20] := 15;
      let:16 a21 = (-1 + a20) in
      M[a21] := 24;
      #return-to: 1524
      #0A5F
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a22 = (-1 + a21) in
          M[a22] := 0A;
          let:16 a23 = (-1 + a22) in
          M[a23] := 5F;
          A := a1;
          SPH := a23[15:8];
          SPL := a23[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a24 = (-1 + a21) in
          M[a24] := 0A;
          let:16 a25 = (-1 + a24) in
          M[a25] := 5F;
          A := a1;
          SPH := a25[15:8];
          SPL := a25[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #0A62
        let:8 a26 = (M[20EF] & M[20EF]) in
        let:8 a27 = (M[20EF] | M[20EF]) in
        #0A63
        if (is_zero(a26)) {
          #0A7C
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a28 = (-1 + a21) in
              M[a28] := 0A;
              let:16 a29 = (-1 + a28) in
              M[a29] := 7C;
              A := a26;
              SPH := a29[15:8];
              SPL := a29[7:0];
              FlagS := a26[7];
              FlagZ := is_zero(a26);
              FlagA := a27[3];
              FlagP := parity(a26);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a30 = (-1 + a21) in
              M[a30] := 0A;
              let:16 a31 = (-1 + a30) in
              M[a31] := 7C;
              A := a26;
              SPH := a31[15:8];
              SPL := a31[7:0];
              FlagS := a26[7];
              FlagZ := is_zero(a26);
              FlagA := a27[3];
              FlagP := parity(a26);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #0A7F
            let:16 a32 = (1 + a21) in
            let:16 a33 = (1 + a32) in
            A := a26;
            H := 20;
            L := 62;
            SPH := a33[15:8];
            SPL := a33[7:0];
            FlagS := a26[7];
            FlagZ := is_zero(a26);
            FlagA := a27[3];
            FlagP := parity(a26);
            FlagCY := false;
            jump ((M[a32],M[a21]));
          }
        } else {
          #0A66
          #0A67
          #0A69
          let:16 a34 = (-1 + a21) in
          M[a34] := 0A;
          let:16 a35 = (-1 + a34) in
          M[a35] := 6C;
          #return-to: 0A6C
          #18FA
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a36 = (-1 + a35) in
              M[a36] := 18;
              let:16 a37 = (-1 + a36) in
              M[a37] := FA;
              A := a26;
              B := 08;
              C := B;
              SPH := a37[15:8];
              SPL := a37[7:0];
              FlagS := a26[7];
              FlagZ := is_zero(a26);
              FlagA := a27[3];
              FlagP := parity(a26);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a38 = (-1 + a35) in
              M[a38] := 18;
              let:16 a39 = (-1 + a38) in
              M[a39] := FA;
              A := a26;
              B := 08;
              C := B;
              SPH := a39[15:8];
              SPL := a39[7:0];
              FlagS := a26[7];
              FlagZ := is_zero(a26);
              FlagA := a27[3];
              FlagP := parity(a26);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #18FD
            let:8 a40 = (08 | M[2094]) in
            #18FE
            M[2094] := a40;
            #1901
            sound_control(Ufo,a40[0]);
            sound_control(Shot,a40[1]);
            sound_control(PlayerDie,a40[2]);
            sound_control(InvaderDie,a40[3]);
            sound_control(ExtraLife,a40[4]);
            #1903
            let:16 a41 = (1 + a35) in
            let:16 a42 = (1 + a41) in
            A := a40;
            B := 08;
            C := B;
            SPH := a42[15:8];
            SPL := a42[7:0];
            FlagS := a40[7];
            FlagZ := is_zero(a40);
            FlagA := false;
            FlagP := parity(a40);
            FlagCY := false;
            jump ((M[a41],M[a35]));
          }
        }
      }
    }

1524:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 15;
    let:16 a2 = (-1 + a1) in
    M[a2] := 27;
    #return-to: 1527
    #1A3B
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 1A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 3B;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 1A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 3B;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1A3C
      let:16 a7 = (1 + (H,L)) in
      #1A3D
      #1A3E
      let:16 a8 = (1 + a7) in
      #1A3F
      #1A40
      let:16 a9 = (1 + a8) in
      #1A41
      #1A42
      let:16 a10 = (1 + a9) in
      #1A43
      #1A44
      #1A45
      #1A46
      let:16 a11 = (1 + a2) in
      let:16 a12 = (1 + a11) in
      A := M[a8];
      B := M[a10];
      C := M[a9];
      D := M[a7];
      E := M[(H,L)];
      H := M[a9];
      L := M[a8];
      SPH := a12[15:8];
      SPL := a12[7:0];
      jump ((M[a11],M[a2]));
    }

1527:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 15;
    let:16 a2 = (-1 + a1) in
    M[a2] := 2A;
    #return-to: 152A
    #15D3
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 15;
        let:16 a4 = (-1 + a3) in
        M[a4] := D3;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 15;
        let:16 a6 = (-1 + a5) in
        M[a6] := D3;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 15;
      let:16 a8 = (-1 + a7) in
      M[a8] := D6;
      #return-to: 15D6
      #1474
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := 74;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 14;
          let:16 a12 = (-1 + a11) in
          M[a12] := 74;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1475
        let:8 a13 = (07 & L) in
        let:8 a14 = (07 | L) in
        #1477
        #1479
        #1A47
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a8) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 47;
            A := a13;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := a14[3];
            FlagP := parity(a13);
            FlagCY := false;
            Shifter_OFF := a13;
            jump (0008);
          } else {
            let:16 a17 = (-1 + a8) in
            M[a17] := 1A;
            let:16 a18 = (-1 + a17) in
            M[a18] := 47;
            A := a13;
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := a14[3];
            FlagP := parity(a13);
            FlagCY := false;
            Shifter_OFF := a13;
            jump (0010);
          }
        } else {
          let:16 a19 = (-1 + a8) in
          M[a19] := B;
          let:16 a20 = (-1 + a19) in
          M[a20] := C;
          #1A48
          #1A4A
          #1A4B
          #1A4C
          #1A4D
          #1A4E
          #1A4F
          #1A50
          let:16 a21 = addWithCarry(!true,03,~00) in
          let:8 a22 = (03 & 0F) in
          let:8 a23 = (~00 & 0F) in
          let:16 a24 = addWithCarry(!true,a22,a23) in
          #1A51
          if (!is_zero(a21[7:0])) {
            A := updateBit((L >> 01),7,H[0]);
            B := a21[7:0];
            H := updateBit((H >> 01),7,false);
            L := updateBit((L >> 01),7,H[0]);
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a21[7:0][7];
            FlagZ := is_zero(a21[7:0]);
            FlagA := a24[7:0][4];
            FlagP := parity(a21[7:0]);
            FlagCY := L[0];
            Shifter_OFF := a13;
            jump (1A4A);
          } else {
            #1A54
            #1A55
            let:8 a25 = (3F & updateBit((H >> 01),7,false)) in
            let:8 a26 = (3F | updateBit((H >> 01),7,false)) in
            #1A57
            let:8 a27 = (20 | a25) in
            #1A59
            #1A5A
            let:16 a28 = (1 + a20) in
            let:16 a29 = (1 + a28) in
            #1A5B
            let:16 a30 = (1 + a29) in
            let:16 a31 = (1 + a30) in
            A := a27;
            B := M[a28];
            C := M[a20];
            H := a27;
            L := updateBit((L >> 01),7,H[0]);
            SPH := a31[15:8];
            SPL := a31[7:0];
            FlagS := a27[7];
            FlagZ := is_zero(a27);
            FlagA := false;
            FlagP := parity(a27);
            FlagCY := false;
            Shifter_OFF := a13;
            jump ((M[a30],M[a29]));
          }
        }
      }
    }

152A:

    #152C
    M[2003] := 10;
    #152F
    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    A := 10;
    SPH := a2[15:8];
    SPL := a2[7:0];
    jump ((M[a1],M[(SPH,SPL)]));

1545:

    #1547
    M[2025] := 04;
    #154A
    let:8 a1 = (04 ^ 04) in
    #154B
    M[2002] := a1;
    #154E
    #1550
    #19DC
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a2 = (-1 + (SPH,SPL)) in
        M[a2] := 19;
        let:16 a3 = (-1 + a2) in
        M[a3] := DC;
        A := a1;
        B := F7;
        SPH := a3[15:8];
        SPL := a3[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a4 = (-1 + (SPH,SPL)) in
        M[a4] := 19;
        let:16 a5 = (-1 + a4) in
        M[a5] := DC;
        A := a1;
        B := F7;
        SPH := a5[15:8];
        SPL := a5[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0010);
      }
    } else {
      #19DF
      let:8 a6 = (F7 & M[2094]) in
      let:8 a7 = (F7 | M[2094]) in
      #19E0
      M[2094] := a6;
      #19E3
      sound_control(Ufo,a6[0]);
      sound_control(Shot,a6[1]);
      sound_control(PlayerDie,a6[2]);
      sound_control(InvaderDie,a6[3]);
      sound_control(ExtraLife,a6[4]);
      #19E5
      let:16 a8 = (1 + (SPH,SPL)) in
      let:16 a9 = (1 + a8) in
      A := a6;
      B := F7;
      SPH := a9[15:8];
      SPL := a9[7:0];
      FlagS := a6[7];
      FlagZ := is_zero(a6);
      FlagA := a7[3];
      FlagP := parity(a6);
      FlagCY := false;
      jump ((M[a8],M[(SPH,SPL)]));
    }

155A:

    let:16 a1 = addWithCarry(!false,A,~H) in
    let:8 a2 = (A & 0F) in
    let:8 a3 = (~H & 0F) in
    let:16 a4 = addWithCarry(!false,a2,a3) in
    #155B
    if (!!a1[15:8][0]) {
      let:16 a5 = (1 + (SPH,SPL)) in
      let:16 a6 = (1 + a5) in
      SPH := a6[15:8];
      SPL := a6[7:0];
      FlagS := a1[7:0][7];
      FlagZ := is_zero(a1[7:0]);
      FlagA := a4[7:0][4];
      FlagP := parity(a1[7:0]);
      FlagCY := !a1[15:8][0];
      jump ((M[a5],M[(SPH,SPL)]));
    } else {
      #155C
      let:16 a7 = addWithCarry(false,10,A) in
      let:8 a8 = (10 & 0F) in
      let:8 a9 = (A & 0F) in
      let:16 a10 = addWithCarry(false,a8,a9) in
      #155E
      let:16 a11 = addWithCarry(true,C,00) in
      let:8 a12 = (C & 0F) in
      let:8 a13 = (00 & 0F) in
      let:16 a14 = addWithCarry(true,a12,a13) in
      #155F
      A := a7[7:0];
      C := a11[7:0];
      FlagS := a11[7:0][7];
      FlagZ := is_zero(a11[7:0]);
      FlagA := a14[7:0][4];
      FlagP := parity(a11[7:0]);
      FlagCY := a7[15:8][0];
      jump (155A);
    }

1569:

    #156A
    let:16 a1 = addWithCarry(!true,C,~00) in
    let:8 a2 = (C & 0F) in
    let:8 a3 = (~00 & 0F) in
    let:16 a4 = addWithCarry(!true,a2,a3) in
    #156B
    let:16 a5 = addWithCarry(!FlagCY,A,~10) in
    let:8 a6 = (A & 0F) in
    let:8 a7 = (~10 & 0F) in
    let:16 a8 = addWithCarry(!FlagCY,a6,a7) in
    #156D
    #156E
    let:16 a9 = (1 + (SPH,SPL)) in
    let:16 a10 = (1 + a9) in
    A := a5[7:0];
    B := a1[7:0];
    L := a5[7:0];
    SPH := a10[15:8];
    SPL := a10[7:0];
    FlagS := a5[7:0][7];
    FlagZ := is_zero(a5[7:0]);
    FlagA := a8[7:0][4];
    FlagP := parity(a5[7:0]);
    FlagCY := !a5[15:8][0];
    jump ((M[a9],M[(SPH,SPL)]));

1575:

    let:16 a1 = addWithCarry(!FlagCY,A,~10) in
    let:8 a2 = (A & 0F) in
    let:8 a3 = (~10 & 0F) in
    let:16 a4 = addWithCarry(!FlagCY,a2,a3) in
    #1577
    #1578
    let:16 a5 = (1 + (SPH,SPL)) in
    let:16 a6 = (1 + a5) in
    A := a1[7:0];
    H := a1[7:0];
    SPH := a6[15:8];
    SPL := a6[7:0];
    FlagS := a1[7:0][7];
    FlagZ := is_zero(a1[7:0]);
    FlagA := a4[7:0][4];
    FlagP := parity(a1[7:0]);
    FlagCY := !a1[15:8][0];
    jump ((M[a5],M[(SPH,SPL)]));

15A4:

    if (!FlagCY) {
      let:16 a1 = (1 + (SPH,SPL)) in
      let:16 a2 = (1 + a1) in
      SPH := a2[15:8];
      SPL := a2[7:0];
      jump ((M[a1],M[(SPH,SPL)]));
    } else {
      #15A5
      #15A7
      #15A9
      M[200D] := 01;
      #15AC
      #15AD
      M[2008] := FE;
      #15B0
      #15B3
      M[2007] := M[200E];
      #15B6
      let:16 a3 = (1 + (SPH,SPL)) in
      let:16 a4 = (1 + a3) in
      A := M[200E];
      B := FE;
      SPH := a4[15:8];
      SPL := a4[7:0];
      jump ((M[a3],M[(SPH,SPL)]));
    }

15BD:

    if (!FlagCY) {
      let:16 a1 = (1 + (SPH,SPL)) in
      let:16 a2 = (1 + a1) in
      SPH := a2[15:8];
      SPL := a2[7:0];
      jump ((M[a1],M[(SPH,SPL)]));
    } else {
      #15BE
      let:16 a3 = (-1 + (SPH,SPL)) in
      M[a3] := 15;
      let:16 a4 = (-1 + a3) in
      M[a4] := C1;
      #return-to: 15C1
      #18F1
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + a4) in
          M[a5] := 18;
          let:16 a6 = (-1 + a5) in
          M[a6] := F1;
          SPH := a6[15:8];
          SPL := a6[7:0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + a4) in
          M[a7] := 18;
          let:16 a8 = (-1 + a7) in
          M[a8] := F1;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0010);
        }
      } else {
        #18F3
        #18F6
        let:16 a9 = addWithCarry(!true,M[2082],~00) in
        let:8 a10 = (M[2082] & 0F) in
        let:8 a11 = (~00 & 0F) in
        let:16 a12 = addWithCarry(!true,a10,a11) in
        #18F7
        if (!is_zero(a9[7:0])) {
          let:16 a13 = (1 + a4) in
          let:16 a14 = (1 + a13) in
          A := a9[7:0];
          B := 02;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a9[7:0][7];
          FlagZ := is_zero(a9[7:0]);
          FlagA := a12[7:0][4];
          FlagP := parity(a9[7:0]);
          jump ((M[a13],M[a4]));
        } else {
          #18F8
          let:16 a15 = addWithCarry(true,02,00) in
          let:8 a16 = (02 & 0F) in
          let:8 a17 = (00 & 0F) in
          let:16 a18 = addWithCarry(true,a16,a17) in
          #18F9
          let:16 a19 = (1 + a4) in
          let:16 a20 = (1 + a19) in
          A := a9[7:0];
          B := a15[7:0];
          SPH := a20[15:8];
          SPL := a20[7:0];
          FlagS := a15[7:0][7];
          FlagZ := is_zero(a15[7:0]);
          FlagA := a18[7:0][4];
          FlagP := parity(a15[7:0]);
          jump ((M[a19],M[a4]));
        }
      }
    }

15C1:

    let:8 a1 = (A ^ A) in
    #15C2
    #15A9
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a2 = (-1 + (SPH,SPL)) in
        M[a2] := 15;
        let:16 a3 = (-1 + a2) in
        M[a3] := A9;
        A := a1;
        SPH := a3[15:8];
        SPL := a3[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a4 = (-1 + (SPH,SPL)) in
        M[a4] := 15;
        let:16 a5 = (-1 + a4) in
        M[a5] := A9;
        A := a1;
        SPH := a5[15:8];
        SPL := a5[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0010);
      }
    } else {
      M[200D] := a1;
      #15AC
      #15AD
      M[2008] := B;
      #15B0
      #15B3
      M[2007] := M[200E];
      #15B6
      let:16 a6 = (1 + (SPH,SPL)) in
      let:16 a7 = (1 + a6) in
      A := M[200E];
      SPH := a7[15:8];
      SPL := a7[7:0];
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := false;
      FlagP := parity(a1);
      FlagCY := false;
      jump ((M[a6],M[(SPH,SPL)]));
    }

15D6:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := H;
    let:16 a2 = (-1 + a1) in
    M[a2] := L;
    #15D7
    let:16 a3 = (-1 + a2) in
    M[a3] := B;
    let:16 a4 = (-1 + a3) in
    M[a4] := C;
    #15D8
    let:16 a5 = (-1 + a4) in
    M[a5] := H;
    let:16 a6 = (-1 + a5) in
    M[a6] := L;
    #15D9
    #15DA
    #15DC
    let:8 a7 = (Shifter_OFF & 07) in
    let:8 a8 = (~Shifter_OFF & 07) in
    let:8 a9 = ((M[(D,E)] << a7) | ((Shifter_HI >> a8) >> 01)) in
    #15DE
    M[(H,L)] := a9;
    #15DF
    let:16 a10 = (1 + (H,L)) in
    #15E0
    let:16 a11 = (1 + (D,E)) in
    #15E1
    let:8 a12 = (a9 ^ a9) in
    #15E2
    #15E4
    let:8 a13 = (Shifter_OFF & 07) in
    let:8 a14 = (~Shifter_OFF & 07) in
    let:8 a15 = ((a12 << a13) | ((M[(D,E)] >> a14) >> 01)) in
    #15E6
    M[a10] := a15;
    #15E7
    let:16 a16 = (1 + a6) in
    let:16 a17 = (1 + a16) in
    #15E8
    #15EB
    let:17 a18 = add17(0020,(M[a16],M[a6])) in
    #15EC
    let:16 a19 = (1 + a17) in
    let:16 a20 = (1 + a19) in
    #15ED
    let:16 a21 = addWithCarry(!true,M[a19],~00) in
    let:8 a22 = (M[a19] & 0F) in
    let:8 a23 = (~00 & 0F) in
    let:16 a24 = addWithCarry(!true,a22,a23) in
    #15EE
    if (!is_zero(a21[7:0])) {
      A := a15;
      B := a21[7:0];
      C := M[a17];
      D := a11[15:8];
      E := a11[7:0];
      H := a18[15:0][15:8];
      L := a18[15:0][7:0];
      SPH := a20[15:8];
      SPL := a20[7:0];
      FlagS := a21[7:0][7];
      FlagZ := is_zero(a21[7:0]);
      FlagA := a24[7:0][4];
      FlagP := parity(a21[7:0]);
      FlagCY := a18[16];
      Shifter_HI := a12;
      Shifter_LO := M[(D,E)];
      jump (15D7);
    } else {
      #15F1
      let:16 a25 = (1 + a20) in
      let:16 a26 = (1 + a25) in
      #15F2
      let:16 a27 = (1 + a26) in
      let:16 a28 = (1 + a27) in
      A := a15;
      B := a21[7:0];
      C := M[a17];
      D := a11[15:8];
      E := a11[7:0];
      H := M[a25];
      L := M[a20];
      SPH := a28[15:8];
      SPL := a28[7:0];
      FlagS := a21[7:0][7];
      FlagZ := is_zero(a21[7:0]);
      FlagA := a24[7:0][4];
      FlagP := parity(a21[7:0]);
      FlagCY := a18[16];
      Shifter_HI := a12;
      Shifter_LO := M[(D,E)];
      jump ((M[a27],M[a26]));
    }

15F6:

    #15F9
    #15FA
    let:8 a1 = (M[(H,L)] & M[(H,L)]) in
    let:8 a2 = (M[(H,L)] | M[(H,L)]) in
    #15FB
    if (is_zero(a1)) {
      #15FF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 15;
          let:16 a4 = (-1 + a3) in
          M[a4] := FF;
          A := a1;
          B := 37;
          C := 00;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 15;
          let:16 a6 = (-1 + a5) in
          M[a6] := FF;
          A := a1;
          B := 37;
          C := 00;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        let:16 a7 = (1 + (H,L)) in
        #1600
        let:16 a8 = addWithCarry(!true,37,~00) in
        let:8 a9 = (37 & 0F) in
        let:8 a10 = (~00 & 0F) in
        let:16 a11 = addWithCarry(!true,a9,a10) in
        #1601
        if (!is_zero(a8[7:0])) {
          A := a1;
          B := a8[7:0];
          C := 00;
          H := a7[15:8];
          L := a7[7:0];
          FlagS := a8[7:0][7];
          FlagZ := is_zero(a8[7:0]);
          FlagA := a11[7:0][4];
          FlagP := parity(a8[7:0]);
          FlagCY := false;
          jump (15F9);
        } else {
          #1604
          #1605
          M[2082] := 00;
          #1608
          let:16 a12 = addWithCarry(!false,00,~01) in
          let:8 a13 = (00 & 0F) in
          let:8 a14 = (~01 & 0F) in
          let:16 a15 = addWithCarry(!false,a13,a14) in
          #160A
          if (!is_zero(a12[7:0])) {
            let:16 a16 = (1 + (SPH,SPL)) in
            let:16 a17 = (1 + a16) in
            A := 00;
            B := a8[7:0];
            C := 00;
            H := a7[15:8];
            L := a7[7:0];
            SPH := a17[15:8];
            SPL := a17[7:0];
            FlagS := a12[7:0][7];
            FlagZ := is_zero(a12[7:0]);
            FlagA := a15[7:0][4];
            FlagP := parity(a12[7:0]);
            FlagCY := !a12[15:8][0];
            jump ((M[a16],M[(SPH,SPL)]));
          } else {
            #160B
            #160E
            M[206B] := 01;
            #1610
            let:16 a18 = (1 + (SPH,SPL)) in
            let:16 a19 = (1 + a18) in
            A := 00;
            B := a8[7:0];
            C := 00;
            H := 20;
            L := 6B;
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a12[7:0][7];
            FlagZ := is_zero(a12[7:0]);
            FlagA := a15[7:0][4];
            FlagP := parity(a12[7:0]);
            FlagCY := !a12[15:8][0];
            jump ((M[a18],M[(SPH,SPL)]));
          }
        }
      }
    } else {
      #15FE
      let:16 a20 = addWithCarry(true,00,00) in
      let:8 a21 = (00 & 0F) in
      let:8 a22 = (00 & 0F) in
      let:16 a23 = addWithCarry(true,a21,a22) in
      #15FF
      let:16 a24 = (1 + (H,L)) in
      #1600
      let:16 a25 = addWithCarry(!true,37,~00) in
      let:8 a26 = (37 & 0F) in
      let:8 a27 = (~00 & 0F) in
      let:16 a28 = addWithCarry(!true,a26,a27) in
      #1601
      if (!is_zero(a25[7:0])) {
        A := a1;
        B := a25[7:0];
        C := a20[7:0];
        H := a24[15:8];
        L := a24[7:0];
        FlagS := a25[7:0][7];
        FlagZ := is_zero(a25[7:0]);
        FlagA := a28[7:0][4];
        FlagP := parity(a25[7:0]);
        FlagCY := false;
        jump (15F9);
      } else {
        #1604
        #1605
        M[2082] := a20[7:0];
        #1608
        let:16 a29 = addWithCarry(!false,a20[7:0],~01) in
        let:8 a30 = (a20[7:0] & 0F) in
        let:8 a31 = (~01 & 0F) in
        let:16 a32 = addWithCarry(!false,a30,a31) in
        #160A
        if (!is_zero(a29[7:0])) {
          let:16 a33 = (1 + (SPH,SPL)) in
          let:16 a34 = (1 + a33) in
          A := a20[7:0];
          B := a25[7:0];
          C := a20[7:0];
          H := a24[15:8];
          L := a24[7:0];
          SPH := a34[15:8];
          SPL := a34[7:0];
          FlagS := a29[7:0][7];
          FlagZ := is_zero(a29[7:0]);
          FlagA := a32[7:0][4];
          FlagP := parity(a29[7:0]);
          FlagCY := !a29[15:8][0];
          jump ((M[a33],M[(SPH,SPL)]));
        } else {
          #160B
          #160E
          M[206B] := 01;
          #1610
          let:16 a35 = (1 + (SPH,SPL)) in
          let:16 a36 = (1 + a35) in
          A := a20[7:0];
          B := a25[7:0];
          C := a20[7:0];
          H := 20;
          L := 6B;
          SPH := a36[15:8];
          SPL := a36[7:0];
          FlagS := a29[7:0][7];
          FlagZ := is_zero(a29[7:0]);
          FlagA := a32[7:0][4];
          FlagP := parity(a29[7:0]);
          FlagCY := !a29[15:8][0];
          jump ((M[a35],M[(SPH,SPL)]));
        }
      }
    }

163C:

    let:8 a1 = (10 & A) in
    let:8 a2 = (10 | A) in
    #163E
    if (is_zero(a1)) {
      let:16 a3 = (1 + (SPH,SPL)) in
      let:16 a4 = (1 + a3) in
      A := a1;
      SPH := a4[15:8];
      SPL := a4[7:0];
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump ((M[a3],M[(SPH,SPL)]));
    } else {
      #163F
      #1641
      M[2025] := 01;
      #1644
      M[202D] := 01;
      #1647
      let:16 a5 = (1 + (SPH,SPL)) in
      let:16 a6 = (1 + a5) in
      A := 01;
      SPH := a6[15:8];
      SPL := a6[7:0];
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump ((M[a5],M[(SPH,SPL)]));
    }

164B:

    let:8 a1 = (10 & A) in
    let:8 a2 = (10 | A) in
    #164D
    if (!is_zero(a1)) {
      let:16 a3 = (1 + (SPH,SPL)) in
      let:16 a4 = (1 + a3) in
      A := a1;
      SPH := a4[15:8];
      SPL := a4[7:0];
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump ((M[a3],M[(SPH,SPL)]));
    } else {
      #164E
      M[202D] := a1;
      #1651
      let:16 a5 = (1 + (SPH,SPL)) in
      let:16 a6 = (1 + a5) in
      A := a1;
      SPH := a6[15:8];
      SPL := a6[7:0];
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump ((M[a5],M[(SPH,SPL)]));
    }

1671:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 16;
    let:16 a2 = (-1 + a1) in
    M[a2] := 74;
    #return-to: 1674
    #1910
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 10;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 10;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1913
      #1916
      #1917
      if (M[2067][0]) {
        let:16 a7 = (1 + a2) in
        let:16 a8 = (1 + a7) in
        A := updateBit((M[2067] >> 01),7,M[2067][0]);
        H := 20;
        L := E7;
        SPH := a8[15:8];
        SPL := a8[7:0];
        FlagCY := M[2067][0];
        jump ((M[a7],M[a2]));
      } else {
        #1918
        #1919
        let:16 a9 = (1 + a2) in
        let:16 a10 = (1 + a9) in
        A := updateBit((M[2067] >> 01),7,M[2067][0]);
        H := 20;
        L := E8;
        SPH := a10[15:8];
        SPL := a10[7:0];
        FlagCY := M[2067][0];
        jump ((M[a9],M[a2]));
      }
    }

1674:

    M[(H,L)] := 00;
    #1676
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 16;
    let:16 a2 = (-1 + a1) in
    M[a2] := 79;
    #return-to: 1679
    #09CA
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 09;
        let:16 a4 = (-1 + a3) in
        M[a4] := CA;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 09;
        let:16 a6 = (-1 + a5) in
        M[a6] := CA;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #09CD
      #09CE
      #09D1
      if (M[2067][0]) {
        let:16 a7 = (1 + a2) in
        let:16 a8 = (1 + a7) in
        A := updateBit((M[2067] >> 01),7,M[2067][0]);
        H := 20;
        L := F8;
        SPH := a8[15:8];
        SPL := a8[7:0];
        FlagCY := M[2067][0];
        jump ((M[a7],M[a2]));
      } else {
        #09D2
        #09D5
        let:16 a9 = (1 + a2) in
        let:16 a10 = (1 + a9) in
        A := updateBit((M[2067] >> 01),7,M[2067][0]);
        H := 20;
        L := FC;
        SPH := a10[15:8];
        SPL := a10[7:0];
        FlagCY := M[2067][0];
        jump ((M[a9],M[a2]));
      }
    }

1679:

    let:16 a1 = (1 + (H,L)) in
    #167A
    #167D
    #167E
    let:16 a2 = addWithCarry(!false,M[20F5],~M[a1]) in
    let:8 a3 = (M[20F5] & 0F) in
    let:8 a4 = (~M[a1] & 0F) in
    let:16 a5 = addWithCarry(!false,a3,a4) in
    #167F
    #1680
    let:16 a6 = (-1 + a1) in
    #1681
    #1682
    if (is_zero(a2[7:0])) {
      #168B
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 16;
          let:16 a8 = (-1 + a7) in
          M[a8] := 8B;
          A := M[20F4];
          D := 20;
          E := F4;
          H := a6[15:8];
          L := a6[7:0];
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a2[7:0][7];
          FlagZ := is_zero(a2[7:0]);
          FlagA := a5[7:0][4];
          FlagP := parity(a2[7:0]);
          FlagCY := !a2[15:8][0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + (SPH,SPL)) in
          M[a9] := 16;
          let:16 a10 = (-1 + a9) in
          M[a10] := 8B;
          A := M[20F4];
          D := 20;
          E := F4;
          H := a6[15:8];
          L := a6[7:0];
          SPH := a10[15:8];
          SPL := a10[7:0];
          FlagS := a2[7:0][7];
          FlagZ := is_zero(a2[7:0]);
          FlagA := a5[7:0][4];
          FlagP := parity(a2[7:0]);
          FlagCY := !a2[15:8][0];
          jump (0010);
        }
      } else {
        let:16 a11 = addWithCarry(!false,M[20F4],~M[a6]) in
        let:8 a12 = (M[20F4] & 0F) in
        let:8 a13 = (~M[a6] & 0F) in
        let:16 a14 = addWithCarry(!false,a12,a13) in
        #168C
        if (!!a11[15:8][0]) {
          A := M[20F4];
          D := 20;
          E := F4;
          H := a6[15:8];
          L := a6[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          FlagCY := !a11[15:8][0];
          jump (1698);
        } else {
          #168F
          #1690
          M[20F4] := M[a6];
          #1691
          #1692
          let:16 a15 = (1 + a6) in
          #1693
          #1694
          M[20F5] := M[a15];
          #1695
          let:16 a16 = (-1 + (SPH,SPL)) in
          M[a16] := 16;
          let:16 a17 = (-1 + a16) in
          M[a17] := 98;
          #return-to: 1698
          #1950
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a18 = (-1 + a17) in
              M[a18] := 19;
              let:16 a19 = (-1 + a18) in
              M[a19] := 50;
              A := M[a15];
              D := 20;
              E := F5;
              H := a15[15:8];
              L := a15[7:0];
              SPH := a19[15:8];
              SPL := a19[7:0];
              FlagS := a11[7:0][7];
              FlagZ := is_zero(a11[7:0]);
              FlagA := a14[7:0][4];
              FlagP := parity(a11[7:0]);
              FlagCY := !a11[15:8][0];
              jump (0008);
            } else {
              let:16 a20 = (-1 + a17) in
              M[a20] := 19;
              let:16 a21 = (-1 + a20) in
              M[a21] := 50;
              A := M[a15];
              D := 20;
              E := F5;
              H := a15[15:8];
              L := a15[7:0];
              SPH := a21[15:8];
              SPL := a21[7:0];
              FlagS := a11[7:0][7];
              FlagZ := is_zero(a11[7:0]);
              FlagA := a14[7:0][4];
              FlagP := parity(a11[7:0]);
              FlagCY := !a11[15:8][0];
              jump (0010);
            }
          } else {
            #1953
            #1931
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a22 = (-1 + a17) in
                M[a22] := 19;
                let:16 a23 = (-1 + a22) in
                M[a23] := 31;
                A := M[a15];
                D := 20;
                E := F5;
                H := 20;
                L := F4;
                SPH := a23[15:8];
                SPL := a23[7:0];
                FlagS := a11[7:0][7];
                FlagZ := is_zero(a11[7:0]);
                FlagA := a14[7:0][4];
                FlagP := parity(a11[7:0]);
                FlagCY := !a11[15:8][0];
                jump (0008);
              } else {
                let:16 a24 = (-1 + a17) in
                M[a24] := 19;
                let:16 a25 = (-1 + a24) in
                M[a25] := 31;
                A := M[a15];
                D := 20;
                E := F5;
                H := 20;
                L := F4;
                SPH := a25[15:8];
                SPL := a25[7:0];
                FlagS := a11[7:0][7];
                FlagZ := is_zero(a11[7:0]);
                FlagA := a14[7:0][4];
                FlagP := parity(a11[7:0]);
                FlagCY := !a11[15:8][0];
                jump (0010);
              }
            } else {
              #1932
              #1933
              #1934
              #1935
              #1936
              #1937
              #1938
              #1939
              #09AD
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a26 = (-1 + a17) in
                  M[a26] := 09;
                  let:16 a27 = (-1 + a26) in
                  M[a27] := AD;
                  A := M[20F6];
                  D := M[20F5];
                  E := M[20F4];
                  H := M[20F7];
                  L := M[20F6];
                  SPH := a27[15:8];
                  SPL := a27[7:0];
                  FlagS := a11[7:0][7];
                  FlagZ := is_zero(a11[7:0]);
                  FlagA := a14[7:0][4];
                  FlagP := parity(a11[7:0]);
                  FlagCY := !a11[15:8][0];
                  jump (0008);
                } else {
                  let:16 a28 = (-1 + a17) in
                  M[a28] := 09;
                  let:16 a29 = (-1 + a28) in
                  M[a29] := AD;
                  A := M[20F6];
                  D := M[20F5];
                  E := M[20F4];
                  H := M[20F7];
                  L := M[20F6];
                  SPH := a29[15:8];
                  SPL := a29[7:0];
                  FlagS := a11[7:0][7];
                  FlagZ := is_zero(a11[7:0]);
                  FlagA := a14[7:0][4];
                  FlagP := parity(a11[7:0]);
                  FlagCY := !a11[15:8][0];
                  jump (0010);
                }
              } else {
                #09AE
                let:16 a30 = (-1 + a17) in
                M[a30] := 09;
                let:16 a31 = (-1 + a30) in
                M[a31] := B1;
                #return-to: 09B1
                #09B2
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a32 = (-1 + a31) in
                    M[a32] := 09;
                    let:16 a33 = (-1 + a32) in
                    M[a33] := B2;
                    A := M[20F5];
                    D := M[20F5];
                    E := M[20F4];
                    H := M[20F7];
                    L := M[20F6];
                    SPH := a33[15:8];
                    SPL := a33[7:0];
                    FlagS := a11[7:0][7];
                    FlagZ := is_zero(a11[7:0]);
                    FlagA := a14[7:0][4];
                    FlagP := parity(a11[7:0]);
                    FlagCY := !a11[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a34 = (-1 + a31) in
                    M[a34] := 09;
                    let:16 a35 = (-1 + a34) in
                    M[a35] := B2;
                    A := M[20F5];
                    D := M[20F5];
                    E := M[20F4];
                    H := M[20F7];
                    L := M[20F6];
                    SPH := a35[15:8];
                    SPL := a35[7:0];
                    FlagS := a11[7:0][7];
                    FlagZ := is_zero(a11[7:0]);
                    FlagA := a14[7:0][4];
                    FlagP := parity(a11[7:0]);
                    FlagCY := !a11[15:8][0];
                    jump (0010);
                  }
                } else {
                  let:16 a36 = (-1 + a31) in
                  M[a36] := M[20F5];
                  let:16 a37 = (-1 + a36) in
                  M[a37] := M[20F4];
                  #09B3
                  let:16 a38 = (-1 + a37) in
                  M[a38] := M[20F5];
                  let:16 a39 = (-1 + a38) in
                  M[a39] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a11[7:0][7]),6,is_zero(a11[7:0])),4,a14[7:0][4]),2,parity(a11[7:0])),0,!a11[15:8][0]);
                  #09B4
                  #09B5
                  #09B6
                  #09B7
                  #09B8
                  let:8 a40 = (0F & updateBit((updateBit((updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0]) >> 01),7,updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0]) >> 01),7,updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0])[0])[0])) in
                  let:8 a41 = (0F | updateBit((updateBit((updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0]) >> 01),7,updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0]) >> 01),7,updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0])[0])[0])) in
                  #09BA
                  let:16 a42 = (-1 + a39) in
                  M[a42] := 09;
                  let:16 a43 = (-1 + a42) in
                  M[a43] := BD;
                  #return-to: 09BD
                  #09C5
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a44 = (-1 + a43) in
                      M[a44] := 09;
                      let:16 a45 = (-1 + a44) in
                      M[a45] := C5;
                      A := a40;
                      D := M[20F5];
                      E := M[20F4];
                      H := M[20F7];
                      L := M[20F6];
                      SPH := a45[15:8];
                      SPL := a45[7:0];
                      FlagS := a40[7];
                      FlagZ := is_zero(a40);
                      FlagA := a41[3];
                      FlagP := parity(a40);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a46 = (-1 + a43) in
                      M[a46] := 09;
                      let:16 a47 = (-1 + a46) in
                      M[a47] := C5;
                      A := a40;
                      D := M[20F5];
                      E := M[20F4];
                      H := M[20F7];
                      L := M[20F6];
                      SPH := a47[15:8];
                      SPL := a47[7:0];
                      FlagS := a40[7];
                      FlagZ := is_zero(a40);
                      FlagA := a41[3];
                      FlagP := parity(a40);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:16 a48 = addWithCarry(false,1A,a40) in
                    let:8 a49 = (1A & 0F) in
                    let:8 a50 = (a40 & 0F) in
                    let:16 a51 = addWithCarry(false,a49,a50) in
                    #09C7
                    #08FF
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a52 = (-1 + a43) in
                        M[a52] := 08;
                        let:16 a53 = (-1 + a52) in
                        M[a53] := FF;
                        A := a48[7:0];
                        D := M[20F5];
                        E := M[20F4];
                        H := M[20F7];
                        L := M[20F6];
                        SPH := a53[15:8];
                        SPL := a53[7:0];
                        FlagS := a48[7:0][7];
                        FlagZ := is_zero(a48[7:0]);
                        FlagA := a51[7:0][4];
                        FlagP := parity(a48[7:0]);
                        FlagCY := a48[15:8][0];
                        jump (0008);
                      } else {
                        let:16 a54 = (-1 + a43) in
                        M[a54] := 08;
                        let:16 a55 = (-1 + a54) in
                        M[a55] := FF;
                        A := a48[7:0];
                        D := M[20F5];
                        E := M[20F4];
                        H := M[20F7];
                        L := M[20F6];
                        SPH := a55[15:8];
                        SPL := a55[7:0];
                        FlagS := a48[7:0][7];
                        FlagZ := is_zero(a48[7:0]);
                        FlagA := a51[7:0][4];
                        FlagP := parity(a48[7:0]);
                        FlagCY := a48[15:8][0];
                        jump (0010);
                      }
                    } else {
                      #0902
                      let:16 a56 = (-1 + a43) in
                      M[a56] := M[20F7];
                      let:16 a57 = (-1 + a56) in
                      M[a57] := M[20F6];
                      #0903
                      #0905
                      #0906
                      let:17 a58 = add17((00,a48[7:0]),(00,a48[7:0])) in
                      #0907
                      let:17 a59 = add17(a58[15:0],a58[15:0]) in
                      #0908
                      let:17 a60 = add17(a59[15:0],a59[15:0]) in
                      #0909
                      let:17 a61 = add17(1E00,a60[15:0]) in
                      #090A
                      #090B
                      let:16 a62 = (1 + a57) in
                      let:16 a63 = (1 + a62) in
                      #090C
                      #090E
                      #0910
                      #1439
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a64 = (-1 + a63) in
                          M[a64] := 14;
                          let:16 a65 = (-1 + a64) in
                          M[a65] := 39;
                          A := a48[7:0];
                          B := 08;
                          D := a61[15:0][15:8];
                          E := a61[15:0][7:0];
                          H := M[a62];
                          L := M[a57];
                          SPH := a65[15:8];
                          SPL := a65[7:0];
                          FlagS := a48[7:0][7];
                          FlagZ := is_zero(a48[7:0]);
                          FlagA := a51[7:0][4];
                          FlagP := parity(a48[7:0]);
                          FlagCY := a61[16];
                          jump (0008);
                        } else {
                          let:16 a66 = (-1 + a63) in
                          M[a66] := 14;
                          let:16 a67 = (-1 + a66) in
                          M[a67] := 39;
                          A := a48[7:0];
                          B := 08;
                          D := a61[15:0][15:8];
                          E := a61[15:0][7:0];
                          H := M[a62];
                          L := M[a57];
                          SPH := a67[15:8];
                          SPL := a67[7:0];
                          FlagS := a48[7:0][7];
                          FlagZ := is_zero(a48[7:0]);
                          FlagA := a51[7:0][4];
                          FlagP := parity(a48[7:0]);
                          FlagCY := a61[16];
                          jump (0010);
                        }
                      } else {
                        let:16 a68 = (-1 + a63) in
                        M[a68] := 08;
                        let:16 a69 = (-1 + a68) in
                        M[a69] := C;
                        #143A
                        #143B
                        M[(M[a62],M[a57])] := M[a61[15:0]];
                        #143C
                        let:16 a70 = (1 + a61[15:0]) in
                        #143D
                        #1440
                        let:17 a71 = add17(0020,(M[a62],M[a57])) in
                        #1441
                        let:16 a72 = (1 + a69) in
                        let:16 a73 = (1 + a72) in
                        #1442
                        let:16 a74 = addWithCarry(!true,M[a72],~00) in
                        let:8 a75 = (M[a72] & 0F) in
                        let:8 a76 = (~00 & 0F) in
                        let:16 a77 = addWithCarry(!true,a75,a76) in
                        #1443
                        if (!is_zero(a74[7:0])) {
                          A := M[a61[15:0]];
                          B := a74[7:0];
                          C := M[a69];
                          D := a70[15:8];
                          E := a70[7:0];
                          H := a71[15:0][15:8];
                          L := a71[15:0][7:0];
                          SPH := a73[15:8];
                          SPL := a73[7:0];
                          FlagS := a74[7:0][7];
                          FlagZ := is_zero(a74[7:0]);
                          FlagA := a77[7:0][4];
                          FlagP := parity(a74[7:0]);
                          FlagCY := a71[16];
                          jump (1439);
                        } else {
                          #1446
                          let:16 a78 = (1 + a73) in
                          let:16 a79 = (1 + a78) in
                          A := M[a61[15:0]];
                          B := a74[7:0];
                          C := M[a69];
                          D := a70[15:8];
                          E := a70[7:0];
                          H := a71[15:0][15:8];
                          L := a71[15:0][7:0];
                          SPH := a79[15:8];
                          SPL := a79[7:0];
                          FlagS := a74[7:0][7];
                          FlagZ := is_zero(a74[7:0]);
                          FlagA := a77[7:0][4];
                          FlagP := parity(a74[7:0]);
                          FlagCY := a71[16];
                          jump ((M[a78],M[a73]));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    } else {
      #1685
      if (!!a2[15:8][0]) {
        A := M[20F4];
        D := 20;
        E := F4;
        H := a6[15:8];
        L := a6[7:0];
        FlagS := a2[7:0][7];
        FlagZ := is_zero(a2[7:0]);
        FlagA := a5[7:0][4];
        FlagP := parity(a2[7:0]);
        FlagCY := !a2[15:8][0];
        jump (1698);
      } else {
        #1688
        #168F
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a80 = (-1 + (SPH,SPL)) in
            M[a80] := 16;
            let:16 a81 = (-1 + a80) in
            M[a81] := 8F;
            A := M[20F4];
            D := 20;
            E := F4;
            H := a6[15:8];
            L := a6[7:0];
            SPH := a81[15:8];
            SPL := a81[7:0];
            FlagS := a2[7:0][7];
            FlagZ := is_zero(a2[7:0]);
            FlagA := a5[7:0][4];
            FlagP := parity(a2[7:0]);
            FlagCY := !a2[15:8][0];
            jump (0008);
          } else {
            let:16 a82 = (-1 + (SPH,SPL)) in
            M[a82] := 16;
            let:16 a83 = (-1 + a82) in
            M[a83] := 8F;
            A := M[20F4];
            D := 20;
            E := F4;
            H := a6[15:8];
            L := a6[7:0];
            SPH := a83[15:8];
            SPL := a83[7:0];
            FlagS := a2[7:0][7];
            FlagZ := is_zero(a2[7:0]);
            FlagA := a5[7:0][4];
            FlagP := parity(a2[7:0]);
            FlagCY := !a2[15:8][0];
            jump (0010);
          }
        } else {
          #1690
          M[20F4] := M[a6];
          #1691
          #1692
          let:16 a84 = (1 + a6) in
          #1693
          #1694
          M[20F5] := M[a84];
          #1695
          let:16 a85 = (-1 + (SPH,SPL)) in
          M[a85] := 16;
          let:16 a86 = (-1 + a85) in
          M[a86] := 98;
          #return-to: 1698
          #1950
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a87 = (-1 + a86) in
              M[a87] := 19;
              let:16 a88 = (-1 + a87) in
              M[a88] := 50;
              A := M[a84];
              D := 20;
              E := F5;
              H := a84[15:8];
              L := a84[7:0];
              SPH := a88[15:8];
              SPL := a88[7:0];
              FlagS := a2[7:0][7];
              FlagZ := is_zero(a2[7:0]);
              FlagA := a5[7:0][4];
              FlagP := parity(a2[7:0]);
              FlagCY := !a2[15:8][0];
              jump (0008);
            } else {
              let:16 a89 = (-1 + a86) in
              M[a89] := 19;
              let:16 a90 = (-1 + a89) in
              M[a90] := 50;
              A := M[a84];
              D := 20;
              E := F5;
              H := a84[15:8];
              L := a84[7:0];
              SPH := a90[15:8];
              SPL := a90[7:0];
              FlagS := a2[7:0][7];
              FlagZ := is_zero(a2[7:0]);
              FlagA := a5[7:0][4];
              FlagP := parity(a2[7:0]);
              FlagCY := !a2[15:8][0];
              jump (0010);
            }
          } else {
            #1953
            #1931
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a91 = (-1 + a86) in
                M[a91] := 19;
                let:16 a92 = (-1 + a91) in
                M[a92] := 31;
                A := M[a84];
                D := 20;
                E := F5;
                H := 20;
                L := F4;
                SPH := a92[15:8];
                SPL := a92[7:0];
                FlagS := a2[7:0][7];
                FlagZ := is_zero(a2[7:0]);
                FlagA := a5[7:0][4];
                FlagP := parity(a2[7:0]);
                FlagCY := !a2[15:8][0];
                jump (0008);
              } else {
                let:16 a93 = (-1 + a86) in
                M[a93] := 19;
                let:16 a94 = (-1 + a93) in
                M[a94] := 31;
                A := M[a84];
                D := 20;
                E := F5;
                H := 20;
                L := F4;
                SPH := a94[15:8];
                SPL := a94[7:0];
                FlagS := a2[7:0][7];
                FlagZ := is_zero(a2[7:0]);
                FlagA := a5[7:0][4];
                FlagP := parity(a2[7:0]);
                FlagCY := !a2[15:8][0];
                jump (0010);
              }
            } else {
              #1932
              #1933
              #1934
              #1935
              #1936
              #1937
              #1938
              #1939
              #09AD
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a95 = (-1 + a86) in
                  M[a95] := 09;
                  let:16 a96 = (-1 + a95) in
                  M[a96] := AD;
                  A := M[20F6];
                  D := M[20F5];
                  E := M[20F4];
                  H := M[20F7];
                  L := M[20F6];
                  SPH := a96[15:8];
                  SPL := a96[7:0];
                  FlagS := a2[7:0][7];
                  FlagZ := is_zero(a2[7:0]);
                  FlagA := a5[7:0][4];
                  FlagP := parity(a2[7:0]);
                  FlagCY := !a2[15:8][0];
                  jump (0008);
                } else {
                  let:16 a97 = (-1 + a86) in
                  M[a97] := 09;
                  let:16 a98 = (-1 + a97) in
                  M[a98] := AD;
                  A := M[20F6];
                  D := M[20F5];
                  E := M[20F4];
                  H := M[20F7];
                  L := M[20F6];
                  SPH := a98[15:8];
                  SPL := a98[7:0];
                  FlagS := a2[7:0][7];
                  FlagZ := is_zero(a2[7:0]);
                  FlagA := a5[7:0][4];
                  FlagP := parity(a2[7:0]);
                  FlagCY := !a2[15:8][0];
                  jump (0010);
                }
              } else {
                #09AE
                let:16 a99 = (-1 + a86) in
                M[a99] := 09;
                let:16 a100 = (-1 + a99) in
                M[a100] := B1;
                #return-to: 09B1
                #09B2
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a101 = (-1 + a100) in
                    M[a101] := 09;
                    let:16 a102 = (-1 + a101) in
                    M[a102] := B2;
                    A := M[20F5];
                    D := M[20F5];
                    E := M[20F4];
                    H := M[20F7];
                    L := M[20F6];
                    SPH := a102[15:8];
                    SPL := a102[7:0];
                    FlagS := a2[7:0][7];
                    FlagZ := is_zero(a2[7:0]);
                    FlagA := a5[7:0][4];
                    FlagP := parity(a2[7:0]);
                    FlagCY := !a2[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a103 = (-1 + a100) in
                    M[a103] := 09;
                    let:16 a104 = (-1 + a103) in
                    M[a104] := B2;
                    A := M[20F5];
                    D := M[20F5];
                    E := M[20F4];
                    H := M[20F7];
                    L := M[20F6];
                    SPH := a104[15:8];
                    SPL := a104[7:0];
                    FlagS := a2[7:0][7];
                    FlagZ := is_zero(a2[7:0]);
                    FlagA := a5[7:0][4];
                    FlagP := parity(a2[7:0]);
                    FlagCY := !a2[15:8][0];
                    jump (0010);
                  }
                } else {
                  let:16 a105 = (-1 + a100) in
                  M[a105] := M[20F5];
                  let:16 a106 = (-1 + a105) in
                  M[a106] := M[20F4];
                  #09B3
                  let:16 a107 = (-1 + a106) in
                  M[a107] := M[20F5];
                  let:16 a108 = (-1 + a107) in
                  M[a108] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a2[7:0][7]),6,is_zero(a2[7:0])),4,a5[7:0][4]),2,parity(a2[7:0])),0,!a2[15:8][0]);
                  #09B4
                  #09B5
                  #09B6
                  #09B7
                  #09B8
                  let:8 a109 = (0F & updateBit((updateBit((updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0]) >> 01),7,updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0]) >> 01),7,updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0])[0])[0])) in
                  let:8 a110 = (0F | updateBit((updateBit((updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0]) >> 01),7,updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0]) >> 01),7,updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0])[0])[0])) in
                  #09BA
                  let:16 a111 = (-1 + a108) in
                  M[a111] := 09;
                  let:16 a112 = (-1 + a111) in
                  M[a112] := BD;
                  #return-to: 09BD
                  #09C5
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a113 = (-1 + a112) in
                      M[a113] := 09;
                      let:16 a114 = (-1 + a113) in
                      M[a114] := C5;
                      A := a109;
                      D := M[20F5];
                      E := M[20F4];
                      H := M[20F7];
                      L := M[20F6];
                      SPH := a114[15:8];
                      SPL := a114[7:0];
                      FlagS := a109[7];
                      FlagZ := is_zero(a109);
                      FlagA := a110[3];
                      FlagP := parity(a109);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a115 = (-1 + a112) in
                      M[a115] := 09;
                      let:16 a116 = (-1 + a115) in
                      M[a116] := C5;
                      A := a109;
                      D := M[20F5];
                      E := M[20F4];
                      H := M[20F7];
                      L := M[20F6];
                      SPH := a116[15:8];
                      SPL := a116[7:0];
                      FlagS := a109[7];
                      FlagZ := is_zero(a109);
                      FlagA := a110[3];
                      FlagP := parity(a109);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:16 a117 = addWithCarry(false,1A,a109) in
                    let:8 a118 = (1A & 0F) in
                    let:8 a119 = (a109 & 0F) in
                    let:16 a120 = addWithCarry(false,a118,a119) in
                    #09C7
                    #08FF
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a121 = (-1 + a112) in
                        M[a121] := 08;
                        let:16 a122 = (-1 + a121) in
                        M[a122] := FF;
                        A := a117[7:0];
                        D := M[20F5];
                        E := M[20F4];
                        H := M[20F7];
                        L := M[20F6];
                        SPH := a122[15:8];
                        SPL := a122[7:0];
                        FlagS := a117[7:0][7];
                        FlagZ := is_zero(a117[7:0]);
                        FlagA := a120[7:0][4];
                        FlagP := parity(a117[7:0]);
                        FlagCY := a117[15:8][0];
                        jump (0008);
                      } else {
                        let:16 a123 = (-1 + a112) in
                        M[a123] := 08;
                        let:16 a124 = (-1 + a123) in
                        M[a124] := FF;
                        A := a117[7:0];
                        D := M[20F5];
                        E := M[20F4];
                        H := M[20F7];
                        L := M[20F6];
                        SPH := a124[15:8];
                        SPL := a124[7:0];
                        FlagS := a117[7:0][7];
                        FlagZ := is_zero(a117[7:0]);
                        FlagA := a120[7:0][4];
                        FlagP := parity(a117[7:0]);
                        FlagCY := a117[15:8][0];
                        jump (0010);
                      }
                    } else {
                      #0902
                      let:16 a125 = (-1 + a112) in
                      M[a125] := M[20F7];
                      let:16 a126 = (-1 + a125) in
                      M[a126] := M[20F6];
                      #0903
                      #0905
                      #0906
                      let:17 a127 = add17((00,a117[7:0]),(00,a117[7:0])) in
                      #0907
                      let:17 a128 = add17(a127[15:0],a127[15:0]) in
                      #0908
                      let:17 a129 = add17(a128[15:0],a128[15:0]) in
                      #0909
                      let:17 a130 = add17(1E00,a129[15:0]) in
                      #090A
                      #090B
                      let:16 a131 = (1 + a126) in
                      let:16 a132 = (1 + a131) in
                      #090C
                      #090E
                      #0910
                      #1439
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a133 = (-1 + a132) in
                          M[a133] := 14;
                          let:16 a134 = (-1 + a133) in
                          M[a134] := 39;
                          A := a117[7:0];
                          B := 08;
                          D := a130[15:0][15:8];
                          E := a130[15:0][7:0];
                          H := M[a131];
                          L := M[a126];
                          SPH := a134[15:8];
                          SPL := a134[7:0];
                          FlagS := a117[7:0][7];
                          FlagZ := is_zero(a117[7:0]);
                          FlagA := a120[7:0][4];
                          FlagP := parity(a117[7:0]);
                          FlagCY := a130[16];
                          jump (0008);
                        } else {
                          let:16 a135 = (-1 + a132) in
                          M[a135] := 14;
                          let:16 a136 = (-1 + a135) in
                          M[a136] := 39;
                          A := a117[7:0];
                          B := 08;
                          D := a130[15:0][15:8];
                          E := a130[15:0][7:0];
                          H := M[a131];
                          L := M[a126];
                          SPH := a136[15:8];
                          SPL := a136[7:0];
                          FlagS := a117[7:0][7];
                          FlagZ := is_zero(a117[7:0]);
                          FlagA := a120[7:0][4];
                          FlagP := parity(a117[7:0]);
                          FlagCY := a130[16];
                          jump (0010);
                        }
                      } else {
                        let:16 a137 = (-1 + a132) in
                        M[a137] := 08;
                        let:16 a138 = (-1 + a137) in
                        M[a138] := C;
                        #143A
                        #143B
                        M[(M[a131],M[a126])] := M[a130[15:0]];
                        #143C
                        let:16 a139 = (1 + a130[15:0]) in
                        #143D
                        #1440
                        let:17 a140 = add17(0020,(M[a131],M[a126])) in
                        #1441
                        let:16 a141 = (1 + a138) in
                        let:16 a142 = (1 + a141) in
                        #1442
                        let:16 a143 = addWithCarry(!true,M[a141],~00) in
                        let:8 a144 = (M[a141] & 0F) in
                        let:8 a145 = (~00 & 0F) in
                        let:16 a146 = addWithCarry(!true,a144,a145) in
                        #1443
                        if (!is_zero(a143[7:0])) {
                          A := M[a130[15:0]];
                          B := a143[7:0];
                          C := M[a138];
                          D := a139[15:8];
                          E := a139[7:0];
                          H := a140[15:0][15:8];
                          L := a140[15:0][7:0];
                          SPH := a142[15:8];
                          SPL := a142[7:0];
                          FlagS := a143[7:0][7];
                          FlagZ := is_zero(a143[7:0]);
                          FlagA := a146[7:0][4];
                          FlagP := parity(a143[7:0]);
                          FlagCY := a140[16];
                          jump (1439);
                        } else {
                          #1446
                          let:16 a147 = (1 + a142) in
                          let:16 a148 = (1 + a147) in
                          A := M[a130[15:0]];
                          B := a143[7:0];
                          C := M[a138];
                          D := a139[15:8];
                          E := a139[7:0];
                          H := a140[15:0][15:8];
                          L := a140[15:0][7:0];
                          SPH := a148[15:8];
                          SPL := a148[7:0];
                          FlagS := a143[7:0][7];
                          FlagZ := is_zero(a143[7:0]);
                          FlagA := a146[7:0][4];
                          FlagP := parity(a143[7:0]);
                          FlagCY := a140[16];
                          jump ((M[a147],M[a142]));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

1698:

    #169B
    let:8 a1 = (M[20CE] & M[20CE]) in
    let:8 a2 = (M[20CE] | M[20CE]) in
    #169C
    if (is_zero(a1)) {
      #16C9
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 16;
          let:16 a4 = (-1 + a3) in
          M[a4] := C9;
          A := a1;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 16;
          let:16 a6 = (-1 + a5) in
          M[a6] := C9;
          A := a1;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #16CC
        #16CF
        #16D1
        let:16 a7 = (-1 + (SPH,SPL)) in
        M[a7] := 16;
        let:16 a8 = (-1 + a7) in
        M[a8] := D4;
        #return-to: 16D4
        #0A93
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a8) in
            M[a9] := 0A;
            let:16 a10 = (-1 + a9) in
            M[a10] := 93;
            A := a1;
            C := 0A;
            D := 1A;
            E := A6;
            H := 2D;
            L := 18;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a11 = (-1 + a8) in
            M[a11] := 0A;
            let:16 a12 = (-1 + a11) in
            M[a12] := 93;
            A := a1;
            C := 0A;
            D := 1A;
            E := A6;
            H := 2D;
            L := 18;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a13 = (-1 + a8) in
          M[a13] := 1A;
          let:16 a14 = (-1 + a13) in
          M[a14] := A6;
          #0A94
          #0A95
          let:16 a15 = (-1 + a14) in
          M[a15] := 0A;
          let:16 a16 = (-1 + a15) in
          M[a16] := 98;
          #return-to: 0A98
          #08FF
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a16) in
              M[a17] := 08;
              let:16 a18 = (-1 + a17) in
              M[a18] := FF;
              A := 06;
              C := 0A;
              D := 1A;
              E := A6;
              H := 2D;
              L := 18;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a19 = (-1 + a16) in
              M[a19] := 08;
              let:16 a20 = (-1 + a19) in
              M[a20] := FF;
              A := 06;
              C := 0A;
              D := 1A;
              E := A6;
              H := 2D;
              L := 18;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #0902
            let:16 a21 = (-1 + a16) in
            M[a21] := 2D;
            let:16 a22 = (-1 + a21) in
            M[a22] := 18;
            #0903
            #0905
            #0906
            let:17 a23 = add17(0006,0006) in
            #0907
            let:17 a24 = add17(a23[15:0],a23[15:0]) in
            #0908
            let:17 a25 = add17(a24[15:0],a24[15:0]) in
            #0909
            let:17 a26 = add17(1E00,a25[15:0]) in
            #090A
            #090B
            let:16 a27 = (1 + a22) in
            let:16 a28 = (1 + a27) in
            #090C
            #090E
            #0910
            #1439
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a29 = (-1 + a28) in
                M[a29] := 14;
                let:16 a30 = (-1 + a29) in
                M[a30] := 39;
                A := 06;
                B := 08;
                C := 0A;
                D := a26[15:0][15:8];
                E := a26[15:0][7:0];
                H := M[a27];
                L := M[a22];
                SPH := a30[15:8];
                SPL := a30[7:0];
                FlagS := a1[7];
                FlagZ := is_zero(a1);
                FlagA := a2[3];
                FlagP := parity(a1);
                FlagCY := a26[16];
                jump (0008);
              } else {
                let:16 a31 = (-1 + a28) in
                M[a31] := 14;
                let:16 a32 = (-1 + a31) in
                M[a32] := 39;
                A := 06;
                B := 08;
                C := 0A;
                D := a26[15:0][15:8];
                E := a26[15:0][7:0];
                H := M[a27];
                L := M[a22];
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagS := a1[7];
                FlagZ := is_zero(a1);
                FlagA := a2[3];
                FlagP := parity(a1);
                FlagCY := a26[16];
                jump (0010);
              }
            } else {
              let:16 a33 = (-1 + a28) in
              M[a33] := 08;
              let:16 a34 = (-1 + a33) in
              M[a34] := 0A;
              #143A
              #143B
              M[(M[a27],M[a22])] := M[a26[15:0]];
              #143C
              let:16 a35 = (1 + a26[15:0]) in
              #143D
              #1440
              let:17 a36 = add17(0020,(M[a27],M[a22])) in
              #1441
              let:16 a37 = (1 + a34) in
              let:16 a38 = (1 + a37) in
              #1442
              let:16 a39 = addWithCarry(!true,M[a37],~00) in
              let:8 a40 = (M[a37] & 0F) in
              let:8 a41 = (~00 & 0F) in
              let:16 a42 = addWithCarry(!true,a40,a41) in
              #1443
              if (!is_zero(a39[7:0])) {
                A := M[a26[15:0]];
                B := a39[7:0];
                C := M[a34];
                D := a35[15:8];
                E := a35[7:0];
                H := a36[15:0][15:8];
                L := a36[15:0][7:0];
                SPH := a38[15:8];
                SPL := a38[7:0];
                FlagS := a39[7:0][7];
                FlagZ := is_zero(a39[7:0]);
                FlagA := a42[7:0][4];
                FlagP := parity(a39[7:0]);
                FlagCY := a36[16];
                jump (1439);
              } else {
                #1446
                let:16 a43 = (1 + a38) in
                let:16 a44 = (1 + a43) in
                A := M[a26[15:0]];
                B := a39[7:0];
                C := M[a34];
                D := a35[15:8];
                E := a35[7:0];
                H := a36[15:0][15:8];
                L := a36[15:0][7:0];
                SPH := a44[15:8];
                SPL := a44[7:0];
                FlagS := a39[7:0][7];
                FlagZ := is_zero(a39[7:0]);
                FlagA := a42[7:0][4];
                FlagP := parity(a39[7:0]);
                FlagCY := a36[16];
                jump ((M[a43],M[a38]));
              }
            }
          }
        }
      }
    } else {
      #169F
      #16A2
      #16A5
      #16A7
      let:16 a45 = (-1 + (SPH,SPL)) in
      M[a45] := 16;
      let:16 a46 = (-1 + a45) in
      M[a46] := AA;
      #return-to: 16AA
      #0A93
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a47 = (-1 + a46) in
          M[a47] := 0A;
          let:16 a48 = (-1 + a47) in
          M[a48] := 93;
          A := a1;
          C := 14;
          D := 1A;
          E := A6;
          H := 28;
          L := 03;
          SPH := a48[15:8];
          SPL := a48[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a49 = (-1 + a46) in
          M[a49] := 0A;
          let:16 a50 = (-1 + a49) in
          M[a50] := 93;
          A := a1;
          C := 14;
          D := 1A;
          E := A6;
          H := 28;
          L := 03;
          SPH := a50[15:8];
          SPL := a50[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        let:16 a51 = (-1 + a46) in
        M[a51] := 1A;
        let:16 a52 = (-1 + a51) in
        M[a52] := A6;
        #0A94
        #0A95
        let:16 a53 = (-1 + a52) in
        M[a53] := 0A;
        let:16 a54 = (-1 + a53) in
        M[a54] := 98;
        #return-to: 0A98
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a55 = (-1 + a54) in
            M[a55] := 08;
            let:16 a56 = (-1 + a55) in
            M[a56] := FF;
            A := 06;
            C := 14;
            D := 1A;
            E := A6;
            H := 28;
            L := 03;
            SPH := a56[15:8];
            SPL := a56[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a57 = (-1 + a54) in
            M[a57] := 08;
            let:16 a58 = (-1 + a57) in
            M[a58] := FF;
            A := 06;
            C := 14;
            D := 1A;
            E := A6;
            H := 28;
            L := 03;
            SPH := a58[15:8];
            SPL := a58[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #0902
          let:16 a59 = (-1 + a54) in
          M[a59] := 28;
          let:16 a60 = (-1 + a59) in
          M[a60] := 03;
          #0903
          #0905
          #0906
          let:17 a61 = add17(0006,0006) in
          #0907
          let:17 a62 = add17(a61[15:0],a61[15:0]) in
          #0908
          let:17 a63 = add17(a62[15:0],a62[15:0]) in
          #0909
          let:17 a64 = add17(1E00,a63[15:0]) in
          #090A
          #090B
          let:16 a65 = (1 + a60) in
          let:16 a66 = (1 + a65) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a67 = (-1 + a66) in
              M[a67] := 14;
              let:16 a68 = (-1 + a67) in
              M[a68] := 39;
              A := 06;
              B := 08;
              C := 14;
              D := a64[15:0][15:8];
              E := a64[15:0][7:0];
              H := M[a65];
              L := M[a60];
              SPH := a68[15:8];
              SPL := a68[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := a64[16];
              jump (0008);
            } else {
              let:16 a69 = (-1 + a66) in
              M[a69] := 14;
              let:16 a70 = (-1 + a69) in
              M[a70] := 39;
              A := 06;
              B := 08;
              C := 14;
              D := a64[15:0][15:8];
              E := a64[15:0][7:0];
              H := M[a65];
              L := M[a60];
              SPH := a70[15:8];
              SPL := a70[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := a64[16];
              jump (0010);
            }
          } else {
            let:16 a71 = (-1 + a66) in
            M[a71] := 08;
            let:16 a72 = (-1 + a71) in
            M[a72] := 14;
            #143A
            #143B
            M[(M[a65],M[a60])] := M[a64[15:0]];
            #143C
            let:16 a73 = (1 + a64[15:0]) in
            #143D
            #1440
            let:17 a74 = add17(0020,(M[a65],M[a60])) in
            #1441
            let:16 a75 = (1 + a72) in
            let:16 a76 = (1 + a75) in
            #1442
            let:16 a77 = addWithCarry(!true,M[a75],~00) in
            let:8 a78 = (M[a75] & 0F) in
            let:8 a79 = (~00 & 0F) in
            let:16 a80 = addWithCarry(!true,a78,a79) in
            #1443
            if (!is_zero(a77[7:0])) {
              A := M[a64[15:0]];
              B := a77[7:0];
              C := M[a72];
              D := a73[15:8];
              E := a73[7:0];
              H := a74[15:0][15:8];
              L := a74[15:0][7:0];
              SPH := a76[15:8];
              SPL := a76[7:0];
              FlagS := a77[7:0][7];
              FlagZ := is_zero(a77[7:0]);
              FlagA := a80[7:0][4];
              FlagP := parity(a77[7:0]);
              FlagCY := a74[16];
              jump (1439);
            } else {
              #1446
              let:16 a81 = (1 + a76) in
              let:16 a82 = (1 + a81) in
              A := M[a64[15:0]];
              B := a77[7:0];
              C := M[a72];
              D := a73[15:8];
              E := a73[7:0];
              H := a74[15:0][15:8];
              L := a74[15:0][7:0];
              SPH := a82[15:8];
              SPL := a82[7:0];
              FlagS := a77[7:0][7];
              FlagZ := is_zero(a77[7:0]);
              FlagA := a80[7:0][4];
              FlagP := parity(a77[7:0]);
              FlagCY := a74[16];
              jump ((M[a81],M[a76]));
            }
          }
        }
      }
    }

16AA:

    let:16 a1 = addWithCarry(!true,H,~00) in
    let:8 a2 = (H & 0F) in
    let:8 a3 = (~00 & 0F) in
    let:16 a4 = addWithCarry(!true,a2,a3) in
    #16AB
    let:16 a5 = addWithCarry(!true,a1[7:0],~00) in
    let:8 a6 = (a1[7:0] & 0F) in
    let:8 a7 = (~00 & 0F) in
    let:16 a8 = addWithCarry(!true,a6,a7) in
    #16AC
    #16AE
    #16B1
    #16B2
    if (M[2067][0]) {
      #16B7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + (SPH,SPL)) in
          M[a9] := 16;
          let:16 a10 = (-1 + a9) in
          M[a10] := B7;
          A := updateBit((M[2067] >> 01),7,M[2067][0]);
          B := 1B;
          H := a5[7:0];
          SPH := a10[15:8];
          SPL := a10[7:0];
          FlagS := a5[7:0][7];
          FlagZ := is_zero(a5[7:0]);
          FlagA := a8[7:0][4];
          FlagP := parity(a5[7:0]);
          FlagCY := M[2067][0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + (SPH,SPL)) in
          M[a11] := 16;
          let:16 a12 = (-1 + a11) in
          M[a12] := B7;
          A := updateBit((M[2067] >> 01),7,M[2067][0]);
          B := 1B;
          H := a5[7:0];
          SPH := a12[15:8];
          SPL := a12[7:0];
          FlagS := a5[7:0][7];
          FlagZ := is_zero(a5[7:0]);
          FlagA := a8[7:0][4];
          FlagP := parity(a5[7:0]);
          FlagCY := M[2067][0];
          jump (0010);
        }
      } else {
        #16B8
        let:16 a13 = (-1 + (SPH,SPL)) in
        M[a13] := 16;
        let:16 a14 = (-1 + a13) in
        M[a14] := BB;
        #return-to: 16BB
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 08;
            let:16 a16 = (-1 + a15) in
            M[a16] := FF;
            A := 1B;
            B := 1B;
            H := a5[7:0];
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a5[7:0][7];
            FlagZ := is_zero(a5[7:0]);
            FlagA := a8[7:0][4];
            FlagP := parity(a5[7:0]);
            FlagCY := M[2067][0];
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 08;
            let:16 a18 = (-1 + a17) in
            M[a18] := FF;
            A := 1B;
            B := 1B;
            H := a5[7:0];
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a5[7:0][7];
            FlagZ := is_zero(a5[7:0]);
            FlagA := a8[7:0][4];
            FlagP := parity(a5[7:0]);
            FlagCY := M[2067][0];
            jump (0010);
          }
        } else {
          #0902
          let:16 a19 = (-1 + a14) in
          M[a19] := a5[7:0];
          let:16 a20 = (-1 + a19) in
          M[a20] := L;
          #0903
          #0905
          #0906
          let:17 a21 = add17(001B,001B) in
          #0907
          let:17 a22 = add17(a21[15:0],a21[15:0]) in
          #0908
          let:17 a23 = add17(a22[15:0],a22[15:0]) in
          #0909
          let:17 a24 = add17(1E00,a23[15:0]) in
          #090A
          #090B
          let:16 a25 = (1 + a20) in
          let:16 a26 = (1 + a25) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a27 = (-1 + a26) in
              M[a27] := 14;
              let:16 a28 = (-1 + a27) in
              M[a28] := 39;
              A := 1B;
              B := 08;
              D := a24[15:0][15:8];
              E := a24[15:0][7:0];
              H := M[a25];
              L := M[a20];
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagS := a5[7:0][7];
              FlagZ := is_zero(a5[7:0]);
              FlagA := a8[7:0][4];
              FlagP := parity(a5[7:0]);
              FlagCY := a24[16];
              jump (0008);
            } else {
              let:16 a29 = (-1 + a26) in
              M[a29] := 14;
              let:16 a30 = (-1 + a29) in
              M[a30] := 39;
              A := 1B;
              B := 08;
              D := a24[15:0][15:8];
              E := a24[15:0][7:0];
              H := M[a25];
              L := M[a20];
              SPH := a30[15:8];
              SPL := a30[7:0];
              FlagS := a5[7:0][7];
              FlagZ := is_zero(a5[7:0]);
              FlagA := a8[7:0][4];
              FlagP := parity(a5[7:0]);
              FlagCY := a24[16];
              jump (0010);
            }
          } else {
            let:16 a31 = (-1 + a26) in
            M[a31] := 08;
            let:16 a32 = (-1 + a31) in
            M[a32] := C;
            #143A
            #143B
            M[(M[a25],M[a20])] := M[a24[15:0]];
            #143C
            let:16 a33 = (1 + a24[15:0]) in
            #143D
            #1440
            let:17 a34 = add17(0020,(M[a25],M[a20])) in
            #1441
            let:16 a35 = (1 + a32) in
            let:16 a36 = (1 + a35) in
            #1442
            let:16 a37 = addWithCarry(!true,M[a35],~00) in
            let:8 a38 = (M[a35] & 0F) in
            let:8 a39 = (~00 & 0F) in
            let:16 a40 = addWithCarry(!true,a38,a39) in
            #1443
            if (!is_zero(a37[7:0])) {
              A := M[a24[15:0]];
              B := a37[7:0];
              C := M[a32];
              D := a33[15:8];
              E := a33[7:0];
              H := a34[15:0][15:8];
              L := a34[15:0][7:0];
              SPH := a36[15:8];
              SPL := a36[7:0];
              FlagS := a37[7:0][7];
              FlagZ := is_zero(a37[7:0]);
              FlagA := a40[7:0][4];
              FlagP := parity(a37[7:0]);
              FlagCY := a34[16];
              jump (1439);
            } else {
              #1446
              let:16 a41 = (1 + a36) in
              let:16 a42 = (1 + a41) in
              A := M[a24[15:0]];
              B := a37[7:0];
              C := M[a32];
              D := a33[15:8];
              E := a33[7:0];
              H := a34[15:0][15:8];
              L := a34[15:0][7:0];
              SPH := a42[15:8];
              SPL := a42[7:0];
              FlagS := a37[7:0][7];
              FlagZ := is_zero(a37[7:0]);
              FlagA := a40[7:0][4];
              FlagP := parity(a37[7:0]);
              FlagCY := a34[16];
              jump ((M[a41],M[a36]));
            }
          }
        }
      }
    } else {
      #16B5
      #16B7
      #16B8
      let:16 a43 = (-1 + (SPH,SPL)) in
      M[a43] := 16;
      let:16 a44 = (-1 + a43) in
      M[a44] := BB;
      #return-to: 16BB
      #08FF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a45 = (-1 + a44) in
          M[a45] := 08;
          let:16 a46 = (-1 + a45) in
          M[a46] := FF;
          A := 1C;
          B := 1C;
          H := a5[7:0];
          SPH := a46[15:8];
          SPL := a46[7:0];
          FlagS := a5[7:0][7];
          FlagZ := is_zero(a5[7:0]);
          FlagA := a8[7:0][4];
          FlagP := parity(a5[7:0]);
          FlagCY := M[2067][0];
          jump (0008);
        } else {
          let:16 a47 = (-1 + a44) in
          M[a47] := 08;
          let:16 a48 = (-1 + a47) in
          M[a48] := FF;
          A := 1C;
          B := 1C;
          H := a5[7:0];
          SPH := a48[15:8];
          SPL := a48[7:0];
          FlagS := a5[7:0][7];
          FlagZ := is_zero(a5[7:0]);
          FlagA := a8[7:0][4];
          FlagP := parity(a5[7:0]);
          FlagCY := M[2067][0];
          jump (0010);
        }
      } else {
        #0902
        let:16 a49 = (-1 + a44) in
        M[a49] := a5[7:0];
        let:16 a50 = (-1 + a49) in
        M[a50] := L;
        #0903
        #0905
        #0906
        let:17 a51 = add17(001C,001C) in
        #0907
        let:17 a52 = add17(a51[15:0],a51[15:0]) in
        #0908
        let:17 a53 = add17(a52[15:0],a52[15:0]) in
        #0909
        let:17 a54 = add17(1E00,a53[15:0]) in
        #090A
        #090B
        let:16 a55 = (1 + a50) in
        let:16 a56 = (1 + a55) in
        #090C
        #090E
        #0910
        #1439
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a57 = (-1 + a56) in
            M[a57] := 14;
            let:16 a58 = (-1 + a57) in
            M[a58] := 39;
            A := 1C;
            B := 08;
            D := a54[15:0][15:8];
            E := a54[15:0][7:0];
            H := M[a55];
            L := M[a50];
            SPH := a58[15:8];
            SPL := a58[7:0];
            FlagS := a5[7:0][7];
            FlagZ := is_zero(a5[7:0]);
            FlagA := a8[7:0][4];
            FlagP := parity(a5[7:0]);
            FlagCY := a54[16];
            jump (0008);
          } else {
            let:16 a59 = (-1 + a56) in
            M[a59] := 14;
            let:16 a60 = (-1 + a59) in
            M[a60] := 39;
            A := 1C;
            B := 08;
            D := a54[15:0][15:8];
            E := a54[15:0][7:0];
            H := M[a55];
            L := M[a50];
            SPH := a60[15:8];
            SPL := a60[7:0];
            FlagS := a5[7:0][7];
            FlagZ := is_zero(a5[7:0]);
            FlagA := a8[7:0][4];
            FlagP := parity(a5[7:0]);
            FlagCY := a54[16];
            jump (0010);
          }
        } else {
          let:16 a61 = (-1 + a56) in
          M[a61] := 08;
          let:16 a62 = (-1 + a61) in
          M[a62] := C;
          #143A
          #143B
          M[(M[a55],M[a50])] := M[a54[15:0]];
          #143C
          let:16 a63 = (1 + a54[15:0]) in
          #143D
          #1440
          let:17 a64 = add17(0020,(M[a55],M[a50])) in
          #1441
          let:16 a65 = (1 + a62) in
          let:16 a66 = (1 + a65) in
          #1442
          let:16 a67 = addWithCarry(!true,M[a65],~00) in
          let:8 a68 = (M[a65] & 0F) in
          let:8 a69 = (~00 & 0F) in
          let:16 a70 = addWithCarry(!true,a68,a69) in
          #1443
          if (!is_zero(a67[7:0])) {
            A := M[a54[15:0]];
            B := a67[7:0];
            C := M[a62];
            D := a63[15:8];
            E := a63[7:0];
            H := a64[15:0][15:8];
            L := a64[15:0][7:0];
            SPH := a66[15:8];
            SPL := a66[7:0];
            FlagS := a67[7:0][7];
            FlagZ := is_zero(a67[7:0]);
            FlagA := a70[7:0][4];
            FlagP := parity(a67[7:0]);
            FlagCY := a64[16];
            jump (1439);
          } else {
            #1446
            let:16 a71 = (1 + a66) in
            let:16 a72 = (1 + a71) in
            A := M[a54[15:0]];
            B := a67[7:0];
            C := M[a62];
            D := a63[15:8];
            E := a63[7:0];
            H := a64[15:0][15:8];
            L := a64[15:0][7:0];
            SPH := a72[15:8];
            SPL := a72[7:0];
            FlagS := a67[7:0][7];
            FlagZ := is_zero(a67[7:0]);
            FlagA := a70[7:0][4];
            FlagP := parity(a67[7:0]);
            FlagCY := a64[16];
            jump ((M[a71],M[a66]));
          }
        }
      }
    }

16BB:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 16;
    let:16 a2 = (-1 + a1) in
    M[a2] := BE;
    #return-to: 16BE
    #0AB1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := B1;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := B1;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AB3
      #0AD7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := D7;
          A := 40;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := D7;
          A := 40;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        M[20C0] := 40;
        #0ADA
        #0ADD
        let:8 a11 = (M[20C0] & M[20C0]) in
        let:8 a12 = (M[20C0] | M[20C0]) in
        #0ADE
        if (!is_zero(a11)) {
          A := a11;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump (0ADA);
        } else {
          #0AE1
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        }
      }
    }

16BE:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 16;
    let:16 a2 = (-1 + a1) in
    M[a2] := C1;
    #return-to: 16C1
    #18E7
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := E7;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 18;
        let:16 a6 = (-1 + a5) in
        M[a6] := E7;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #18EA
      #18ED
      #18EE
      if (!M[2067][0]) {
        let:16 a7 = (1 + a2) in
        let:16 a8 = (1 + a7) in
        A := updateBit((M[2067] >> 01),7,M[2067][0]);
        H := 20;
        L := E7;
        SPH := a8[15:8];
        SPL := a8[7:0];
        FlagCY := M[2067][0];
        jump ((M[a7],M[a2]));
      } else {
        #18EF
        #18F0
        let:16 a9 = (1 + a2) in
        let:16 a10 = (1 + a9) in
        A := updateBit((M[2067] >> 01),7,M[2067][0]);
        H := 20;
        L := E8;
        SPH := a10[15:8];
        SPL := a10[7:0];
        FlagCY := M[2067][0];
        jump ((M[a9],M[a2]));
      }
    }

16C1:

    #16C2
    let:8 a1 = (M[(H,L)] & M[(H,L)]) in
    let:8 a2 = (M[(H,L)] | M[(H,L)]) in
    #16C3
    if (is_zero(a1)) {
      #16C9
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 16;
          let:16 a4 = (-1 + a3) in
          M[a4] := C9;
          A := a1;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 16;
          let:16 a6 = (-1 + a5) in
          M[a6] := C9;
          A := a1;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #16CC
        #16CF
        #16D1
        let:16 a7 = (-1 + (SPH,SPL)) in
        M[a7] := 16;
        let:16 a8 = (-1 + a7) in
        M[a8] := D4;
        #return-to: 16D4
        #0A93
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a9 = (-1 + a8) in
            M[a9] := 0A;
            let:16 a10 = (-1 + a9) in
            M[a10] := 93;
            A := a1;
            C := 0A;
            D := 1A;
            E := A6;
            H := 2D;
            L := 18;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a11 = (-1 + a8) in
            M[a11] := 0A;
            let:16 a12 = (-1 + a11) in
            M[a12] := 93;
            A := a1;
            C := 0A;
            D := 1A;
            E := A6;
            H := 2D;
            L := 18;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := a2[3];
            FlagP := parity(a1);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a13 = (-1 + a8) in
          M[a13] := 1A;
          let:16 a14 = (-1 + a13) in
          M[a14] := A6;
          #0A94
          #0A95
          let:16 a15 = (-1 + a14) in
          M[a15] := 0A;
          let:16 a16 = (-1 + a15) in
          M[a16] := 98;
          #return-to: 0A98
          #08FF
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a16) in
              M[a17] := 08;
              let:16 a18 = (-1 + a17) in
              M[a18] := FF;
              A := 06;
              C := 0A;
              D := 1A;
              E := A6;
              H := 2D;
              L := 18;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a19 = (-1 + a16) in
              M[a19] := 08;
              let:16 a20 = (-1 + a19) in
              M[a20] := FF;
              A := 06;
              C := 0A;
              D := 1A;
              E := A6;
              H := 2D;
              L := 18;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #0902
            let:16 a21 = (-1 + a16) in
            M[a21] := 2D;
            let:16 a22 = (-1 + a21) in
            M[a22] := 18;
            #0903
            #0905
            #0906
            let:17 a23 = add17(0006,0006) in
            #0907
            let:17 a24 = add17(a23[15:0],a23[15:0]) in
            #0908
            let:17 a25 = add17(a24[15:0],a24[15:0]) in
            #0909
            let:17 a26 = add17(1E00,a25[15:0]) in
            #090A
            #090B
            let:16 a27 = (1 + a22) in
            let:16 a28 = (1 + a27) in
            #090C
            #090E
            #0910
            #1439
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a29 = (-1 + a28) in
                M[a29] := 14;
                let:16 a30 = (-1 + a29) in
                M[a30] := 39;
                A := 06;
                B := 08;
                C := 0A;
                D := a26[15:0][15:8];
                E := a26[15:0][7:0];
                H := M[a27];
                L := M[a22];
                SPH := a30[15:8];
                SPL := a30[7:0];
                FlagS := a1[7];
                FlagZ := is_zero(a1);
                FlagA := a2[3];
                FlagP := parity(a1);
                FlagCY := a26[16];
                jump (0008);
              } else {
                let:16 a31 = (-1 + a28) in
                M[a31] := 14;
                let:16 a32 = (-1 + a31) in
                M[a32] := 39;
                A := 06;
                B := 08;
                C := 0A;
                D := a26[15:0][15:8];
                E := a26[15:0][7:0];
                H := M[a27];
                L := M[a22];
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagS := a1[7];
                FlagZ := is_zero(a1);
                FlagA := a2[3];
                FlagP := parity(a1);
                FlagCY := a26[16];
                jump (0010);
              }
            } else {
              let:16 a33 = (-1 + a28) in
              M[a33] := 08;
              let:16 a34 = (-1 + a33) in
              M[a34] := 0A;
              #143A
              #143B
              M[(M[a27],M[a22])] := M[a26[15:0]];
              #143C
              let:16 a35 = (1 + a26[15:0]) in
              #143D
              #1440
              let:17 a36 = add17(0020,(M[a27],M[a22])) in
              #1441
              let:16 a37 = (1 + a34) in
              let:16 a38 = (1 + a37) in
              #1442
              let:16 a39 = addWithCarry(!true,M[a37],~00) in
              let:8 a40 = (M[a37] & 0F) in
              let:8 a41 = (~00 & 0F) in
              let:16 a42 = addWithCarry(!true,a40,a41) in
              #1443
              if (!is_zero(a39[7:0])) {
                A := M[a26[15:0]];
                B := a39[7:0];
                C := M[a34];
                D := a35[15:8];
                E := a35[7:0];
                H := a36[15:0][15:8];
                L := a36[15:0][7:0];
                SPH := a38[15:8];
                SPL := a38[7:0];
                FlagS := a39[7:0][7];
                FlagZ := is_zero(a39[7:0]);
                FlagA := a42[7:0][4];
                FlagP := parity(a39[7:0]);
                FlagCY := a36[16];
                jump (1439);
              } else {
                #1446
                let:16 a43 = (1 + a38) in
                let:16 a44 = (1 + a43) in
                A := M[a26[15:0]];
                B := a39[7:0];
                C := M[a34];
                D := a35[15:8];
                E := a35[7:0];
                H := a36[15:0][15:8];
                L := a36[15:0][7:0];
                SPH := a44[15:8];
                SPL := a44[7:0];
                FlagS := a39[7:0][7];
                FlagZ := is_zero(a39[7:0]);
                FlagA := a42[7:0][4];
                FlagP := parity(a39[7:0]);
                FlagCY := a36[16];
                jump ((M[a43],M[a38]));
              }
            }
          }
        }
      }
    } else {
      #16C6
      #02ED
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a45 = (-1 + (SPH,SPL)) in
          M[a45] := 02;
          let:16 a46 = (-1 + a45) in
          M[a46] := ED;
          A := a1;
          SPH := a46[15:8];
          SPL := a46[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a47 = (-1 + (SPH,SPL)) in
          M[a47] := 02;
          let:16 a48 = (-1 + a47) in
          M[a48] := ED;
          A := a1;
          SPH := a48[15:8];
          SPL := a48[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #02F0
        let:16 a49 = (-1 + (SPH,SPL)) in
        M[a49] := M[2067];
        let:16 a50 = (-1 + a49) in
        M[a50] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a1[7]),6,is_zero(a1)),4,a2[3]),2,parity(a1)),0,false);
        #02F1
        #02F2
        if (M[2067][0]) {
          #0332
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a51 = (-1 + a50) in
              M[a51] := 03;
              let:16 a52 = (-1 + a51) in
              M[a52] := 32;
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              SPH := a52[15:8];
              SPL := a52[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := M[2067][0];
              jump (0008);
            } else {
              let:16 a53 = (-1 + a50) in
              M[a53] := 03;
              let:16 a54 = (-1 + a53) in
              M[a54] := 32;
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              SPH := a54[15:8];
              SPL := a54[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := M[2067][0];
              jump (0010);
            }
          } else {
            let:16 a55 = (-1 + a50) in
            M[a55] := 03;
            let:16 a56 = (-1 + a55) in
            M[a56] := 35;
            #return-to: 0335
            #0209
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a57 = (-1 + a56) in
                M[a57] := 02;
                let:16 a58 = (-1 + a57) in
                M[a58] := 09;
                A := updateBit((M[2067] >> 01),7,M[2067][0]);
                SPH := a58[15:8];
                SPL := a58[7:0];
                FlagS := a1[7];
                FlagZ := is_zero(a1);
                FlagA := a2[3];
                FlagP := parity(a1);
                FlagCY := M[2067][0];
                jump (0008);
              } else {
                let:16 a59 = (-1 + a56) in
                M[a59] := 02;
                let:16 a60 = (-1 + a59) in
                M[a60] := 09;
                A := updateBit((M[2067] >> 01),7,M[2067][0]);
                SPH := a60[15:8];
                SPL := a60[7:0];
                FlagS := a1[7];
                FlagZ := is_zero(a1);
                FlagA := a2[3];
                FlagP := parity(a1);
                FlagCY := M[2067][0];
                jump (0010);
              }
            } else {
              #020B
              #021B
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a61 = (-1 + a56) in
                  M[a61] := 02;
                  let:16 a62 = (-1 + a61) in
                  M[a62] := 1B;
                  A := 01;
                  SPH := a62[15:8];
                  SPL := a62[7:0];
                  FlagS := a1[7];
                  FlagZ := is_zero(a1);
                  FlagA := a2[3];
                  FlagP := parity(a1);
                  FlagCY := M[2067][0];
                  jump (0008);
                } else {
                  let:16 a63 = (-1 + a56) in
                  M[a63] := 02;
                  let:16 a64 = (-1 + a63) in
                  M[a64] := 1B;
                  A := 01;
                  SPH := a64[15:8];
                  SPL := a64[7:0];
                  FlagS := a1[7];
                  FlagZ := is_zero(a1);
                  FlagA := a2[3];
                  FlagP := parity(a1);
                  FlagCY := M[2067][0];
                  jump (0010);
                }
              } else {
                #021E
                M[2081] := 01;
                #0221
                #0224
                #0227
                #0229
                let:16 a65 = (-1 + a56) in
                M[a65] := 04;
                let:16 a66 = (-1 + a65) in
                M[a66] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a1[7]),6,is_zero(a1)),4,a2[3]),2,parity(a1)),0,M[2067][0]);
                #022A
                let:16 a67 = (-1 + a66) in
                M[a67] := 16;
                let:16 a68 = (-1 + a67) in
                M[a68] := 02;
                #022B
                #022E
                let:8 a69 = (M[2081] & M[2081]) in
                let:8 a70 = (M[2081] | M[2081]) in
                #022F
                if (!is_zero(a69)) {
                  #0242
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a71 = (-1 + a68) in
                      M[a71] := 02;
                      let:16 a72 = (-1 + a71) in
                      M[a72] := 42;
                      A := a69;
                      B := 16;
                      C := 02;
                      D := 21;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a72[15:8];
                      SPL := a72[7:0];
                      FlagS := a69[7];
                      FlagZ := is_zero(a69);
                      FlagA := a70[3];
                      FlagP := parity(a69);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a73 = (-1 + a68) in
                      M[a73] := 02;
                      let:16 a74 = (-1 + a73) in
                      M[a74] := 42;
                      A := a69;
                      B := 16;
                      C := 02;
                      D := 21;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a74[15:8];
                      SPL := a74[7:0];
                      FlagS := a69[7];
                      FlagZ := is_zero(a69);
                      FlagA := a70[3];
                      FlagP := parity(a69);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:16 a75 = (-1 + a68) in
                    M[a75] := 02;
                    let:16 a76 = (-1 + a75) in
                    M[a76] := 45;
                    #return-to: 0245
                    #147C
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a77 = (-1 + a76) in
                        M[a77] := 14;
                        let:16 a78 = (-1 + a77) in
                        M[a78] := 7C;
                        A := a69;
                        B := 16;
                        C := 02;
                        D := 21;
                        E := 42;
                        H := 28;
                        L := 06;
                        SPH := a78[15:8];
                        SPL := a78[7:0];
                        FlagS := a69[7];
                        FlagZ := is_zero(a69);
                        FlagA := a70[3];
                        FlagP := parity(a69);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a79 = (-1 + a76) in
                        M[a79] := 14;
                        let:16 a80 = (-1 + a79) in
                        M[a80] := 7C;
                        A := a69;
                        B := 16;
                        C := 02;
                        D := 21;
                        E := 42;
                        H := 28;
                        L := 06;
                        SPH := a80[15:8];
                        SPL := a80[7:0];
                        FlagS := a69[7];
                        FlagZ := is_zero(a69);
                        FlagA := a70[3];
                        FlagP := parity(a69);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      let:16 a81 = (-1 + a76) in
                      M[a81] := 16;
                      let:16 a82 = (-1 + a81) in
                      M[a82] := 02;
                      #147D
                      let:16 a83 = (-1 + a82) in
                      M[a83] := 28;
                      let:16 a84 = (-1 + a83) in
                      M[a84] := 06;
                      #147E
                      #147F
                      M[2142] := M[2806];
                      #1480
                      #1481
                      #1482
                      let:16 a85 = addWithCarry(!true,02,~00) in
                      let:8 a86 = (02 & 0F) in
                      let:8 a87 = (~00 & 0F) in
                      let:16 a88 = addWithCarry(!true,a86,a87) in
                      #1483
                      if (!is_zero(a85[7:0])) {
                        A := M[2806];
                        B := 16;
                        C := a85[7:0];
                        D := 21;
                        E := 43;
                        H := 28;
                        L := 07;
                        SPH := a84[15:8];
                        SPL := a84[7:0];
                        FlagS := a85[7:0][7];
                        FlagZ := is_zero(a85[7:0]);
                        FlagA := a88[7:0][4];
                        FlagP := parity(a85[7:0]);
                        FlagCY := false;
                        jump (147E);
                      } else {
                        #1486
                        let:16 a89 = (1 + a84) in
                        let:16 a90 = (1 + a89) in
                        #1487
                        #148A
                        let:17 a91 = add17(0020,(M[a89],M[a84])) in
                        #148B
                        let:16 a92 = (1 + a90) in
                        let:16 a93 = (1 + a92) in
                        #148C
                        let:16 a94 = addWithCarry(!true,M[a92],~00) in
                        let:8 a95 = (M[a92] & 0F) in
                        let:8 a96 = (~00 & 0F) in
                        let:16 a97 = addWithCarry(!true,a95,a96) in
                        #148D
                        if (!is_zero(a94[7:0])) {
                          A := M[2806];
                          B := a94[7:0];
                          C := M[a90];
                          D := 21;
                          E := 43;
                          H := a91[15:0][15:8];
                          L := a91[15:0][7:0];
                          SPH := a93[15:8];
                          SPL := a93[7:0];
                          FlagS := a94[7:0][7];
                          FlagZ := is_zero(a94[7:0]);
                          FlagA := a97[7:0][4];
                          FlagP := parity(a94[7:0]);
                          FlagCY := a91[16];
                          jump (147C);
                        } else {
                          #1490
                          let:16 a98 = (1 + a93) in
                          let:16 a99 = (1 + a98) in
                          A := M[2806];
                          B := a94[7:0];
                          C := M[a90];
                          D := 21;
                          E := 43;
                          H := a91[15:0][15:8];
                          L := a91[15:0][7:0];
                          SPH := a99[15:8];
                          SPL := a99[7:0];
                          FlagS := a94[7:0][7];
                          FlagZ := is_zero(a94[7:0]);
                          FlagA := a97[7:0][4];
                          FlagP := parity(a94[7:0]);
                          FlagCY := a91[16];
                          jump ((M[a98],M[a93]));
                        }
                      }
                    }
                  }
                } else {
                  #0232
                  let:16 a100 = (-1 + a68) in
                  M[a100] := 02;
                  let:16 a101 = (-1 + a100) in
                  M[a101] := 35;
                  #return-to: 0235
                  #1A69
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a102 = (-1 + a101) in
                      M[a102] := 1A;
                      let:16 a103 = (-1 + a102) in
                      M[a103] := 69;
                      A := a69;
                      B := 16;
                      C := 02;
                      D := 21;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a103[15:8];
                      SPL := a103[7:0];
                      FlagS := a69[7];
                      FlagZ := is_zero(a69);
                      FlagA := a70[3];
                      FlagP := parity(a69);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a104 = (-1 + a101) in
                      M[a104] := 1A;
                      let:16 a105 = (-1 + a104) in
                      M[a105] := 69;
                      A := a69;
                      B := 16;
                      C := 02;
                      D := 21;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a105[15:8];
                      SPL := a105[7:0];
                      FlagS := a69[7];
                      FlagZ := is_zero(a69);
                      FlagA := a70[3];
                      FlagP := parity(a69);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:16 a106 = (-1 + a101) in
                    M[a106] := 16;
                    let:16 a107 = (-1 + a106) in
                    M[a107] := 02;
                    #1A6A
                    let:16 a108 = (-1 + a107) in
                    M[a108] := 28;
                    let:16 a109 = (-1 + a108) in
                    M[a109] := 06;
                    #1A6B
                    #1A6C
                    let:8 a110 = (M[2806] | M[2142]) in
                    #1A6D
                    M[2806] := a110;
                    #1A6E
                    #1A6F
                    #1A70
                    let:16 a111 = addWithCarry(!true,02,~00) in
                    let:8 a112 = (02 & 0F) in
                    let:8 a113 = (~00 & 0F) in
                    let:16 a114 = addWithCarry(!true,a112,a113) in
                    #1A71
                    if (!is_zero(a111[7:0])) {
                      A := a110;
                      B := 16;
                      C := a111[7:0];
                      D := 21;
                      E := 43;
                      H := 28;
                      L := 07;
                      SPH := a109[15:8];
                      SPL := a109[7:0];
                      FlagS := a111[7:0][7];
                      FlagZ := is_zero(a111[7:0]);
                      FlagA := a114[7:0][4];
                      FlagP := parity(a111[7:0]);
                      FlagCY := false;
                      jump (1A6B);
                    } else {
                      #1A74
                      let:16 a115 = (1 + a109) in
                      let:16 a116 = (1 + a115) in
                      #1A75
                      #1A78
                      let:17 a117 = add17(0020,(M[a115],M[a109])) in
                      #1A79
                      let:16 a118 = (1 + a116) in
                      let:16 a119 = (1 + a118) in
                      #1A7A
                      let:16 a120 = addWithCarry(!true,M[a118],~00) in
                      let:8 a121 = (M[a118] & 0F) in
                      let:8 a122 = (~00 & 0F) in
                      let:16 a123 = addWithCarry(!true,a121,a122) in
                      #1A7B
                      if (!is_zero(a120[7:0])) {
                        A := a110;
                        B := a120[7:0];
                        C := M[a116];
                        D := 21;
                        E := 43;
                        H := a117[15:0][15:8];
                        L := a117[15:0][7:0];
                        SPH := a119[15:8];
                        SPL := a119[7:0];
                        FlagS := a120[7:0][7];
                        FlagZ := is_zero(a120[7:0]);
                        FlagA := a123[7:0][4];
                        FlagP := parity(a120[7:0]);
                        FlagCY := a117[16];
                        jump (1A69);
                      } else {
                        #1A7E
                        let:16 a124 = (1 + a119) in
                        let:16 a125 = (1 + a124) in
                        A := a110;
                        B := a120[7:0];
                        C := M[a116];
                        D := 21;
                        E := 43;
                        H := a117[15:0][15:8];
                        L := a117[15:0][7:0];
                        SPH := a125[15:8];
                        SPL := a125[7:0];
                        FlagS := a120[7:0][7];
                        FlagZ := is_zero(a120[7:0]);
                        FlagA := a123[7:0][4];
                        FlagP := parity(a120[7:0]);
                        FlagCY := a117[16];
                        jump ((M[a124],M[a119]));
                      }
                    }
                  }
                }
              }
            }
          }
        } else {
          #02F5
          let:16 a126 = (-1 + a50) in
          M[a126] := 02;
          let:16 a127 = (-1 + a126) in
          M[a127] := F8;
          #return-to: 02F8
          #020E
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a128 = (-1 + a127) in
              M[a128] := 02;
              let:16 a129 = (-1 + a128) in
              M[a129] := 0E;
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              SPH := a129[15:8];
              SPL := a129[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := M[2067][0];
              jump (0008);
            } else {
              let:16 a130 = (-1 + a127) in
              M[a130] := 02;
              let:16 a131 = (-1 + a130) in
              M[a131] := 0E;
              A := updateBit((M[2067] >> 01),7,M[2067][0]);
              SPH := a131[15:8];
              SPL := a131[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := a2[3];
              FlagP := parity(a1);
              FlagCY := M[2067][0];
              jump (0010);
            }
          } else {
            #0210
            #0214
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a132 = (-1 + a127) in
                M[a132] := 02;
                let:16 a133 = (-1 + a132) in
                M[a133] := 14;
                A := 01;
                SPH := a133[15:8];
                SPL := a133[7:0];
                FlagS := a1[7];
                FlagZ := is_zero(a1);
                FlagA := a2[3];
                FlagP := parity(a1);
                FlagCY := M[2067][0];
                jump (0008);
              } else {
                let:16 a134 = (-1 + a127) in
                M[a134] := 02;
                let:16 a135 = (-1 + a134) in
                M[a135] := 14;
                A := 01;
                SPH := a135[15:8];
                SPL := a135[7:0];
                FlagS := a1[7];
                FlagZ := is_zero(a1);
                FlagA := a2[3];
                FlagP := parity(a1);
                FlagCY := M[2067][0];
                jump (0010);
              }
            } else {
              #0217
              #021E
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a136 = (-1 + a127) in
                  M[a136] := 02;
                  let:16 a137 = (-1 + a136) in
                  M[a137] := 1E;
                  A := 01;
                  D := 22;
                  E := 42;
                  SPH := a137[15:8];
                  SPL := a137[7:0];
                  FlagS := a1[7];
                  FlagZ := is_zero(a1);
                  FlagA := a2[3];
                  FlagP := parity(a1);
                  FlagCY := M[2067][0];
                  jump (0008);
                } else {
                  let:16 a138 = (-1 + a127) in
                  M[a138] := 02;
                  let:16 a139 = (-1 + a138) in
                  M[a139] := 1E;
                  A := 01;
                  D := 22;
                  E := 42;
                  SPH := a139[15:8];
                  SPL := a139[7:0];
                  FlagS := a1[7];
                  FlagZ := is_zero(a1);
                  FlagA := a2[3];
                  FlagP := parity(a1);
                  FlagCY := M[2067][0];
                  jump (0010);
                }
              } else {
                M[2081] := 01;
                #0221
                #0224
                #0227
                #0229
                let:16 a140 = (-1 + a127) in
                M[a140] := 04;
                let:16 a141 = (-1 + a140) in
                M[a141] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a1[7]),6,is_zero(a1)),4,a2[3]),2,parity(a1)),0,M[2067][0]);
                #022A
                let:16 a142 = (-1 + a141) in
                M[a142] := 16;
                let:16 a143 = (-1 + a142) in
                M[a143] := 02;
                #022B
                #022E
                let:8 a144 = (M[2081] & M[2081]) in
                let:8 a145 = (M[2081] | M[2081]) in
                #022F
                if (!is_zero(a144)) {
                  #0242
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a146 = (-1 + a143) in
                      M[a146] := 02;
                      let:16 a147 = (-1 + a146) in
                      M[a147] := 42;
                      A := a144;
                      B := 16;
                      C := 02;
                      D := 22;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a147[15:8];
                      SPL := a147[7:0];
                      FlagS := a144[7];
                      FlagZ := is_zero(a144);
                      FlagA := a145[3];
                      FlagP := parity(a144);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a148 = (-1 + a143) in
                      M[a148] := 02;
                      let:16 a149 = (-1 + a148) in
                      M[a149] := 42;
                      A := a144;
                      B := 16;
                      C := 02;
                      D := 22;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a149[15:8];
                      SPL := a149[7:0];
                      FlagS := a144[7];
                      FlagZ := is_zero(a144);
                      FlagA := a145[3];
                      FlagP := parity(a144);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:16 a150 = (-1 + a143) in
                    M[a150] := 02;
                    let:16 a151 = (-1 + a150) in
                    M[a151] := 45;
                    #return-to: 0245
                    #147C
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a152 = (-1 + a151) in
                        M[a152] := 14;
                        let:16 a153 = (-1 + a152) in
                        M[a153] := 7C;
                        A := a144;
                        B := 16;
                        C := 02;
                        D := 22;
                        E := 42;
                        H := 28;
                        L := 06;
                        SPH := a153[15:8];
                        SPL := a153[7:0];
                        FlagS := a144[7];
                        FlagZ := is_zero(a144);
                        FlagA := a145[3];
                        FlagP := parity(a144);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a154 = (-1 + a151) in
                        M[a154] := 14;
                        let:16 a155 = (-1 + a154) in
                        M[a155] := 7C;
                        A := a144;
                        B := 16;
                        C := 02;
                        D := 22;
                        E := 42;
                        H := 28;
                        L := 06;
                        SPH := a155[15:8];
                        SPL := a155[7:0];
                        FlagS := a144[7];
                        FlagZ := is_zero(a144);
                        FlagA := a145[3];
                        FlagP := parity(a144);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      let:16 a156 = (-1 + a151) in
                      M[a156] := 16;
                      let:16 a157 = (-1 + a156) in
                      M[a157] := 02;
                      #147D
                      let:16 a158 = (-1 + a157) in
                      M[a158] := 28;
                      let:16 a159 = (-1 + a158) in
                      M[a159] := 06;
                      #147E
                      #147F
                      M[2242] := M[2806];
                      #1480
                      #1481
                      #1482
                      let:16 a160 = addWithCarry(!true,02,~00) in
                      let:8 a161 = (02 & 0F) in
                      let:8 a162 = (~00 & 0F) in
                      let:16 a163 = addWithCarry(!true,a161,a162) in
                      #1483
                      if (!is_zero(a160[7:0])) {
                        A := M[2806];
                        B := 16;
                        C := a160[7:0];
                        D := 22;
                        E := 43;
                        H := 28;
                        L := 07;
                        SPH := a159[15:8];
                        SPL := a159[7:0];
                        FlagS := a160[7:0][7];
                        FlagZ := is_zero(a160[7:0]);
                        FlagA := a163[7:0][4];
                        FlagP := parity(a160[7:0]);
                        FlagCY := false;
                        jump (147E);
                      } else {
                        #1486
                        let:16 a164 = (1 + a159) in
                        let:16 a165 = (1 + a164) in
                        #1487
                        #148A
                        let:17 a166 = add17(0020,(M[a164],M[a159])) in
                        #148B
                        let:16 a167 = (1 + a165) in
                        let:16 a168 = (1 + a167) in
                        #148C
                        let:16 a169 = addWithCarry(!true,M[a167],~00) in
                        let:8 a170 = (M[a167] & 0F) in
                        let:8 a171 = (~00 & 0F) in
                        let:16 a172 = addWithCarry(!true,a170,a171) in
                        #148D
                        if (!is_zero(a169[7:0])) {
                          A := M[2806];
                          B := a169[7:0];
                          C := M[a165];
                          D := 22;
                          E := 43;
                          H := a166[15:0][15:8];
                          L := a166[15:0][7:0];
                          SPH := a168[15:8];
                          SPL := a168[7:0];
                          FlagS := a169[7:0][7];
                          FlagZ := is_zero(a169[7:0]);
                          FlagA := a172[7:0][4];
                          FlagP := parity(a169[7:0]);
                          FlagCY := a166[16];
                          jump (147C);
                        } else {
                          #1490
                          let:16 a173 = (1 + a168) in
                          let:16 a174 = (1 + a173) in
                          A := M[2806];
                          B := a169[7:0];
                          C := M[a165];
                          D := 22;
                          E := 43;
                          H := a166[15:0][15:8];
                          L := a166[15:0][7:0];
                          SPH := a174[15:8];
                          SPL := a174[7:0];
                          FlagS := a169[7:0][7];
                          FlagZ := is_zero(a169[7:0]);
                          FlagA := a172[7:0][4];
                          FlagP := parity(a169[7:0]);
                          FlagCY := a166[16];
                          jump ((M[a173],M[a168]));
                        }
                      }
                    }
                  }
                } else {
                  #0232
                  let:16 a175 = (-1 + a143) in
                  M[a175] := 02;
                  let:16 a176 = (-1 + a175) in
                  M[a176] := 35;
                  #return-to: 0235
                  #1A69
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a177 = (-1 + a176) in
                      M[a177] := 1A;
                      let:16 a178 = (-1 + a177) in
                      M[a178] := 69;
                      A := a144;
                      B := 16;
                      C := 02;
                      D := 22;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a178[15:8];
                      SPL := a178[7:0];
                      FlagS := a144[7];
                      FlagZ := is_zero(a144);
                      FlagA := a145[3];
                      FlagP := parity(a144);
                      FlagCY := false;
                      jump (0008);
                    } else {
                      let:16 a179 = (-1 + a176) in
                      M[a179] := 1A;
                      let:16 a180 = (-1 + a179) in
                      M[a180] := 69;
                      A := a144;
                      B := 16;
                      C := 02;
                      D := 22;
                      E := 42;
                      H := 28;
                      L := 06;
                      SPH := a180[15:8];
                      SPL := a180[7:0];
                      FlagS := a144[7];
                      FlagZ := is_zero(a144);
                      FlagA := a145[3];
                      FlagP := parity(a144);
                      FlagCY := false;
                      jump (0010);
                    }
                  } else {
                    let:16 a181 = (-1 + a176) in
                    M[a181] := 16;
                    let:16 a182 = (-1 + a181) in
                    M[a182] := 02;
                    #1A6A
                    let:16 a183 = (-1 + a182) in
                    M[a183] := 28;
                    let:16 a184 = (-1 + a183) in
                    M[a184] := 06;
                    #1A6B
                    #1A6C
                    let:8 a185 = (M[2806] | M[2242]) in
                    #1A6D
                    M[2806] := a185;
                    #1A6E
                    #1A6F
                    #1A70
                    let:16 a186 = addWithCarry(!true,02,~00) in
                    let:8 a187 = (02 & 0F) in
                    let:8 a188 = (~00 & 0F) in
                    let:16 a189 = addWithCarry(!true,a187,a188) in
                    #1A71
                    if (!is_zero(a186[7:0])) {
                      A := a185;
                      B := 16;
                      C := a186[7:0];
                      D := 22;
                      E := 43;
                      H := 28;
                      L := 07;
                      SPH := a184[15:8];
                      SPL := a184[7:0];
                      FlagS := a186[7:0][7];
                      FlagZ := is_zero(a186[7:0]);
                      FlagA := a189[7:0][4];
                      FlagP := parity(a186[7:0]);
                      FlagCY := false;
                      jump (1A6B);
                    } else {
                      #1A74
                      let:16 a190 = (1 + a184) in
                      let:16 a191 = (1 + a190) in
                      #1A75
                      #1A78
                      let:17 a192 = add17(0020,(M[a190],M[a184])) in
                      #1A79
                      let:16 a193 = (1 + a191) in
                      let:16 a194 = (1 + a193) in
                      #1A7A
                      let:16 a195 = addWithCarry(!true,M[a193],~00) in
                      let:8 a196 = (M[a193] & 0F) in
                      let:8 a197 = (~00 & 0F) in
                      let:16 a198 = addWithCarry(!true,a196,a197) in
                      #1A7B
                      if (!is_zero(a195[7:0])) {
                        A := a185;
                        B := a195[7:0];
                        C := M[a191];
                        D := 22;
                        E := 43;
                        H := a192[15:0][15:8];
                        L := a192[15:0][7:0];
                        SPH := a194[15:8];
                        SPL := a194[7:0];
                        FlagS := a195[7:0][7];
                        FlagZ := is_zero(a195[7:0]);
                        FlagA := a198[7:0][4];
                        FlagP := parity(a195[7:0]);
                        FlagCY := a192[16];
                        jump (1A69);
                      } else {
                        #1A7E
                        let:16 a199 = (1 + a194) in
                        let:16 a200 = (1 + a199) in
                        A := a185;
                        B := a195[7:0];
                        C := M[a191];
                        D := 22;
                        E := 43;
                        H := a192[15:0][15:8];
                        L := a192[15:0][7:0];
                        SPH := a200[15:8];
                        SPL := a200[7:0];
                        FlagS := a195[7:0][7];
                        FlagZ := is_zero(a195[7:0]);
                        FlagA := a198[7:0][4];
                        FlagP := parity(a195[7:0]);
                        FlagCY := a192[16];
                        jump ((M[a199],M[a194]));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

16D4:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 16;
    let:16 a2 = (-1 + a1) in
    M[a2] := D7;
    #return-to: 16D7
    #0AB6
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := B6;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := B6;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AB8
      #0AD7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := D7;
          A := 80;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := D7;
          A := 80;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        M[20C0] := 80;
        #0ADA
        #0ADD
        let:8 a11 = (M[20C0] & M[20C0]) in
        let:8 a12 = (M[20C0] | M[20C0]) in
        #0ADE
        if (!is_zero(a11)) {
          A := a11;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump (0ADA);
        } else {
          #0AE1
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        }
      }
    }

16D7:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 16;
    let:16 a2 = (-1 + a1) in
    M[a2] := DA;
    #return-to: 16DA
    #09D6
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 09;
        let:16 a4 = (-1 + a3) in
        M[a4] := D6;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 09;
        let:16 a6 = (-1 + a5) in
        M[a6] := D6;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #09D9
      M[2402] := 00;
      #09DB
      #09DC
      #09DD
      let:8 a7 = (1F & 03) in
      let:8 a8 = (1F | 03) in
      #09DF
      let:16 a9 = addWithCarry(!false,a7,~1C) in
      let:8 a10 = (a7 & 0F) in
      let:8 a11 = (~1C & 0F) in
      let:16 a12 = addWithCarry(!false,a10,a11) in
      #09E1
      if (!a9[15:8][0]) {
        #09E8
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + a2) in
            M[a13] := 09;
            let:16 a14 = (-1 + a13) in
            M[a14] := E8;
            A := a7;
            H := 24;
            L := 03;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a9[7:0][7];
            FlagZ := is_zero(a9[7:0]);
            FlagA := a12[7:0][4];
            FlagP := parity(a9[7:0]);
            FlagCY := !a9[15:8][0];
            jump (0008);
          } else {
            let:16 a15 = (-1 + a2) in
            M[a15] := 09;
            let:16 a16 = (-1 + a15) in
            M[a16] := E8;
            A := a7;
            H := 24;
            L := 03;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a9[7:0][7];
            FlagZ := is_zero(a9[7:0]);
            FlagA := a12[7:0][4];
            FlagP := parity(a9[7:0]);
            FlagCY := !a9[15:8][0];
            jump (0010);
          }
        } else {
          #09E9
          let:16 a17 = addWithCarry(!false,24,~40) in
          let:8 a18 = (24 & 0F) in
          let:8 a19 = (~40 & 0F) in
          let:16 a20 = addWithCarry(!false,a18,a19) in
          #09EB
          if (!a17[15:8][0]) {
            A := 24;
            H := 24;
            L := 03;
            SPH := a2[15:8];
            SPL := a2[7:0];
            FlagS := a17[7:0][7];
            FlagZ := is_zero(a17[7:0]);
            FlagA := a20[7:0][4];
            FlagP := parity(a17[7:0]);
            FlagCY := !a17[15:8][0];
            jump (09D9);
          } else {
            #09EE
            let:16 a21 = (1 + a2) in
            let:16 a22 = (1 + a21) in
            A := 24;
            H := 24;
            L := 03;
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a17[7:0][7];
            FlagZ := is_zero(a17[7:0]);
            FlagA := a20[7:0][4];
            FlagP := parity(a17[7:0]);
            FlagCY := !a17[15:8][0];
            jump ((M[a21],M[a2]));
          }
        }
      } else {
        #09E4
        #09E7
        let:17 a23 = add17(0006,2403) in
        #09E8
        #09E9
        let:16 a24 = addWithCarry(!false,a23[15:0][15:8],~40) in
        let:8 a25 = (a23[15:0][15:8] & 0F) in
        let:8 a26 = (~40 & 0F) in
        let:16 a27 = addWithCarry(!false,a25,a26) in
        #09EB
        if (!a24[15:8][0]) {
          A := a23[15:0][15:8];
          D := 00;
          E := 06;
          H := a23[15:0][15:8];
          L := a23[15:0][7:0];
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a24[7:0][7];
          FlagZ := is_zero(a24[7:0]);
          FlagA := a27[7:0][4];
          FlagP := parity(a24[7:0]);
          FlagCY := !a24[15:8][0];
          jump (09D9);
        } else {
          #09EE
          let:16 a28 = (1 + a2) in
          let:16 a29 = (1 + a28) in
          A := a23[15:0][15:8];
          D := 00;
          E := 06;
          H := a23[15:0][15:8];
          L := a23[15:0][7:0];
          SPH := a29[15:8];
          SPL := a29[7:0];
          FlagS := a24[7:0][7];
          FlagZ := is_zero(a24[7:0]);
          FlagA := a27[7:0][4];
          FlagP := parity(a24[7:0]);
          FlagCY := !a24[15:8][0];
          jump ((M[a28],M[a2]));
        }
      }
    }

16DA:

    let:8 a1 = (A ^ A) in
    #16DB
    M[20EF] := a1;
    #16DE
    sound_control(FleetMovement1,a1[0]);
    sound_control(FleetMovement2,a1[1]);
    sound_control(FleetMovement3,a1[2]);
    sound_control(FleetMovement4,a1[3]);
    sound_control(UfoHit,a1[4]);
    #16E0
    let:16 a2 = (-1 + (SPH,SPL)) in
    M[a2] := 16;
    let:16 a3 = (-1 + a2) in
    M[a3] := E3;
    #return-to: 16E3
    #19D1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a4 = (-1 + a3) in
        M[a4] := 19;
        let:16 a5 = (-1 + a4) in
        M[a5] := D1;
        A := a1;
        SPH := a5[15:8];
        SPL := a5[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a6 = (-1 + a3) in
        M[a6] := 19;
        let:16 a7 = (-1 + a6) in
        M[a7] := D1;
        A := a1;
        SPH := a7[15:8];
        SPL := a7[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0010);
      }
    } else {
      #19D3
      M[20E9] := 01;
      #19D6
      let:16 a8 = (1 + a3) in
      let:16 a9 = (1 + a8) in
      A := 01;
      SPH := a9[15:8];
      SPL := a9[7:0];
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := false;
      FlagP := parity(a1);
      FlagCY := false;
      jump ((M[a8],M[a3]));
    }

16E3:

    #0B89
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 0B;
        let:16 a2 = (-1 + a1) in
        M[a2] := 89;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 0B;
        let:16 a4 = (-1 + a3) in
        M[a4] := 89;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:8 a5 = (A ^ A) in
      #0B8A
      M[20C1] := a5;
      #0B8D
      let:16 a6 = (-1 + (SPH,SPL)) in
      M[a6] := 0B;
      let:16 a7 = (-1 + a6) in
      M[a7] := 90;
      #return-to: 0B90
      #0AB1
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a8 = (-1 + a7) in
          M[a8] := 0A;
          let:16 a9 = (-1 + a8) in
          M[a9] := B1;
          A := a5;
          SPH := a9[15:8];
          SPL := a9[7:0];
          FlagS := a5[7];
          FlagZ := is_zero(a5);
          FlagA := false;
          FlagP := parity(a5);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a10 = (-1 + a7) in
          M[a10] := 0A;
          let:16 a11 = (-1 + a10) in
          M[a11] := B1;
          A := a5;
          SPH := a11[15:8];
          SPL := a11[7:0];
          FlagS := a5[7];
          FlagZ := is_zero(a5);
          FlagA := false;
          FlagP := parity(a5);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #0AB3
        #0AD7
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a12 = (-1 + a7) in
            M[a12] := 0A;
            let:16 a13 = (-1 + a12) in
            M[a13] := D7;
            A := 40;
            SPH := a13[15:8];
            SPL := a13[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := false;
            FlagP := parity(a5);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a14 = (-1 + a7) in
            M[a14] := 0A;
            let:16 a15 = (-1 + a14) in
            M[a15] := D7;
            A := 40;
            SPH := a15[15:8];
            SPL := a15[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := false;
            FlagP := parity(a5);
            FlagCY := false;
            jump (0010);
          }
        } else {
          M[20C0] := 40;
          #0ADA
          #0ADD
          let:8 a16 = (M[20C0] & M[20C0]) in
          let:8 a17 = (M[20C0] | M[20C0]) in
          #0ADE
          if (!is_zero(a16)) {
            A := a16;
            SPH := a7[15:8];
            SPL := a7[7:0];
            FlagS := a16[7];
            FlagZ := is_zero(a16);
            FlagA := a17[3];
            FlagP := parity(a16);
            FlagCY := false;
            jump (0ADA);
          } else {
            #0AE1
            let:16 a18 = (1 + a7) in
            let:16 a19 = (1 + a18) in
            A := a16;
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a16[7];
            FlagZ := is_zero(a16);
            FlagA := a17[3];
            FlagP := parity(a16);
            FlagCY := false;
            jump ((M[a18],M[a7]));
          }
        }
      }
    }

16F1:

    #16F3
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 16;
    let:16 a2 = (-1 + a1) in
    M[a2] := F6;
    #return-to: 16F6
    #18FA
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := FA;
        B := 04;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 18;
        let:16 a6 = (-1 + a5) in
        M[a6] := FA;
        B := 04;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #18FD
      let:8 a7 = (04 | M[2094]) in
      #18FE
      M[2094] := a7;
      #1901
      sound_control(Ufo,a7[0]);
      sound_control(Shot,a7[1]);
      sound_control(PlayerDie,a7[2]);
      sound_control(InvaderDie,a7[3]);
      sound_control(ExtraLife,a7[4]);
      #1903
      let:16 a8 = (1 + a2) in
      let:16 a9 = (1 + a8) in
      A := a7;
      B := 04;
      SPH := a9[15:8];
      SPL := a9[7:0];
      FlagS := a7[7];
      FlagZ := is_zero(a7);
      FlagA := false;
      FlagP := parity(a7);
      FlagCY := false;
      jump ((M[a8],M[a2]));
    }

16F6:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 16;
    let:16 a2 = (-1 + a1) in
    M[a2] := F9;
    #return-to: 16F9
    #0A59
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 59;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 59;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0A5C
      let:16 a7 = addWithCarry(!false,M[2015],~FF) in
      let:8 a8 = (M[2015] & 0F) in
      let:8 a9 = (~FF & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #0A5E
      let:16 a11 = (1 + a2) in
      let:16 a12 = (1 + a11) in
      A := M[2015];
      SPH := a12[15:8];
      SPL := a12[7:0];
      FlagS := a7[7:0][7];
      FlagZ := is_zero(a7[7:0]);
      FlagA := a10[7:0][4];
      FlagP := parity(a7[7:0]);
      FlagCY := !a7[15:8][0];
      jump ((M[a11],M[a2]));
    }

16F9:

    if (!FlagZ) {
      #16EE
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a1 = (-1 + (SPH,SPL)) in
          M[a1] := 16;
          let:16 a2 = (-1 + a1) in
          M[a2] := EE;
          SPH := a2[15:8];
          SPL := a2[7:0];
          jump (0008);
        } else {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 16;
          let:16 a4 = (-1 + a3) in
          M[a4] := EE;
          SPH := a4[15:8];
          SPL := a4[7:0];
          jump (0010);
        }
      } else {
        let:16 a5 = (-1 + (SPH,SPL)) in
        M[a5] := 16;
        let:16 a6 = (-1 + a5) in
        M[a6] := F1;
        #return-to: 16F1
        #14D8
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a7 = (-1 + a6) in
            M[a7] := 14;
            let:16 a8 = (-1 + a7) in
            M[a8] := D8;
            SPH := a8[15:8];
            SPL := a8[7:0];
            jump (0008);
          } else {
            let:16 a9 = (-1 + a6) in
            M[a9] := 14;
            let:16 a10 = (-1 + a9) in
            M[a10] := D8;
            SPH := a10[15:8];
            SPL := a10[7:0];
            jump (0010);
          }
        } else {
          #14DB
          let:16 a11 = addWithCarry(!false,M[2025],~05) in
          let:8 a12 = (M[2025] & 0F) in
          let:8 a13 = (~05 & 0F) in
          let:16 a14 = addWithCarry(!false,a12,a13) in
          #14DD
          if (is_zero(a11[7:0])) {
            let:16 a15 = (1 + a6) in
            let:16 a16 = (1 + a15) in
            A := M[2025];
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a11[7:0][7];
            FlagZ := is_zero(a11[7:0]);
            FlagA := a14[7:0][4];
            FlagP := parity(a11[7:0]);
            FlagCY := !a11[15:8][0];
            jump ((M[a15],M[a6]));
          } else {
            #14DE
            let:16 a17 = addWithCarry(!false,M[2025],~02) in
            let:8 a18 = (M[2025] & 0F) in
            let:8 a19 = (~02 & 0F) in
            let:16 a20 = addWithCarry(!false,a18,a19) in
            #14E0
            if (!is_zero(a17[7:0])) {
              let:16 a21 = (1 + a6) in
              let:16 a22 = (1 + a21) in
              A := M[2025];
              SPH := a22[15:8];
              SPL := a22[7:0];
              FlagS := a17[7:0][7];
              FlagZ := is_zero(a17[7:0]);
              FlagA := a20[7:0][4];
              FlagP := parity(a17[7:0]);
              FlagCY := !a17[15:8][0];
              jump ((M[a21],M[a6]));
            } else {
              #14E1
              #14E4
              let:16 a23 = addWithCarry(!false,M[2029],~D8) in
              let:8 a24 = (M[2029] & 0F) in
              let:8 a25 = (~D8 & 0F) in
              let:16 a26 = addWithCarry(!false,a24,a25) in
              #14E6
              #14E7
              if (!!a23[15:8][0]) {
                #1530
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a27 = (-1 + a6) in
                    M[a27] := 15;
                    let:16 a28 = (-1 + a27) in
                    M[a28] := 30;
                    A := M[2029];
                    B := M[2029];
                    SPH := a28[15:8];
                    SPL := a28[7:0];
                    FlagS := a23[7:0][7];
                    FlagZ := is_zero(a23[7:0]);
                    FlagA := a26[7:0][4];
                    FlagP := parity(a23[7:0]);
                    FlagCY := !a23[15:8][0];
                    jump (0008);
                  } else {
                    let:16 a29 = (-1 + a6) in
                    M[a29] := 15;
                    let:16 a30 = (-1 + a29) in
                    M[a30] := 30;
                    A := M[2029];
                    B := M[2029];
                    SPH := a30[15:8];
                    SPL := a30[7:0];
                    FlagS := a23[7:0][7];
                    FlagZ := is_zero(a23[7:0]);
                    FlagA := a26[7:0][4];
                    FlagP := parity(a23[7:0]);
                    FlagCY := !a23[15:8][0];
                    jump (0010);
                  }
                } else {
                  #1532
                  M[2025] := 03;
                  #1535
                  #154A
                  if ((g_time_to_wakeup && g_interrupts_enabled)) {
                    disable_interrupts()
                    if (g_half_frame) {
                      let:16 a31 = (-1 + a6) in
                      M[a31] := 15;
                      let:16 a32 = (-1 + a31) in
                      M[a32] := 4A;
                      A := 03;
                      B := M[2029];
                      SPH := a32[15:8];
                      SPL := a32[7:0];
                      FlagS := a23[7:0][7];
                      FlagZ := is_zero(a23[7:0]);
                      FlagA := a26[7:0][4];
                      FlagP := parity(a23[7:0]);
                      FlagCY := !a23[15:8][0];
                      jump (0008);
                    } else {
                      let:16 a33 = (-1 + a6) in
                      M[a33] := 15;
                      let:16 a34 = (-1 + a33) in
                      M[a34] := 4A;
                      A := 03;
                      B := M[2029];
                      SPH := a34[15:8];
                      SPL := a34[7:0];
                      FlagS := a23[7:0][7];
                      FlagZ := is_zero(a23[7:0]);
                      FlagA := a26[7:0][4];
                      FlagP := parity(a23[7:0]);
                      FlagCY := !a23[15:8][0];
                      jump (0010);
                    }
                  } else {
                    let:8 a35 = (03 ^ 03) in
                    #154B
                    M[2002] := a35;
                    #154E
                    #1550
                    #19DC
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a36 = (-1 + a6) in
                        M[a36] := 19;
                        let:16 a37 = (-1 + a36) in
                        M[a37] := DC;
                        A := a35;
                        B := F7;
                        SPH := a37[15:8];
                        SPL := a37[7:0];
                        FlagS := a35[7];
                        FlagZ := is_zero(a35);
                        FlagA := false;
                        FlagP := parity(a35);
                        FlagCY := false;
                        jump (0008);
                      } else {
                        let:16 a38 = (-1 + a6) in
                        M[a38] := 19;
                        let:16 a39 = (-1 + a38) in
                        M[a39] := DC;
                        A := a35;
                        B := F7;
                        SPH := a39[15:8];
                        SPL := a39[7:0];
                        FlagS := a35[7];
                        FlagZ := is_zero(a35);
                        FlagA := false;
                        FlagP := parity(a35);
                        FlagCY := false;
                        jump (0010);
                      }
                    } else {
                      #19DF
                      let:8 a40 = (F7 & M[2094]) in
                      let:8 a41 = (F7 | M[2094]) in
                      #19E0
                      M[2094] := a40;
                      #19E3
                      sound_control(Ufo,a40[0]);
                      sound_control(Shot,a40[1]);
                      sound_control(PlayerDie,a40[2]);
                      sound_control(InvaderDie,a40[3]);
                      sound_control(ExtraLife,a40[4]);
                      #19E5
                      let:16 a42 = (1 + a6) in
                      let:16 a43 = (1 + a42) in
                      A := a40;
                      B := F7;
                      SPH := a43[15:8];
                      SPL := a43[7:0];
                      FlagS := a40[7];
                      FlagZ := is_zero(a40);
                      FlagA := a41[3];
                      FlagP := parity(a40);
                      FlagCY := false;
                      jump ((M[a42],M[a6]));
                    }
                  }
                }
              } else {
                #14EA
                #14ED
                let:8 a44 = (M[2002] & M[2002]) in
                let:8 a45 = (M[2002] | M[2002]) in
                #14EE
                if (is_zero(a44)) {
                  let:16 a46 = (1 + a6) in
                  let:16 a47 = (1 + a46) in
                  A := a44;
                  B := M[2029];
                  SPH := a47[15:8];
                  SPL := a47[7:0];
                  FlagS := a44[7];
                  FlagZ := is_zero(a44);
                  FlagA := a45[3];
                  FlagP := parity(a44);
                  FlagCY := false;
                  jump ((M[a46],M[a6]));
                } else {
                  #14EF
                  #14F0
                  let:16 a48 = addWithCarry(!false,M[2029],~CE) in
                  let:8 a49 = (M[2029] & 0F) in
                  let:8 a50 = (~CE & 0F) in
                  let:16 a51 = addWithCarry(!false,a49,a50) in
                  #14F2
                  if (!!a48[15:8][0]) {
                    #1579
                    if ((g_time_to_wakeup && g_interrupts_enabled)) {
                      disable_interrupts()
                      if (g_half_frame) {
                        let:16 a52 = (-1 + a6) in
                        M[a52] := 15;
                        let:16 a53 = (-1 + a52) in
                        M[a53] := 79;
                        A := M[2029];
                        B := M[2029];
                        SPH := a53[15:8];
                        SPL := a53[7:0];
                        FlagS := a48[7:0][7];
                        FlagZ := is_zero(a48[7:0]);
                        FlagA := a51[7:0][4];
                        FlagP := parity(a48[7:0]);
                        FlagCY := !a48[15:8][0];
                        jump (0008);
                      } else {
                        let:16 a54 = (-1 + a6) in
                        M[a54] := 15;
                        let:16 a55 = (-1 + a54) in
                        M[a55] := 79;
                        A := M[2029];
                        B := M[2029];
                        SPH := a55[15:8];
                        SPL := a55[7:0];
                        FlagS := a48[7:0][7];
                        FlagZ := is_zero(a48[7:0]);
                        FlagA := a51[7:0][4];
                        FlagP := parity(a48[7:0]);
                        FlagCY := !a48[15:8][0];
                        jump (0010);
                      }
                    } else {
                      #157B
                      M[2085] := 01;
                      #157E
                      A := 01;
                      B := M[2029];
                      SPH := a6[15:8];
                      SPL := a6[7:0];
                      FlagS := a48[7:0][7];
                      FlagZ := is_zero(a48[7:0]);
                      FlagA := a51[7:0][4];
                      FlagP := parity(a48[7:0]);
                      FlagCY := !a48[15:8][0];
                      jump (1545);
                    }
                  } else {
                    #14F5
                    let:16 a56 = addWithCarry(false,06,M[2029]) in
                    let:8 a57 = (06 & 0F) in
                    let:8 a58 = (M[2029] & 0F) in
                    let:16 a59 = addWithCarry(false,a57,a58) in
                    #14F7
                    #14F8
                    #14FB
                    let:16 a60 = addWithCarry(!false,M[2009],~90) in
                    let:8 a61 = (M[2009] & 0F) in
                    let:8 a62 = (~90 & 0F) in
                    let:16 a63 = addWithCarry(!false,a61,a62) in
                    #14FD
                    if (!!a60[15:8][0]) {
                      #1504
                      if ((g_time_to_wakeup && g_interrupts_enabled)) {
                        disable_interrupts()
                        if (g_half_frame) {
                          let:16 a64 = (-1 + a6) in
                          M[a64] := 15;
                          let:16 a65 = (-1 + a64) in
                          M[a65] := 04;
                          A := M[2009];
                          B := a56[7:0];
                          SPH := a65[15:8];
                          SPL := a65[7:0];
                          FlagS := a60[7:0][7];
                          FlagZ := is_zero(a60[7:0]);
                          FlagA := a63[7:0][4];
                          FlagP := parity(a60[7:0]);
                          FlagCY := !a60[15:8][0];
                          jump (0008);
                        } else {
                          let:16 a66 = (-1 + a6) in
                          M[a66] := 15;
                          let:16 a67 = (-1 + a66) in
                          M[a67] := 04;
                          A := M[2009];
                          B := a56[7:0];
                          SPH := a67[15:8];
                          SPL := a67[7:0];
                          FlagS := a60[7:0][7];
                          FlagZ := is_zero(a60[7:0]);
                          FlagA := a63[7:0][4];
                          FlagP := parity(a60[7:0]);
                          FlagCY := !a60[15:8][0];
                          jump (0010);
                        }
                      } else {
                        #1505
                        let:16 a68 = (-1 + a6) in
                        M[a68] := 15;
                        let:16 a69 = (-1 + a68) in
                        M[a69] := 08;
                        #return-to: 1508
                        #1562
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a70 = (-1 + a69) in
                            M[a70] := 15;
                            let:16 a71 = (-1 + a70) in
                            M[a71] := 62;
                            A := M[2009];
                            B := a56[7:0];
                            L := a56[7:0];
                            SPH := a71[15:8];
                            SPL := a71[7:0];
                            FlagS := a60[7:0][7];
                            FlagZ := is_zero(a60[7:0]);
                            FlagA := a63[7:0][4];
                            FlagP := parity(a60[7:0]);
                            FlagCY := !a60[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a72 = (-1 + a69) in
                            M[a72] := 15;
                            let:16 a73 = (-1 + a72) in
                            M[a73] := 62;
                            A := M[2009];
                            B := a56[7:0];
                            L := a56[7:0];
                            SPH := a73[15:8];
                            SPL := a73[7:0];
                            FlagS := a60[7:0][7];
                            FlagZ := is_zero(a60[7:0]);
                            FlagA := a63[7:0][4];
                            FlagP := parity(a60[7:0]);
                            FlagCY := !a60[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1565
                          #1566
                          let:16 a74 = (-1 + a69) in
                          M[a74] := 15;
                          let:16 a75 = (-1 + a74) in
                          M[a75] := 69;
                          #return-to: 1569
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a76 = (-1 + a75) in
                              M[a76] := 15;
                              let:16 a77 = (-1 + a76) in
                              M[a77] := 54;
                              A := M[2009];
                              B := a56[7:0];
                              H := a56[7:0];
                              L := a56[7:0];
                              SPH := a77[15:8];
                              SPL := a77[7:0];
                              FlagS := a60[7:0][7];
                              FlagZ := is_zero(a60[7:0]);
                              FlagA := a63[7:0][4];
                              FlagP := parity(a60[7:0]);
                              FlagCY := !a60[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a78 = (-1 + a75) in
                              M[a78] := 15;
                              let:16 a79 = (-1 + a78) in
                              M[a79] := 54;
                              A := M[2009];
                              B := a56[7:0];
                              H := a56[7:0];
                              L := a56[7:0];
                              SPH := a79[15:8];
                              SPL := a79[7:0];
                              FlagS := a60[7:0][7];
                              FlagZ := is_zero(a60[7:0]);
                              FlagA := a63[7:0][4];
                              FlagP := parity(a60[7:0]);
                              FlagCY := !a60[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a80 = addWithCarry(!false,M[2009],~a56[7:0]) in
                            let:8 a81 = (M[2009] & 0F) in
                            let:8 a82 = (~a56[7:0] & 0F) in
                            let:16 a83 = addWithCarry(!false,a81,a82) in
                            #1557
                            if (!!a80[15:8][0]) {
                              let:16 a84 = (-1 + a75) in
                              M[a84] := 15;
                              let:16 a85 = (-1 + a84) in
                              M[a85] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a86 = (-1 + a85) in
                                  M[a86] := 15;
                                  let:16 a87 = (-1 + a86) in
                                  M[a87] := 90;
                                  A := M[2009];
                                  B := a56[7:0];
                                  C := 00;
                                  H := a56[7:0];
                                  L := a56[7:0];
                                  SPH := a87[15:8];
                                  SPL := a87[7:0];
                                  FlagS := a80[7:0][7];
                                  FlagZ := is_zero(a80[7:0]);
                                  FlagA := a83[7:0][4];
                                  FlagP := parity(a80[7:0]);
                                  FlagCY := !a80[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a88 = (-1 + a85) in
                                  M[a88] := 15;
                                  let:16 a89 = (-1 + a88) in
                                  M[a89] := 90;
                                  A := M[2009];
                                  B := a56[7:0];
                                  C := 00;
                                  H := a56[7:0];
                                  L := a56[7:0];
                                  SPH := a89[15:8];
                                  SPL := a89[7:0];
                                  FlagS := a80[7:0][7];
                                  FlagZ := is_zero(a80[7:0]);
                                  FlagA := a83[7:0][4];
                                  FlagP := parity(a80[7:0]);
                                  FlagCY := !a80[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a90 = addWithCarry(true,00,00) in
                                let:8 a91 = (00 & 0F) in
                                let:8 a92 = (00 & 0F) in
                                let:16 a93 = addWithCarry(true,a91,a92) in
                                #1591
                                let:16 a94 = addWithCarry(false,10,M[2009]) in
                                let:8 a95 = (10 & 0F) in
                                let:8 a96 = (M[2009] & 0F) in
                                let:16 a97 = addWithCarry(false,a95,a96) in
                                #1593
                                if (a94[7:0][7]) {
                                  A := a94[7:0];
                                  B := a56[7:0];
                                  C := a90[7:0];
                                  H := a56[7:0];
                                  L := a56[7:0];
                                  SPH := a85[15:8];
                                  SPL := a85[7:0];
                                  FlagS := a94[7:0][7];
                                  FlagZ := is_zero(a94[7:0]);
                                  FlagA := a97[7:0][4];
                                  FlagP := parity(a94[7:0]);
                                  FlagCY := a94[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a98 = (1 + a85) in
                                  let:16 a99 = (1 + a98) in
                                  A := a94[7:0];
                                  B := a56[7:0];
                                  C := a90[7:0];
                                  H := a56[7:0];
                                  L := a56[7:0];
                                  SPH := a99[15:8];
                                  SPL := a99[7:0];
                                  FlagS := a94[7:0][7];
                                  FlagZ := is_zero(a94[7:0]);
                                  FlagA := a97[7:0][4];
                                  FlagP := parity(a94[7:0]);
                                  FlagCY := a94[15:8][0];
                                  jump ((M[a98],M[a85]));
                                }
                              }
                            } else {
                              A := M[2009];
                              B := a56[7:0];
                              C := 00;
                              H := a56[7:0];
                              L := a56[7:0];
                              SPH := a75[15:8];
                              SPL := a75[7:0];
                              FlagS := a80[7:0][7];
                              FlagZ := is_zero(a80[7:0]);
                              FlagA := a83[7:0][4];
                              FlagP := parity(a80[7:0]);
                              FlagCY := !a80[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    } else {
                      #1500
                      let:16 a100 = addWithCarry(!false,M[2009],~a56[7:0]) in
                      let:8 a101 = (M[2009] & 0F) in
                      let:8 a102 = (~a56[7:0] & 0F) in
                      let:16 a103 = addWithCarry(!false,a101,a102) in
                      #1501
                      if (!!a100[15:8][0]) {
                        #1530
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a104 = (-1 + a6) in
                            M[a104] := 15;
                            let:16 a105 = (-1 + a104) in
                            M[a105] := 30;
                            A := M[2009];
                            B := a56[7:0];
                            SPH := a105[15:8];
                            SPL := a105[7:0];
                            FlagS := a100[7:0][7];
                            FlagZ := is_zero(a100[7:0]);
                            FlagA := a103[7:0][4];
                            FlagP := parity(a100[7:0]);
                            FlagCY := !a100[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a106 = (-1 + a6) in
                            M[a106] := 15;
                            let:16 a107 = (-1 + a106) in
                            M[a107] := 30;
                            A := M[2009];
                            B := a56[7:0];
                            SPH := a107[15:8];
                            SPL := a107[7:0];
                            FlagS := a100[7:0][7];
                            FlagZ := is_zero(a100[7:0]);
                            FlagA := a103[7:0][4];
                            FlagP := parity(a100[7:0]);
                            FlagCY := !a100[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1532
                          M[2025] := 03;
                          #1535
                          #154A
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a108 = (-1 + a6) in
                              M[a108] := 15;
                              let:16 a109 = (-1 + a108) in
                              M[a109] := 4A;
                              A := 03;
                              B := a56[7:0];
                              SPH := a109[15:8];
                              SPL := a109[7:0];
                              FlagS := a100[7:0][7];
                              FlagZ := is_zero(a100[7:0]);
                              FlagA := a103[7:0][4];
                              FlagP := parity(a100[7:0]);
                              FlagCY := !a100[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a110 = (-1 + a6) in
                              M[a110] := 15;
                              let:16 a111 = (-1 + a110) in
                              M[a111] := 4A;
                              A := 03;
                              B := a56[7:0];
                              SPH := a111[15:8];
                              SPL := a111[7:0];
                              FlagS := a100[7:0][7];
                              FlagZ := is_zero(a100[7:0]);
                              FlagA := a103[7:0][4];
                              FlagP := parity(a100[7:0]);
                              FlagCY := !a100[15:8][0];
                              jump (0010);
                            }
                          } else {
                            let:8 a112 = (03 ^ 03) in
                            #154B
                            M[2002] := a112;
                            #154E
                            #1550
                            #19DC
                            if ((g_time_to_wakeup && g_interrupts_enabled)) {
                              disable_interrupts()
                              if (g_half_frame) {
                                let:16 a113 = (-1 + a6) in
                                M[a113] := 19;
                                let:16 a114 = (-1 + a113) in
                                M[a114] := DC;
                                A := a112;
                                B := F7;
                                SPH := a114[15:8];
                                SPL := a114[7:0];
                                FlagS := a112[7];
                                FlagZ := is_zero(a112);
                                FlagA := false;
                                FlagP := parity(a112);
                                FlagCY := false;
                                jump (0008);
                              } else {
                                let:16 a115 = (-1 + a6) in
                                M[a115] := 19;
                                let:16 a116 = (-1 + a115) in
                                M[a116] := DC;
                                A := a112;
                                B := F7;
                                SPH := a116[15:8];
                                SPL := a116[7:0];
                                FlagS := a112[7];
                                FlagZ := is_zero(a112);
                                FlagA := false;
                                FlagP := parity(a112);
                                FlagCY := false;
                                jump (0010);
                              }
                            } else {
                              #19DF
                              let:8 a117 = (F7 & M[2094]) in
                              let:8 a118 = (F7 | M[2094]) in
                              #19E0
                              M[2094] := a117;
                              #19E3
                              sound_control(Ufo,a117[0]);
                              sound_control(Shot,a117[1]);
                              sound_control(PlayerDie,a117[2]);
                              sound_control(InvaderDie,a117[3]);
                              sound_control(ExtraLife,a117[4]);
                              #19E5
                              let:16 a119 = (1 + a6) in
                              let:16 a120 = (1 + a119) in
                              A := a117;
                              B := F7;
                              SPH := a120[15:8];
                              SPL := a120[7:0];
                              FlagS := a117[7];
                              FlagZ := is_zero(a117);
                              FlagA := a118[3];
                              FlagP := parity(a117);
                              FlagCY := false;
                              jump ((M[a119],M[a6]));
                            }
                          }
                        }
                      } else {
                        #1504
                        #1505
                        let:16 a121 = (-1 + a6) in
                        M[a121] := 15;
                        let:16 a122 = (-1 + a121) in
                        M[a122] := 08;
                        #return-to: 1508
                        #1562
                        if ((g_time_to_wakeup && g_interrupts_enabled)) {
                          disable_interrupts()
                          if (g_half_frame) {
                            let:16 a123 = (-1 + a122) in
                            M[a123] := 15;
                            let:16 a124 = (-1 + a123) in
                            M[a124] := 62;
                            A := M[2009];
                            B := a56[7:0];
                            L := a56[7:0];
                            SPH := a124[15:8];
                            SPL := a124[7:0];
                            FlagS := a100[7:0][7];
                            FlagZ := is_zero(a100[7:0]);
                            FlagA := a103[7:0][4];
                            FlagP := parity(a100[7:0]);
                            FlagCY := !a100[15:8][0];
                            jump (0008);
                          } else {
                            let:16 a125 = (-1 + a122) in
                            M[a125] := 15;
                            let:16 a126 = (-1 + a125) in
                            M[a126] := 62;
                            A := M[2009];
                            B := a56[7:0];
                            L := a56[7:0];
                            SPH := a126[15:8];
                            SPL := a126[7:0];
                            FlagS := a100[7:0][7];
                            FlagZ := is_zero(a100[7:0]);
                            FlagA := a103[7:0][4];
                            FlagP := parity(a100[7:0]);
                            FlagCY := !a100[15:8][0];
                            jump (0010);
                          }
                        } else {
                          #1565
                          #1566
                          let:16 a127 = (-1 + a122) in
                          M[a127] := 15;
                          let:16 a128 = (-1 + a127) in
                          M[a128] := 69;
                          #return-to: 1569
                          #1554
                          if ((g_time_to_wakeup && g_interrupts_enabled)) {
                            disable_interrupts()
                            if (g_half_frame) {
                              let:16 a129 = (-1 + a128) in
                              M[a129] := 15;
                              let:16 a130 = (-1 + a129) in
                              M[a130] := 54;
                              A := M[2009];
                              B := a56[7:0];
                              H := a56[7:0];
                              L := a56[7:0];
                              SPH := a130[15:8];
                              SPL := a130[7:0];
                              FlagS := a100[7:0][7];
                              FlagZ := is_zero(a100[7:0]);
                              FlagA := a103[7:0][4];
                              FlagP := parity(a100[7:0]);
                              FlagCY := !a100[15:8][0];
                              jump (0008);
                            } else {
                              let:16 a131 = (-1 + a128) in
                              M[a131] := 15;
                              let:16 a132 = (-1 + a131) in
                              M[a132] := 54;
                              A := M[2009];
                              B := a56[7:0];
                              H := a56[7:0];
                              L := a56[7:0];
                              SPH := a132[15:8];
                              SPL := a132[7:0];
                              FlagS := a100[7:0][7];
                              FlagZ := is_zero(a100[7:0]);
                              FlagA := a103[7:0][4];
                              FlagP := parity(a100[7:0]);
                              FlagCY := !a100[15:8][0];
                              jump (0010);
                            }
                          } else {
                            #1556
                            let:16 a133 = addWithCarry(!false,M[2009],~a56[7:0]) in
                            let:8 a134 = (M[2009] & 0F) in
                            let:8 a135 = (~a56[7:0] & 0F) in
                            let:16 a136 = addWithCarry(!false,a134,a135) in
                            #1557
                            if (!!a133[15:8][0]) {
                              let:16 a137 = (-1 + a128) in
                              M[a137] := 15;
                              let:16 a138 = (-1 + a137) in
                              M[a138] := 5A;
                              #return-to: 155A
                              #1590
                              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                                disable_interrupts()
                                if (g_half_frame) {
                                  let:16 a139 = (-1 + a138) in
                                  M[a139] := 15;
                                  let:16 a140 = (-1 + a139) in
                                  M[a140] := 90;
                                  A := M[2009];
                                  B := a56[7:0];
                                  C := 00;
                                  H := a56[7:0];
                                  L := a56[7:0];
                                  SPH := a140[15:8];
                                  SPL := a140[7:0];
                                  FlagS := a133[7:0][7];
                                  FlagZ := is_zero(a133[7:0]);
                                  FlagA := a136[7:0][4];
                                  FlagP := parity(a133[7:0]);
                                  FlagCY := !a133[15:8][0];
                                  jump (0008);
                                } else {
                                  let:16 a141 = (-1 + a138) in
                                  M[a141] := 15;
                                  let:16 a142 = (-1 + a141) in
                                  M[a142] := 90;
                                  A := M[2009];
                                  B := a56[7:0];
                                  C := 00;
                                  H := a56[7:0];
                                  L := a56[7:0];
                                  SPH := a142[15:8];
                                  SPL := a142[7:0];
                                  FlagS := a133[7:0][7];
                                  FlagZ := is_zero(a133[7:0]);
                                  FlagA := a136[7:0][4];
                                  FlagP := parity(a133[7:0]);
                                  FlagCY := !a133[15:8][0];
                                  jump (0010);
                                }
                              } else {
                                let:16 a143 = addWithCarry(true,00,00) in
                                let:8 a144 = (00 & 0F) in
                                let:8 a145 = (00 & 0F) in
                                let:16 a146 = addWithCarry(true,a144,a145) in
                                #1591
                                let:16 a147 = addWithCarry(false,10,M[2009]) in
                                let:8 a148 = (10 & 0F) in
                                let:8 a149 = (M[2009] & 0F) in
                                let:16 a150 = addWithCarry(false,a148,a149) in
                                #1593
                                if (a147[7:0][7]) {
                                  A := a147[7:0];
                                  B := a56[7:0];
                                  C := a143[7:0];
                                  H := a56[7:0];
                                  L := a56[7:0];
                                  SPH := a138[15:8];
                                  SPL := a138[7:0];
                                  FlagS := a147[7:0][7];
                                  FlagZ := is_zero(a147[7:0]);
                                  FlagA := a150[7:0][4];
                                  FlagP := parity(a147[7:0]);
                                  FlagCY := a147[15:8][0];
                                  jump (1590);
                                } else {
                                  #1596
                                  let:16 a151 = (1 + a138) in
                                  let:16 a152 = (1 + a151) in
                                  A := a147[7:0];
                                  B := a56[7:0];
                                  C := a143[7:0];
                                  H := a56[7:0];
                                  L := a56[7:0];
                                  SPH := a152[15:8];
                                  SPL := a152[7:0];
                                  FlagS := a147[7:0][7];
                                  FlagZ := is_zero(a147[7:0]);
                                  FlagA := a150[7:0][4];
                                  FlagP := parity(a147[7:0]);
                                  FlagCY := a147[15:8][0];
                                  jump ((M[a151],M[a138]));
                                }
                              }
                            } else {
                              A := M[2009];
                              B := a56[7:0];
                              C := 00;
                              H := a56[7:0];
                              L := a56[7:0];
                              SPH := a128[15:8];
                              SPL := a128[7:0];
                              FlagS := a133[7:0][7];
                              FlagZ := is_zero(a133[7:0]);
                              FlagA := a136[7:0][4];
                              FlagP := parity(a133[7:0]);
                              FlagCY := !a133[15:8][0];
                              jump (155A);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    } else {
      #16FC
      let:16 a153 = (-1 + (SPH,SPL)) in
      M[a153] := 16;
      let:16 a154 = (-1 + a153) in
      M[a154] := FF;
      #return-to: 16FF
      #19D7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a155 = (-1 + a154) in
          M[a155] := 19;
          let:16 a156 = (-1 + a155) in
          M[a156] := D7;
          SPH := a156[15:8];
          SPL := a156[7:0];
          jump (0008);
        } else {
          let:16 a157 = (-1 + a154) in
          M[a157] := 19;
          let:16 a158 = (-1 + a157) in
          M[a158] := D7;
          SPH := a158[15:8];
          SPL := a158[7:0];
          jump (0010);
        }
      } else {
        let:8 a159 = (A ^ A) in
        #19D8
        #19D3
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a160 = (-1 + a154) in
            M[a160] := 19;
            let:16 a161 = (-1 + a160) in
            M[a161] := D3;
            A := a159;
            SPH := a161[15:8];
            SPL := a161[7:0];
            FlagS := a159[7];
            FlagZ := is_zero(a159);
            FlagA := false;
            FlagP := parity(a159);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a162 = (-1 + a154) in
            M[a162] := 19;
            let:16 a163 = (-1 + a162) in
            M[a163] := D3;
            A := a159;
            SPH := a163[15:8];
            SPL := a163[7:0];
            FlagS := a159[7];
            FlagZ := is_zero(a159);
            FlagA := false;
            FlagP := parity(a159);
            FlagCY := false;
            jump (0010);
          }
        } else {
          M[20E9] := a159;
          #19D6
          let:16 a164 = (1 + a154) in
          let:16 a165 = (1 + a164) in
          A := a159;
          SPH := a165[15:8];
          SPL := a165[7:0];
          FlagS := a159[7];
          FlagZ := is_zero(a159);
          FlagA := false;
          FlagP := parity(a159);
          FlagCY := false;
          jump ((M[a164],M[a154]));
        }
      }
    }

16FF:

    #1702
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 17;
    let:16 a2 = (-1 + a1) in
    M[a2] := 05;
    #return-to: 1705
    #19FA
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := FA;
        H := 27;
        L := 01;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := FA;
        H := 27;
        L := 01;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #19FC
      let:16 a7 = (-1 + a2) in
      M[a7] := 19;
      let:16 a8 = (-1 + a7) in
      M[a8] := FF;
      #return-to: 19FF
      #14CB
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := CB;
          B := 10;
          H := 27;
          L := 01;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 14;
          let:16 a12 = (-1 + a11) in
          M[a12] := CB;
          B := 10;
          H := 27;
          L := 01;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        let:8 a13 = (A ^ A) in
        #14CC
        let:16 a14 = (-1 + a8) in
        M[a14] := 10;
        let:16 a15 = (-1 + a14) in
        M[a15] := C;
        #14CD
        M[2701] := a13;
        #14CE
        #14D1
        let:17 a16 = add17(0020,2701) in
        #14D2
        let:16 a17 = (1 + a15) in
        let:16 a18 = (1 + a17) in
        #14D3
        let:16 a19 = addWithCarry(!true,M[a17],~00) in
        let:8 a20 = (M[a17] & 0F) in
        let:8 a21 = (~00 & 0F) in
        let:16 a22 = addWithCarry(!true,a20,a21) in
        #14D4
        if (!is_zero(a19[7:0])) {
          A := a13;
          B := a19[7:0];
          C := M[a15];
          H := a16[15:0][15:8];
          L := a16[15:0][7:0];
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a19[7:0][7];
          FlagZ := is_zero(a19[7:0]);
          FlagA := a22[7:0][4];
          FlagP := parity(a19[7:0]);
          FlagCY := a16[16];
          jump (14CC);
        } else {
          #14D7
          let:16 a23 = (1 + a18) in
          let:16 a24 = (1 + a23) in
          A := a13;
          B := a19[7:0];
          C := M[a15];
          H := a16[15:0][15:8];
          L := a16[15:0][7:0];
          SPH := a24[15:8];
          SPL := a24[7:0];
          FlagS := a19[7:0][7];
          FlagZ := is_zero(a19[7:0]);
          FlagA := a22[7:0][4];
          FlagP := parity(a19[7:0]);
          FlagCY := a16[16];
          jump ((M[a23],M[a18]));
        }
      }
    }

1705:

    let:8 a1 = (A ^ A) in
    #1706
    let:16 a2 = (-1 + (SPH,SPL)) in
    M[a2] := 17;
    let:16 a3 = (-1 + a2) in
    M[a3] := 09;
    #return-to: 1709
    #1A8B
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a4 = (-1 + a3) in
        M[a4] := 1A;
        let:16 a5 = (-1 + a4) in
        M[a5] := 8B;
        A := a1;
        SPH := a5[15:8];
        SPL := a5[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a6 = (-1 + a3) in
        M[a6] := 1A;
        let:16 a7 = (-1 + a6) in
        M[a7] := 8B;
        A := a1;
        SPH := a7[15:8];
        SPL := a7[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0010);
      }
    } else {
      #1A8E
      let:8 a8 = (0F & a1) in
      let:8 a9 = (0F | a1) in
      #1A90
      #09C5
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a10 = (-1 + a3) in
          M[a10] := 09;
          let:16 a11 = (-1 + a10) in
          M[a11] := C5;
          A := a8;
          H := 25;
          L := 01;
          SPH := a11[15:8];
          SPL := a11[7:0];
          FlagS := a8[7];
          FlagZ := is_zero(a8);
          FlagA := a9[3];
          FlagP := parity(a8);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a12 = (-1 + a3) in
          M[a12] := 09;
          let:16 a13 = (-1 + a12) in
          M[a13] := C5;
          A := a8;
          H := 25;
          L := 01;
          SPH := a13[15:8];
          SPL := a13[7:0];
          FlagS := a8[7];
          FlagZ := is_zero(a8);
          FlagA := a9[3];
          FlagP := parity(a8);
          FlagCY := false;
          jump (0010);
        }
      } else {
        let:16 a14 = addWithCarry(false,1A,a8) in
        let:8 a15 = (1A & 0F) in
        let:8 a16 = (a8 & 0F) in
        let:16 a17 = addWithCarry(false,a15,a16) in
        #09C7
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a18 = (-1 + a3) in
            M[a18] := 08;
            let:16 a19 = (-1 + a18) in
            M[a19] := FF;
            A := a14[7:0];
            H := 25;
            L := 01;
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a14[7:0][7];
            FlagZ := is_zero(a14[7:0]);
            FlagA := a17[7:0][4];
            FlagP := parity(a14[7:0]);
            FlagCY := a14[15:8][0];
            jump (0008);
          } else {
            let:16 a20 = (-1 + a3) in
            M[a20] := 08;
            let:16 a21 = (-1 + a20) in
            M[a21] := FF;
            A := a14[7:0];
            H := 25;
            L := 01;
            SPH := a21[15:8];
            SPL := a21[7:0];
            FlagS := a14[7:0][7];
            FlagZ := is_zero(a14[7:0]);
            FlagA := a17[7:0][4];
            FlagP := parity(a14[7:0]);
            FlagCY := a14[15:8][0];
            jump (0010);
          }
        } else {
          #0902
          let:16 a22 = (-1 + a3) in
          M[a22] := 25;
          let:16 a23 = (-1 + a22) in
          M[a23] := 01;
          #0903
          #0905
          #0906
          let:17 a24 = add17((00,a14[7:0]),(00,a14[7:0])) in
          #0907
          let:17 a25 = add17(a24[15:0],a24[15:0]) in
          #0908
          let:17 a26 = add17(a25[15:0],a25[15:0]) in
          #0909
          let:17 a27 = add17(1E00,a26[15:0]) in
          #090A
          #090B
          let:16 a28 = (1 + a23) in
          let:16 a29 = (1 + a28) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a30 = (-1 + a29) in
              M[a30] := 14;
              let:16 a31 = (-1 + a30) in
              M[a31] := 39;
              A := a14[7:0];
              B := 08;
              D := a27[15:0][15:8];
              E := a27[15:0][7:0];
              H := M[a28];
              L := M[a23];
              SPH := a31[15:8];
              SPL := a31[7:0];
              FlagS := a14[7:0][7];
              FlagZ := is_zero(a14[7:0]);
              FlagA := a17[7:0][4];
              FlagP := parity(a14[7:0]);
              FlagCY := a27[16];
              jump (0008);
            } else {
              let:16 a32 = (-1 + a29) in
              M[a32] := 14;
              let:16 a33 = (-1 + a32) in
              M[a33] := 39;
              A := a14[7:0];
              B := 08;
              D := a27[15:0][15:8];
              E := a27[15:0][7:0];
              H := M[a28];
              L := M[a23];
              SPH := a33[15:8];
              SPL := a33[7:0];
              FlagS := a14[7:0][7];
              FlagZ := is_zero(a14[7:0]);
              FlagA := a17[7:0][4];
              FlagP := parity(a14[7:0]);
              FlagCY := a27[16];
              jump (0010);
            }
          } else {
            let:16 a34 = (-1 + a29) in
            M[a34] := 08;
            let:16 a35 = (-1 + a34) in
            M[a35] := C;
            #143A
            #143B
            M[(M[a28],M[a23])] := M[a27[15:0]];
            #143C
            let:16 a36 = (1 + a27[15:0]) in
            #143D
            #1440
            let:17 a37 = add17(0020,(M[a28],M[a23])) in
            #1441
            let:16 a38 = (1 + a35) in
            let:16 a39 = (1 + a38) in
            #1442
            let:16 a40 = addWithCarry(!true,M[a38],~00) in
            let:8 a41 = (M[a38] & 0F) in
            let:8 a42 = (~00 & 0F) in
            let:16 a43 = addWithCarry(!true,a41,a42) in
            #1443
            if (!is_zero(a40[7:0])) {
              A := M[a27[15:0]];
              B := a40[7:0];
              C := M[a35];
              D := a36[15:8];
              E := a36[7:0];
              H := a37[15:0][15:8];
              L := a37[15:0][7:0];
              SPH := a39[15:8];
              SPL := a39[7:0];
              FlagS := a40[7:0][7];
              FlagZ := is_zero(a40[7:0]);
              FlagA := a43[7:0][4];
              FlagP := parity(a40[7:0]);
              FlagCY := a37[16];
              jump (1439);
            } else {
              #1446
              let:16 a44 = (1 + a39) in
              let:16 a45 = (1 + a44) in
              A := M[a27[15:0]];
              B := a40[7:0];
              C := M[a35];
              D := a36[15:8];
              E := a36[7:0];
              H := a37[15:0][15:8];
              L := a37[15:0][7:0];
              SPH := a45[15:8];
              SPL := a45[7:0];
              FlagS := a40[7:0][7];
              FlagZ := is_zero(a40[7:0]);
              FlagA := a43[7:0][4];
              FlagP := parity(a40[7:0]);
              FlagCY := a37[16];
              jump ((M[a44],M[a39]));
            }
          }
        }
      }
    }

1709:

    #170B
    #196B
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 19;
        let:16 a2 = (-1 + a1) in
        M[a2] := 6B;
        B := FB;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 6B;
        B := FB;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 19;
      let:16 a6 = (-1 + a5) in
      M[a6] := 6E;
      #return-to: 196E
      #19DC
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 19;
          let:16 a8 = (-1 + a7) in
          M[a8] := DC;
          B := FB;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 19;
          let:16 a10 = (-1 + a9) in
          M[a10] := DC;
          B := FB;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #19DF
        let:8 a11 = (FB & M[2094]) in
        let:8 a12 = (FB | M[2094]) in
        #19E0
        M[2094] := a11;
        #19E3
        sound_control(Ufo,a11[0]);
        sound_control(Shot,a11[1]);
        sound_control(PlayerDie,a11[2]);
        sound_control(InvaderDie,a11[3]);
        sound_control(ExtraLife,a11[4]);
        #19E5
        let:16 a13 = (1 + a6) in
        let:16 a14 = (1 + a13) in
        A := a11;
        B := FB;
        SPH := a14[15:8];
        SPL := a14[7:0];
        FlagS := a11[7];
        FlagZ := is_zero(a11);
        FlagA := a12[3];
        FlagP := parity(a11);
        FlagCY := false;
        jump ((M[a13],M[a6]));
      }
    }

1711:

    let:16 a1 = (1 + (H,L)) in
    #1712
    #1713
    #1716
    #1719
    #171B
    #171C
    #171D
    let:16 a2 = addWithCarry(!false,02,~M[a1]) in
    let:8 a3 = (02 & 0F) in
    let:8 a4 = (~M[a1] & 0F) in
    let:16 a5 = addWithCarry(!false,a3,a4) in
    #171E
    if (!!a2[15:8][0]) {
      #1727
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a6 = (-1 + (SPH,SPL)) in
          M[a6] := 17;
          let:16 a7 = (-1 + a6) in
          M[a7] := 27;
          A := 02;
          B := M[a1];
          C := 04;
          D := 1C;
          E := B8;
          H := 1A;
          L := A1;
          SPH := a7[15:8];
          SPL := a7[7:0];
          FlagS := a2[7:0][7];
          FlagZ := is_zero(a2[7:0]);
          FlagA := a5[7:0][4];
          FlagP := parity(a2[7:0]);
          FlagCY := !a2[15:8][0];
          jump (0008);
        } else {
          let:16 a8 = (-1 + (SPH,SPL)) in
          M[a8] := 17;
          let:16 a9 = (-1 + a8) in
          M[a9] := 27;
          A := 02;
          B := M[a1];
          C := 04;
          D := 1C;
          E := B8;
          H := 1A;
          L := A1;
          SPH := a9[15:8];
          SPL := a9[7:0];
          FlagS := a2[7:0][7];
          FlagZ := is_zero(a2[7:0]);
          FlagA := a5[7:0][4];
          FlagP := parity(a2[7:0]);
          FlagCY := !a2[15:8][0];
          jump (0010);
        }
      } else {
        #1728
        M[20CF] := 30;
        #172B
        let:16 a10 = (1 + (SPH,SPL)) in
        let:16 a11 = (1 + a10) in
        A := 30;
        B := M[a1];
        C := 04;
        D := 1C;
        E := B8;
        H := 1A;
        L := A1;
        SPH := a11[15:8];
        SPL := a11[7:0];
        FlagS := a2[7:0][7];
        FlagZ := is_zero(a2[7:0]);
        FlagA := a5[7:0][4];
        FlagP := parity(a2[7:0]);
        FlagCY := !a2[15:8][0];
        jump ((M[a10],M[(SPH,SPL)]));
      }
    } else {
      #1721
      #1722
      #1723
      let:16 a12 = addWithCarry(!true,04,~00) in
      let:8 a13 = (04 & 0F) in
      let:8 a14 = (~00 & 0F) in
      let:16 a15 = addWithCarry(!true,a13,a14) in
      #1724
      if (!is_zero(a12[7:0])) {
        A := 02;
        B := M[a1];
        C := a12[7:0];
        D := 1C;
        E := B9;
        H := 1A;
        L := A2;
        FlagS := a12[7:0][7];
        FlagZ := is_zero(a12[7:0]);
        FlagA := a15[7:0][4];
        FlagP := parity(a12[7:0]);
        FlagCY := !a2[15:8][0];
        jump (171C);
      } else {
        #1727
        #1728
        M[20CF] := 10;
        #172B
        let:16 a16 = (1 + (SPH,SPL)) in
        let:16 a17 = (1 + a16) in
        A := 10;
        B := M[a1];
        C := a12[7:0];
        D := 1C;
        E := B9;
        H := 1A;
        L := A2;
        SPH := a17[15:8];
        SPL := a17[7:0];
        FlagS := a12[7:0][7];
        FlagZ := is_zero(a12[7:0]);
        FlagA := a15[7:0][4];
        FlagP := parity(a12[7:0]);
        FlagCY := !a2[15:8][0];
        jump ((M[a16],M[(SPH,SPL)]));
      }
    }

1747:

    #174A
    let:8 a1 = (M[2068] & M[2068]) in
    let:8 a2 = (M[2068] | M[2068]) in
    #174B
    if (is_zero(a1)) {
      #176D
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + (SPH,SPL)) in
          M[a3] := 17;
          let:16 a4 = (-1 + a3) in
          M[a4] := 6D;
          A := a1;
          SPH := a4[15:8];
          SPL := a4[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 17;
          let:16 a6 = (-1 + a5) in
          M[a6] := 6D;
          A := a1;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := a2[3];
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #1770
        let:8 a7 = (30 & M[2098]) in
        let:8 a8 = (30 | M[2098]) in
        #1772
        sound_control(FleetMovement1,a7[0]);
        sound_control(FleetMovement2,a7[1]);
        sound_control(FleetMovement3,a7[2]);
        sound_control(FleetMovement4,a7[3]);
        sound_control(UfoHit,a7[4]);
        #1774
        let:16 a9 = (1 + (SPH,SPL)) in
        let:16 a10 = (1 + a9) in
        A := a7;
        SPH := a10[15:8];
        SPL := a10[7:0];
        FlagS := a7[7];
        FlagZ := is_zero(a7);
        FlagA := a8[3];
        FlagP := parity(a7);
        FlagCY := false;
        jump ((M[a9],M[(SPH,SPL)]));
      }
    } else {
      #174E
      #1751
      let:16 a11 = addWithCarry(!true,M[2096],~00) in
      let:8 a12 = (M[2096] & 0F) in
      let:8 a13 = (~00 & 0F) in
      let:16 a14 = addWithCarry(!true,a12,a13) in
      M[2096] := a11[7:0];
      #1752
      if (!is_zero(a11[7:0])) {
        let:16 a15 = (1 + (SPH,SPL)) in
        let:16 a16 = (1 + a15) in
        A := a1;
        H := 20;
        L := 96;
        SPH := a16[15:8];
        SPL := a16[7:0];
        FlagS := a11[7:0][7];
        FlagZ := is_zero(a11[7:0]);
        FlagA := a14[7:0][4];
        FlagP := parity(a11[7:0]);
        FlagCY := false;
        jump ((M[a15],M[(SPH,SPL)]));
      } else {
        #1753
        #1756
        #1757
        sound_control(FleetMovement1,M[2098][0]);
        sound_control(FleetMovement2,M[2098][1]);
        sound_control(FleetMovement3,M[2098][2]);
        sound_control(FleetMovement4,M[2098][3]);
        sound_control(UfoHit,M[2098][4]);
        #1759
        #175C
        let:8 a17 = (M[2082] & M[2082]) in
        let:8 a18 = (M[2082] | M[2082]) in
        #175D
        if (is_zero(a17)) {
          #176D
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a19 = (-1 + (SPH,SPL)) in
              M[a19] := 17;
              let:16 a20 = (-1 + a19) in
              M[a20] := 6D;
              A := a17;
              H := 20;
              L := 98;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a17[7];
              FlagZ := is_zero(a17);
              FlagA := a18[3];
              FlagP := parity(a17);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a21 = (-1 + (SPH,SPL)) in
              M[a21] := 17;
              let:16 a22 = (-1 + a21) in
              M[a22] := 6D;
              A := a17;
              H := 20;
              L := 98;
              SPH := a22[15:8];
              SPL := a22[7:0];
              FlagS := a17[7];
              FlagZ := is_zero(a17);
              FlagA := a18[3];
              FlagP := parity(a17);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #1770
            let:8 a23 = (30 & M[2098]) in
            let:8 a24 = (30 | M[2098]) in
            #1772
            sound_control(FleetMovement1,a23[0]);
            sound_control(FleetMovement2,a23[1]);
            sound_control(FleetMovement3,a23[2]);
            sound_control(FleetMovement4,a23[3]);
            sound_control(UfoHit,a23[4]);
            #1774
            let:16 a25 = (1 + (SPH,SPL)) in
            let:16 a26 = (1 + a25) in
            A := a23;
            H := 20;
            L := 98;
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagS := a23[7];
            FlagZ := is_zero(a23);
            FlagA := a24[3];
            FlagP := parity(a23);
            FlagCY := false;
            jump ((M[a25],M[(SPH,SPL)]));
          }
        } else {
          #1760
          #1761
          #1762
          #1763
          M[2096] := M[2097];
          #1764
          #1765
          M[2095] := 01;
          #1767
          #1769
          M[209B] := 04;
          #176C
          let:16 a27 = (1 + (SPH,SPL)) in
          let:16 a28 = (1 + a27) in
          A := 04;
          H := 20;
          L := 95;
          SPH := a28[15:8];
          SPL := a28[7:0];
          FlagS := a17[7];
          FlagZ := is_zero(a17);
          FlagA := a18[3];
          FlagP := parity(a17);
          FlagCY := false;
          jump ((M[a27],M[(SPH,SPL)]));
        }
      }
    }

17B4:

    #17B6
    #17B9
    #17BA
    let:8 a1 = (EF & M[2098]) in
    let:8 a2 = (EF | M[2098]) in
    #17BB
    M[2098] := a1;
    #17BC
    sound_control(FleetMovement1,a1[0]);
    sound_control(FleetMovement2,a1[1]);
    sound_control(FleetMovement3,a1[2]);
    sound_control(FleetMovement4,a1[3]);
    sound_control(UfoHit,a1[4]);
    #17BE
    let:16 a3 = (1 + (SPH,SPL)) in
    let:16 a4 = (1 + a3) in
    A := a1;
    B := EF;
    H := 20;
    L := 98;
    SPH := a4[15:8];
    SPL := a4[7:0];
    FlagS := a1[7];
    FlagZ := is_zero(a1);
    FlagA := a2[3];
    FlagP := parity(a1);
    FlagCY := false;
    jump ((M[a3],M[(SPH,SPL)]));

17DF:

    let:16 a1 = addWithCarry(!true,B,~00) in
    let:8 a2 = (B & 0F) in
    let:8 a3 = (~00 & 0F) in
    let:16 a4 = addWithCarry(!true,a2,a3) in
    #17E0
    if (!is_zero(a1[7:0])) {
      #17DC
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 17;
          let:16 a6 = (-1 + a5) in
          M[a6] := DC;
          B := a1[7:0];
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 17;
          let:16 a8 = (-1 + a7) in
          M[a8] := DC;
          B := a1[7:0];
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0010);
        }
      } else {
        let:16 a9 = (-1 + (SPH,SPL)) in
        M[a9] := 17;
        let:16 a10 = (-1 + a9) in
        M[a10] := DF;
        #return-to: 17DF
        #09D6
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a10) in
            M[a11] := 09;
            let:16 a12 = (-1 + a11) in
            M[a12] := D6;
            B := a1[7:0];
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            jump (0008);
          } else {
            let:16 a13 = (-1 + a10) in
            M[a13] := 09;
            let:16 a14 = (-1 + a13) in
            M[a14] := D6;
            B := a1[7:0];
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            jump (0010);
          }
        } else {
          #09D9
          M[2402] := 00;
          #09DB
          #09DC
          #09DD
          let:8 a15 = (1F & 03) in
          let:8 a16 = (1F | 03) in
          #09DF
          let:16 a17 = addWithCarry(!false,a15,~1C) in
          let:8 a18 = (a15 & 0F) in
          let:8 a19 = (~1C & 0F) in
          let:16 a20 = addWithCarry(!false,a18,a19) in
          #09E1
          if (!a17[15:8][0]) {
            #09E8
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a21 = (-1 + a10) in
                M[a21] := 09;
                let:16 a22 = (-1 + a21) in
                M[a22] := E8;
                A := a15;
                B := a1[7:0];
                H := 24;
                L := 03;
                SPH := a22[15:8];
                SPL := a22[7:0];
                FlagS := a17[7:0][7];
                FlagZ := is_zero(a17[7:0]);
                FlagA := a20[7:0][4];
                FlagP := parity(a17[7:0]);
                FlagCY := !a17[15:8][0];
                jump (0008);
              } else {
                let:16 a23 = (-1 + a10) in
                M[a23] := 09;
                let:16 a24 = (-1 + a23) in
                M[a24] := E8;
                A := a15;
                B := a1[7:0];
                H := 24;
                L := 03;
                SPH := a24[15:8];
                SPL := a24[7:0];
                FlagS := a17[7:0][7];
                FlagZ := is_zero(a17[7:0]);
                FlagA := a20[7:0][4];
                FlagP := parity(a17[7:0]);
                FlagCY := !a17[15:8][0];
                jump (0010);
              }
            } else {
              #09E9
              let:16 a25 = addWithCarry(!false,24,~40) in
              let:8 a26 = (24 & 0F) in
              let:8 a27 = (~40 & 0F) in
              let:16 a28 = addWithCarry(!false,a26,a27) in
              #09EB
              if (!a25[15:8][0]) {
                A := 24;
                B := a1[7:0];
                H := 24;
                L := 03;
                SPH := a10[15:8];
                SPL := a10[7:0];
                FlagS := a25[7:0][7];
                FlagZ := is_zero(a25[7:0]);
                FlagA := a28[7:0][4];
                FlagP := parity(a25[7:0]);
                FlagCY := !a25[15:8][0];
                jump (09D9);
              } else {
                #09EE
                let:16 a29 = (1 + a10) in
                let:16 a30 = (1 + a29) in
                A := 24;
                B := a1[7:0];
                H := 24;
                L := 03;
                SPH := a30[15:8];
                SPL := a30[7:0];
                FlagS := a25[7:0][7];
                FlagZ := is_zero(a25[7:0]);
                FlagA := a28[7:0][4];
                FlagP := parity(a25[7:0]);
                FlagCY := !a25[15:8][0];
                jump ((M[a29],M[a10]));
              }
            }
          } else {
            #09E4
            #09E7
            let:17 a31 = add17(0006,2403) in
            #09E8
            #09E9
            let:16 a32 = addWithCarry(!false,a31[15:0][15:8],~40) in
            let:8 a33 = (a31[15:0][15:8] & 0F) in
            let:8 a34 = (~40 & 0F) in
            let:16 a35 = addWithCarry(!false,a33,a34) in
            #09EB
            if (!a32[15:8][0]) {
              A := a31[15:0][15:8];
              B := a1[7:0];
              D := 00;
              E := 06;
              H := a31[15:0][15:8];
              L := a31[15:0][7:0];
              SPH := a10[15:8];
              SPL := a10[7:0];
              FlagS := a32[7:0][7];
              FlagZ := is_zero(a32[7:0]);
              FlagA := a35[7:0][4];
              FlagP := parity(a32[7:0]);
              FlagCY := !a32[15:8][0];
              jump (09D9);
            } else {
              #09EE
              let:16 a36 = (1 + a10) in
              let:16 a37 = (1 + a36) in
              A := a31[15:0][15:8];
              B := a1[7:0];
              D := 00;
              E := 06;
              H := a31[15:0][15:8];
              L := a31[15:0][7:0];
              SPH := a37[15:8];
              SPL := a37[7:0];
              FlagS := a32[7:0][7];
              FlagZ := is_zero(a32[7:0]);
              FlagA := a35[7:0][4];
              FlagP := parity(a32[7:0]);
              FlagCY := !a32[15:8][0];
              jump ((M[a36],M[a10]));
            }
          }
        }
      }
    } else {
      #17E3
      #17E5
      M[209A] := 01;
      #17E8
      let:16 a38 = (-1 + (SPH,SPL)) in
      M[a38] := 17;
      let:16 a39 = (-1 + a38) in
      M[a39] := EB;
      #return-to: 17EB
      #19D7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a40 = (-1 + a39) in
          M[a40] := 19;
          let:16 a41 = (-1 + a40) in
          M[a41] := D7;
          A := 01;
          B := a1[7:0];
          SPH := a41[15:8];
          SPL := a41[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0008);
        } else {
          let:16 a42 = (-1 + a39) in
          M[a42] := 19;
          let:16 a43 = (-1 + a42) in
          M[a43] := D7;
          A := 01;
          B := a1[7:0];
          SPH := a43[15:8];
          SPL := a43[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0010);
        }
      } else {
        let:8 a44 = (01 ^ 01) in
        #19D8
        #19D3
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a45 = (-1 + a39) in
            M[a45] := 19;
            let:16 a46 = (-1 + a45) in
            M[a46] := D3;
            A := a44;
            B := a1[7:0];
            SPH := a46[15:8];
            SPL := a46[7:0];
            FlagS := a44[7];
            FlagZ := is_zero(a44);
            FlagA := false;
            FlagP := parity(a44);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a47 = (-1 + a39) in
            M[a47] := 19;
            let:16 a48 = (-1 + a47) in
            M[a48] := D3;
            A := a44;
            B := a1[7:0];
            SPH := a48[15:8];
            SPL := a48[7:0];
            FlagS := a44[7];
            FlagZ := is_zero(a44);
            FlagA := false;
            FlagP := parity(a44);
            FlagCY := false;
            jump (0010);
          }
        } else {
          M[20E9] := a44;
          #19D6
          let:16 a49 = (1 + a39) in
          let:16 a50 = (1 + a49) in
          A := a44;
          B := a1[7:0];
          SPH := a50[15:8];
          SPL := a50[7:0];
          FlagS := a44[7];
          FlagZ := is_zero(a44);
          FlagA := false;
          FlagP := parity(a44);
          FlagCY := false;
          jump ((M[a49],M[a39]));
        }
      }
    }

17EB:

    enable_interrupts()
    #17EC
    #17EF
    #17F2
    #17F4
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 17;
    let:16 a2 = (-1 + a1) in
    M[a2] := F7;
    #return-to: 17F7
    #0A93
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := 93;
        C := 04;
        D := 1C;
        E := BC;
        H := 30;
        L := 16;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := 93;
        C := 04;
        D := 1C;
        E := BC;
        H := 30;
        L := 16;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 1C;
      let:16 a8 = (-1 + a7) in
      M[a8] := BC;
      #0A94
      #0A95
      let:16 a9 = (-1 + a8) in
      M[a9] := 0A;
      let:16 a10 = (-1 + a9) in
      M[a10] := 98;
      #return-to: 0A98
      #08FF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a11 = (-1 + a10) in
          M[a11] := 08;
          let:16 a12 = (-1 + a11) in
          M[a12] := FF;
          A := 13;
          C := 04;
          D := 1C;
          E := BC;
          H := 30;
          L := 16;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0008);
        } else {
          let:16 a13 = (-1 + a10) in
          M[a13] := 08;
          let:16 a14 = (-1 + a13) in
          M[a14] := FF;
          A := 13;
          C := 04;
          D := 1C;
          E := BC;
          H := 30;
          L := 16;
          SPH := a14[15:8];
          SPL := a14[7:0];
          jump (0010);
        }
      } else {
        #0902
        let:16 a15 = (-1 + a10) in
        M[a15] := 30;
        let:16 a16 = (-1 + a15) in
        M[a16] := 16;
        #0903
        #0905
        #0906
        let:17 a17 = add17(0013,0013) in
        #0907
        let:17 a18 = add17(a17[15:0],a17[15:0]) in
        #0908
        let:17 a19 = add17(a18[15:0],a18[15:0]) in
        #0909
        let:17 a20 = add17(1E00,a19[15:0]) in
        #090A
        #090B
        let:16 a21 = (1 + a16) in
        let:16 a22 = (1 + a21) in
        #090C
        #090E
        #0910
        #1439
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a23 = (-1 + a22) in
            M[a23] := 14;
            let:16 a24 = (-1 + a23) in
            M[a24] := 39;
            A := 13;
            B := 08;
            C := 04;
            D := a20[15:0][15:8];
            E := a20[15:0][7:0];
            H := M[a21];
            L := M[a16];
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagCY := a20[16];
            jump (0008);
          } else {
            let:16 a25 = (-1 + a22) in
            M[a25] := 14;
            let:16 a26 = (-1 + a25) in
            M[a26] := 39;
            A := 13;
            B := 08;
            C := 04;
            D := a20[15:0][15:8];
            E := a20[15:0][7:0];
            H := M[a21];
            L := M[a16];
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagCY := a20[16];
            jump (0010);
          }
        } else {
          let:16 a27 = (-1 + a22) in
          M[a27] := 08;
          let:16 a28 = (-1 + a27) in
          M[a28] := 04;
          #143A
          #143B
          M[(M[a21],M[a16])] := M[a20[15:0]];
          #143C
          let:16 a29 = (1 + a20[15:0]) in
          #143D
          #1440
          let:17 a30 = add17(0020,(M[a21],M[a16])) in
          #1441
          let:16 a31 = (1 + a28) in
          let:16 a32 = (1 + a31) in
          #1442
          let:16 a33 = addWithCarry(!true,M[a31],~00) in
          let:8 a34 = (M[a31] & 0F) in
          let:8 a35 = (~00 & 0F) in
          let:16 a36 = addWithCarry(!true,a34,a35) in
          #1443
          if (!is_zero(a33[7:0])) {
            A := M[a20[15:0]];
            B := a33[7:0];
            C := M[a28];
            D := a29[15:8];
            E := a29[7:0];
            H := a30[15:0][15:8];
            L := a30[15:0][7:0];
            SPH := a32[15:8];
            SPL := a32[7:0];
            FlagS := a33[7:0][7];
            FlagZ := is_zero(a33[7:0]);
            FlagA := a36[7:0][4];
            FlagP := parity(a33[7:0]);
            FlagCY := a30[16];
            jump (1439);
          } else {
            #1446
            let:16 a37 = (1 + a32) in
            let:16 a38 = (1 + a37) in
            A := M[a20[15:0]];
            B := a33[7:0];
            C := M[a28];
            D := a29[15:8];
            E := a29[7:0];
            H := a30[15:0][15:8];
            L := a30[15:0][7:0];
            SPH := a38[15:8];
            SPL := a38[7:0];
            FlagS := a33[7:0][7];
            FlagZ := is_zero(a33[7:0]);
            FlagA := a36[7:0][4];
            FlagP := parity(a33[7:0]);
            FlagCY := a30[16];
            jump ((M[a37],M[a32]));
          }
        }
      }
    }

17F7:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 17;
    let:16 a2 = (-1 + a1) in
    M[a2] := FA;
    #return-to: 17FA
    #0AB1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := B1;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := B1;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AB3
      #0AD7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := D7;
          A := 40;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := D7;
          A := 40;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        M[20C0] := 40;
        #0ADA
        #0ADD
        let:8 a11 = (M[20C0] & M[20C0]) in
        let:8 a12 = (M[20C0] | M[20C0]) in
        #0ADE
        if (!is_zero(a11)) {
          A := a11;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump (0ADA);
        } else {
          #0AE1
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        }
      }
    }

17FA:

    let:8 a1 = (A ^ A) in
    #17FB
    M[209A] := a1;
    #17FE
    M[2093] := a1;
    #1801
    #16C9
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a2 = (-1 + (SPH,SPL)) in
        M[a2] := 16;
        let:16 a3 = (-1 + a2) in
        M[a3] := C9;
        A := a1;
        SPH := a3[15:8];
        SPL := a3[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a4 = (-1 + (SPH,SPL)) in
        M[a4] := 16;
        let:16 a5 = (-1 + a4) in
        M[a5] := C9;
        A := a1;
        SPH := a5[15:8];
        SPL := a5[7:0];
        FlagS := a1[7];
        FlagZ := is_zero(a1);
        FlagA := false;
        FlagP := parity(a1);
        FlagCY := false;
        jump (0010);
      }
    } else {
      #16CC
      #16CF
      #16D1
      let:16 a6 = (-1 + (SPH,SPL)) in
      M[a6] := 16;
      let:16 a7 = (-1 + a6) in
      M[a7] := D4;
      #return-to: 16D4
      #0A93
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a8 = (-1 + a7) in
          M[a8] := 0A;
          let:16 a9 = (-1 + a8) in
          M[a9] := 93;
          A := a1;
          C := 0A;
          D := 1A;
          E := A6;
          H := 2D;
          L := 18;
          SPH := a9[15:8];
          SPL := a9[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := false;
          FlagP := parity(a1);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a10 = (-1 + a7) in
          M[a10] := 0A;
          let:16 a11 = (-1 + a10) in
          M[a11] := 93;
          A := a1;
          C := 0A;
          D := 1A;
          E := A6;
          H := 2D;
          L := 18;
          SPH := a11[15:8];
          SPL := a11[7:0];
          FlagS := a1[7];
          FlagZ := is_zero(a1);
          FlagA := false;
          FlagP := parity(a1);
          FlagCY := false;
          jump (0010);
        }
      } else {
        let:16 a12 = (-1 + a7) in
        M[a12] := 1A;
        let:16 a13 = (-1 + a12) in
        M[a13] := A6;
        #0A94
        #0A95
        let:16 a14 = (-1 + a13) in
        M[a14] := 0A;
        let:16 a15 = (-1 + a14) in
        M[a15] := 98;
        #return-to: 0A98
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a16 = (-1 + a15) in
            M[a16] := 08;
            let:16 a17 = (-1 + a16) in
            M[a17] := FF;
            A := 06;
            C := 0A;
            D := 1A;
            E := A6;
            H := 2D;
            L := 18;
            SPH := a17[15:8];
            SPL := a17[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := false;
            FlagP := parity(a1);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a18 = (-1 + a15) in
            M[a18] := 08;
            let:16 a19 = (-1 + a18) in
            M[a19] := FF;
            A := 06;
            C := 0A;
            D := 1A;
            E := A6;
            H := 2D;
            L := 18;
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a1[7];
            FlagZ := is_zero(a1);
            FlagA := false;
            FlagP := parity(a1);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #0902
          let:16 a20 = (-1 + a15) in
          M[a20] := 2D;
          let:16 a21 = (-1 + a20) in
          M[a21] := 18;
          #0903
          #0905
          #0906
          let:17 a22 = add17(0006,0006) in
          #0907
          let:17 a23 = add17(a22[15:0],a22[15:0]) in
          #0908
          let:17 a24 = add17(a23[15:0],a23[15:0]) in
          #0909
          let:17 a25 = add17(1E00,a24[15:0]) in
          #090A
          #090B
          let:16 a26 = (1 + a21) in
          let:16 a27 = (1 + a26) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a28 = (-1 + a27) in
              M[a28] := 14;
              let:16 a29 = (-1 + a28) in
              M[a29] := 39;
              A := 06;
              B := 08;
              C := 0A;
              D := a25[15:0][15:8];
              E := a25[15:0][7:0];
              H := M[a26];
              L := M[a21];
              SPH := a29[15:8];
              SPL := a29[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := false;
              FlagP := parity(a1);
              FlagCY := a25[16];
              jump (0008);
            } else {
              let:16 a30 = (-1 + a27) in
              M[a30] := 14;
              let:16 a31 = (-1 + a30) in
              M[a31] := 39;
              A := 06;
              B := 08;
              C := 0A;
              D := a25[15:0][15:8];
              E := a25[15:0][7:0];
              H := M[a26];
              L := M[a21];
              SPH := a31[15:8];
              SPL := a31[7:0];
              FlagS := a1[7];
              FlagZ := is_zero(a1);
              FlagA := false;
              FlagP := parity(a1);
              FlagCY := a25[16];
              jump (0010);
            }
          } else {
            let:16 a32 = (-1 + a27) in
            M[a32] := 08;
            let:16 a33 = (-1 + a32) in
            M[a33] := 0A;
            #143A
            #143B
            M[(M[a26],M[a21])] := M[a25[15:0]];
            #143C
            let:16 a34 = (1 + a25[15:0]) in
            #143D
            #1440
            let:17 a35 = add17(0020,(M[a26],M[a21])) in
            #1441
            let:16 a36 = (1 + a33) in
            let:16 a37 = (1 + a36) in
            #1442
            let:16 a38 = addWithCarry(!true,M[a36],~00) in
            let:8 a39 = (M[a36] & 0F) in
            let:8 a40 = (~00 & 0F) in
            let:16 a41 = addWithCarry(!true,a39,a40) in
            #1443
            if (!is_zero(a38[7:0])) {
              A := M[a25[15:0]];
              B := a38[7:0];
              C := M[a33];
              D := a34[15:8];
              E := a34[7:0];
              H := a35[15:0][15:8];
              L := a35[15:0][7:0];
              SPH := a37[15:8];
              SPL := a37[7:0];
              FlagS := a38[7:0][7];
              FlagZ := is_zero(a38[7:0]);
              FlagA := a41[7:0][4];
              FlagP := parity(a38[7:0]);
              FlagCY := a35[16];
              jump (1439);
            } else {
              #1446
              let:16 a42 = (1 + a37) in
              let:16 a43 = (1 + a42) in
              A := M[a25[15:0]];
              B := a38[7:0];
              C := M[a33];
              D := a34[15:8];
              E := a34[7:0];
              H := a35[15:0][15:8];
              L := a35[15:0][7:0];
              SPH := a43[15:8];
              SPL := a43[7:0];
              FlagS := a38[7:0][7];
              FlagZ := is_zero(a38[7:0]);
              FlagA := a41[7:0][4];
              FlagP := parity(a38[7:0]);
              FlagCY := a35[16];
              jump ((M[a42],M[a37]));
            }
          }
        }
      }
    }

1820:

    #1822
    M[206C] := 0A;
    #1825
    #1828
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 18;
    let:16 a2 = (-1 + a1) in
    M[a2] := 2B;
    #return-to: 182B
    #1856
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := 56;
        A := 0A;
        B := 1D;
        C := BE;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 18;
        let:16 a6 = (-1 + a5) in
        M[a6] := 56;
        A := 0A;
        B := 1D;
        C := BE;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1857
      let:16 a7 = addWithCarry(!false,0E,~FF) in
      let:8 a8 = (0E & 0F) in
      let:8 a9 = (~FF & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #1859
      #185A
      if (is_zero(a7[7:0])) {
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := 0E;
        B := 1D;
        C := BE;
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := true;
        jump ((M[a11],M[a2]));
      } else {
        #185B
        #185C
        #185D
        #185E
        #185F
        #1860
        #1861
        #1862
        #1863
        #1864
        #1865
        #1866
        let:8 a13 = (1D & 1D) in
        let:8 a14 = (1D | 1D) in
        #1867
        let:16 a15 = (1 + a2) in
        let:16 a16 = (1 + a15) in
        A := a13;
        B := 1D;
        C := C2;
        D := 1D;
        E := 68;
        H := 2C;
        L := 0E;
        SPH := a16[15:8];
        SPL := a16[7:0];
        FlagS := a13[7];
        FlagZ := is_zero(a13);
        FlagA := a14[3];
        FlagP := parity(a13);
        FlagCY := false;
        jump ((M[a15],M[a2]));
      }
    }

182B:

    if (FlagCY) {
      jump (1837);
    } else {
      #182E
      let:16 a1 = (-1 + (SPH,SPL)) in
      M[a1] := 18;
      let:16 a2 = (-1 + a1) in
      M[a2] := 31;
      #return-to: 1831
      #1844
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a3 = (-1 + a2) in
          M[a3] := 18;
          let:16 a4 = (-1 + a3) in
          M[a4] := 44;
          SPH := a4[15:8];
          SPL := a4[7:0];
          jump (0008);
        } else {
          let:16 a5 = (-1 + a2) in
          M[a5] := 18;
          let:16 a6 = (-1 + a5) in
          M[a6] := 44;
          SPH := a6[15:8];
          SPL := a6[7:0];
          jump (0010);
        }
      } else {
        let:16 a7 = (-1 + a2) in
        M[a7] := B;
        let:16 a8 = (-1 + a7) in
        M[a8] := C;
        #1845
        #1847
        let:16 a9 = (-1 + a8) in
        M[a9] := 18;
        let:16 a10 = (-1 + a9) in
        M[a10] := 4A;
        #return-to: 184A
        #1439
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a10) in
            M[a11] := 14;
            let:16 a12 = (-1 + a11) in
            M[a12] := 39;
            B := 10;
            SPH := a12[15:8];
            SPL := a12[7:0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a10) in
            M[a13] := 14;
            let:16 a14 = (-1 + a13) in
            M[a14] := 39;
            B := 10;
            SPH := a14[15:8];
            SPL := a14[7:0];
            jump (0010);
          }
        } else {
          let:16 a15 = (-1 + a10) in
          M[a15] := 10;
          let:16 a16 = (-1 + a15) in
          M[a16] := C;
          #143A
          #143B
          M[(H,L)] := M[(D,E)];
          #143C
          let:16 a17 = (1 + (D,E)) in
          #143D
          #1440
          let:17 a18 = add17(0020,(H,L)) in
          #1441
          let:16 a19 = (1 + a16) in
          let:16 a20 = (1 + a19) in
          #1442
          let:16 a21 = addWithCarry(!true,M[a19],~00) in
          let:8 a22 = (M[a19] & 0F) in
          let:8 a23 = (~00 & 0F) in
          let:16 a24 = addWithCarry(!true,a22,a23) in
          #1443
          if (!is_zero(a21[7:0])) {
            A := M[(D,E)];
            B := a21[7:0];
            C := M[a16];
            D := a17[15:8];
            E := a17[7:0];
            H := a18[15:0][15:8];
            L := a18[15:0][7:0];
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a21[7:0][7];
            FlagZ := is_zero(a21[7:0]);
            FlagA := a24[7:0][4];
            FlagP := parity(a21[7:0]);
            FlagCY := a18[16];
            jump (1439);
          } else {
            #1446
            let:16 a25 = (1 + a20) in
            let:16 a26 = (1 + a25) in
            A := M[(D,E)];
            B := a21[7:0];
            C := M[a16];
            D := a17[15:8];
            E := a17[7:0];
            H := a18[15:0][15:8];
            L := a18[15:0][7:0];
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagS := a21[7:0][7];
            FlagZ := is_zero(a21[7:0]);
            FlagA := a24[7:0][4];
            FlagP := parity(a21[7:0]);
            FlagCY := a18[16];
            jump ((M[a25],M[a20]));
          }
        }
      }
    }

1831:

    #1828
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 18;
        let:16 a2 = (-1 + a1) in
        M[a2] := 28;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := 28;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 18;
      let:16 a6 = (-1 + a5) in
      M[a6] := 2B;
      #return-to: 182B
      #1856
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 18;
          let:16 a8 = (-1 + a7) in
          M[a8] := 56;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 18;
          let:16 a10 = (-1 + a9) in
          M[a10] := 56;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1857
        let:16 a11 = addWithCarry(!false,M[(B,C)],~FF) in
        let:8 a12 = (M[(B,C)] & 0F) in
        let:8 a13 = (~FF & 0F) in
        let:16 a14 = addWithCarry(!false,a12,a13) in
        #1859
        #185A
        if (is_zero(a11[7:0])) {
          let:16 a15 = (1 + a6) in
          let:16 a16 = (1 + a15) in
          A := M[(B,C)];
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          FlagCY := true;
          jump ((M[a15],M[a6]));
        } else {
          #185B
          #185C
          let:16 a17 = (1 + (B,C)) in
          #185D
          #185E
          #185F
          let:16 a18 = (1 + a17) in
          #1860
          #1861
          #1862
          let:16 a19 = (1 + a18) in
          #1863
          #1864
          #1865
          let:16 a20 = (1 + a19) in
          #1866
          let:8 a21 = (M[a19] & M[a19]) in
          let:8 a22 = (M[a19] | M[a19]) in
          #1867
          let:16 a23 = (1 + a6) in
          let:16 a24 = (1 + a23) in
          A := a21;
          B := a20[15:8];
          C := a20[7:0];
          D := M[a19];
          E := M[a18];
          H := M[a17];
          L := M[(B,C)];
          SPH := a24[15:8];
          SPL := a24[7:0];
          FlagS := a21[7];
          FlagZ := is_zero(a21);
          FlagA := a22[3];
          FlagP := parity(a21);
          FlagCY := false;
          jump ((M[a23],M[a6]));
        }
      }
    }

1834:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 18;
    let:16 a2 = (-1 + a1) in
    M[a2] := 37;
    #return-to: 1837
    #0AB1
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := B1;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 0A;
        let:16 a6 = (-1 + a5) in
        M[a6] := B1;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #0AB3
      #0AD7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := D7;
          A := 40;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 0A;
          let:16 a10 = (-1 + a9) in
          M[a10] := D7;
          A := 40;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        M[20C0] := 40;
        #0ADA
        #0ADD
        let:8 a11 = (M[20C0] & M[20C0]) in
        let:8 a12 = (M[20C0] | M[20C0]) in
        #0ADE
        if (!is_zero(a11)) {
          A := a11;
          SPH := a2[15:8];
          SPL := a2[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump (0ADA);
        } else {
          #0AE1
          let:16 a13 = (1 + a2) in
          let:16 a14 = (1 + a13) in
          A := a11;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := false;
          jump ((M[a13],M[a2]));
        }
      }
    }

1837:

    #183A
    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 18;
    let:16 a2 = (-1 + a1) in
    M[a2] := 3D;
    #return-to: 183D
    #1856
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := 56;
        B := 1D;
        C := CF;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 18;
        let:16 a6 = (-1 + a5) in
        M[a6] := 56;
        B := 1D;
        C := CF;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1857
      let:16 a7 = addWithCarry(!false,0E,~FF) in
      let:8 a8 = (0E & 0F) in
      let:8 a9 = (~FF & 0F) in
      let:16 a10 = addWithCarry(!false,a8,a9) in
      #1859
      #185A
      if (is_zero(a7[7:0])) {
        let:16 a11 = (1 + a2) in
        let:16 a12 = (1 + a11) in
        A := 0E;
        B := 1D;
        C := CF;
        SPH := a12[15:8];
        SPL := a12[7:0];
        FlagS := a7[7:0][7];
        FlagZ := is_zero(a7[7:0]);
        FlagA := a10[7:0][4];
        FlagP := parity(a7[7:0]);
        FlagCY := true;
        jump ((M[a11],M[a2]));
      } else {
        #185B
        #185C
        #185D
        #185E
        #185F
        #1860
        #1861
        #1862
        #1863
        #1864
        #1865
        #1866
        let:8 a13 = (1D & 1D) in
        let:8 a14 = (1D | 1D) in
        #1867
        let:16 a15 = (1 + a2) in
        let:16 a16 = (1 + a15) in
        A := a13;
        B := 1D;
        C := D3;
        D := 1D;
        E := E0;
        H := 2E;
        L := 0E;
        SPH := a16[15:8];
        SPL := a16[7:0];
        FlagS := a13[7];
        FlagZ := is_zero(a13);
        FlagA := a14[3];
        FlagP := parity(a13);
        FlagCY := false;
        jump ((M[a15],M[a2]));
      }
    }

183D:

    if (FlagCY) {
      let:16 a1 = (1 + (SPH,SPL)) in
      let:16 a2 = (1 + a1) in
      SPH := a2[15:8];
      SPL := a2[7:0];
      jump ((M[a1],M[(SPH,SPL)]));
    } else {
      #183E
      let:16 a3 = (-1 + (SPH,SPL)) in
      M[a3] := 18;
      let:16 a4 = (-1 + a3) in
      M[a4] := 41;
      #return-to: 1841
      #184C
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + a4) in
          M[a5] := 18;
          let:16 a6 = (-1 + a5) in
          M[a6] := 4C;
          SPH := a6[15:8];
          SPL := a6[7:0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + a4) in
          M[a7] := 18;
          let:16 a8 = (-1 + a7) in
          M[a8] := 4C;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0010);
        }
      } else {
        let:16 a9 = (-1 + a4) in
        M[a9] := B;
        let:16 a10 = (-1 + a9) in
        M[a10] := C;
        #184D
        #1850
        #1851
        let:16 a11 = (-1 + a10) in
        M[a11] := 18;
        let:16 a12 = (-1 + a11) in
        M[a12] := 54;
        #return-to: 1854
        #0A93
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + a12) in
            M[a13] := 0A;
            let:16 a14 = (-1 + a13) in
            M[a14] := 93;
            A := M[206C];
            C := M[206C];
            SPH := a14[15:8];
            SPL := a14[7:0];
            jump (0008);
          } else {
            let:16 a15 = (-1 + a12) in
            M[a15] := 0A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 93;
            A := M[206C];
            C := M[206C];
            SPH := a16[15:8];
            SPL := a16[7:0];
            jump (0010);
          }
        } else {
          let:16 a17 = (-1 + a12) in
          M[a17] := D;
          let:16 a18 = (-1 + a17) in
          M[a18] := E;
          #0A94
          #0A95
          let:16 a19 = (-1 + a18) in
          M[a19] := 0A;
          let:16 a20 = (-1 + a19) in
          M[a20] := 98;
          #return-to: 0A98
          #08FF
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a21 = (-1 + a20) in
              M[a21] := 08;
              let:16 a22 = (-1 + a21) in
              M[a22] := FF;
              A := M[(D,E)];
              C := M[206C];
              SPH := a22[15:8];
              SPL := a22[7:0];
              jump (0008);
            } else {
              let:16 a23 = (-1 + a20) in
              M[a23] := 08;
              let:16 a24 = (-1 + a23) in
              M[a24] := FF;
              A := M[(D,E)];
              C := M[206C];
              SPH := a24[15:8];
              SPL := a24[7:0];
              jump (0010);
            }
          } else {
            #0902
            let:16 a25 = (-1 + a20) in
            M[a25] := H;
            let:16 a26 = (-1 + a25) in
            M[a26] := L;
            #0903
            #0905
            #0906
            let:17 a27 = add17((00,M[(D,E)]),(00,M[(D,E)])) in
            #0907
            let:17 a28 = add17(a27[15:0],a27[15:0]) in
            #0908
            let:17 a29 = add17(a28[15:0],a28[15:0]) in
            #0909
            let:17 a30 = add17(1E00,a29[15:0]) in
            #090A
            #090B
            let:16 a31 = (1 + a26) in
            let:16 a32 = (1 + a31) in
            #090C
            #090E
            #0910
            #1439
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a33 = (-1 + a32) in
                M[a33] := 14;
                let:16 a34 = (-1 + a33) in
                M[a34] := 39;
                A := M[(D,E)];
                B := 08;
                C := M[206C];
                D := a30[15:0][15:8];
                E := a30[15:0][7:0];
                H := M[a31];
                L := M[a26];
                SPH := a34[15:8];
                SPL := a34[7:0];
                FlagCY := a30[16];
                jump (0008);
              } else {
                let:16 a35 = (-1 + a32) in
                M[a35] := 14;
                let:16 a36 = (-1 + a35) in
                M[a36] := 39;
                A := M[(D,E)];
                B := 08;
                C := M[206C];
                D := a30[15:0][15:8];
                E := a30[15:0][7:0];
                H := M[a31];
                L := M[a26];
                SPH := a36[15:8];
                SPL := a36[7:0];
                FlagCY := a30[16];
                jump (0010);
              }
            } else {
              let:16 a37 = (-1 + a32) in
              M[a37] := 08;
              let:16 a38 = (-1 + a37) in
              M[a38] := M[206C];
              #143A
              #143B
              M[(M[a31],M[a26])] := M[a30[15:0]];
              #143C
              let:16 a39 = (1 + a30[15:0]) in
              #143D
              #1440
              let:17 a40 = add17(0020,(M[a31],M[a26])) in
              #1441
              let:16 a41 = (1 + a38) in
              let:16 a42 = (1 + a41) in
              #1442
              let:16 a43 = addWithCarry(!true,M[a41],~00) in
              let:8 a44 = (M[a41] & 0F) in
              let:8 a45 = (~00 & 0F) in
              let:16 a46 = addWithCarry(!true,a44,a45) in
              #1443
              if (!is_zero(a43[7:0])) {
                A := M[a30[15:0]];
                B := a43[7:0];
                C := M[a38];
                D := a39[15:8];
                E := a39[7:0];
                H := a40[15:0][15:8];
                L := a40[15:0][7:0];
                SPH := a42[15:8];
                SPL := a42[7:0];
                FlagS := a43[7:0][7];
                FlagZ := is_zero(a43[7:0]);
                FlagA := a46[7:0][4];
                FlagP := parity(a43[7:0]);
                FlagCY := a40[16];
                jump (1439);
              } else {
                #1446
                let:16 a47 = (1 + a42) in
                let:16 a48 = (1 + a47) in
                A := M[a30[15:0]];
                B := a43[7:0];
                C := M[a38];
                D := a39[15:8];
                E := a39[7:0];
                H := a40[15:0][15:8];
                L := a40[15:0][7:0];
                SPH := a48[15:8];
                SPL := a48[7:0];
                FlagS := a43[7:0][7];
                FlagZ := is_zero(a43[7:0]);
                FlagA := a46[7:0][4];
                FlagP := parity(a43[7:0]);
                FlagCY := a40[16];
                jump ((M[a47],M[a42]));
              }
            }
          }
        }
      }
    }

1841:

    #183A
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 18;
        let:16 a2 = (-1 + a1) in
        M[a2] := 3A;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 18;
        let:16 a4 = (-1 + a3) in
        M[a4] := 3A;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 18;
      let:16 a6 = (-1 + a5) in
      M[a6] := 3D;
      #return-to: 183D
      #1856
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 18;
          let:16 a8 = (-1 + a7) in
          M[a8] := 56;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 18;
          let:16 a10 = (-1 + a9) in
          M[a10] := 56;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1857
        let:16 a11 = addWithCarry(!false,M[(B,C)],~FF) in
        let:8 a12 = (M[(B,C)] & 0F) in
        let:8 a13 = (~FF & 0F) in
        let:16 a14 = addWithCarry(!false,a12,a13) in
        #1859
        #185A
        if (is_zero(a11[7:0])) {
          let:16 a15 = (1 + a6) in
          let:16 a16 = (1 + a15) in
          A := M[(B,C)];
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a11[7:0][7];
          FlagZ := is_zero(a11[7:0]);
          FlagA := a14[7:0][4];
          FlagP := parity(a11[7:0]);
          FlagCY := true;
          jump ((M[a15],M[a6]));
        } else {
          #185B
          #185C
          let:16 a17 = (1 + (B,C)) in
          #185D
          #185E
          #185F
          let:16 a18 = (1 + a17) in
          #1860
          #1861
          #1862
          let:16 a19 = (1 + a18) in
          #1863
          #1864
          #1865
          let:16 a20 = (1 + a19) in
          #1866
          let:8 a21 = (M[a19] & M[a19]) in
          let:8 a22 = (M[a19] | M[a19]) in
          #1867
          let:16 a23 = (1 + a6) in
          let:16 a24 = (1 + a23) in
          A := a21;
          B := a20[15:8];
          C := a20[7:0];
          D := M[a19];
          E := M[a18];
          H := M[a17];
          L := M[(B,C)];
          SPH := a24[15:8];
          SPL := a24[7:0];
          FlagS := a21[7];
          FlagZ := is_zero(a21);
          FlagA := a22[3];
          FlagP := parity(a21);
          FlagCY := false;
          jump ((M[a23],M[a6]));
        }
      }
    }

184A:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #184B
    let:16 a3 = (1 + a2) in
    let:16 a4 = (1 + a3) in
    B := M[a1];
    C := M[(SPH,SPL)];
    SPH := a4[15:8];
    SPL := a4[7:0];
    jump ((M[a3],M[a2]));

1854:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #1855
    let:16 a3 = (1 + a2) in
    let:16 a4 = (1 + a3) in
    B := M[a1];
    C := M[(SPH,SPL)];
    SPH := a4[15:8];
    SPL := a4[7:0];
    jump ((M[a3],M[a2]));

1871:

    #1872
    #1875
    let:16 a1 = addWithCarry(!false,M[20CA],~A) in
    let:8 a2 = (M[20CA] & 0F) in
    let:8 a3 = (~A & 0F) in
    let:16 a4 = addWithCarry(!false,a2,a3) in
    #1876
    if (is_zero(a1[7:0])) {
      #1898
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 18;
          let:16 a6 = (-1 + a5) in
          M[a6] := 98;
          A := M[20CA];
          B := A;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 18;
          let:16 a8 = (-1 + a7) in
          M[a8] := 98;
          A := M[20CA];
          B := A;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0010);
        }
      } else {
        #189A
        M[20CB] := 01;
        #189D
        let:16 a9 = (1 + (SPH,SPL)) in
        let:16 a10 = (1 + a9) in
        A := 01;
        B := A;
        SPH := a10[15:8];
        SPL := a10[7:0];
        FlagS := a1[7:0][7];
        FlagZ := is_zero(a1[7:0]);
        FlagA := a4[7:0][4];
        FlagP := parity(a1[7:0]);
        FlagCY := !a1[15:8][0];
        jump ((M[a9],M[(SPH,SPL)]));
      }
    } else {
      #1879
      #187C
      let:8 a11 = (04 & M[20C2]) in
      let:8 a12 = (04 | M[20C2]) in
      #187E
      #1881
      if (!is_zero(a11)) {
        #1888
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + (SPH,SPL)) in
            M[a13] := 18;
            let:16 a14 = (-1 + a13) in
            M[a14] := 88;
            A := a11;
            B := A;
            H := M[20CD];
            L := M[20CC];
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a15 = (-1 + (SPH,SPL)) in
            M[a15] := 18;
            let:16 a16 = (-1 + a15) in
            M[a16] := 88;
            A := a11;
            B := A;
            H := M[20CD];
            L := M[20CC];
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            jump (0010);
          }
        } else {
          M[20C7] := M[20CC];
          M[20C8] := M[20CD];
          #188B
          #188E
          let:16 a17 = (-1 + (SPH,SPL)) in
          M[a17] := 18;
          let:16 a18 = (-1 + a17) in
          M[a18] := 91;
          #return-to: 1891
          #1A3B
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a19 = (-1 + a18) in
              M[a19] := 1A;
              let:16 a20 = (-1 + a19) in
              M[a20] := 3B;
              A := a11;
              B := A;
              H := 20;
              L := C5;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a11[7];
              FlagZ := is_zero(a11);
              FlagA := a12[3];
              FlagP := parity(a11);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a21 = (-1 + a18) in
              M[a21] := 1A;
              let:16 a22 = (-1 + a21) in
              M[a22] := 3B;
              A := a11;
              B := A;
              H := 20;
              L := C5;
              SPH := a22[15:8];
              SPL := a22[7:0];
              FlagS := a11[7];
              FlagZ := is_zero(a11);
              FlagA := a12[3];
              FlagP := parity(a11);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #1A3C
            #1A3D
            #1A3E
            #1A3F
            #1A40
            #1A41
            #1A42
            #1A43
            #1A44
            #1A45
            #1A46
            let:16 a23 = (1 + a18) in
            let:16 a24 = (1 + a23) in
            A := M[20C7];
            B := M[20C9];
            C := M[20C8];
            D := M[20C6];
            E := M[20C5];
            H := M[20C8];
            L := M[20C7];
            SPH := a24[15:8];
            SPL := a24[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            jump ((M[a23],M[a18]));
          }
        }
      } else {
        #1884
        #1887
        let:17 a25 = add17(0030,(M[20CD],M[20CC])) in
        #1888
        M[20C7] := a25[15:0][7:0];
        M[20C8] := a25[15:0][15:8];
        #188B
        #188E
        let:16 a26 = (-1 + (SPH,SPL)) in
        M[a26] := 18;
        let:16 a27 = (-1 + a26) in
        M[a27] := 91;
        #return-to: 1891
        #1A3B
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a28 = (-1 + a27) in
            M[a28] := 1A;
            let:16 a29 = (-1 + a28) in
            M[a29] := 3B;
            A := a11;
            B := A;
            D := 00;
            E := 30;
            H := 20;
            L := C5;
            SPH := a29[15:8];
            SPL := a29[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := a25[16];
            jump (0008);
          } else {
            let:16 a30 = (-1 + a27) in
            M[a30] := 1A;
            let:16 a31 = (-1 + a30) in
            M[a31] := 3B;
            A := a11;
            B := A;
            D := 00;
            E := 30;
            H := 20;
            L := C5;
            SPH := a31[15:8];
            SPL := a31[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := a25[16];
            jump (0010);
          }
        } else {
          #1A3C
          #1A3D
          #1A3E
          #1A3F
          #1A40
          #1A41
          #1A42
          #1A43
          #1A44
          #1A45
          #1A46
          let:16 a32 = (1 + a27) in
          let:16 a33 = (1 + a32) in
          A := M[20C7];
          B := M[20C9];
          C := M[20C8];
          D := M[20C6];
          E := M[20C5];
          H := M[20C8];
          L := M[20C7];
          SPH := a33[15:8];
          SPL := a33[7:0];
          FlagS := a11[7];
          FlagZ := is_zero(a11);
          FlagA := a12[3];
          FlagP := parity(a11);
          FlagCY := a25[16];
          jump ((M[a32],M[a27]));
        }
      }
    }

1891:

    #1892
    #15D3
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 15;
        let:16 a2 = (-1 + a1) in
        M[a2] := D3;
        D := H;
        E := L;
        H := D;
        L := E;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 15;
        let:16 a4 = (-1 + a3) in
        M[a4] := D3;
        D := H;
        E := L;
        H := D;
        L := E;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := 15;
      let:16 a6 = (-1 + a5) in
      M[a6] := D6;
      #return-to: 15D6
      #1474
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a6) in
          M[a7] := 14;
          let:16 a8 = (-1 + a7) in
          M[a8] := 74;
          D := H;
          E := L;
          H := D;
          L := E;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a6) in
          M[a9] := 14;
          let:16 a10 = (-1 + a9) in
          M[a10] := 74;
          D := H;
          E := L;
          H := D;
          L := E;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1475
        let:8 a11 = (07 & E) in
        let:8 a12 = (07 | E) in
        #1477
        #1479
        #1A47
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + a6) in
            M[a13] := 1A;
            let:16 a14 = (-1 + a13) in
            M[a14] := 47;
            A := a11;
            D := H;
            E := L;
            H := D;
            L := E;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            Shifter_OFF := a11;
            jump (0008);
          } else {
            let:16 a15 = (-1 + a6) in
            M[a15] := 1A;
            let:16 a16 = (-1 + a15) in
            M[a16] := 47;
            A := a11;
            D := H;
            E := L;
            H := D;
            L := E;
            SPH := a16[15:8];
            SPL := a16[7:0];
            FlagS := a11[7];
            FlagZ := is_zero(a11);
            FlagA := a12[3];
            FlagP := parity(a11);
            FlagCY := false;
            Shifter_OFF := a11;
            jump (0010);
          }
        } else {
          let:16 a17 = (-1 + a6) in
          M[a17] := B;
          let:16 a18 = (-1 + a17) in
          M[a18] := C;
          #1A48
          #1A4A
          #1A4B
          #1A4C
          #1A4D
          #1A4E
          #1A4F
          #1A50
          let:16 a19 = addWithCarry(!true,03,~00) in
          let:8 a20 = (03 & 0F) in
          let:8 a21 = (~00 & 0F) in
          let:16 a22 = addWithCarry(!true,a20,a21) in
          #1A51
          if (!is_zero(a19[7:0])) {
            A := updateBit((E >> 01),7,D[0]);
            B := a19[7:0];
            D := H;
            E := L;
            H := updateBit((D >> 01),7,false);
            L := updateBit((E >> 01),7,D[0]);
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a19[7:0][7];
            FlagZ := is_zero(a19[7:0]);
            FlagA := a22[7:0][4];
            FlagP := parity(a19[7:0]);
            FlagCY := E[0];
            Shifter_OFF := a11;
            jump (1A4A);
          } else {
            #1A54
            #1A55
            let:8 a23 = (3F & updateBit((D >> 01),7,false)) in
            let:8 a24 = (3F | updateBit((D >> 01),7,false)) in
            #1A57
            let:8 a25 = (20 | a23) in
            #1A59
            #1A5A
            let:16 a26 = (1 + a18) in
            let:16 a27 = (1 + a26) in
            #1A5B
            let:16 a28 = (1 + a27) in
            let:16 a29 = (1 + a28) in
            A := a25;
            B := M[a26];
            C := M[a18];
            D := H;
            E := L;
            H := a25;
            L := updateBit((E >> 01),7,D[0]);
            SPH := a29[15:8];
            SPL := a29[7:0];
            FlagS := a25[7];
            FlagZ := is_zero(a25);
            FlagA := false;
            FlagP := parity(a25);
            FlagCY := false;
            Shifter_OFF := a11;
            jump ((M[a28],M[a27]));
          }
        }
      }
    }

18A9:

    #18AB
    M[2080] := 02;
    #18AE
    #18B0
    M[207E] := FF;
    #18B3
    #18B5
    M[20C1] := 04;
    #18B8
    #18BB
    let:8 a1 = (01 & M[2055]) in
    let:8 a2 = (01 | M[2055]) in
    #18BD
    if (is_zero(a1)) {
      A := a1;
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump (18B8);
    } else {
      #18C0
      #18C3
      let:8 a3 = (01 & M[2055]) in
      let:8 a4 = (01 | M[2055]) in
      #18C5
      if (!is_zero(a3)) {
        A := a3;
        FlagS := a3[7];
        FlagZ := is_zero(a3);
        FlagA := a4[3];
        FlagP := parity(a3);
        FlagCY := false;
        jump (18C0);
      } else {
        #18C8
        #18CB
        #18CD
        #18CE
        let:16 a5 = (-1 + (SPH,SPL)) in
        M[a5] := 18;
        let:16 a6 = (-1 + a5) in
        M[a6] := D1;
        #return-to: 18D1
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a7 = (-1 + a6) in
            M[a7] := 08;
            let:16 a8 = (-1 + a7) in
            M[a8] := FF;
            A := 26;
            H := 33;
            L := 11;
            SPH := a8[15:8];
            SPL := a8[7:0];
            FlagS := a3[7];
            FlagZ := is_zero(a3);
            FlagA := a4[3];
            FlagP := parity(a3);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a9 = (-1 + a6) in
            M[a9] := 08;
            let:16 a10 = (-1 + a9) in
            M[a10] := FF;
            A := 26;
            H := 33;
            L := 11;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a3[7];
            FlagZ := is_zero(a3);
            FlagA := a4[3];
            FlagP := parity(a3);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #0902
          let:16 a11 = (-1 + a6) in
          M[a11] := 33;
          let:16 a12 = (-1 + a11) in
          M[a12] := 11;
          #0903
          #0905
          #0906
          let:17 a13 = add17(0026,0026) in
          #0907
          let:17 a14 = add17(a13[15:0],a13[15:0]) in
          #0908
          let:17 a15 = add17(a14[15:0],a14[15:0]) in
          #0909
          let:17 a16 = add17(1E00,a15[15:0]) in
          #090A
          #090B
          let:16 a17 = (1 + a12) in
          let:16 a18 = (1 + a17) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a19 = (-1 + a18) in
              M[a19] := 14;
              let:16 a20 = (-1 + a19) in
              M[a20] := 39;
              A := 26;
              B := 08;
              D := a16[15:0][15:8];
              E := a16[15:0][7:0];
              H := M[a17];
              L := M[a12];
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a3[7];
              FlagZ := is_zero(a3);
              FlagA := a4[3];
              FlagP := parity(a3);
              FlagCY := a16[16];
              jump (0008);
            } else {
              let:16 a21 = (-1 + a18) in
              M[a21] := 14;
              let:16 a22 = (-1 + a21) in
              M[a22] := 39;
              A := 26;
              B := 08;
              D := a16[15:0][15:8];
              E := a16[15:0][7:0];
              H := M[a17];
              L := M[a12];
              SPH := a22[15:8];
              SPL := a22[7:0];
              FlagS := a3[7];
              FlagZ := is_zero(a3);
              FlagA := a4[3];
              FlagP := parity(a3);
              FlagCY := a16[16];
              jump (0010);
            }
          } else {
            let:16 a23 = (-1 + a18) in
            M[a23] := 08;
            let:16 a24 = (-1 + a23) in
            M[a24] := C;
            #143A
            #143B
            M[(M[a17],M[a12])] := M[a16[15:0]];
            #143C
            let:16 a25 = (1 + a16[15:0]) in
            #143D
            #1440
            let:17 a26 = add17(0020,(M[a17],M[a12])) in
            #1441
            let:16 a27 = (1 + a24) in
            let:16 a28 = (1 + a27) in
            #1442
            let:16 a29 = addWithCarry(!true,M[a27],~00) in
            let:8 a30 = (M[a27] & 0F) in
            let:8 a31 = (~00 & 0F) in
            let:16 a32 = addWithCarry(!true,a30,a31) in
            #1443
            if (!is_zero(a29[7:0])) {
              A := M[a16[15:0]];
              B := a29[7:0];
              C := M[a24];
              D := a25[15:8];
              E := a25[7:0];
              H := a26[15:0][15:8];
              L := a26[15:0][7:0];
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagS := a29[7:0][7];
              FlagZ := is_zero(a29[7:0]);
              FlagA := a32[7:0][4];
              FlagP := parity(a29[7:0]);
              FlagCY := a26[16];
              jump (1439);
            } else {
              #1446
              let:16 a33 = (1 + a28) in
              let:16 a34 = (1 + a33) in
              A := M[a16[15:0]];
              B := a29[7:0];
              C := M[a24];
              D := a25[15:8];
              E := a25[7:0];
              H := a26[15:0][15:8];
              L := a26[15:0][7:0];
              SPH := a34[15:8];
              SPL := a34[7:0];
              FlagS := a29[7:0][7];
              FlagZ := is_zero(a29[7:0]);
              FlagA := a32[7:0][4];
              FlagP := parity(a29[7:0]);
              FlagCY := a26[16];
              jump ((M[a33],M[a28]));
            }
          }
        }
      }
    }

18D1:

    #0AB6
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 0A;
        let:16 a2 = (-1 + a1) in
        M[a2] := B6;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := B6;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      #0AB8
      #0AD7
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 0A;
          let:16 a6 = (-1 + a5) in
          M[a6] := D7;
          A := 80;
          SPH := a6[15:8];
          SPL := a6[7:0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 0A;
          let:16 a8 = (-1 + a7) in
          M[a8] := D7;
          A := 80;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0010);
        }
      } else {
        M[20C0] := 80;
        #0ADA
        #0ADD
        let:8 a9 = (M[20C0] & M[20C0]) in
        let:8 a10 = (M[20C0] | M[20C0]) in
        #0ADE
        if (!is_zero(a9)) {
          A := a9;
          FlagS := a9[7];
          FlagZ := is_zero(a9);
          FlagA := a10[3];
          FlagP := parity(a9);
          FlagCY := false;
          jump (0ADA);
        } else {
          #0AE1
          let:16 a11 = (1 + (SPH,SPL)) in
          let:16 a12 = (1 + a11) in
          A := a9;
          SPH := a12[15:8];
          SPL := a12[7:0];
          FlagS := a9[7];
          FlagZ := is_zero(a9);
          FlagA := a10[3];
          FlagP := parity(a9);
          FlagCY := false;
          jump ((M[a11],M[(SPH,SPL)]));
        }
      }
    }

18DC:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 18;
    let:16 a2 = (-1 + a1) in
    M[a2] := DF;
    #return-to: 18DF
    #1956
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 56;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 56;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      let:16 a7 = (-1 + a2) in
      M[a7] := 19;
      let:16 a8 = (-1 + a7) in
      M[a8] := 59;
      #return-to: 1959
      #1A5C
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a9 = (-1 + a8) in
          M[a9] := 1A;
          let:16 a10 = (-1 + a9) in
          M[a10] := 5C;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0008);
        } else {
          let:16 a11 = (-1 + a8) in
          M[a11] := 1A;
          let:16 a12 = (-1 + a11) in
          M[a12] := 5C;
          SPH := a12[15:8];
          SPL := a12[7:0];
          jump (0010);
        }
      } else {
        #1A5F
        M[2400] := 00;
        #1A61
        #1A62
        #1A63
        let:16 a13 = addWithCarry(!false,24,~40) in
        let:8 a14 = (24 & 0F) in
        let:8 a15 = (~40 & 0F) in
        let:16 a16 = addWithCarry(!false,a14,a15) in
        #1A65
        if (!is_zero(a13[7:0])) {
          A := 24;
          H := 24;
          L := 01;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          FlagCY := !a13[15:8][0];
          jump (1A5F);
        } else {
          #1A68
          let:16 a17 = (1 + a8) in
          let:16 a18 = (1 + a17) in
          A := 24;
          H := 24;
          L := 01;
          SPH := a18[15:8];
          SPL := a18[7:0];
          FlagS := a13[7:0][7];
          FlagZ := is_zero(a13[7:0]);
          FlagA := a16[7:0][4];
          FlagP := parity(a13[7:0]);
          FlagCY := !a13[15:8][0];
          jump ((M[a17],M[a8]));
        }
      }
    }

18DF:

    #18E1
    M[20CF] := 08;
    #18E4
    #0AEA
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 0A;
        let:16 a2 = (-1 + a1) in
        M[a2] := EA;
        A := 08;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 0A;
        let:16 a4 = (-1 + a3) in
        M[a4] := EA;
        A := 08;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      let:8 a5 = (08 ^ 08) in
      #0AEB
      sound_control(Ufo,a5[0]);
      sound_control(Shot,a5[1]);
      sound_control(PlayerDie,a5[2]);
      sound_control(InvaderDie,a5[3]);
      sound_control(ExtraLife,a5[4]);
      #0AED
      sound_control(FleetMovement1,a5[0]);
      sound_control(FleetMovement2,a5[1]);
      sound_control(FleetMovement3,a5[2]);
      sound_control(FleetMovement4,a5[3]);
      sound_control(UfoHit,a5[4]);
      #0AEF
      let:16 a6 = (-1 + (SPH,SPL)) in
      M[a6] := 0A;
      let:16 a7 = (-1 + a6) in
      M[a7] := F2;
      #return-to: 0AF2
      #1982
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a8 = (-1 + a7) in
          M[a8] := 19;
          let:16 a9 = (-1 + a8) in
          M[a9] := 82;
          A := a5;
          SPH := a9[15:8];
          SPL := a9[7:0];
          FlagS := a5[7];
          FlagZ := is_zero(a5);
          FlagA := false;
          FlagP := parity(a5);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a10 = (-1 + a7) in
          M[a10] := 19;
          let:16 a11 = (-1 + a10) in
          M[a11] := 82;
          A := a5;
          SPH := a11[15:8];
          SPL := a11[7:0];
          FlagS := a5[7];
          FlagZ := is_zero(a5);
          FlagA := false;
          FlagP := parity(a5);
          FlagCY := false;
          jump (0010);
        }
      } else {
        M[20C1] := a5;
        #1985
        let:16 a12 = (1 + a7) in
        let:16 a13 = (1 + a12) in
        A := a5;
        SPH := a13[15:8];
        SPL := a13[7:0];
        FlagS := a5[7];
        FlagZ := is_zero(a5);
        FlagA := false;
        FlagP := parity(a5);
        FlagCY := false;
        jump ((M[a12],M[a7]));
      }
    }

190D:

    #1597
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 15;
        let:16 a2 = (-1 + a1) in
        M[a2] := 97;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 15;
        let:16 a4 = (-1 + a3) in
        M[a4] := 97;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      #159A
      let:8 a5 = (M[200D] & M[200D]) in
      let:8 a6 = (M[200D] | M[200D]) in
      #159B
      if (!is_zero(a5)) {
        #15B7
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a7 = (-1 + (SPH,SPL)) in
            M[a7] := 15;
            let:16 a8 = (-1 + a7) in
            M[a8] := B7;
            A := a5;
            SPH := a8[15:8];
            SPL := a8[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a9 = (-1 + (SPH,SPL)) in
            M[a9] := 15;
            let:16 a10 = (-1 + a9) in
            M[a10] := B7;
            A := a5;
            SPH := a10[15:8];
            SPL := a10[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #15BA
          let:16 a11 = (-1 + (SPH,SPL)) in
          M[a11] := 15;
          let:16 a12 = (-1 + a11) in
          M[a12] := BD;
          #return-to: 15BD
          #15C5
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a13 = (-1 + a12) in
              M[a13] := 15;
              let:16 a14 = (-1 + a13) in
              M[a14] := C5;
              A := a5;
              H := 25;
              L := 24;
              SPH := a14[15:8];
              SPL := a14[7:0];
              FlagS := a5[7];
              FlagZ := is_zero(a5);
              FlagA := a6[3];
              FlagP := parity(a5);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a15 = (-1 + a12) in
              M[a15] := 15;
              let:16 a16 = (-1 + a15) in
              M[a16] := C5;
              A := a5;
              H := 25;
              L := 24;
              SPH := a16[15:8];
              SPL := a16[7:0];
              FlagS := a5[7];
              FlagZ := is_zero(a5);
              FlagA := a6[3];
              FlagP := parity(a5);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #15C7
            #15C8
            let:8 a17 = (M[2524] & M[2524]) in
            let:8 a18 = (M[2524] | M[2524]) in
            #15C9
            if (!is_zero(a17)) {
              #166B
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a19 = (-1 + a12) in
                  M[a19] := 16;
                  let:16 a20 = (-1 + a19) in
                  M[a20] := 6B;
                  A := a17;
                  B := 17;
                  H := 25;
                  L := 24;
                  SPH := a20[15:8];
                  SPL := a20[7:0];
                  FlagS := a17[7];
                  FlagZ := is_zero(a17);
                  FlagA := a18[3];
                  FlagP := parity(a17);
                  FlagCY := false;
                  jump (0008);
                } else {
                  let:16 a21 = (-1 + a12) in
                  M[a21] := 16;
                  let:16 a22 = (-1 + a21) in
                  M[a22] := 6B;
                  A := a17;
                  B := 17;
                  H := 25;
                  L := 24;
                  SPH := a22[15:8];
                  SPL := a22[7:0];
                  FlagS := a17[7];
                  FlagZ := is_zero(a17);
                  FlagA := a18[3];
                  FlagP := parity(a17);
                  FlagCY := false;
                  jump (0010);
                }
              } else {
                #166C
                let:16 a23 = (1 + a12) in
                let:16 a24 = (1 + a23) in
                A := a17;
                B := 17;
                H := 25;
                L := 24;
                SPH := a24[15:8];
                SPL := a24[7:0];
                FlagS := a17[7];
                FlagZ := is_zero(a17);
                FlagA := a18[3];
                FlagP := parity(a17);
                FlagCY := true;
                jump ((M[a23],M[a12]));
              }
            } else {
              #15CC
              #15CD
              let:16 a25 = addWithCarry(!true,17,~00) in
              let:8 a26 = (17 & 0F) in
              let:8 a27 = (~00 & 0F) in
              let:16 a28 = addWithCarry(!true,a26,a27) in
              #15CE
              if (!is_zero(a25[7:0])) {
                A := a17;
                B := a25[7:0];
                H := 25;
                L := 25;
                SPH := a12[15:8];
                SPL := a12[7:0];
                FlagS := a25[7:0][7];
                FlagZ := is_zero(a25[7:0]);
                FlagA := a28[7:0][4];
                FlagP := parity(a25[7:0]);
                FlagCY := false;
                jump (15C7);
              } else {
                #15D1
                let:16 a29 = (1 + a12) in
                let:16 a30 = (1 + a29) in
                A := a17;
                B := a25[7:0];
                H := 25;
                L := 25;
                SPH := a30[15:8];
                SPL := a30[7:0];
                FlagS := a25[7:0][7];
                FlagZ := is_zero(a25[7:0]);
                FlagA := a28[7:0][4];
                FlagP := parity(a25[7:0]);
                FlagCY := false;
                jump ((M[a29],M[a12]));
              }
            }
          }
        }
      } else {
        #159E
        #15A1
        let:16 a31 = (-1 + (SPH,SPL)) in
        M[a31] := 15;
        let:16 a32 = (-1 + a31) in
        M[a32] := A4;
        #return-to: 15A4
        #15C5
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a33 = (-1 + a32) in
            M[a33] := 15;
            let:16 a34 = (-1 + a33) in
            M[a34] := C5;
            A := a5;
            H := 3E;
            L := A4;
            SPH := a34[15:8];
            SPL := a34[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a35 = (-1 + a32) in
            M[a35] := 15;
            let:16 a36 = (-1 + a35) in
            M[a36] := C5;
            A := a5;
            H := 3E;
            L := A4;
            SPH := a36[15:8];
            SPL := a36[7:0];
            FlagS := a5[7];
            FlagZ := is_zero(a5);
            FlagA := a6[3];
            FlagP := parity(a5);
            FlagCY := false;
            jump (0010);
          }
        } else {
          #15C7
          #15C8
          let:8 a37 = (M[3EA4] & M[3EA4]) in
          let:8 a38 = (M[3EA4] | M[3EA4]) in
          #15C9
          if (!is_zero(a37)) {
            #166B
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a39 = (-1 + a32) in
                M[a39] := 16;
                let:16 a40 = (-1 + a39) in
                M[a40] := 6B;
                A := a37;
                B := 17;
                H := 3E;
                L := A4;
                SPH := a40[15:8];
                SPL := a40[7:0];
                FlagS := a37[7];
                FlagZ := is_zero(a37);
                FlagA := a38[3];
                FlagP := parity(a37);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a41 = (-1 + a32) in
                M[a41] := 16;
                let:16 a42 = (-1 + a41) in
                M[a42] := 6B;
                A := a37;
                B := 17;
                H := 3E;
                L := A4;
                SPH := a42[15:8];
                SPL := a42[7:0];
                FlagS := a37[7];
                FlagZ := is_zero(a37);
                FlagA := a38[3];
                FlagP := parity(a37);
                FlagCY := false;
                jump (0010);
              }
            } else {
              #166C
              let:16 a43 = (1 + a32) in
              let:16 a44 = (1 + a43) in
              A := a37;
              B := 17;
              H := 3E;
              L := A4;
              SPH := a44[15:8];
              SPL := a44[7:0];
              FlagS := a37[7];
              FlagZ := is_zero(a37);
              FlagA := a38[3];
              FlagP := parity(a37);
              FlagCY := true;
              jump ((M[a43],M[a32]));
            }
          } else {
            #15CC
            #15CD
            let:16 a45 = addWithCarry(!true,17,~00) in
            let:8 a46 = (17 & 0F) in
            let:8 a47 = (~00 & 0F) in
            let:16 a48 = addWithCarry(!true,a46,a47) in
            #15CE
            if (!is_zero(a45[7:0])) {
              A := a37;
              B := a45[7:0];
              H := 3E;
              L := A5;
              SPH := a32[15:8];
              SPL := a32[7:0];
              FlagS := a45[7:0][7];
              FlagZ := is_zero(a45[7:0]);
              FlagA := a48[7:0][4];
              FlagP := parity(a45[7:0]);
              FlagCY := false;
              jump (15C7);
            } else {
              #15D1
              let:16 a49 = (1 + a32) in
              let:16 a50 = (1 + a49) in
              A := a37;
              B := a45[7:0];
              H := 3E;
              L := A5;
              SPH := a50[15:8];
              SPL := a50[7:0];
              FlagS := a45[7:0][7];
              FlagZ := is_zero(a45[7:0]);
              FlagA := a48[7:0][4];
              FlagP := parity(a45[7:0]);
              FlagCY := false;
              jump ((M[a49],M[a32]));
            }
          }
        }
      }
    }

1959:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 19;
    let:16 a2 = (-1 + a1) in
    M[a2] := 5C;
    #return-to: 195C
    #191A
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 1A;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 1A;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #191C
      #191F
      #1922
      #08F3
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 08;
          let:16 a8 = (-1 + a7) in
          M[a8] := F3;
          C := 1C;
          D := 1A;
          E := E4;
          H := 24;
          L := 1E;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 08;
          let:16 a10 = (-1 + a9) in
          M[a10] := F3;
          C := 1C;
          D := 1A;
          E := E4;
          H := 24;
          L := 1E;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #08F4
        let:16 a11 = (-1 + a2) in
        M[a11] := 1A;
        let:16 a12 = (-1 + a11) in
        M[a12] := E4;
        #08F5
        let:16 a13 = (-1 + a12) in
        M[a13] := 08;
        let:16 a14 = (-1 + a13) in
        M[a14] := F8;
        #return-to: 08F8
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 08;
            let:16 a16 = (-1 + a15) in
            M[a16] := FF;
            A := 26;
            C := 1C;
            D := 1A;
            E := E4;
            H := 24;
            L := 1E;
            SPH := a16[15:8];
            SPL := a16[7:0];
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 08;
            let:16 a18 = (-1 + a17) in
            M[a18] := FF;
            A := 26;
            C := 1C;
            D := 1A;
            E := E4;
            H := 24;
            L := 1E;
            SPH := a18[15:8];
            SPL := a18[7:0];
            jump (0010);
          }
        } else {
          #0902
          let:16 a19 = (-1 + a14) in
          M[a19] := 24;
          let:16 a20 = (-1 + a19) in
          M[a20] := 1E;
          #0903
          #0905
          #0906
          let:17 a21 = add17(0026,0026) in
          #0907
          let:17 a22 = add17(a21[15:0],a21[15:0]) in
          #0908
          let:17 a23 = add17(a22[15:0],a22[15:0]) in
          #0909
          let:17 a24 = add17(1E00,a23[15:0]) in
          #090A
          #090B
          let:16 a25 = (1 + a20) in
          let:16 a26 = (1 + a25) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a27 = (-1 + a26) in
              M[a27] := 14;
              let:16 a28 = (-1 + a27) in
              M[a28] := 39;
              A := 26;
              B := 08;
              C := 1C;
              D := a24[15:0][15:8];
              E := a24[15:0][7:0];
              H := M[a25];
              L := M[a20];
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagCY := a24[16];
              jump (0008);
            } else {
              let:16 a29 = (-1 + a26) in
              M[a29] := 14;
              let:16 a30 = (-1 + a29) in
              M[a30] := 39;
              A := 26;
              B := 08;
              C := 1C;
              D := a24[15:0][15:8];
              E := a24[15:0][7:0];
              H := M[a25];
              L := M[a20];
              SPH := a30[15:8];
              SPL := a30[7:0];
              FlagCY := a24[16];
              jump (0010);
            }
          } else {
            let:16 a31 = (-1 + a26) in
            M[a31] := 08;
            let:16 a32 = (-1 + a31) in
            M[a32] := 1C;
            #143A
            #143B
            M[(M[a25],M[a20])] := M[a24[15:0]];
            #143C
            let:16 a33 = (1 + a24[15:0]) in
            #143D
            #1440
            let:17 a34 = add17(0020,(M[a25],M[a20])) in
            #1441
            let:16 a35 = (1 + a32) in
            let:16 a36 = (1 + a35) in
            #1442
            let:16 a37 = addWithCarry(!true,M[a35],~00) in
            let:8 a38 = (M[a35] & 0F) in
            let:8 a39 = (~00 & 0F) in
            let:16 a40 = addWithCarry(!true,a38,a39) in
            #1443
            if (!is_zero(a37[7:0])) {
              A := M[a24[15:0]];
              B := a37[7:0];
              C := M[a32];
              D := a33[15:8];
              E := a33[7:0];
              H := a34[15:0][15:8];
              L := a34[15:0][7:0];
              SPH := a36[15:8];
              SPL := a36[7:0];
              FlagS := a37[7:0][7];
              FlagZ := is_zero(a37[7:0]);
              FlagA := a40[7:0][4];
              FlagP := parity(a37[7:0]);
              FlagCY := a34[16];
              jump (1439);
            } else {
              #1446
              let:16 a41 = (1 + a36) in
              let:16 a42 = (1 + a41) in
              A := M[a24[15:0]];
              B := a37[7:0];
              C := M[a32];
              D := a33[15:8];
              E := a33[7:0];
              H := a34[15:0][15:8];
              L := a34[15:0][7:0];
              SPH := a42[15:8];
              SPL := a42[7:0];
              FlagS := a37[7:0][7];
              FlagZ := is_zero(a37[7:0]);
              FlagA := a40[7:0][4];
              FlagP := parity(a37[7:0]);
              FlagCY := a34[16];
              jump ((M[a41],M[a36]));
            }
          }
        }
      }
    }

195C:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 19;
    let:16 a2 = (-1 + a1) in
    M[a2] := 5F;
    #return-to: 195F
    #1925
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 25;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 25;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1928
      #1931
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 19;
          let:16 a8 = (-1 + a7) in
          M[a8] := 31;
          H := 20;
          L := F8;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 19;
          let:16 a10 = (-1 + a9) in
          M[a10] := 31;
          H := 20;
          L := F8;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1932
        #1933
        #1934
        #1935
        #1936
        #1937
        #1938
        #1939
        #09AD
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a2) in
            M[a11] := 09;
            let:16 a12 = (-1 + a11) in
            M[a12] := AD;
            A := M[20FA];
            D := M[20F9];
            E := M[20F8];
            H := M[20FB];
            L := M[20FA];
            SPH := a12[15:8];
            SPL := a12[7:0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a2) in
            M[a13] := 09;
            let:16 a14 = (-1 + a13) in
            M[a14] := AD;
            A := M[20FA];
            D := M[20F9];
            E := M[20F8];
            H := M[20FB];
            L := M[20FA];
            SPH := a14[15:8];
            SPL := a14[7:0];
            jump (0010);
          }
        } else {
          #09AE
          let:16 a15 = (-1 + a2) in
          M[a15] := 09;
          let:16 a16 = (-1 + a15) in
          M[a16] := B1;
          #return-to: 09B1
          #09B2
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a16) in
              M[a17] := 09;
              let:16 a18 = (-1 + a17) in
              M[a18] := B2;
              A := M[20F9];
              D := M[20F9];
              E := M[20F8];
              H := M[20FB];
              L := M[20FA];
              SPH := a18[15:8];
              SPL := a18[7:0];
              jump (0008);
            } else {
              let:16 a19 = (-1 + a16) in
              M[a19] := 09;
              let:16 a20 = (-1 + a19) in
              M[a20] := B2;
              A := M[20F9];
              D := M[20F9];
              E := M[20F8];
              H := M[20FB];
              L := M[20FA];
              SPH := a20[15:8];
              SPL := a20[7:0];
              jump (0010);
            }
          } else {
            let:16 a21 = (-1 + a16) in
            M[a21] := M[20F9];
            let:16 a22 = (-1 + a21) in
            M[a22] := M[20F8];
            #09B3
            let:16 a23 = (-1 + a22) in
            M[a23] := M[20F9];
            let:16 a24 = (-1 + a23) in
            M[a24] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,FlagS),6,FlagZ),4,FlagA),2,FlagP),0,FlagCY);
            #09B4
            #09B5
            #09B6
            #09B7
            #09B8
            let:8 a25 = (0F & updateBit((updateBit((updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0]) >> 01),7,updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0]) >> 01),7,updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0])[0])[0])) in
            let:8 a26 = (0F | updateBit((updateBit((updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0]) >> 01),7,updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0]) >> 01),7,updateBit((updateBit((M[20F9] >> 01),7,M[20F9][0]) >> 01),7,updateBit((M[20F9] >> 01),7,M[20F9][0])[0])[0])[0])) in
            #09BA
            let:16 a27 = (-1 + a24) in
            M[a27] := 09;
            let:16 a28 = (-1 + a27) in
            M[a28] := BD;
            #return-to: 09BD
            #09C5
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a29 = (-1 + a28) in
                M[a29] := 09;
                let:16 a30 = (-1 + a29) in
                M[a30] := C5;
                A := a25;
                D := M[20F9];
                E := M[20F8];
                H := M[20FB];
                L := M[20FA];
                SPH := a30[15:8];
                SPL := a30[7:0];
                FlagS := a25[7];
                FlagZ := is_zero(a25);
                FlagA := a26[3];
                FlagP := parity(a25);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a31 = (-1 + a28) in
                M[a31] := 09;
                let:16 a32 = (-1 + a31) in
                M[a32] := C5;
                A := a25;
                D := M[20F9];
                E := M[20F8];
                H := M[20FB];
                L := M[20FA];
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagS := a25[7];
                FlagZ := is_zero(a25);
                FlagA := a26[3];
                FlagP := parity(a25);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a33 = addWithCarry(false,1A,a25) in
              let:8 a34 = (1A & 0F) in
              let:8 a35 = (a25 & 0F) in
              let:16 a36 = addWithCarry(false,a34,a35) in
              #09C7
              #08FF
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a37 = (-1 + a28) in
                  M[a37] := 08;
                  let:16 a38 = (-1 + a37) in
                  M[a38] := FF;
                  A := a33[7:0];
                  D := M[20F9];
                  E := M[20F8];
                  H := M[20FB];
                  L := M[20FA];
                  SPH := a38[15:8];
                  SPL := a38[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a33[15:8][0];
                  jump (0008);
                } else {
                  let:16 a39 = (-1 + a28) in
                  M[a39] := 08;
                  let:16 a40 = (-1 + a39) in
                  M[a40] := FF;
                  A := a33[7:0];
                  D := M[20F9];
                  E := M[20F8];
                  H := M[20FB];
                  L := M[20FA];
                  SPH := a40[15:8];
                  SPL := a40[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a33[15:8][0];
                  jump (0010);
                }
              } else {
                #0902
                let:16 a41 = (-1 + a28) in
                M[a41] := M[20FB];
                let:16 a42 = (-1 + a41) in
                M[a42] := M[20FA];
                #0903
                #0905
                #0906
                let:17 a43 = add17((00,a33[7:0]),(00,a33[7:0])) in
                #0907
                let:17 a44 = add17(a43[15:0],a43[15:0]) in
                #0908
                let:17 a45 = add17(a44[15:0],a44[15:0]) in
                #0909
                let:17 a46 = add17(1E00,a45[15:0]) in
                #090A
                #090B
                let:16 a47 = (1 + a42) in
                let:16 a48 = (1 + a47) in
                #090C
                #090E
                #0910
                #1439
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a49 = (-1 + a48) in
                    M[a49] := 14;
                    let:16 a50 = (-1 + a49) in
                    M[a50] := 39;
                    A := a33[7:0];
                    B := 08;
                    D := a46[15:0][15:8];
                    E := a46[15:0][7:0];
                    H := M[a47];
                    L := M[a42];
                    SPH := a50[15:8];
                    SPL := a50[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := a46[16];
                    jump (0008);
                  } else {
                    let:16 a51 = (-1 + a48) in
                    M[a51] := 14;
                    let:16 a52 = (-1 + a51) in
                    M[a52] := 39;
                    A := a33[7:0];
                    B := 08;
                    D := a46[15:0][15:8];
                    E := a46[15:0][7:0];
                    H := M[a47];
                    L := M[a42];
                    SPH := a52[15:8];
                    SPL := a52[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := a46[16];
                    jump (0010);
                  }
                } else {
                  let:16 a53 = (-1 + a48) in
                  M[a53] := 08;
                  let:16 a54 = (-1 + a53) in
                  M[a54] := C;
                  #143A
                  #143B
                  M[(M[a47],M[a42])] := M[a46[15:0]];
                  #143C
                  let:16 a55 = (1 + a46[15:0]) in
                  #143D
                  #1440
                  let:17 a56 = add17(0020,(M[a47],M[a42])) in
                  #1441
                  let:16 a57 = (1 + a54) in
                  let:16 a58 = (1 + a57) in
                  #1442
                  let:16 a59 = addWithCarry(!true,M[a57],~00) in
                  let:8 a60 = (M[a57] & 0F) in
                  let:8 a61 = (~00 & 0F) in
                  let:16 a62 = addWithCarry(!true,a60,a61) in
                  #1443
                  if (!is_zero(a59[7:0])) {
                    A := M[a46[15:0]];
                    B := a59[7:0];
                    C := M[a54];
                    D := a55[15:8];
                    E := a55[7:0];
                    H := a56[15:0][15:8];
                    L := a56[15:0][7:0];
                    SPH := a58[15:8];
                    SPL := a58[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := a56[16];
                    jump (1439);
                  } else {
                    #1446
                    let:16 a63 = (1 + a58) in
                    let:16 a64 = (1 + a63) in
                    A := M[a46[15:0]];
                    B := a59[7:0];
                    C := M[a54];
                    D := a55[15:8];
                    E := a55[7:0];
                    H := a56[15:0][15:8];
                    L := a56[15:0][7:0];
                    SPH := a64[15:8];
                    SPL := a64[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := a56[16];
                    jump ((M[a63],M[a58]));
                  }
                }
              }
            }
          }
        }
      }
    }

195F:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 19;
    let:16 a2 = (-1 + a1) in
    M[a2] := 62;
    #return-to: 1962
    #192B
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 2B;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 2B;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #192E
      #1931
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 19;
          let:16 a8 = (-1 + a7) in
          M[a8] := 31;
          H := 20;
          L := FC;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 19;
          let:16 a10 = (-1 + a9) in
          M[a10] := 31;
          H := 20;
          L := FC;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1932
        #1933
        #1934
        #1935
        #1936
        #1937
        #1938
        #1939
        #09AD
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a2) in
            M[a11] := 09;
            let:16 a12 = (-1 + a11) in
            M[a12] := AD;
            A := M[20FE];
            D := M[20FD];
            E := M[20FC];
            H := M[20FF];
            L := M[20FE];
            SPH := a12[15:8];
            SPL := a12[7:0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a2) in
            M[a13] := 09;
            let:16 a14 = (-1 + a13) in
            M[a14] := AD;
            A := M[20FE];
            D := M[20FD];
            E := M[20FC];
            H := M[20FF];
            L := M[20FE];
            SPH := a14[15:8];
            SPL := a14[7:0];
            jump (0010);
          }
        } else {
          #09AE
          let:16 a15 = (-1 + a2) in
          M[a15] := 09;
          let:16 a16 = (-1 + a15) in
          M[a16] := B1;
          #return-to: 09B1
          #09B2
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a16) in
              M[a17] := 09;
              let:16 a18 = (-1 + a17) in
              M[a18] := B2;
              A := M[20FD];
              D := M[20FD];
              E := M[20FC];
              H := M[20FF];
              L := M[20FE];
              SPH := a18[15:8];
              SPL := a18[7:0];
              jump (0008);
            } else {
              let:16 a19 = (-1 + a16) in
              M[a19] := 09;
              let:16 a20 = (-1 + a19) in
              M[a20] := B2;
              A := M[20FD];
              D := M[20FD];
              E := M[20FC];
              H := M[20FF];
              L := M[20FE];
              SPH := a20[15:8];
              SPL := a20[7:0];
              jump (0010);
            }
          } else {
            let:16 a21 = (-1 + a16) in
            M[a21] := M[20FD];
            let:16 a22 = (-1 + a21) in
            M[a22] := M[20FC];
            #09B3
            let:16 a23 = (-1 + a22) in
            M[a23] := M[20FD];
            let:16 a24 = (-1 + a23) in
            M[a24] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,FlagS),6,FlagZ),4,FlagA),2,FlagP),0,FlagCY);
            #09B4
            #09B5
            #09B6
            #09B7
            #09B8
            let:8 a25 = (0F & updateBit((updateBit((updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0]) >> 01),7,updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0]) >> 01),7,updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0])[0])[0])) in
            let:8 a26 = (0F | updateBit((updateBit((updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0]) >> 01),7,updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0]) >> 01),7,updateBit((updateBit((M[20FD] >> 01),7,M[20FD][0]) >> 01),7,updateBit((M[20FD] >> 01),7,M[20FD][0])[0])[0])[0])) in
            #09BA
            let:16 a27 = (-1 + a24) in
            M[a27] := 09;
            let:16 a28 = (-1 + a27) in
            M[a28] := BD;
            #return-to: 09BD
            #09C5
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a29 = (-1 + a28) in
                M[a29] := 09;
                let:16 a30 = (-1 + a29) in
                M[a30] := C5;
                A := a25;
                D := M[20FD];
                E := M[20FC];
                H := M[20FF];
                L := M[20FE];
                SPH := a30[15:8];
                SPL := a30[7:0];
                FlagS := a25[7];
                FlagZ := is_zero(a25);
                FlagA := a26[3];
                FlagP := parity(a25);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a31 = (-1 + a28) in
                M[a31] := 09;
                let:16 a32 = (-1 + a31) in
                M[a32] := C5;
                A := a25;
                D := M[20FD];
                E := M[20FC];
                H := M[20FF];
                L := M[20FE];
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagS := a25[7];
                FlagZ := is_zero(a25);
                FlagA := a26[3];
                FlagP := parity(a25);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a33 = addWithCarry(false,1A,a25) in
              let:8 a34 = (1A & 0F) in
              let:8 a35 = (a25 & 0F) in
              let:16 a36 = addWithCarry(false,a34,a35) in
              #09C7
              #08FF
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a37 = (-1 + a28) in
                  M[a37] := 08;
                  let:16 a38 = (-1 + a37) in
                  M[a38] := FF;
                  A := a33[7:0];
                  D := M[20FD];
                  E := M[20FC];
                  H := M[20FF];
                  L := M[20FE];
                  SPH := a38[15:8];
                  SPL := a38[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a33[15:8][0];
                  jump (0008);
                } else {
                  let:16 a39 = (-1 + a28) in
                  M[a39] := 08;
                  let:16 a40 = (-1 + a39) in
                  M[a40] := FF;
                  A := a33[7:0];
                  D := M[20FD];
                  E := M[20FC];
                  H := M[20FF];
                  L := M[20FE];
                  SPH := a40[15:8];
                  SPL := a40[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a33[15:8][0];
                  jump (0010);
                }
              } else {
                #0902
                let:16 a41 = (-1 + a28) in
                M[a41] := M[20FF];
                let:16 a42 = (-1 + a41) in
                M[a42] := M[20FE];
                #0903
                #0905
                #0906
                let:17 a43 = add17((00,a33[7:0]),(00,a33[7:0])) in
                #0907
                let:17 a44 = add17(a43[15:0],a43[15:0]) in
                #0908
                let:17 a45 = add17(a44[15:0],a44[15:0]) in
                #0909
                let:17 a46 = add17(1E00,a45[15:0]) in
                #090A
                #090B
                let:16 a47 = (1 + a42) in
                let:16 a48 = (1 + a47) in
                #090C
                #090E
                #0910
                #1439
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a49 = (-1 + a48) in
                    M[a49] := 14;
                    let:16 a50 = (-1 + a49) in
                    M[a50] := 39;
                    A := a33[7:0];
                    B := 08;
                    D := a46[15:0][15:8];
                    E := a46[15:0][7:0];
                    H := M[a47];
                    L := M[a42];
                    SPH := a50[15:8];
                    SPL := a50[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := a46[16];
                    jump (0008);
                  } else {
                    let:16 a51 = (-1 + a48) in
                    M[a51] := 14;
                    let:16 a52 = (-1 + a51) in
                    M[a52] := 39;
                    A := a33[7:0];
                    B := 08;
                    D := a46[15:0][15:8];
                    E := a46[15:0][7:0];
                    H := M[a47];
                    L := M[a42];
                    SPH := a52[15:8];
                    SPL := a52[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := a46[16];
                    jump (0010);
                  }
                } else {
                  let:16 a53 = (-1 + a48) in
                  M[a53] := 08;
                  let:16 a54 = (-1 + a53) in
                  M[a54] := C;
                  #143A
                  #143B
                  M[(M[a47],M[a42])] := M[a46[15:0]];
                  #143C
                  let:16 a55 = (1 + a46[15:0]) in
                  #143D
                  #1440
                  let:17 a56 = add17(0020,(M[a47],M[a42])) in
                  #1441
                  let:16 a57 = (1 + a54) in
                  let:16 a58 = (1 + a57) in
                  #1442
                  let:16 a59 = addWithCarry(!true,M[a57],~00) in
                  let:8 a60 = (M[a57] & 0F) in
                  let:8 a61 = (~00 & 0F) in
                  let:16 a62 = addWithCarry(!true,a60,a61) in
                  #1443
                  if (!is_zero(a59[7:0])) {
                    A := M[a46[15:0]];
                    B := a59[7:0];
                    C := M[a54];
                    D := a55[15:8];
                    E := a55[7:0];
                    H := a56[15:0][15:8];
                    L := a56[15:0][7:0];
                    SPH := a58[15:8];
                    SPL := a58[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := a56[16];
                    jump (1439);
                  } else {
                    #1446
                    let:16 a63 = (1 + a58) in
                    let:16 a64 = (1 + a63) in
                    A := M[a46[15:0]];
                    B := a59[7:0];
                    C := M[a54];
                    D := a55[15:8];
                    E := a55[7:0];
                    H := a56[15:0][15:8];
                    L := a56[15:0][7:0];
                    SPH := a64[15:8];
                    SPL := a64[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := a56[16];
                    jump ((M[a63],M[a58]));
                  }
                }
              }
            }
          }
        }
      }
    }

1962:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 19;
    let:16 a2 = (-1 + a1) in
    M[a2] := 65;
    #return-to: 1965
    #1950
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 50;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 50;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #1953
      #1931
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 19;
          let:16 a8 = (-1 + a7) in
          M[a8] := 31;
          H := 20;
          L := F4;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 19;
          let:16 a10 = (-1 + a9) in
          M[a10] := 31;
          H := 20;
          L := F4;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #1932
        #1933
        #1934
        #1935
        #1936
        #1937
        #1938
        #1939
        #09AD
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a2) in
            M[a11] := 09;
            let:16 a12 = (-1 + a11) in
            M[a12] := AD;
            A := M[20F6];
            D := M[20F5];
            E := M[20F4];
            H := M[20F7];
            L := M[20F6];
            SPH := a12[15:8];
            SPL := a12[7:0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a2) in
            M[a13] := 09;
            let:16 a14 = (-1 + a13) in
            M[a14] := AD;
            A := M[20F6];
            D := M[20F5];
            E := M[20F4];
            H := M[20F7];
            L := M[20F6];
            SPH := a14[15:8];
            SPL := a14[7:0];
            jump (0010);
          }
        } else {
          #09AE
          let:16 a15 = (-1 + a2) in
          M[a15] := 09;
          let:16 a16 = (-1 + a15) in
          M[a16] := B1;
          #return-to: 09B1
          #09B2
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a16) in
              M[a17] := 09;
              let:16 a18 = (-1 + a17) in
              M[a18] := B2;
              A := M[20F5];
              D := M[20F5];
              E := M[20F4];
              H := M[20F7];
              L := M[20F6];
              SPH := a18[15:8];
              SPL := a18[7:0];
              jump (0008);
            } else {
              let:16 a19 = (-1 + a16) in
              M[a19] := 09;
              let:16 a20 = (-1 + a19) in
              M[a20] := B2;
              A := M[20F5];
              D := M[20F5];
              E := M[20F4];
              H := M[20F7];
              L := M[20F6];
              SPH := a20[15:8];
              SPL := a20[7:0];
              jump (0010);
            }
          } else {
            let:16 a21 = (-1 + a16) in
            M[a21] := M[20F5];
            let:16 a22 = (-1 + a21) in
            M[a22] := M[20F4];
            #09B3
            let:16 a23 = (-1 + a22) in
            M[a23] := M[20F5];
            let:16 a24 = (-1 + a23) in
            M[a24] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,FlagS),6,FlagZ),4,FlagA),2,FlagP),0,FlagCY);
            #09B4
            #09B5
            #09B6
            #09B7
            #09B8
            let:8 a25 = (0F & updateBit((updateBit((updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0]) >> 01),7,updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0]) >> 01),7,updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0])[0])[0])) in
            let:8 a26 = (0F | updateBit((updateBit((updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0]) >> 01),7,updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0]) >> 01),7,updateBit((updateBit((M[20F5] >> 01),7,M[20F5][0]) >> 01),7,updateBit((M[20F5] >> 01),7,M[20F5][0])[0])[0])[0])) in
            #09BA
            let:16 a27 = (-1 + a24) in
            M[a27] := 09;
            let:16 a28 = (-1 + a27) in
            M[a28] := BD;
            #return-to: 09BD
            #09C5
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a29 = (-1 + a28) in
                M[a29] := 09;
                let:16 a30 = (-1 + a29) in
                M[a30] := C5;
                A := a25;
                D := M[20F5];
                E := M[20F4];
                H := M[20F7];
                L := M[20F6];
                SPH := a30[15:8];
                SPL := a30[7:0];
                FlagS := a25[7];
                FlagZ := is_zero(a25);
                FlagA := a26[3];
                FlagP := parity(a25);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a31 = (-1 + a28) in
                M[a31] := 09;
                let:16 a32 = (-1 + a31) in
                M[a32] := C5;
                A := a25;
                D := M[20F5];
                E := M[20F4];
                H := M[20F7];
                L := M[20F6];
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagS := a25[7];
                FlagZ := is_zero(a25);
                FlagA := a26[3];
                FlagP := parity(a25);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:16 a33 = addWithCarry(false,1A,a25) in
              let:8 a34 = (1A & 0F) in
              let:8 a35 = (a25 & 0F) in
              let:16 a36 = addWithCarry(false,a34,a35) in
              #09C7
              #08FF
              if ((g_time_to_wakeup && g_interrupts_enabled)) {
                disable_interrupts()
                if (g_half_frame) {
                  let:16 a37 = (-1 + a28) in
                  M[a37] := 08;
                  let:16 a38 = (-1 + a37) in
                  M[a38] := FF;
                  A := a33[7:0];
                  D := M[20F5];
                  E := M[20F4];
                  H := M[20F7];
                  L := M[20F6];
                  SPH := a38[15:8];
                  SPL := a38[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a33[15:8][0];
                  jump (0008);
                } else {
                  let:16 a39 = (-1 + a28) in
                  M[a39] := 08;
                  let:16 a40 = (-1 + a39) in
                  M[a40] := FF;
                  A := a33[7:0];
                  D := M[20F5];
                  E := M[20F4];
                  H := M[20F7];
                  L := M[20F6];
                  SPH := a40[15:8];
                  SPL := a40[7:0];
                  FlagS := a33[7:0][7];
                  FlagZ := is_zero(a33[7:0]);
                  FlagA := a36[7:0][4];
                  FlagP := parity(a33[7:0]);
                  FlagCY := a33[15:8][0];
                  jump (0010);
                }
              } else {
                #0902
                let:16 a41 = (-1 + a28) in
                M[a41] := M[20F7];
                let:16 a42 = (-1 + a41) in
                M[a42] := M[20F6];
                #0903
                #0905
                #0906
                let:17 a43 = add17((00,a33[7:0]),(00,a33[7:0])) in
                #0907
                let:17 a44 = add17(a43[15:0],a43[15:0]) in
                #0908
                let:17 a45 = add17(a44[15:0],a44[15:0]) in
                #0909
                let:17 a46 = add17(1E00,a45[15:0]) in
                #090A
                #090B
                let:16 a47 = (1 + a42) in
                let:16 a48 = (1 + a47) in
                #090C
                #090E
                #0910
                #1439
                if ((g_time_to_wakeup && g_interrupts_enabled)) {
                  disable_interrupts()
                  if (g_half_frame) {
                    let:16 a49 = (-1 + a48) in
                    M[a49] := 14;
                    let:16 a50 = (-1 + a49) in
                    M[a50] := 39;
                    A := a33[7:0];
                    B := 08;
                    D := a46[15:0][15:8];
                    E := a46[15:0][7:0];
                    H := M[a47];
                    L := M[a42];
                    SPH := a50[15:8];
                    SPL := a50[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := a46[16];
                    jump (0008);
                  } else {
                    let:16 a51 = (-1 + a48) in
                    M[a51] := 14;
                    let:16 a52 = (-1 + a51) in
                    M[a52] := 39;
                    A := a33[7:0];
                    B := 08;
                    D := a46[15:0][15:8];
                    E := a46[15:0][7:0];
                    H := M[a47];
                    L := M[a42];
                    SPH := a52[15:8];
                    SPL := a52[7:0];
                    FlagS := a33[7:0][7];
                    FlagZ := is_zero(a33[7:0]);
                    FlagA := a36[7:0][4];
                    FlagP := parity(a33[7:0]);
                    FlagCY := a46[16];
                    jump (0010);
                  }
                } else {
                  let:16 a53 = (-1 + a48) in
                  M[a53] := 08;
                  let:16 a54 = (-1 + a53) in
                  M[a54] := C;
                  #143A
                  #143B
                  M[(M[a47],M[a42])] := M[a46[15:0]];
                  #143C
                  let:16 a55 = (1 + a46[15:0]) in
                  #143D
                  #1440
                  let:17 a56 = add17(0020,(M[a47],M[a42])) in
                  #1441
                  let:16 a57 = (1 + a54) in
                  let:16 a58 = (1 + a57) in
                  #1442
                  let:16 a59 = addWithCarry(!true,M[a57],~00) in
                  let:8 a60 = (M[a57] & 0F) in
                  let:8 a61 = (~00 & 0F) in
                  let:16 a62 = addWithCarry(!true,a60,a61) in
                  #1443
                  if (!is_zero(a59[7:0])) {
                    A := M[a46[15:0]];
                    B := a59[7:0];
                    C := M[a54];
                    D := a55[15:8];
                    E := a55[7:0];
                    H := a56[15:0][15:8];
                    L := a56[15:0][7:0];
                    SPH := a58[15:8];
                    SPL := a58[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := a56[16];
                    jump (1439);
                  } else {
                    #1446
                    let:16 a63 = (1 + a58) in
                    let:16 a64 = (1 + a63) in
                    A := M[a46[15:0]];
                    B := a59[7:0];
                    C := M[a54];
                    D := a55[15:8];
                    E := a55[7:0];
                    H := a56[15:0][15:8];
                    L := a56[15:0][7:0];
                    SPH := a64[15:8];
                    SPL := a64[7:0];
                    FlagS := a59[7:0][7];
                    FlagZ := is_zero(a59[7:0]);
                    FlagA := a62[7:0][4];
                    FlagP := parity(a59[7:0]);
                    FlagCY := a56[16];
                    jump ((M[a63],M[a58]));
                  }
                }
              }
            }
          }
        }
      }
    }

1965:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 19;
    let:16 a2 = (-1 + a1) in
    M[a2] := 68;
    #return-to: 1968
    #193C
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 3C;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 3C;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #193E
      #1941
      #1944
      #08F3
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 08;
          let:16 a8 = (-1 + a7) in
          M[a8] := F3;
          C := 07;
          D := 1F;
          E := A9;
          H := 35;
          L := 01;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 08;
          let:16 a10 = (-1 + a9) in
          M[a10] := F3;
          C := 07;
          D := 1F;
          E := A9;
          H := 35;
          L := 01;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        #08F4
        let:16 a11 = (-1 + a2) in
        M[a11] := 1F;
        let:16 a12 = (-1 + a11) in
        M[a12] := A9;
        #08F5
        let:16 a13 = (-1 + a12) in
        M[a13] := 08;
        let:16 a14 = (-1 + a13) in
        M[a14] := F8;
        #return-to: 08F8
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a15 = (-1 + a14) in
            M[a15] := 08;
            let:16 a16 = (-1 + a15) in
            M[a16] := FF;
            A := 02;
            C := 07;
            D := 1F;
            E := A9;
            H := 35;
            L := 01;
            SPH := a16[15:8];
            SPL := a16[7:0];
            jump (0008);
          } else {
            let:16 a17 = (-1 + a14) in
            M[a17] := 08;
            let:16 a18 = (-1 + a17) in
            M[a18] := FF;
            A := 02;
            C := 07;
            D := 1F;
            E := A9;
            H := 35;
            L := 01;
            SPH := a18[15:8];
            SPL := a18[7:0];
            jump (0010);
          }
        } else {
          #0902
          let:16 a19 = (-1 + a14) in
          M[a19] := 35;
          let:16 a20 = (-1 + a19) in
          M[a20] := 01;
          #0903
          #0905
          #0906
          let:17 a21 = add17(0002,0002) in
          #0907
          let:17 a22 = add17(a21[15:0],a21[15:0]) in
          #0908
          let:17 a23 = add17(a22[15:0],a22[15:0]) in
          #0909
          let:17 a24 = add17(1E00,a23[15:0]) in
          #090A
          #090B
          let:16 a25 = (1 + a20) in
          let:16 a26 = (1 + a25) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a27 = (-1 + a26) in
              M[a27] := 14;
              let:16 a28 = (-1 + a27) in
              M[a28] := 39;
              A := 02;
              B := 08;
              C := 07;
              D := a24[15:0][15:8];
              E := a24[15:0][7:0];
              H := M[a25];
              L := M[a20];
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagCY := a24[16];
              jump (0008);
            } else {
              let:16 a29 = (-1 + a26) in
              M[a29] := 14;
              let:16 a30 = (-1 + a29) in
              M[a30] := 39;
              A := 02;
              B := 08;
              C := 07;
              D := a24[15:0][15:8];
              E := a24[15:0][7:0];
              H := M[a25];
              L := M[a20];
              SPH := a30[15:8];
              SPL := a30[7:0];
              FlagCY := a24[16];
              jump (0010);
            }
          } else {
            let:16 a31 = (-1 + a26) in
            M[a31] := 08;
            let:16 a32 = (-1 + a31) in
            M[a32] := 07;
            #143A
            #143B
            M[(M[a25],M[a20])] := M[a24[15:0]];
            #143C
            let:16 a33 = (1 + a24[15:0]) in
            #143D
            #1440
            let:17 a34 = add17(0020,(M[a25],M[a20])) in
            #1441
            let:16 a35 = (1 + a32) in
            let:16 a36 = (1 + a35) in
            #1442
            let:16 a37 = addWithCarry(!true,M[a35],~00) in
            let:8 a38 = (M[a35] & 0F) in
            let:8 a39 = (~00 & 0F) in
            let:16 a40 = addWithCarry(!true,a38,a39) in
            #1443
            if (!is_zero(a37[7:0])) {
              A := M[a24[15:0]];
              B := a37[7:0];
              C := M[a32];
              D := a33[15:8];
              E := a33[7:0];
              H := a34[15:0][15:8];
              L := a34[15:0][7:0];
              SPH := a36[15:8];
              SPL := a36[7:0];
              FlagS := a37[7:0][7];
              FlagZ := is_zero(a37[7:0]);
              FlagA := a40[7:0][4];
              FlagP := parity(a37[7:0]);
              FlagCY := a34[16];
              jump (1439);
            } else {
              #1446
              let:16 a41 = (1 + a36) in
              let:16 a42 = (1 + a41) in
              A := M[a24[15:0]];
              B := a37[7:0];
              C := M[a32];
              D := a33[15:8];
              E := a33[7:0];
              H := a34[15:0][15:8];
              L := a34[15:0][7:0];
              SPH := a42[15:8];
              SPL := a42[7:0];
              FlagS := a37[7:0][7];
              FlagZ := is_zero(a37[7:0]);
              FlagA := a40[7:0][4];
              FlagP := parity(a37[7:0]);
              FlagCY := a34[16];
              jump ((M[a41],M[a36]));
            }
          }
        }
      }
    }

1968:

    #1947
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 19;
        let:16 a2 = (-1 + a1) in
        M[a2] := 47;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 47;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      #194A
      #194D
      #09B2
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 09;
          let:16 a6 = (-1 + a5) in
          M[a6] := B2;
          A := M[20EB];
          H := 3C;
          L := 01;
          SPH := a6[15:8];
          SPL := a6[7:0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 09;
          let:16 a8 = (-1 + a7) in
          M[a8] := B2;
          A := M[20EB];
          H := 3C;
          L := 01;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0010);
        }
      } else {
        let:16 a9 = (-1 + (SPH,SPL)) in
        M[a9] := D;
        let:16 a10 = (-1 + a9) in
        M[a10] := E;
        #09B3
        let:16 a11 = (-1 + a10) in
        M[a11] := M[20EB];
        let:16 a12 = (-1 + a11) in
        M[a12] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,FlagS),6,FlagZ),4,FlagA),2,FlagP),0,FlagCY);
        #09B4
        #09B5
        #09B6
        #09B7
        #09B8
        let:8 a13 = (0F & updateBit((updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0])[0])) in
        let:8 a14 = (0F | updateBit((updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0])[0])) in
        #09BA
        let:16 a15 = (-1 + a12) in
        M[a15] := 09;
        let:16 a16 = (-1 + a15) in
        M[a16] := BD;
        #return-to: 09BD
        #09C5
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a17 = (-1 + a16) in
            M[a17] := 09;
            let:16 a18 = (-1 + a17) in
            M[a18] := C5;
            A := a13;
            H := 3C;
            L := 01;
            SPH := a18[15:8];
            SPL := a18[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := a14[3];
            FlagP := parity(a13);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a19 = (-1 + a16) in
            M[a19] := 09;
            let:16 a20 = (-1 + a19) in
            M[a20] := C5;
            A := a13;
            H := 3C;
            L := 01;
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a13[7];
            FlagZ := is_zero(a13);
            FlagA := a14[3];
            FlagP := parity(a13);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a21 = addWithCarry(false,1A,a13) in
          let:8 a22 = (1A & 0F) in
          let:8 a23 = (a13 & 0F) in
          let:16 a24 = addWithCarry(false,a22,a23) in
          #09C7
          #08FF
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a25 = (-1 + a16) in
              M[a25] := 08;
              let:16 a26 = (-1 + a25) in
              M[a26] := FF;
              A := a21[7:0];
              H := 3C;
              L := 01;
              SPH := a26[15:8];
              SPL := a26[7:0];
              FlagS := a21[7:0][7];
              FlagZ := is_zero(a21[7:0]);
              FlagA := a24[7:0][4];
              FlagP := parity(a21[7:0]);
              FlagCY := a21[15:8][0];
              jump (0008);
            } else {
              let:16 a27 = (-1 + a16) in
              M[a27] := 08;
              let:16 a28 = (-1 + a27) in
              M[a28] := FF;
              A := a21[7:0];
              H := 3C;
              L := 01;
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagS := a21[7:0][7];
              FlagZ := is_zero(a21[7:0]);
              FlagA := a24[7:0][4];
              FlagP := parity(a21[7:0]);
              FlagCY := a21[15:8][0];
              jump (0010);
            }
          } else {
            #0902
            let:16 a29 = (-1 + a16) in
            M[a29] := 3C;
            let:16 a30 = (-1 + a29) in
            M[a30] := 01;
            #0903
            #0905
            #0906
            let:17 a31 = add17((00,a21[7:0]),(00,a21[7:0])) in
            #0907
            let:17 a32 = add17(a31[15:0],a31[15:0]) in
            #0908
            let:17 a33 = add17(a32[15:0],a32[15:0]) in
            #0909
            let:17 a34 = add17(1E00,a33[15:0]) in
            #090A
            #090B
            let:16 a35 = (1 + a30) in
            let:16 a36 = (1 + a35) in
            #090C
            #090E
            #0910
            #1439
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a37 = (-1 + a36) in
                M[a37] := 14;
                let:16 a38 = (-1 + a37) in
                M[a38] := 39;
                A := a21[7:0];
                B := 08;
                D := a34[15:0][15:8];
                E := a34[15:0][7:0];
                H := M[a35];
                L := M[a30];
                SPH := a38[15:8];
                SPL := a38[7:0];
                FlagS := a21[7:0][7];
                FlagZ := is_zero(a21[7:0]);
                FlagA := a24[7:0][4];
                FlagP := parity(a21[7:0]);
                FlagCY := a34[16];
                jump (0008);
              } else {
                let:16 a39 = (-1 + a36) in
                M[a39] := 14;
                let:16 a40 = (-1 + a39) in
                M[a40] := 39;
                A := a21[7:0];
                B := 08;
                D := a34[15:0][15:8];
                E := a34[15:0][7:0];
                H := M[a35];
                L := M[a30];
                SPH := a40[15:8];
                SPL := a40[7:0];
                FlagS := a21[7:0][7];
                FlagZ := is_zero(a21[7:0]);
                FlagA := a24[7:0][4];
                FlagP := parity(a21[7:0]);
                FlagCY := a34[16];
                jump (0010);
              }
            } else {
              let:16 a41 = (-1 + a36) in
              M[a41] := 08;
              let:16 a42 = (-1 + a41) in
              M[a42] := C;
              #143A
              #143B
              M[(M[a35],M[a30])] := M[a34[15:0]];
              #143C
              let:16 a43 = (1 + a34[15:0]) in
              #143D
              #1440
              let:17 a44 = add17(0020,(M[a35],M[a30])) in
              #1441
              let:16 a45 = (1 + a42) in
              let:16 a46 = (1 + a45) in
              #1442
              let:16 a47 = addWithCarry(!true,M[a45],~00) in
              let:8 a48 = (M[a45] & 0F) in
              let:8 a49 = (~00 & 0F) in
              let:16 a50 = addWithCarry(!true,a48,a49) in
              #1443
              if (!is_zero(a47[7:0])) {
                A := M[a34[15:0]];
                B := a47[7:0];
                C := M[a42];
                D := a43[15:8];
                E := a43[7:0];
                H := a44[15:0][15:8];
                L := a44[15:0][7:0];
                SPH := a46[15:8];
                SPL := a46[7:0];
                FlagS := a47[7:0][7];
                FlagZ := is_zero(a47[7:0]);
                FlagA := a50[7:0][4];
                FlagP := parity(a47[7:0]);
                FlagCY := a44[16];
                jump (1439);
              } else {
                #1446
                let:16 a51 = (1 + a46) in
                let:16 a52 = (1 + a51) in
                A := M[a34[15:0]];
                B := a47[7:0];
                C := M[a42];
                D := a43[15:8];
                E := a43[7:0];
                H := a44[15:0][15:8];
                L := a44[15:0][7:0];
                SPH := a52[15:8];
                SPL := a52[7:0];
                FlagS := a47[7:0][7];
                FlagZ := is_zero(a47[7:0]);
                FlagA := a50[7:0][4];
                FlagP := parity(a47[7:0]);
                FlagCY := a44[16];
                jump ((M[a51],M[a46]));
              }
            }
          }
        }
      }
    }

196E:

    jump (1671);

197C:

    let:16 a1 = (-1 + (SPH,SPL)) in
    M[a1] := 19;
    let:16 a2 = (-1 + a1) in
    M[a2] := 7F;
    #return-to: 197F
    #1947
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a3 = (-1 + a2) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 47;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0008);
      } else {
        let:16 a5 = (-1 + a2) in
        M[a5] := 19;
        let:16 a6 = (-1 + a5) in
        M[a6] := 47;
        SPH := a6[15:8];
        SPL := a6[7:0];
        jump (0010);
      }
    } else {
      #194A
      #194D
      #09B2
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a7 = (-1 + a2) in
          M[a7] := 09;
          let:16 a8 = (-1 + a7) in
          M[a8] := B2;
          A := M[20EB];
          H := 3C;
          L := 01;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0008);
        } else {
          let:16 a9 = (-1 + a2) in
          M[a9] := 09;
          let:16 a10 = (-1 + a9) in
          M[a10] := B2;
          A := M[20EB];
          H := 3C;
          L := 01;
          SPH := a10[15:8];
          SPL := a10[7:0];
          jump (0010);
        }
      } else {
        let:16 a11 = (-1 + a2) in
        M[a11] := D;
        let:16 a12 = (-1 + a11) in
        M[a12] := E;
        #09B3
        let:16 a13 = (-1 + a12) in
        M[a13] := M[20EB];
        let:16 a14 = (-1 + a13) in
        M[a14] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,FlagS),6,FlagZ),4,FlagA),2,FlagP),0,FlagCY);
        #09B4
        #09B5
        #09B6
        #09B7
        #09B8
        let:8 a15 = (0F & updateBit((updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0])[0])) in
        let:8 a16 = (0F | updateBit((updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0]) >> 01),7,updateBit((updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0]) >> 01),7,updateBit((updateBit((M[20EB] >> 01),7,M[20EB][0]) >> 01),7,updateBit((M[20EB] >> 01),7,M[20EB][0])[0])[0])[0])) in
        #09BA
        let:16 a17 = (-1 + a14) in
        M[a17] := 09;
        let:16 a18 = (-1 + a17) in
        M[a18] := BD;
        #return-to: 09BD
        #09C5
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a19 = (-1 + a18) in
            M[a19] := 09;
            let:16 a20 = (-1 + a19) in
            M[a20] := C5;
            A := a15;
            H := 3C;
            L := 01;
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a15[7];
            FlagZ := is_zero(a15);
            FlagA := a16[3];
            FlagP := parity(a15);
            FlagCY := false;
            jump (0008);
          } else {
            let:16 a21 = (-1 + a18) in
            M[a21] := 09;
            let:16 a22 = (-1 + a21) in
            M[a22] := C5;
            A := a15;
            H := 3C;
            L := 01;
            SPH := a22[15:8];
            SPL := a22[7:0];
            FlagS := a15[7];
            FlagZ := is_zero(a15);
            FlagA := a16[3];
            FlagP := parity(a15);
            FlagCY := false;
            jump (0010);
          }
        } else {
          let:16 a23 = addWithCarry(false,1A,a15) in
          let:8 a24 = (1A & 0F) in
          let:8 a25 = (a15 & 0F) in
          let:16 a26 = addWithCarry(false,a24,a25) in
          #09C7
          #08FF
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a27 = (-1 + a18) in
              M[a27] := 08;
              let:16 a28 = (-1 + a27) in
              M[a28] := FF;
              A := a23[7:0];
              H := 3C;
              L := 01;
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagS := a23[7:0][7];
              FlagZ := is_zero(a23[7:0]);
              FlagA := a26[7:0][4];
              FlagP := parity(a23[7:0]);
              FlagCY := a23[15:8][0];
              jump (0008);
            } else {
              let:16 a29 = (-1 + a18) in
              M[a29] := 08;
              let:16 a30 = (-1 + a29) in
              M[a30] := FF;
              A := a23[7:0];
              H := 3C;
              L := 01;
              SPH := a30[15:8];
              SPL := a30[7:0];
              FlagS := a23[7:0][7];
              FlagZ := is_zero(a23[7:0]);
              FlagA := a26[7:0][4];
              FlagP := parity(a23[7:0]);
              FlagCY := a23[15:8][0];
              jump (0010);
            }
          } else {
            #0902
            let:16 a31 = (-1 + a18) in
            M[a31] := 3C;
            let:16 a32 = (-1 + a31) in
            M[a32] := 01;
            #0903
            #0905
            #0906
            let:17 a33 = add17((00,a23[7:0]),(00,a23[7:0])) in
            #0907
            let:17 a34 = add17(a33[15:0],a33[15:0]) in
            #0908
            let:17 a35 = add17(a34[15:0],a34[15:0]) in
            #0909
            let:17 a36 = add17(1E00,a35[15:0]) in
            #090A
            #090B
            let:16 a37 = (1 + a32) in
            let:16 a38 = (1 + a37) in
            #090C
            #090E
            #0910
            #1439
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a39 = (-1 + a38) in
                M[a39] := 14;
                let:16 a40 = (-1 + a39) in
                M[a40] := 39;
                A := a23[7:0];
                B := 08;
                D := a36[15:0][15:8];
                E := a36[15:0][7:0];
                H := M[a37];
                L := M[a32];
                SPH := a40[15:8];
                SPL := a40[7:0];
                FlagS := a23[7:0][7];
                FlagZ := is_zero(a23[7:0]);
                FlagA := a26[7:0][4];
                FlagP := parity(a23[7:0]);
                FlagCY := a36[16];
                jump (0008);
              } else {
                let:16 a41 = (-1 + a38) in
                M[a41] := 14;
                let:16 a42 = (-1 + a41) in
                M[a42] := 39;
                A := a23[7:0];
                B := 08;
                D := a36[15:0][15:8];
                E := a36[15:0][7:0];
                H := M[a37];
                L := M[a32];
                SPH := a42[15:8];
                SPL := a42[7:0];
                FlagS := a23[7:0][7];
                FlagZ := is_zero(a23[7:0]);
                FlagA := a26[7:0][4];
                FlagP := parity(a23[7:0]);
                FlagCY := a36[16];
                jump (0010);
              }
            } else {
              let:16 a43 = (-1 + a38) in
              M[a43] := 08;
              let:16 a44 = (-1 + a43) in
              M[a44] := C;
              #143A
              #143B
              M[(M[a37],M[a32])] := M[a36[15:0]];
              #143C
              let:16 a45 = (1 + a36[15:0]) in
              #143D
              #1440
              let:17 a46 = add17(0020,(M[a37],M[a32])) in
              #1441
              let:16 a47 = (1 + a44) in
              let:16 a48 = (1 + a47) in
              #1442
              let:16 a49 = addWithCarry(!true,M[a47],~00) in
              let:8 a50 = (M[a47] & 0F) in
              let:8 a51 = (~00 & 0F) in
              let:16 a52 = addWithCarry(!true,a50,a51) in
              #1443
              if (!is_zero(a49[7:0])) {
                A := M[a36[15:0]];
                B := a49[7:0];
                C := M[a44];
                D := a45[15:8];
                E := a45[7:0];
                H := a46[15:0][15:8];
                L := a46[15:0][7:0];
                SPH := a48[15:8];
                SPL := a48[7:0];
                FlagS := a49[7:0][7];
                FlagZ := is_zero(a49[7:0]);
                FlagA := a52[7:0][4];
                FlagP := parity(a49[7:0]);
                FlagCY := a46[16];
                jump (1439);
              } else {
                #1446
                let:16 a53 = (1 + a48) in
                let:16 a54 = (1 + a53) in
                A := M[a36[15:0]];
                B := a49[7:0];
                C := M[a44];
                D := a45[15:8];
                E := a45[7:0];
                H := a46[15:0][15:8];
                L := a46[15:0][7:0];
                SPH := a54[15:8];
                SPL := a54[7:0];
                FlagS := a49[7:0][7];
                FlagZ := is_zero(a49[7:0]);
                FlagA := a52[7:0][4];
                FlagP := parity(a49[7:0]);
                FlagCY := a46[16];
                jump ((M[a53],M[a48]));
              }
            }
          }
        }
      }
    }

197F:

    #193C
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a1 = (-1 + (SPH,SPL)) in
        M[a1] := 19;
        let:16 a2 = (-1 + a1) in
        M[a2] := 3C;
        SPH := a2[15:8];
        SPL := a2[7:0];
        jump (0008);
      } else {
        let:16 a3 = (-1 + (SPH,SPL)) in
        M[a3] := 19;
        let:16 a4 = (-1 + a3) in
        M[a4] := 3C;
        SPH := a4[15:8];
        SPL := a4[7:0];
        jump (0010);
      }
    } else {
      #193E
      #1941
      #1944
      #08F3
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 08;
          let:16 a6 = (-1 + a5) in
          M[a6] := F3;
          C := 07;
          D := 1F;
          E := A9;
          H := 35;
          L := 01;
          SPH := a6[15:8];
          SPL := a6[7:0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 08;
          let:16 a8 = (-1 + a7) in
          M[a8] := F3;
          C := 07;
          D := 1F;
          E := A9;
          H := 35;
          L := 01;
          SPH := a8[15:8];
          SPL := a8[7:0];
          jump (0010);
        }
      } else {
        #08F4
        let:16 a9 = (-1 + (SPH,SPL)) in
        M[a9] := 1F;
        let:16 a10 = (-1 + a9) in
        M[a10] := A9;
        #08F5
        let:16 a11 = (-1 + a10) in
        M[a11] := 08;
        let:16 a12 = (-1 + a11) in
        M[a12] := F8;
        #return-to: 08F8
        #08FF
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a13 = (-1 + a12) in
            M[a13] := 08;
            let:16 a14 = (-1 + a13) in
            M[a14] := FF;
            A := 02;
            C := 07;
            D := 1F;
            E := A9;
            H := 35;
            L := 01;
            SPH := a14[15:8];
            SPL := a14[7:0];
            jump (0008);
          } else {
            let:16 a15 = (-1 + a12) in
            M[a15] := 08;
            let:16 a16 = (-1 + a15) in
            M[a16] := FF;
            A := 02;
            C := 07;
            D := 1F;
            E := A9;
            H := 35;
            L := 01;
            SPH := a16[15:8];
            SPL := a16[7:0];
            jump (0010);
          }
        } else {
          #0902
          let:16 a17 = (-1 + a12) in
          M[a17] := 35;
          let:16 a18 = (-1 + a17) in
          M[a18] := 01;
          #0903
          #0905
          #0906
          let:17 a19 = add17(0002,0002) in
          #0907
          let:17 a20 = add17(a19[15:0],a19[15:0]) in
          #0908
          let:17 a21 = add17(a20[15:0],a20[15:0]) in
          #0909
          let:17 a22 = add17(1E00,a21[15:0]) in
          #090A
          #090B
          let:16 a23 = (1 + a18) in
          let:16 a24 = (1 + a23) in
          #090C
          #090E
          #0910
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a25 = (-1 + a24) in
              M[a25] := 14;
              let:16 a26 = (-1 + a25) in
              M[a26] := 39;
              A := 02;
              B := 08;
              C := 07;
              D := a22[15:0][15:8];
              E := a22[15:0][7:0];
              H := M[a23];
              L := M[a18];
              SPH := a26[15:8];
              SPL := a26[7:0];
              FlagCY := a22[16];
              jump (0008);
            } else {
              let:16 a27 = (-1 + a24) in
              M[a27] := 14;
              let:16 a28 = (-1 + a27) in
              M[a28] := 39;
              A := 02;
              B := 08;
              C := 07;
              D := a22[15:0][15:8];
              E := a22[15:0][7:0];
              H := M[a23];
              L := M[a18];
              SPH := a28[15:8];
              SPL := a28[7:0];
              FlagCY := a22[16];
              jump (0010);
            }
          } else {
            let:16 a29 = (-1 + a24) in
            M[a29] := 08;
            let:16 a30 = (-1 + a29) in
            M[a30] := 07;
            #143A
            #143B
            M[(M[a23],M[a18])] := M[a22[15:0]];
            #143C
            let:16 a31 = (1 + a22[15:0]) in
            #143D
            #1440
            let:17 a32 = add17(0020,(M[a23],M[a18])) in
            #1441
            let:16 a33 = (1 + a30) in
            let:16 a34 = (1 + a33) in
            #1442
            let:16 a35 = addWithCarry(!true,M[a33],~00) in
            let:8 a36 = (M[a33] & 0F) in
            let:8 a37 = (~00 & 0F) in
            let:16 a38 = addWithCarry(!true,a36,a37) in
            #1443
            if (!is_zero(a35[7:0])) {
              A := M[a22[15:0]];
              B := a35[7:0];
              C := M[a30];
              D := a31[15:8];
              E := a31[7:0];
              H := a32[15:0][15:8];
              L := a32[15:0][7:0];
              SPH := a34[15:8];
              SPL := a34[7:0];
              FlagS := a35[7:0][7];
              FlagZ := is_zero(a35[7:0]);
              FlagA := a38[7:0][4];
              FlagP := parity(a35[7:0]);
              FlagCY := a32[16];
              jump (1439);
            } else {
              #1446
              let:16 a39 = (1 + a34) in
              let:16 a40 = (1 + a39) in
              A := M[a22[15:0]];
              B := a35[7:0];
              C := M[a30];
              D := a31[15:8];
              E := a31[7:0];
              H := a32[15:0][15:8];
              L := a32[15:0][7:0];
              SPH := a40[15:8];
              SPL := a40[7:0];
              FlagS := a35[7:0][7];
              FlagZ := is_zero(a35[7:0]);
              FlagA := a38[7:0][4];
              FlagP := parity(a35[7:0]);
              FlagCY := a32[16];
              jump ((M[a39],M[a34]));
            }
          }
        }
      }
    }

19F5:

    #19F6
    let:16 a1 = addWithCarry(!true,C,~00) in
    let:8 a2 = (C & 0F) in
    let:8 a3 = (~00 & 0F) in
    let:16 a4 = addWithCarry(!true,a2,a3) in
    #19F7
    if (!is_zero(a1[7:0])) {
      #19EC
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 19;
          let:16 a6 = (-1 + a5) in
          M[a6] := EC;
          A := a1[7:0];
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 19;
          let:16 a8 = (-1 + a7) in
          M[a8] := EC;
          A := a1[7:0];
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0010);
        }
      } else {
        #19EF
        #19F1
        #19F2
        let:16 a9 = (-1 + (SPH,SPL)) in
        M[a9] := 19;
        let:16 a10 = (-1 + a9) in
        M[a10] := F5;
        #return-to: 19F5
        #1439
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a10) in
            M[a11] := 14;
            let:16 a12 = (-1 + a11) in
            M[a12] := 39;
            A := a1[7:0];
            B := 10;
            C := a1[7:0];
            D := 1C;
            E := 60;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            jump (0008);
          } else {
            let:16 a13 = (-1 + a10) in
            M[a13] := 14;
            let:16 a14 = (-1 + a13) in
            M[a14] := 39;
            A := a1[7:0];
            B := 10;
            C := a1[7:0];
            D := 1C;
            E := 60;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            jump (0010);
          }
        } else {
          let:16 a15 = (-1 + a10) in
          M[a15] := 10;
          let:16 a16 = (-1 + a15) in
          M[a16] := a1[7:0];
          #143A
          #143B
          M[(H,L)] := 00;
          #143C
          #143D
          #1440
          let:17 a17 = add17(0020,(H,L)) in
          #1441
          let:16 a18 = (1 + a16) in
          let:16 a19 = (1 + a18) in
          #1442
          let:16 a20 = addWithCarry(!true,M[a18],~00) in
          let:8 a21 = (M[a18] & 0F) in
          let:8 a22 = (~00 & 0F) in
          let:16 a23 = addWithCarry(!true,a21,a22) in
          #1443
          if (!is_zero(a20[7:0])) {
            A := 00;
            B := a20[7:0];
            C := M[a16];
            D := 1C;
            E := 61;
            H := a17[15:0][15:8];
            L := a17[15:0][7:0];
            SPH := a19[15:8];
            SPL := a19[7:0];
            FlagS := a20[7:0][7];
            FlagZ := is_zero(a20[7:0]);
            FlagA := a23[7:0][4];
            FlagP := parity(a20[7:0]);
            FlagCY := a17[16];
            jump (1439);
          } else {
            #1446
            let:16 a24 = (1 + a19) in
            let:16 a25 = (1 + a24) in
            A := 00;
            B := a20[7:0];
            C := M[a16];
            D := 1C;
            E := 61;
            H := a17[15:0][15:8];
            L := a17[15:0][7:0];
            SPH := a25[15:8];
            SPL := a25[7:0];
            FlagS := a20[7:0][7];
            FlagZ := is_zero(a20[7:0]);
            FlagA := a23[7:0][4];
            FlagP := parity(a20[7:0]);
            FlagCY := a17[16];
            jump ((M[a24],M[a19]));
          }
        }
      }
    } else {
      #19FA
      #19FC
      let:16 a26 = (-1 + (SPH,SPL)) in
      M[a26] := 19;
      let:16 a27 = (-1 + a26) in
      M[a27] := FF;
      #return-to: 19FF
      #14CB
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a28 = (-1 + a27) in
          M[a28] := 14;
          let:16 a29 = (-1 + a28) in
          M[a29] := CB;
          A := a1[7:0];
          B := 10;
          SPH := a29[15:8];
          SPL := a29[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0008);
        } else {
          let:16 a30 = (-1 + a27) in
          M[a30] := 14;
          let:16 a31 = (-1 + a30) in
          M[a31] := CB;
          A := a1[7:0];
          B := 10;
          SPH := a31[15:8];
          SPL := a31[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          jump (0010);
        }
      } else {
        let:8 a32 = (a1[7:0] ^ a1[7:0]) in
        #14CC
        let:16 a33 = (-1 + a27) in
        M[a33] := 10;
        let:16 a34 = (-1 + a33) in
        M[a34] := C;
        #14CD
        M[(H,L)] := a32;
        #14CE
        #14D1
        let:17 a35 = add17(0020,(H,L)) in
        #14D2
        let:16 a36 = (1 + a34) in
        let:16 a37 = (1 + a36) in
        #14D3
        let:16 a38 = addWithCarry(!true,M[a36],~00) in
        let:8 a39 = (M[a36] & 0F) in
        let:8 a40 = (~00 & 0F) in
        let:16 a41 = addWithCarry(!true,a39,a40) in
        #14D4
        if (!is_zero(a38[7:0])) {
          A := a32;
          B := a38[7:0];
          C := M[a34];
          H := a35[15:0][15:8];
          L := a35[15:0][7:0];
          SPH := a37[15:8];
          SPL := a37[7:0];
          FlagS := a38[7:0][7];
          FlagZ := is_zero(a38[7:0]);
          FlagA := a41[7:0][4];
          FlagP := parity(a38[7:0]);
          FlagCY := a35[16];
          jump (14CC);
        } else {
          #14D7
          let:16 a42 = (1 + a37) in
          let:16 a43 = (1 + a42) in
          A := a32;
          B := a38[7:0];
          C := M[a34];
          H := a35[15:0][15:8];
          L := a35[15:0][7:0];
          SPH := a43[15:8];
          SPL := a43[7:0];
          FlagS := a38[7:0][7];
          FlagZ := is_zero(a38[7:0]);
          FlagA := a41[7:0][4];
          FlagP := parity(a38[7:0]);
          FlagCY := a35[16];
          jump ((M[a42],M[a37]));
        }
      }
    }

19FF:

    #1A00
    let:16 a1 = addWithCarry(!false,H,~35) in
    let:8 a2 = (H & 0F) in
    let:8 a3 = (~35 & 0F) in
    let:16 a4 = addWithCarry(!false,a2,a3) in
    #1A02
    if (!is_zero(a1[7:0])) {
      #19FA
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a5 = (-1 + (SPH,SPL)) in
          M[a5] := 19;
          let:16 a6 = (-1 + a5) in
          M[a6] := FA;
          A := H;
          SPH := a6[15:8];
          SPL := a6[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0008);
        } else {
          let:16 a7 = (-1 + (SPH,SPL)) in
          M[a7] := 19;
          let:16 a8 = (-1 + a7) in
          M[a8] := FA;
          A := H;
          SPH := a8[15:8];
          SPL := a8[7:0];
          FlagS := a1[7:0][7];
          FlagZ := is_zero(a1[7:0]);
          FlagA := a4[7:0][4];
          FlagP := parity(a1[7:0]);
          FlagCY := !a1[15:8][0];
          jump (0010);
        }
      } else {
        #19FC
        let:16 a9 = (-1 + (SPH,SPL)) in
        M[a9] := 19;
        let:16 a10 = (-1 + a9) in
        M[a10] := FF;
        #return-to: 19FF
        #14CB
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a11 = (-1 + a10) in
            M[a11] := 14;
            let:16 a12 = (-1 + a11) in
            M[a12] := CB;
            A := H;
            B := 10;
            SPH := a12[15:8];
            SPL := a12[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump (0008);
          } else {
            let:16 a13 = (-1 + a10) in
            M[a13] := 14;
            let:16 a14 = (-1 + a13) in
            M[a14] := CB;
            A := H;
            B := 10;
            SPH := a14[15:8];
            SPL := a14[7:0];
            FlagS := a1[7:0][7];
            FlagZ := is_zero(a1[7:0]);
            FlagA := a4[7:0][4];
            FlagP := parity(a1[7:0]);
            FlagCY := !a1[15:8][0];
            jump (0010);
          }
        } else {
          let:8 a15 = (H ^ H) in
          #14CC
          let:16 a16 = (-1 + a10) in
          M[a16] := 10;
          let:16 a17 = (-1 + a16) in
          M[a17] := C;
          #14CD
          M[(H,L)] := a15;
          #14CE
          #14D1
          let:17 a18 = add17(0020,(H,L)) in
          #14D2
          let:16 a19 = (1 + a17) in
          let:16 a20 = (1 + a19) in
          #14D3
          let:16 a21 = addWithCarry(!true,M[a19],~00) in
          let:8 a22 = (M[a19] & 0F) in
          let:8 a23 = (~00 & 0F) in
          let:16 a24 = addWithCarry(!true,a22,a23) in
          #14D4
          if (!is_zero(a21[7:0])) {
            A := a15;
            B := a21[7:0];
            C := M[a17];
            H := a18[15:0][15:8];
            L := a18[15:0][7:0];
            SPH := a20[15:8];
            SPL := a20[7:0];
            FlagS := a21[7:0][7];
            FlagZ := is_zero(a21[7:0]);
            FlagA := a24[7:0][4];
            FlagP := parity(a21[7:0]);
            FlagCY := a18[16];
            jump (14CC);
          } else {
            #14D7
            let:16 a25 = (1 + a20) in
            let:16 a26 = (1 + a25) in
            A := a15;
            B := a21[7:0];
            C := M[a17];
            H := a18[15:0][15:8];
            L := a18[15:0][7:0];
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagS := a21[7:0][7];
            FlagZ := is_zero(a21[7:0]);
            FlagA := a24[7:0][4];
            FlagP := parity(a21[7:0]);
            FlagCY := a18[16];
            jump ((M[a25],M[a20]));
          }
        }
      }
    } else {
      #1A05
      let:16 a27 = (1 + (SPH,SPL)) in
      let:16 a28 = (1 + a27) in
      A := H;
      SPH := a28[15:8];
      SPL := a28[7:0];
      FlagS := a1[7:0][7];
      FlagZ := is_zero(a1[7:0]);
      FlagA := a4[7:0][4];
      FlagP := parity(a1[7:0]);
      FlagCY := !a1[15:8][0];
      jump ((M[a27],M[(SPH,SPL)]));
    }

1A82:

    let:8 a1 = (A & A) in
    let:8 a2 = (A | A) in
    #1A83
    if (is_zero(a1)) {
      let:16 a3 = (1 + (SPH,SPL)) in
      let:16 a4 = (1 + a3) in
      A := a1;
      SPH := a4[15:8];
      SPL := a4[7:0];
      FlagS := a1[7];
      FlagZ := is_zero(a1);
      FlagA := a2[3];
      FlagP := parity(a1);
      FlagCY := false;
      jump ((M[a3],M[(SPH,SPL)]));
    } else {
      #1A84
      let:16 a5 = (-1 + (SPH,SPL)) in
      M[a5] := a1;
      let:16 a6 = (-1 + a5) in
      M[a6] := updateBit(updateBit(updateBit(updateBit(updateBit(02,7,a1[7]),6,is_zero(a1)),4,a2[3]),2,parity(a1)),0,false);
      #1A85
      let:16 a7 = addWithCarry(!true,a1,~00) in
      let:8 a8 = (a1 & 0F) in
      let:8 a9 = (~00 & 0F) in
      let:16 a10 = addWithCarry(!true,a8,a9) in
      #1A86
      M[(H,L)] := a7[7:0];
      #1A87
      let:16 a11 = (-1 + a6) in
      M[a11] := 1A;
      let:16 a12 = (-1 + a11) in
      M[a12] := 8A;
      #return-to: 1A8A
      #19E6
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a13 = (-1 + a12) in
          M[a13] := 19;
          let:16 a14 = (-1 + a13) in
          M[a14] := E6;
          A := a7[7:0];
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a7[7:0][7];
          FlagZ := is_zero(a7[7:0]);
          FlagA := a10[7:0][4];
          FlagP := parity(a7[7:0]);
          FlagCY := false;
          jump (0008);
        } else {
          let:16 a15 = (-1 + a12) in
          M[a15] := 19;
          let:16 a16 = (-1 + a15) in
          M[a16] := E6;
          A := a7[7:0];
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a7[7:0][7];
          FlagZ := is_zero(a7[7:0]);
          FlagA := a10[7:0][4];
          FlagP := parity(a7[7:0]);
          FlagCY := false;
          jump (0010);
        }
      } else {
        #19E9
        if (is_zero(a7[7:0])) {
          #19FA
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a17 = (-1 + a12) in
              M[a17] := 19;
              let:16 a18 = (-1 + a17) in
              M[a18] := FA;
              A := a7[7:0];
              H := 27;
              L := 01;
              SPH := a18[15:8];
              SPL := a18[7:0];
              FlagS := a7[7:0][7];
              FlagZ := is_zero(a7[7:0]);
              FlagA := a10[7:0][4];
              FlagP := parity(a7[7:0]);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a19 = (-1 + a12) in
              M[a19] := 19;
              let:16 a20 = (-1 + a19) in
              M[a20] := FA;
              A := a7[7:0];
              H := 27;
              L := 01;
              SPH := a20[15:8];
              SPL := a20[7:0];
              FlagS := a7[7:0][7];
              FlagZ := is_zero(a7[7:0]);
              FlagA := a10[7:0][4];
              FlagP := parity(a7[7:0]);
              FlagCY := false;
              jump (0010);
            }
          } else {
            #19FC
            let:16 a21 = (-1 + a12) in
            M[a21] := 19;
            let:16 a22 = (-1 + a21) in
            M[a22] := FF;
            #return-to: 19FF
            #14CB
            if ((g_time_to_wakeup && g_interrupts_enabled)) {
              disable_interrupts()
              if (g_half_frame) {
                let:16 a23 = (-1 + a22) in
                M[a23] := 14;
                let:16 a24 = (-1 + a23) in
                M[a24] := CB;
                A := a7[7:0];
                B := 10;
                H := 27;
                L := 01;
                SPH := a24[15:8];
                SPL := a24[7:0];
                FlagS := a7[7:0][7];
                FlagZ := is_zero(a7[7:0]);
                FlagA := a10[7:0][4];
                FlagP := parity(a7[7:0]);
                FlagCY := false;
                jump (0008);
              } else {
                let:16 a25 = (-1 + a22) in
                M[a25] := 14;
                let:16 a26 = (-1 + a25) in
                M[a26] := CB;
                A := a7[7:0];
                B := 10;
                H := 27;
                L := 01;
                SPH := a26[15:8];
                SPL := a26[7:0];
                FlagS := a7[7:0][7];
                FlagZ := is_zero(a7[7:0]);
                FlagA := a10[7:0][4];
                FlagP := parity(a7[7:0]);
                FlagCY := false;
                jump (0010);
              }
            } else {
              let:8 a27 = (a7[7:0] ^ a7[7:0]) in
              #14CC
              let:16 a28 = (-1 + a22) in
              M[a28] := 10;
              let:16 a29 = (-1 + a28) in
              M[a29] := C;
              #14CD
              M[2701] := a27;
              #14CE
              #14D1
              let:17 a30 = add17(0020,2701) in
              #14D2
              let:16 a31 = (1 + a29) in
              let:16 a32 = (1 + a31) in
              #14D3
              let:16 a33 = addWithCarry(!true,M[a31],~00) in
              let:8 a34 = (M[a31] & 0F) in
              let:8 a35 = (~00 & 0F) in
              let:16 a36 = addWithCarry(!true,a34,a35) in
              #14D4
              if (!is_zero(a33[7:0])) {
                A := a27;
                B := a33[7:0];
                C := M[a29];
                H := a30[15:0][15:8];
                L := a30[15:0][7:0];
                SPH := a32[15:8];
                SPL := a32[7:0];
                FlagS := a33[7:0][7];
                FlagZ := is_zero(a33[7:0]);
                FlagA := a36[7:0][4];
                FlagP := parity(a33[7:0]);
                FlagCY := a30[16];
                jump (14CC);
              } else {
                #14D7
                let:16 a37 = (1 + a32) in
                let:16 a38 = (1 + a37) in
                A := a27;
                B := a33[7:0];
                C := M[a29];
                H := a30[15:0][15:8];
                L := a30[15:0][7:0];
                SPH := a38[15:8];
                SPL := a38[7:0];
                FlagS := a33[7:0][7];
                FlagZ := is_zero(a33[7:0]);
                FlagA := a36[7:0][4];
                FlagP := parity(a33[7:0]);
                FlagCY := a30[16];
                jump ((M[a37],M[a32]));
              }
            }
          }
        } else {
          #19EC
          #19EF
          #19F1
          #19F2
          let:16 a39 = (-1 + a12) in
          M[a39] := 19;
          let:16 a40 = (-1 + a39) in
          M[a40] := F5;
          #return-to: 19F5
          #1439
          if ((g_time_to_wakeup && g_interrupts_enabled)) {
            disable_interrupts()
            if (g_half_frame) {
              let:16 a41 = (-1 + a40) in
              M[a41] := 14;
              let:16 a42 = (-1 + a41) in
              M[a42] := 39;
              A := a7[7:0];
              B := 10;
              C := a7[7:0];
              D := 1C;
              E := 60;
              H := 27;
              L := 01;
              SPH := a42[15:8];
              SPL := a42[7:0];
              FlagS := a7[7:0][7];
              FlagZ := is_zero(a7[7:0]);
              FlagA := a10[7:0][4];
              FlagP := parity(a7[7:0]);
              FlagCY := false;
              jump (0008);
            } else {
              let:16 a43 = (-1 + a40) in
              M[a43] := 14;
              let:16 a44 = (-1 + a43) in
              M[a44] := 39;
              A := a7[7:0];
              B := 10;
              C := a7[7:0];
              D := 1C;
              E := 60;
              H := 27;
              L := 01;
              SPH := a44[15:8];
              SPL := a44[7:0];
              FlagS := a7[7:0][7];
              FlagZ := is_zero(a7[7:0]);
              FlagA := a10[7:0][4];
              FlagP := parity(a7[7:0]);
              FlagCY := false;
              jump (0010);
            }
          } else {
            let:16 a45 = (-1 + a40) in
            M[a45] := 10;
            let:16 a46 = (-1 + a45) in
            M[a46] := a7[7:0];
            #143A
            #143B
            M[2701] := 00;
            #143C
            #143D
            #1440
            let:17 a47 = add17(0020,2701) in
            #1441
            let:16 a48 = (1 + a46) in
            let:16 a49 = (1 + a48) in
            #1442
            let:16 a50 = addWithCarry(!true,M[a48],~00) in
            let:8 a51 = (M[a48] & 0F) in
            let:8 a52 = (~00 & 0F) in
            let:16 a53 = addWithCarry(!true,a51,a52) in
            #1443
            if (!is_zero(a50[7:0])) {
              A := 00;
              B := a50[7:0];
              C := M[a46];
              D := 1C;
              E := 61;
              H := a47[15:0][15:8];
              L := a47[15:0][7:0];
              SPH := a49[15:8];
              SPL := a49[7:0];
              FlagS := a50[7:0][7];
              FlagZ := is_zero(a50[7:0]);
              FlagA := a53[7:0][4];
              FlagP := parity(a50[7:0]);
              FlagCY := a47[16];
              jump (1439);
            } else {
              #1446
              let:16 a54 = (1 + a49) in
              let:16 a55 = (1 + a54) in
              A := 00;
              B := a50[7:0];
              C := M[a46];
              D := 1C;
              E := 61;
              H := a47[15:0][15:8];
              L := a47[15:0][7:0];
              SPH := a55[15:8];
              SPL := a55[7:0];
              FlagS := a50[7:0][7];
              FlagZ := is_zero(a50[7:0]);
              FlagA := a53[7:0][4];
              FlagP := parity(a50[7:0]);
              FlagCY := a47[16];
              jump ((M[a54],M[a49]));
            }
          }
        }
      }
    }

1A8A:

    let:16 a1 = (1 + (SPH,SPL)) in
    let:16 a2 = (1 + a1) in
    #1A8B
    #1A8E
    let:8 a3 = (0F & M[a1]) in
    let:8 a4 = (0F | M[a1]) in
    #1A90
    #09C5
    if ((g_time_to_wakeup && g_interrupts_enabled)) {
      disable_interrupts()
      if (g_half_frame) {
        let:16 a5 = (-1 + a2) in
        M[a5] := 09;
        let:16 a6 = (-1 + a5) in
        M[a6] := C5;
        A := a3;
        H := 25;
        L := 01;
        SPH := a6[15:8];
        SPL := a6[7:0];
        FlagS := a3[7];
        FlagZ := is_zero(a3);
        FlagA := a4[3];
        FlagP := parity(a3);
        FlagCY := false;
        jump (0008);
      } else {
        let:16 a7 = (-1 + a2) in
        M[a7] := 09;
        let:16 a8 = (-1 + a7) in
        M[a8] := C5;
        A := a3;
        H := 25;
        L := 01;
        SPH := a8[15:8];
        SPL := a8[7:0];
        FlagS := a3[7];
        FlagZ := is_zero(a3);
        FlagA := a4[3];
        FlagP := parity(a3);
        FlagCY := false;
        jump (0010);
      }
    } else {
      let:16 a9 = addWithCarry(false,1A,a3) in
      let:8 a10 = (1A & 0F) in
      let:8 a11 = (a3 & 0F) in
      let:16 a12 = addWithCarry(false,a10,a11) in
      #09C7
      #08FF
      if ((g_time_to_wakeup && g_interrupts_enabled)) {
        disable_interrupts()
        if (g_half_frame) {
          let:16 a13 = (-1 + a2) in
          M[a13] := 08;
          let:16 a14 = (-1 + a13) in
          M[a14] := FF;
          A := a9[7:0];
          H := 25;
          L := 01;
          SPH := a14[15:8];
          SPL := a14[7:0];
          FlagS := a9[7:0][7];
          FlagZ := is_zero(a9[7:0]);
          FlagA := a12[7:0][4];
          FlagP := parity(a9[7:0]);
          FlagCY := a9[15:8][0];
          jump (0008);
        } else {
          let:16 a15 = (-1 + a2) in
          M[a15] := 08;
          let:16 a16 = (-1 + a15) in
          M[a16] := FF;
          A := a9[7:0];
          H := 25;
          L := 01;
          SPH := a16[15:8];
          SPL := a16[7:0];
          FlagS := a9[7:0][7];
          FlagZ := is_zero(a9[7:0]);
          FlagA := a12[7:0][4];
          FlagP := parity(a9[7:0]);
          FlagCY := a9[15:8][0];
          jump (0010);
        }
      } else {
        #0902
        let:16 a17 = (-1 + a2) in
        M[a17] := 25;
        let:16 a18 = (-1 + a17) in
        M[a18] := 01;
        #0903
        #0905
        #0906
        let:17 a19 = add17((00,a9[7:0]),(00,a9[7:0])) in
        #0907
        let:17 a20 = add17(a19[15:0],a19[15:0]) in
        #0908
        let:17 a21 = add17(a20[15:0],a20[15:0]) in
        #0909
        let:17 a22 = add17(1E00,a21[15:0]) in
        #090A
        #090B
        let:16 a23 = (1 + a18) in
        let:16 a24 = (1 + a23) in
        #090C
        #090E
        #0910
        #1439
        if ((g_time_to_wakeup && g_interrupts_enabled)) {
          disable_interrupts()
          if (g_half_frame) {
            let:16 a25 = (-1 + a24) in
            M[a25] := 14;
            let:16 a26 = (-1 + a25) in
            M[a26] := 39;
            A := a9[7:0];
            B := 08;
            D := a22[15:0][15:8];
            E := a22[15:0][7:0];
            H := M[a23];
            L := M[a18];
            SPH := a26[15:8];
            SPL := a26[7:0];
            FlagS := a9[7:0][7];
            FlagZ := is_zero(a9[7:0]);
            FlagA := a12[7:0][4];
            FlagP := parity(a9[7:0]);
            FlagCY := a22[16];
            jump (0008);
          } else {
            let:16 a27 = (-1 + a24) in
            M[a27] := 14;
            let:16 a28 = (-1 + a27) in
            M[a28] := 39;
            A := a9[7:0];
            B := 08;
            D := a22[15:0][15:8];
            E := a22[15:0][7:0];
            H := M[a23];
            L := M[a18];
            SPH := a28[15:8];
            SPL := a28[7:0];
            FlagS := a9[7:0][7];
            FlagZ := is_zero(a9[7:0]);
            FlagA := a12[7:0][4];
            FlagP := parity(a9[7:0]);
            FlagCY := a22[16];
            jump (0010);
          }
        } else {
          let:16 a29 = (-1 + a24) in
          M[a29] := 08;
          let:16 a30 = (-1 + a29) in
          M[a30] := C;
          #143A
          #143B
          M[(M[a23],M[a18])] := M[a22[15:0]];
          #143C
          let:16 a31 = (1 + a22[15:0]) in
          #143D
          #1440
          let:17 a32 = add17(0020,(M[a23],M[a18])) in
          #1441
          let:16 a33 = (1 + a30) in
          let:16 a34 = (1 + a33) in
          #1442
          let:16 a35 = addWithCarry(!true,M[a33],~00) in
          let:8 a36 = (M[a33] & 0F) in
          let:8 a37 = (~00 & 0F) in
          let:16 a38 = addWithCarry(!true,a36,a37) in
          #1443
          if (!is_zero(a35[7:0])) {
            A := M[a22[15:0]];
            B := a35[7:0];
            C := M[a30];
            D := a31[15:8];
            E := a31[7:0];
            H := a32[15:0][15:8];
            L := a32[15:0][7:0];
            SPH := a34[15:8];
            SPL := a34[7:0];
            FlagS := a35[7:0][7];
            FlagZ := is_zero(a35[7:0]);
            FlagA := a38[7:0][4];
            FlagP := parity(a35[7:0]);
            FlagCY := a32[16];
            jump (1439);
          } else {
            #1446
            let:16 a39 = (1 + a34) in
            let:16 a40 = (1 + a39) in
            A := M[a22[15:0]];
            B := a35[7:0];
            C := M[a30];
            D := a31[15:8];
            E := a31[7:0];
            H := a32[15:0][15:8];
            L := a32[15:0][7:0];
            SPH := a40[15:8];
            SPL := a40[7:0];
            FlagS := a35[7:0][7];
            FlagZ := is_zero(a35[7:0]);
            FlagA := a38[7:0][4];
            FlagP := parity(a35[7:0]);
            FlagCY := a32[16];
            jump ((M[a39],M[a34]));
          }
        }
      }
    }
